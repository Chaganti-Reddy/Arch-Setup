#+title: Arch Installation Setup
#+AUTHOR: Chaganti Reddy
#+DESCRIPTION: Chaganti Reddy's Personal Acrh Linux Configuration
#+STARTUP: showeverything

* TABLE OF CONTENTS :toc:
- [[#network-configuration][NETWORK CONFIGURATION]]
- [[#disk-configuration][DISK CONFIGURATION]]
- [[#installing-base-packages][INSTALLING BASE PACKAGES]]
- [[#timezone-setup][TIMEZONE SETUP]]
- [[#locale-setup][LOCALE SETUP]]
- [[#uefi-installation-script][UEFI INSTALLATION SCRIPT]]
- [[#paru-installation][PARU INSTALLATION]]
- [[#desktop-configuration][DESKTOP CONFIGURATION]]
- [[#login-manager-configuration][LOGIN MANAGER CONFIGURATION]]
- [[#time-setup-dualboot][TIME SETUP DUALBOOT]]

* NETWORK CONFIGURATION
*** To connect WIFI Network follow these steps :
1. Run iwctl.
2. Enter station wlan0 get-network.
3. After finding your wifi network run 'station wlan0 connect "network-name"'.
4. exit.

#+begin_quote
Note : All the commands in the quotes should be type without quotes...
#+end_quote

* DISK CONFIGURATION

**** This configuration is for UEFI & GPT Partitioning .

1. Enter these commands as below : Here name == /dev/diskname (Like /dev/nvme1n1 or /dev/sda1 ...)

   a. Enter gdisk "name"
   b. Now enter the commands as per your diskspace usage with the same arguments as shown in figure below:

      #+CAPION: Disk partitioni  image
     [[../assets/disk-setup.png]]

   c. After writingthe changesto your disk type lsblk and that shows you the partitions

      #+CAPTION: Partition image
      [[../assets/after-disk.png]]

   d. Now next step is to allocate and mount the disks

      #+CAPTION: Disk allocating
      [[../assets/allocating-disk.png]]

      #+CAPTION:
      [[../assets/mounting-disk.png]]


* INSTALLING BASE PACKAGES

**** Now we have to install some base packages which are needed to continu7e our installation process

+ Enter the below command to install the base packages :

  #+begin_src shell
  pacstrap /mnt base linux-lts linux-lts-headers linux-firmware neovim intel-ucode git openssh
  #+end_src

#+begin_quote
+ Here you can use linux and linux-headers instead of linux-lts if you want to use latest unstable kernal, but if you want to use latest stable kernal then do it for linux-lts

+ Also you have to install amd-ucode if your machine is amd and also install your favourite terminal text-editor (neovim is better in my opinion)
#+end_quote

**** Now after completition of installation we have to generate fstab file which is useful for loading our disks on start-up of machine

#+begin_src shell
genfstab -U /mnt >> /mnt/etc/fstab
# Now we have to enter as root into out /mnt directory
arch-chroot /mnt
#+end_src

* TIMEZONE SETUP

**** Now we have to setup our timezone (It's optional since we are going to do it after also)

#+begin_src bash
timedatectl list-timezones | grep Asia # Instead of asia you can use your continent
ln -sf /usr/share/zoneinfo/Asia/Kolkata /etc/localtime # Replace Asia/Kolkata with your timezone
hwclock --systohc
#+end_src


* LOCALE SETUP

**** Now we have to configure our locale which is very importtant for our further steps ...

#+begin_src shell
# Edit locale.gen file
nvim /etc/locale.gen

# Now uncomment the line which is your locale
# Myne is en_US.UTF-8 UTF-8 so i will uncomment that

# Now regenerate your locale
locale-gen
#+end_src


* UEFI INSTALLATION SCRIPT

**** Now the main part of arch installation is to install the necessary packages for system
**** To do that folow the steps :

#+begin_src shell
# Clone my repository
git clone https://github.com/Chaganti-Reddy/dotfiles.git

# Go to the directory and modify base-uefi.sh file as per your needs
cd dotfiles/Arch-Install
nano base-uefi.sh

# After save the file make it executable
chmod +x base-uefi.sh

# Now go to root directory and run the file
cd /
./dotfiles/Arch-Install/base-uefi.sh

# After installing all the packages run os-prober
os-prober

# Now edit mkinitcpio file
nano /etc/mkinitcpio.conf

# Under modules section :
    ## If you have NVIDIA drivers then enter nvidia in between braces
        ### Looks like MODULES=(nvidia)
    ## Similarly if you have amd then enter amd-gpu or intel then enter i915
    ## If you have both then enter both with a space

# After that save the file and regenerate the file

# If you install linux-lts then enter
mkinitcpio -p linux-lts
# Else make linux-lts to linux

# Now edit grub file
nano /etc/default/grub
# Remove comment for GRUB_DISABLE_OS_PROBER=false so that you can dual boot with windows
# Now generate grub
grub-mkconfig -o /boot/grub/grub.cfg

# Now unmount and exit
exit
umount -R /mnt
reboot
#+end_src


* PARU INSTALLATION

**** Now we have to install a AUR-Helper in my case i am using paru but you can also use yay .

***** Installation

#+begin_src shell
# Move to downloads directory
cd ~/Downloads

# Clone the repository and do the following steps
git clone https://aur.archlinux.org/paru.git
cd /paru
makepkg -si
rm -rf paru/

# You can install yay in the same way just replace paru with yay in above commands ...
#+end_src

* DESKTOP CONFIGURATION

**** Now after installing all the system required packages we have to configure our GUI part.
**** There are two options :
+ Desktop Environment with all pre-configured like network startup applications etc ...
+ Window Managers with no pre-configured environment

***** Desktop Environment Installation is easy with just one or two commands you can go it through internet.
***** Window manager configuration :
+ Do the following steps to install everything that i use as my window configuration

#+begin_src shell
# Move the dotfiles directory to home directory
cp -r /dotfiles .

# Now edit the wm.sh file as epr your need of applications
cd ~/dotfiles/Arch-Install/
nano wm.sh

# Now save the file and make it executable
chmod +x wm.sh

# Now run it ..
./wm.sh
# That's it your window manager and all the packages are installed ...ðŸ™‚
#+end_src

* LOGIN MANAGER CONFIGURATION

**** Many arch linux users use lightdm which is default xfce4 login manager

***** Lightdm Configuration

#+begin_src shell
sudo pacman -S lightdm

# Now enable lightdm on system startup
sudo systemctl enable lightdm

# Now install some good themes
paru -S lightdm-webkit2-greeter # This is a beautiful theme configurator

# Now edit configuration file
sudo nano /etc/lightdm-webkit2-greeter.conf

# In that place glorious after webkit_theme    Looks like ==> webkit_theme        = glorious

# Also place the line user_image        = /usr/share/lightdm-webkit/themes/glorious/assets/profiles/my.jpg

# This uses a good logo image and save the file

# Also the main thing is to edit lightdm.conf file
sudo nano /etc/lightdm.conf

# Now got to [Seat:*] section and plce    greeter-session=lightdm-webkit2-greeter in the file which means that we are using lightdm-webkit2-greeter as a login manager

# Save the file

# Now copy the glorious theme to system from dotfiles folder

sudo cp -r ~/dotfiles/usr/share/lightdm-webkit/themes/glorious/ /usr/share/lightdm-webkit2/themes

# After saving that just go and install bspwm file using below commands since, there is no default configuration files are available by default

install -Dm755 /usr/share/doc/bspwm/examples/bspwmrc ~/.config/bspwm/bspwmrc
install -Dm644 /usr/share/doc/bspwm/examples/sxhkdrc ~/.config/sxhkd/sxhkdrc

# Now open sxhdrc file from config and replace given terminal  name with alacritty
nano ~/.config/sxhkd/sxhdrc


# That's it now you can reboot your system and goto your window manager ...
#+end_src

*** SDDM Configuration

***** In my personal i use sddm login manager which is default KDE login manager

#+begin_src shell
sudo pacman -S sddm

# Now enable sddm on system startup
sudo systemctl enable sddm

# Now install some good themes
paru -S sddm-sugar-candy-git

# Now just copy sddm.conf file from my dotfiles folder
sudo cp ~/dotfiles/etc/sddm.conf /etc

# After saving that just go and install bspwm file using below commands since, there is no default configuration files are available by default

install -Dm755 /usr/share/doc/bspwm/examples/bspwmrc ~/.config/bspwm/bspwmrc
install -Dm644 /usr/share/doc/bspwm/examples/sxhkdrc ~/.config/sxhkd/sxhkdrc

# Now open sxhdrc file from config and replace given terminal  name with alacritty
nano ~/.config/sxhkd/sxhdrc

# But for using sddm as login manager you can face some problem so use these commands

sudo nano /etc/environment

# Add these line at the end of file

        ##  XDG_CURRENT_DESKTOP=Unity
        ##  QT_QPA_PLATFORMTHEME=qt5ct

# Save the file and source it
source /etc/environment

# Sometime even after doing this you may face troubles at that time goto lighdm by stopping sddm using sudo systemctl disable sddm

# That's it now you can reboot your system and goto your window manager ...
#+end_src

**** Now just goto desktop and press super+enter to open terminal and type nautilus to open file manager and copy the files which you are needed from dotfiles to respected folders which are in the same folders in dotfiles and also you can use xmonad by copying xmonad config files and xmobar config files and also you can use doom emacs configuration which is a good and useful text editor as well as IDE ...

**** If you want wallpapers those are also available in dotfiles and in xmonad config files there is a script for auto changing wallpapers every 10 minutes.

#+begin_quote
One more Important thing is don't copy the config files directly which may lead to problems first go through those files and understand what every line is doing and change as per your need and save those and use it...

#+end_quote


*** Now just reboot and enjoy ...

* TIME SETUP DUALBOOT

**** After dual booting the time will change in windows so to stop that copy the .reg file from dotfiles directory to windows desktop and run it this solves the problem...
