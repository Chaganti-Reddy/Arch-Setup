#!/usr/bin/env bash
#
# Script name: dm-confedit
# Description: Choose from a list of configuration files to edit.
# Dependencies: dmenu, emacsclient

# Set with the flags "-e", "-u","-o pipefail" cause the script to fail
# if certain things happen, which is a good thing.  Otherwise, we can
# get hidden bugs that are hard to discover.
set -euo pipefail

DMEDITOR="emacsclient -c -a emacs"

declare -A confedit_list
confedit_list[alacritty]="$HOME/.config/alacritty/alacritty.yml"
#confedit_list[awesome]="$HOME/.config/awesome/rc.lua"
confedit_list[bash]="$HOME/.bashrc"
confedit_list[bspwm]="$HOME/.config/bspwm/bspwmrc"
confedit_list[doom emacs config.el]="$HOME/.doom.d/config.el"
confedit_list[doom emacs config.org]="$HOME/.doom.d/config.org"
confedit_list[doom emacs init.el]="$HOME/.doom.d/init.el"
confedit_list[doom emacs packages.el]="$HOME/.doom.d/packages.el"
confedit_list[dunst]="$HOME/.config/dunst/dunstrc"
#confedit_list[dwm]="$HOME/dwm-distrotube/config.def.h"
#confedit_list[dwmblocks]="$HOME/dwmblocks-distrotube/blocks.def.h"
confedit_list[fish]="$HOME/.config/fish/config.fish"
#confedit_list[herbstluftwm]="$HOME/.config/herbstluftwm/autostart"
#confedit_list[i3]="$HOME/.config/i3/config"
#confedit_list[ncmpcpp]="$HOME/.config/ncmpcpp/config"
#confedit_list[neovim]="$HOME/.config/nvim/init.vim"
#confedit_list[picom]="$HOME/.config/picom/picom.conf"
confedit_list[polybar]="$HOME/.config/bspwm/polybar/config"
#confedit_list[qtile]="$HOME/.config/qtile/config.py"
#confedit_list[qutebrowser bookmarks]="$HOME/.config/qutebrowser/bookmarks/urls"
#confedit_list[qutebrowser quickmarks]="$HOME/.config/qutebrowser/quickmarks"
#confedit_list[qutebrowser config.py]="$HOME/.config/qutebrowser/config.py"
#confedit_list[spectrwm]="$HOME/.spectrwm.conf"
#confedit_list[ssh]="$HOME/.ssh/config"
#confedit_list[st]="$HOME/st-distrotube/config.def.h"
#confedit_list[stumpwm]="$HOME/.config/stumpwm/config"
#confedit_list[surf]="$HOME/surf-distrotube/config.def.h"
confedit_list[sxhkd]="$HOME/.config/sxhkd/sxhkdrc"
#confedit_list[tabbed]="$HOME/tabbed-distrotube/config.def.h"
#confedit_list[vifm]="$HOME/.config/vifm/vifmrc"
#confedit_list[vim]="$HOME/.vimrc"
confedit_list[xmobar]="$HOME/.config/xmobar/doom-one-xmobarrc"
#confedit_list[xmobar mon2]="$HOME/.config/xmobar/xmobarrc1"
#confedit_list[xmobar mon3]="$HOME/.config/xmobar/xmobarrc2"
confedit_list[xmonad]="$HOME/.xmonad/README.org"
confedit_list[xinitrc]="$HOME/.xinitrc"
confedit_list[xresources]="$HOME/.Xresources"
confedit_list[zsh]="$HOME/.zshrc"

main() {
  # Clean options array making sure that the files exist
  declare -A _clean_list
  # As this is loaded from other file it is technically not defined
  # shellcheck disable=SC2154
  for i in "${!confedit_list[@]}"; do
    [[ -f ${confedit_list["${i}"]} ]] && _clean_list["${i}"]=${confedit_list["${i}"]}
  done

  # Piping the above array (cleaned) into dmenu.
  # We use "printf '%s\n'" to format the array one item to a line.
  choice=$(printf '%s\n' "${!_clean_list[@]}" | sort | rofi -dmenu -i -p 'Edit config:' "$@")

  # What to do when/if we choose a file to edit.
  if [ "$choice" ]; then
    cfg=$(printf '%s\n' "${_clean_list["${choice}"]}")
    # shellcheck disable=SC2154
    $DMEDITOR "$cfg"
  # What to do if we just escape without choosing anything.
  else
      echo "Program terminated." && exit 0
  fi
}

[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
