{"clipboardHistory":[{"value":"print(\"Hello World\")\n\ndef add\n","recorded":"2025-01-12 18:07:48.852372573","filePath":"null","pinned":false},{"value":"print(\"Hello \")\n","recorded":"2025-01-12 18:06:44.830079196","filePath":"null","pinned":false},{"value":"#include \u003ccwchar\u003e\n","recorded":"2025-01-12 18:05:46.397332987","filePath":"null","pinned":false},{"value":":wcstoq(ddd, wchar_t **__restrict endptr, int base)\n","recorded":"2025-01-12 18:05:46.076828809","filePath":"null","pinned":false},{"value":"csrftoken=uLcBUZQWaEJWSJglXT6A8BlQSVecgyN6n3pcOukc04BDf2AHXih23mLFyYdmUWYu; ip_check=(false, \"106.215.170.55\"); INGRESSCOOKIE=5e36826b7a1e96b9aca533a782573226|8e0876c7c1464cc0ac96bc2edceabd27; c_a_u=\"Y2hhZ2FudGl2ZW5rYXRhcmFtaXJlZGR5MQ==:1tKxin:vGyV6-eewYv5z8nBH7rZL_fJ9cJMUPPvbMhhmN_Cfng\"; messages=.eJyLjlaKj88qzs-Lz00tLk5MT1XSMdAxMtVRCi5NTgaKpJXm5FQqFGem56WmKGTmKSQWKzhnJKYn5pVkKgSlpqRU6inF6lDBjFgAv30vMQ:1tWx2a:EIbE6ty7wKigzfoG9OS7KfY6KHSjri2PjkArxpIZQuw; _dd_s=rum=0\u0026expire=1736685668907; cf_clearance=.pMJk8oklNr_t9zpPVoeMTH0y3pqL5U9L26lMXsgfnU-1736684762-1.2.1.1-56dLWHrp.HB4WCaJchagUn00e.NLQgzorqhPqz6BzBDJ2s5MNaMbs2rGc59_o5Zkk.MLYxw3ey3ML_43usd_tkNOSf0whtUA96MV3fEy0zqoVst2vmvwDV2K_ivySMM_OQqaMRtwjS3ba0QjOnFOPdbyuWr.TwDt8iD4qMoNeSrJufoFKViy8Y_v.pJf.97n7R2Ds8vXCNfIt5DiGdW2BUUt5SlhBWR89NLfZ8Bj4AyaIBjqKhJVlwpDxOu8ZFb1nIxvqAVyNTHPVwdKJ7VsiZCzxbl4p4sWwhjd7xjNcBZmYfHUyVvw4ehUn5Kk.CO6QTqT_enWBXx1yxIjFY5Blw; LEETCODE_SESSION=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfYXV0aF91c2VyX2lkIjoiNTg1NzE1OCIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImFsbGF1dGguYWNjb3VudC5hdXRoX2JhY2tlbmRzLkF1dGhlbnRpY2F0aW9uQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6ImIyYjRmNDExMzY0Zjg3ZDQwYTQ2ZmI3NDlhYzlkODg5YjViODhkMzYzYmRhMTkzZTc2YzZiODMzNDE5NjAzZmEiLCJzZXNzaW9uX3V1aWQiOiIzMjQ1OTMyYyIsImlkIjo1ODU3MTU4LCJlbWFpbCI6ImNoYWdhbnRpdmVua2F0YXJhbWlyZWRkeTFAZ21haWwuY29tIiwidXNlcm5hbWUiOiJjaGFnYW50aXZlbmthdGFyYW1pcmVkZHkxIiwidXNlcl9zbHVnIjoiY2hhZ2FudGl2ZW5rYXRhcmFtaXJlZGR5MSIsImF2YXRhciI6Imh0dHBzOi8vYXNzZXRzLmxlZXRjb2RlLmNvbS91c2Vycy9hdmF0YXJzL2F2YXRhcl8xNjU0MTY3NDY0LnBuZyIsInJlZnJlc2hlZF9hdCI6MTczNjY4NDc2NCwiaXAiOiIyNDA5OjQwZjA6MzAwZTpjYjZiOmRiOWU6YWE4ZTo2ZDRlOjkwYmYiLCJpZGVudGl0eSI6IjcxZTQ3MTg0ZjAxMDY1ZWVjMTRiNTc2ZGE2NjgyN2JmIiwiZGV2aWNlX3dpdGhfaXAiOlsiMTgwNWEyN2VkYzAxZGJmNmY1ODk4MTE5NTI0YjUwZTQiLCIyNDA5OjQwZjA6MzAwZTpjYjZiOmRiOWU6YWE4ZTo2ZDRlOjkwYmYiXSwiX3Nlc3Npb25fZXhwaXJ5IjoxMjA5NjAwfQ.fAKjbntDm0plOhKEBNU2ksrUGMpjBRZjLBe5QELs264","recorded":"2025-01-12 18:00:50.322318561","filePath":"null","pinned":false},{"value":" 󰆘 csrftoken=uLcBUZQWaEJWSJglXT6A8BlQSVecgyN6n3pcOukc04BDf2AHXih23mLFyYdmUWYu; ip_check=(false, \"106.215.170.55\"); INGRESSCOOKIE=5e36826b7a1e96b9aca533a782573226|8e0876c7c1464cc0ac96bc2edceabd27; c_a_u=\"Y2hhZ2FudGl2ZW5rYXRhcmFtaXJlZGR5MQ==:1tKxin:vGyV6-eewYv5z8nBH7rZL_fJ9cJMUPPvbMhhmN_Cfng\"; messages=.eJyLjlaKj88qzs-Lz00tLk5MT1XSMdAxMtVRCi5NTgaKpJXm5FQqFGem56WmKGTmKSQWKzhnJKYn5pVkKgSlpqRU6inF6lDBjFgAv30vMQ:1tWx2a:EIbE6ty7wKigzfoG9OS7KfY6KHSjri2PjkArxpIZQuw; _dd_s=rum=0\u0026expire=1736685668907; cf_clearance=.pMJk8oklNr_t9zpPVoeMTH0y3pqL5U9L26lMXsgfnU-1736684762-1.2.1.1-56dLWHrp.HB4WCaJchagUn00e.NLQgzorqhPqz6BzBDJ2s5MNaMbs2rGc59_o5Zkk.MLYxw3ey3ML_43usd_tkNOSf0whtUA96MV3fEy0zqoVst2vmvwDV2K_ivySMM_OQqaMRtwjS3ba0QjOnFOPdbyuWr.TwDt8iD4qMoNeSrJufoFKViy8Y_v.pJf.97n7R2Ds8vXCNfIt5DiGdW2BUUt5SlhBWR89NLfZ8Bj4AyaIBjqKhJVlwpDxOu8ZFb1nIxvqAVyNTHPVwdKJ7VsiZCzxbl4p4sWwhjd7xjNcBZmYfHUyVvw4ehUn5Kk.CO6QTqT_enWBXx1yxIjFY5Blw; LEETCODE_SESSION=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfYXV0aF91c2VyX2lkIjoiNTg1NzE1OCIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImFsbGF1dGguYWNjb3VudC5hdXRoX2JhY2tlbmRzLkF1dGhlbnRpY2F0aW9uQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6ImIyYjRmNDExMzY0Zjg3ZDQwYTQ2ZmI3NDlhYzlkODg5YjViODhkMzYzYmRhMTkzZTc2YzZiODMzNDE5NjAzZmEiLCJzZXNzaW9uX3V1aWQiOiIzMjQ1OTMyYyIsImlkIjo1ODU3MTU4LCJlbWFpbCI6ImNoYWdhbnRpdmVua2F0YXJhbWlyZWRkeTFAZ21haWwuY29tIiwidXNlcm5hbWUiOiJjaGFnYW50aXZlbmthdGFyYW1pcmVkZHkxIiwidXNlcl9zbHVnIjoiY2hhZ2FudGl2ZW5rYXRhcmFtaXJlZGR5MSIsImF2YXRhciI6Imh0dHBzOi8vYXNzZXRzLmxlZXRjb2RlLmNvbS91c2Vycy9hdmF0YXJzL2F2YXRhcl8xNjU0MTY3NDY0LnBuZyIsInJlZnJlc2hlZF9hdCI6MTczNjY4NDc2NCwiaXAiOiIyNDA5OjQwZjA6MzAwZTpjYjZiOmRiOWU6YWE4ZTo2ZDRlOjkwYmYiLCJpZGVudGl0eSI6IjcxZTQ3MTg0ZjAxMDY1ZWVjMTRiNTc2ZGE2NjgyN2JmIiwiZGV2aWNlX3dpdGhfaXAiOlsiMTgwNWEyN2VkYzAxZGJmNmY1ODk4MTE5NTI0YjUwZTQiLCIyNDA5OjQwZjA6MzAwZTpjYjZiOmRiOWU6YWE4ZTo2ZDRlOjkwYmYiXSwiX3Nlc3Npb25fZXhwaXJ5IjoxMjA5NjAwfQ.fAKjbntDm0plOhKEBNU2ksrUGMpjBRZjLBe5\n","recorded":"2025-01-12 18:00:43.253545853","filePath":"null","pinned":false},{"value":"Day-07 of 40 Days of Kubernetes with blog ","recorded":"2025-01-12 15:52:13.160047447","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/hypr_wall\"\ndir=$(find $WALL -mindepth 1 -maxdepth 1 -type d -exec basename {} \\;)\nchoice=$(echo -e \"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\" | dmenu -i -l 10 -p \"Choose an Option: \")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\n# Random transition type generator function\nget_random_transition() {\n  echo \"fade wipe left right top bottom center random\" | tr ' ' '\\n' | shuf -n 1\n}\n\nif [ \"$choice\" = \"Random\" ]; then\n\twall_dir=$(ls $WALL)\n\twall=\"\"\n\n\tfor dir in $wall_dir; do\n\t\twall+=$(find $WALL/$dir -type f -name \"*.jpg\" -o -name \"*.png\")\n\tdone\n\n\tvalid_paper=\"No\"\n\tuntil [ \"$valid_paper\" = \"Yes\" ]; do\n\t\twallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n    \techo $wallk\n\t\t# Apply the wallpaper with a random transition effect\n\t\ttransition=$(get_random_transition)\n\t\tswww img --transition-type \"$transition\" \"$wallk\"\n\t\tvalid_paper=\"$(printf \"Yes\\nNo\" | dmenu -i -l 2 -p \"Do you like the new wallpaper?\")\"\n\tdone\n\texit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n\t/usr/local/bin/waldl\n\tif [ ! -d \"$WALL/Wallheaven\" ]; then\n\t\tmkdir \"$WALL/Wallheaven\"\n\tfi\n\tWALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n\tif [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n\t\tmkdir $HOME/.cache/wallheaven\n\tfi\n\t/usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n\tif [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n\t\tdunstify \"Directory is empty.\"\n\t\texit 1\n\tfi\n\tchoice=$(echo -e \"Yes\\nNo\" | dmenu -i -l 3 -p \"Would you like to change wallpaper?\")\n\tif [ \"$choice\" = \"No\" ]; then\n\t\tdunstify \"Program terminated.\"\n\t\texit 1\n\tfi\n\twall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n\twall=\"$HOME/.cache/wallheaven/$wall\"\n\tdunstify \"Wallpaper set to $wall\"\n\tif [ -n \"$wall\" ]; then\n\t\t# Apply the wallpaper with a random transition effect\n\t\ttransition=$(get_random_transition)\n\t\tswww img --transition-type \"$transition\" \"$wall\"\n\telse\n\t\tdunstify \"No wallpaper selected.\"\n\tfi\n\texit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n\tdunstify \"Program terminated.\"\n\texit 1\nfi\n\n# if the directory is empty, and its path should not be .cache/wallheaven then download some WALLPAPERS\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n\tif [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n\t\tdunstify \"Directory is empty.\"\n\t\tchoice=$(echo -e \"Download\\nExit\" | dmenu -i -l 2 -p \"Would you like to Download Some?\")\n\t\tif [ \"$choice\" = \"Download\" ]; then\n\t\t\t/usr/local/bin/waldl\n\t\telse\n\t\t\tdunstify \"Program terminated.\"\n\t\t\texit 1\n\t\tfi\n\tfi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n\tdunstify \"No wallpapers found.\"\n\texit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | dmenu -i -l 5 -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n\tSELECTED_WALLPAPER=$(sxiv -to $WALLPAPER_DIR | awk '{print $NF}')\n\t# Check if a wallpaper was selected\n\tif [ -n \"$SELECTED_WALLPAPER\" ]; then\n\t\t# Apply the wallpaper with a random transition effect\n\t\ttransition=$(get_random_transition)\n\t\tswww img --transition-type \"$transition\" \"$SELECTED_WALLPAPER\"\n\telse\n\t\tdunstify \"No wallpaper selected.\"\n\tfi\n\t;;\n\n\"Random\")\n\tvalid_paper=\"No\"\n\tuntil [ \"$valid_paper\" = \"Yes\" ]; do\n\t\tRANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n\t\t# Apply the wallpaper with a random transition effect\n\t\ttransition=$(get_random_transition)\n\t\tswww img --transition-type \"$transition\" \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\"\n\t\tvalid_paper=\"$(printf \"Yes\\nNo\" | dmenu -i -l 2 -p \"Do you like the new wallpaper?\")\"\n\tdone\n\t;;\n\n\"Exit\") dunstify \"Program terminated\" \u0026\u0026 exit 1 ;;\n*)\n\tdunstify \"Invalid option.\"\n\t;;\nesac\n","recorded":"2025-01-12 13:18:11.374484985","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/hypr_wall\"\ndir=$(find $WALL -mindepth 1 -maxdepth 1 -type d -exec basename {} \\;)\nchoice=$(echo -e \"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\" | rofi -dmenu -i -p \"Choose an Option:\")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\n# Random transition type generator function\nget_random_transition() {\n  echo \"fade wipe left right top bottom center random\" | tr ' ' '\\n' | shuf -n 1\n}\n\nif [ \"$choice\" = \"Random\" ]; then\n\twall_dir=$(ls $WALL)\n\twall=\"\"\n\n\tfor dir in $wall_dir; do\n\t\twall+=$(find $WALL/$dir -type f -name \"*.jpg\" -o -name \"*.png\")\n\tdone\n\n\tvalid_paper=\"No\"\n\tuntil [ \"$valid_paper\" = \"Yes\" ]; do\n\t\twallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n\t\techo $wallk\n\t\t# Apply the wallpaper with a random transition effect\n\t\ttransition=$(get_random_transition)\n\t\tswww img --transition-type \"$transition\" \"$wallk\"\n\t\tvalid_paper=\"$(printf \"Yes\\nNo\" | rofi -dmenu -i -p \"Do you like the new wallpaper?\")\"\n\tdone\n\texit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n\t/usr/local/bin/waldl\n\tif [ ! -d \"$WALL/Wallheaven\" ]; then\n\t\tmkdir \"$WALL/Wallheaven\"\n\tfi\n\tWALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n\tif [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n\t\tmkdir $HOME/.cache/wallheaven\n\tfi\n\t/usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n\tif [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n\t\tdunstify \"Directory is empty.\"\n\t\texit 1\n\tfi\n\tchoice=$(echo -e \"Yes\\nNo\" | rofi -dmenu -i -p \"Would you like to change wallpaper?\")\n\tif [ \"$choice\" = \"No\" ]; then\n\t\tdunstify \"Program terminated.\"\n\t\texit 1\n\tfi\n\twall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n\twall=\"$HOME/.cache/wallheaven/$wall\"\n\tdunstify \"Wallpaper set to $wall\"\n\tif [ -n \"$wall\" ]; then\n\t\t# Apply the wallpaper with a random transition effect\n\t\ttransition=$(get_random_transition)\n\t\tswww img --transition-type \"$transition\" \"$wall\"\n\telse\n\t\tdunstify \"No wallpaper selected.\"\n\tfi\n\texit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n\tdunstify \"Program terminated.\"\n\texit 1\nfi\n\n# if the directory is empty, and its path should not be .cache/wallheaven then download some WALLPAPERS\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n\tif [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n\t\tdunstify \"Directory is empty.\"\n\t\tchoice=$(echo -e \"Download\\nExit\" | rofi -dmenu -i -p \"Would you like to Download Some?\")\n\t\tif [ \"$choice\" = \"Download\" ]; then\n\t\t\t/usr/local/bin/waldl\n\t\telse\n\t\t\tdunstify \"Program terminated.\"\n\t\t\texit 1\n\t\tfi\n\tfi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n\tdunstify \"No wallpapers found.\"\n\texit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | rofi -dmenu -i -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n\tSELECTED_WALLPAPER=$(sxiv -to $WALLPAPER_DIR | awk '{print $NF}')\n\t# Check if a wallpaper was selected\n\tif [ -n \"$SELECTED_WALLPAPER\" ]; then\n\t\t# Apply the wallpaper with a random transition effect\n\t\ttransition=$(get_random_transition)\n\t\tswww img --transition-type \"$transition\" \"$SELECTED_WALLPAPER\"\n\telse\n\t\tdunstify \"No wallpaper selected.\"\n\tfi\n\t;;\n\n\"Random\")\n\tvalid_paper=\"No\"\n\tuntil [ \"$valid_paper\" = \"Yes\" ]; do\n\t\tRANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n\t\t# Apply the wallpaper with a random transition effect\n\t\ttransition=$(get_random_transition)\n\t\tswww img --transition-type \"$transition\" \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\"\n\t\tvalid_paper=\"$(printf \"Yes\\nNo\" | rofi -dmenu -i -p \"Do you like the new wallpaper?\")\"\n\tdone\n\t;;\n\n\"Exit\") dunstify \"Program terminated\" \u0026\u0026 exit 1 ;;\n*)\n\tdunstify \"Invalid option.\"\n\t;;\nesac\n","recorded":"2025-01-12 13:18:11.342741399","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Define global ROFI command with default options\nROFI=\"rofi -dmenu -i\"\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/hypr_wall\"\ndir=$(find $WALL -mindepth 1 -maxdepth 1 -type d -exec basename {} \\;)\nchoice=$(echo -e \"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\" | $ROFI -p \"Choose an Option:\")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\n# Random transition type generator function\nget_random_transition() {\n  echo \"fade wipe left right top bottom center random\" | tr ' ' '\\n' | shuf -n 1\n}\n\nif [ \"$choice\" = \"Random\" ]; then\n\twall_dir=$(ls $WALL)\n\twall=\"\"\n\n\tfor dir in $wall_dir; do\n\t\twall+=$(find $WALL/$dir -type f -name \"*.jpg\" -o -name \"*.png\")\n\tdone\n\n\tvalid_paper=\"No\"\n\tuntil [ \"$valid_paper\" = \"Yes\" ]; do\n\t\twallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n\t\techo $wallk\n\t\t# Apply the wallpaper with a random transition effect\n\t\ttransition=$(get_random_transition)\n\t\tswww img --transition-type \"$transition\" \"$wallk\"\n\t\tvalid_paper=\"$(printf \"Yes\\nNo\" | $ROFI -p \"Do you like the new wallpaper?\")\"\n\tdone\n\texit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n\t/usr/local/bin/waldl\n\tif [ ! -d \"$WALL/Wallheaven\" ]; then\n\t\tmkdir \"$WALL/Wallheaven\"\n\tfi\n\tWALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n\tif [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n\t\tmkdir $HOME/.cache/wallheaven\n\tfi\n\t/usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n\tif [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n\t\tdunstify \"Directory is empty.\"\n\t\texit 1\n\tfi\n\tchoice=$(echo -e \"Yes\\nNo\" | $ROFI -p \"Would you like to change wallpaper?\")\n\tif [ \"$choice\" = \"No\" ]; then\n\t\tdunstify \"Program terminated.\"\n\t\texit 1\n\tfi\n\twall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n\twall=\"$HOME/.cache/wallheaven/$wall\"\n\tdunstify \"Wallpaper set to $wall\"\n\tif [ -n \"$wall\" ]; then\n\t\t# Apply the wallpaper with a random transition effect\n\t\ttransition=$(get_random_transition)\n\t\tswww img --transition-type \"$transition\" \"$wall\"\n\telse\n\t\tdunstify \"No wallpaper selected.\"\n\tfi\n\texit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n\tdunstify \"Program terminated.\"\n\texit 1\nfi\n\n# if the directory is empty, and its path should not be .cache/wallheaven then download some WALLPAPERS\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n\tif [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n\t\tdunstify \"Directory is empty.\"\n\t\tchoice=$(echo -e \"Download\\nExit\" | $ROFI -p \"Would you like to Download Some?\")\n\t\tif [ \"$choice\" = \"Download\" ]; then\n\t\t\t/usr/local/bin/waldl\n\t\telse\n\t\t\tdunstify \"Program terminated.\"\n\t\t\texit 1\n\t\tfi\n\tfi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n\tdunstify \"No wallpapers found.\"\n\texit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | $ROFI -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n\tSELECTED_WALLPAPER=$(sxiv -to $WALLPAPER_DIR | awk '{print $NF}')\n\t# Check if a wallpaper was selected\n\tif [ -n \"$SELECTED_WALLPAPER\" ]; then\n\t\t# Apply the wallpaper with a random transition effect\n\t\ttransition=$(get_random_transition)\n\t\tswww img --transition-type \"$transition\" \"$SELECTED_WALLPAPER\"\n\telse\n\t\tdunstify \"No wallpaper selected.\"\n\tfi\n\t;;\n\n\"Random\")\n\tvalid_paper=\"No\"\n\tuntil [ \"$valid_paper\" = \"Yes\" ]; do\n\t\tRANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n\t\t# Apply the wallpaper with a random transition effect\n\t\ttransition=$(get_random_transition)\n\t\tswww img --transition-type \"$transition\" \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\"\n\t\tvalid_paper=\"$(printf \"Yes\\nNo\" | $ROFI -p \"Do you like the new wallpaper?\")\"\n\tdone\n\t;;\n\n\"Exit\") dunstify \"Program terminated\" \u0026\u0026 exit 1 ;;\n*)\n\tdunstify \"Invalid option.\"\n\t;;\nesac\n","recorded":"2025-01-12 13:18:09.928126779","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/hypr/rofi_old/themes/dt-center.rasi","recorded":"2025-01-12 13:17:41.865461227","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/hypr/rofi_old/config.rasi","recorded":"2025-01-12 13:16:36.846099548","filePath":"null","pinned":false},{"value":"#!/usr/bin/env sh\n\n# cpu model\nmodel=$(cat /proc/cpuinfo | grep 'model name' | head -n 1 | awk -f ': ' '{print $2}' | sed 's/@.*//' | sed 's/(r)//g' | sed 's/(tm)//g')\n\n# cpu utilization\nutilization=$(top -bn1 | awk '/^%cpu/ {print 100 - $8}')\n\n# clock speed\nfreqlist=$(cat /proc/cpuinfo | grep \"cpu mhz\" | awk '{ print $4 }')\nmaxfreq=$(cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq | sed 's/...$//')\nfrequency=$(echo $freqlist | tr ' ' '\\n' | awk \"{ sum+=\\$1 } end {printf \\\"%.0f/$maxfreq mhz\\\", sum/nr}\")\n\n# cpu temp\ntemp=$(sensors | awk '/package id 0/ {print $4}' | awk -f '[+.]' '{print $2}')\nif [ -z \"$temp\" ]; then\n    temp=$(sensors | awk '/tctl/ {print $2}' | tr -d '+°c')\nfi\nif [ -z \"$temp\" ]; then\n    temp=\"n/a\"\nfi\n\n# map icons\nset_ico=\"{\\\"thermo\\\":{\\\"0\\\":\\\"󱃃\\\",\\\"45\\\":\\\"󰔏\\\",\\\"65\\\":\\\"󱃂\\\",\\\"85\\\":\\\"󰸁\\\"},\\\"util\\\":{\\\"0\\\":\\\"󰾆\\\",\\\"30\\\":\\\"󰾅\\\",\\\"60\\\":\\\"󰓅\\\",\\\"90\\\":\\\"󰀪\\\"}}\"\neval_ico() {\n    map_ico=$(echo \"${set_ico}\" | jq -r --arg aky \"$1\" --argjson avl \"$2\" '.[$aky] | keys_unsorted | map(tonumber) | map(select(. \u003c= $avl)) | max')\n    echo \"${set_ico}\" | jq -r --arg aky \"$1\" --arg avl \"$map_ico\" '.[$aky] | .[$avl]'\n}\n\nthermo=$(eval_ico thermo $temp)\nspeedo=$(eval_ico util $utilization)\n\n# print cpu info (json)\necho \"{\\\"text\\\":\\\"${thermo} ${temp}°c\\\", \\\"tooltip\\\":\\\"${model}\\ntemperature: ${temp}°c\\nutilization: ${utilization}%\\nclock speed: ${frequency}\\\"}\"\n","recorded":"2025-01-12 12:45:27.282485398","filePath":"null","pinned":false},{"value":"#!/usr/bin/env sh\n\n# cpu model\nmodel=$(grep 'model name' /proc/cpuinfo | head -n 1 | awk -F ': ' '{print $2}' | sed 's/@.*//' | sed 's/(r)//g' | sed 's/(tm)//g' | tr -d '\"')\n\n# total cpu utilization\ntotal_utilization=$(mpstat -P ALL 1 1 | awk '/^Average/ \u0026\u0026 $2 ~ /all/ {printf \"%.1f\", 100 - $12}')\n\n# per-core utilization\nper_core_utilization=$(mpstat -P ALL 1 1 | awk '/^Average/ \u0026\u0026 $2 ~ /^[0-9]+$/ {printf \"Core %s: %.1f%%\\\\n\", $2, 100 - $12}' | tr -d '\"')\n\n# clock speed\nfreqlist=$(grep \"cpu MHz\" /proc/cpuinfo | awk '{print $4}')\nmaxfreq=$(cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq | sed 's/...$//')\nfrequency=$(echo \"$freqlist\" | tr ' ' '\\n' | awk -v maxfreq=\"$maxfreq\" '{ sum+=$1 } END {printf \"%.0f/%s MHz\", sum/NR, maxfreq}')\n\n# cpu temp\ntemp=$(sensors | awk '/Package id 0/ {print $4}' | awk -F '[+.]' '{print $2}')\nif [ -z \"$temp\" ]; then\n    temp=$(sensors | awk '/Tctl/ {print $2}' | tr -d '+°C')\nfi\nif [ -z \"$temp\" ]; then\n    temp=\"n/a\"\nfi\n\n# cpu cores\ncores=$(grep -c ^processor /proc/cpuinfo)\n\n# map icons\nset_ico=\"{\\\"thermo\\\":{\\\"0\\\":\\\"󱃃\\\",\\\"45\\\":\\\"󰔏\\\",\\\"65\\\":\\\"󱃂\\\",\\\"85\\\":\\\"󰸁\\\"},\\\"util\\\":{\\\"0\\\":\\\"󰾆\\\",\\\"30\\\":\\\"󰾅\\\",\\\"60\\\":\\\"󰓅\\\",\\\"90\\\":\\\"󰀪\\\"}}\"\neval_ico() {\n    map_ico=$(echo \"${set_ico}\" | jq -r --arg aky \"$1\" --argjson avl \"$2\" '.[$aky] | keys_unsorted | map(tonumber) | map(select(. \u003c= $avl)) | max')\n    echo \"${set_ico}\" | jq -r --arg aky \"$1\" --arg avl \"$map_ico\" '.[$aky] | .[$avl]'\n}\n\nthermo=$(eval_ico thermo \"$temp\")\nspeedo=$(eval_ico util \"$total_utilization\")\n\n# ensure JSON-safe strings\nmodel=$(echo \"$model\" | sed 's/\"/\\\\\"/g')\nper_core_utilization=$(echo \"$per_core_utilization\" | sed ':a;N;$!ba;s/\\n/\\\\n/g')\n\n# print cpu info (json)\necho \"{\\\"text\\\":\\\"${thermo} ${temp}°C\\\", \\\"tooltip\\\":\\\"${model}\\\\ntemperature: ${temp}°C\\\\ntotal utilization: ${total_utilization}%\\\\nper-core utilization:\\\\n${per_core_utilization}\\\\nclock speed: ${frequency}\\\\ncores: ${cores}\\\"}\"\n","recorded":"2025-01-12 12:45:27.249918160","filePath":"null","pinned":false},{"value":"#!/usr/bin/env sh\n\n# cpu model\nmodel=$(grep 'model name' /proc/cpuinfo | head -n 1 | awk -F ': ' '{print $2}' | sed 's/@.*//' | sed 's/(r)//g' | sed 's/(tm)//g' | tr -d '\"')\n\n# total cpu utilization\ntotal_utilization=$(mpstat -P ALL 1 1 | awk '/^Average/ \u0026\u0026 $2 ~ /all/ {printf \"%.0f\", 100 - $12}')\n\n# per-core utilization (integer values)\nper_core_utilization=$(mpstat -P ALL 1 1 | awk '/^Average/ \u0026\u0026 $2 ~ /^[0-9]+$/ {printf \"Core %s: %d%%\\\\n\", $2, int(100 - $12)}' | tr -d '\"')\n\n# clock speed\nfreqlist=$(grep \"cpu MHz\" /proc/cpuinfo | awk '{print $4}')\nmaxfreq=$(cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq | sed 's/...$//')\nfrequency=$(echo \"$freqlist\" | tr ' ' '\\n' | awk -v maxfreq=\"$maxfreq\" '{ sum+=$1 } END {printf \"%.0f/%s MHz\", sum/NR, maxfreq}')\n\n# cpu temp\ntemp=$(sensors | awk '/Package id 0/ {print $4}' | awk -F '[+.]' '{print $2}')\nif [ -z \"$temp\" ]; then\n    temp=$(sensors | awk '/Tctl/ {print $2}' | tr -d '+°C')\nfi\nif [ -z \"$temp\" ]; then\n    temp=\"n/a\"\nfi\n\n# cpu cores\ncores=$(grep -c ^processor /proc/cpuinfo)\n\n# map icons\nset_ico=\"{\\\"thermo\\\":{\\\"0\\\":\\\"󱃃\\\",\\\"45\\\":\\\"󰔏\\\",\\\"65\\\":\\\"󱃂\\\",\\\"85\\\":\\\"󰸁\\\"},\\\"util\\\":{\\\"0\\\":\\\"󰾆\\\",\\\"30\\\":\\\"󰾅\\\",\\\"60\\\":\\\"󰓅\\\",\\\"90\\\":\\\"󰀪\\\"}}\"\neval_ico() {\n    map_ico=$(echo \"${set_ico}\" | jq -r --arg aky \"$1\" --argjson avl \"$2\" '.[$aky] | keys_unsorted | map(tonumber) | map(select(. \u003c= $avl)) | max')\n    echo \"${set_ico}\" | jq -r --arg aky \"$1\" --arg avl \"$map_ico\" '.[$aky] | .[$avl]'\n}\n\nthermo=$(eval_ico thermo \"$temp\")\nspeedo=$(eval_ico util \"$total_utilization\")\n\n# ensure JSON-safe strings\nmodel=$(echo \"$model\" | sed 's/\"/\\\\\"/g')\nper_core_utilization=$(echo \"$per_core_utilization\" | sed ':a;N;$!ba;s/\\n/\\\\n/g')\n\n# print cpu info (json)\necho \"{\\\"text\\\":\\\"${thermo} ${temp}°C\\\", \\\"tooltip\\\":\\\"${model}\\\\ntemperature: ${temp}°C\\\\ntotal utilization: ${total_utilization}%\\\\nper-core utilization:\\\\n${per_core_utilization}\\\\nclock speed: ${frequency}\\\\ncores: ${cores}\\\"}\"\n","recorded":"2025-01-12 12:45:25.802897051","filePath":"null","pinned":false},{"value":"#!/usr/bin/env sh\n\n# cpu model\nmodel=$(grep 'model name' /proc/cpuinfo | head -n 1 | awk -F ': ' '{print $2}' | sed 's/@.*//' | sed 's/(r)//g' | sed 's/(tm)//g')\n\n# total cpu utilization\ntotal_utilization=$(mpstat -P ALL 1 1 | awk '/^Average/ \u0026\u0026 $2 ~ /all/ {printf \"%.1f\", 100 - $12}')\n\n# per-core utilization\nper_core_utilization=$(mpstat -P ALL 1 1 | awk '/^Average/ \u0026\u0026 $2 ~ /^[0-9]+$/ {printf \"Core %s: %.1f%%\\n\", $2, 100 - $12}')\n\n# clock speed\nfreqlist=$(grep \"cpu MHz\" /proc/cpuinfo | awk '{print $4}')\nmaxfreq=$(cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq | sed 's/...$//')\nfrequency=$(echo \"$freqlist\" | tr ' ' '\\n' | awk -v maxfreq=\"$maxfreq\" '{ sum+=$1 } END {printf \"%.0f/%s MHz\", sum/NR, maxfreq}')\n\n# cpu temp\ntemp=$(sensors | awk '/Package id 0/ {print $4}' | awk -F '[+.]' '{print $2}')\nif [ -z \"$temp\" ]; then\n    temp=$(sensors | awk '/Tctl/ {print $2}' | tr -d '+°C')\nfi\nif [ -z \"$temp\" ]; then\n    temp=\"n/a\"\nfi\n\n# cpu cores\ncores=$(grep -c ^processor /proc/cpuinfo)\n\n# map icons\nset_ico=\"{\\\"thermo\\\":{\\\"0\\\":\\\"󱃃\\\",\\\"45\\\":\\\"󰔏\\\",\\\"65\\\":\\\"󱃂\\\",\\\"85\\\":\\\"󰸁\\\"},\\\"util\\\":{\\\"0\\\":\\\"󰾆\\\",\\\"30\\\":\\\"󰾅\\\",\\\"60\\\":\\\"󰓅\\\",\\\"90\\\":\\\"󰀪\\\"}}\"\neval_ico() {\n    map_ico=$(echo \"${set_ico}\" | jq -r --arg aky \"$1\" --argjson avl \"$2\" '.[$aky] | keys_unsorted | map(tonumber) | map(select(. \u003c= $avl)) | max')\n    echo \"${set_ico}\" | jq -r --arg aky \"$1\" --arg avl \"$map_ico\" '.[$aky] | .[$avl]'\n}\n\nthermo=$(eval_ico thermo $temp)\nspeedo=$(eval_ico util $total_utilization)\n\n# print cpu info (json)\necho \"{\\\"text\\\":\\\"${thermo} ${temp}°C\\\", \\\"tooltip\\\":\\\"${model}\\ntemperature: ${temp}°C\\ntotal utilization: ${total_utilization}%\\nper-core utilization:\\n${per_core_utilization}clock speed: ${frequency}\\ncores: ${cores}\\\"}\"\n","recorded":"2025-01-12 12:44:35.085033468","filePath":"null","pinned":false},{"value":"custom/cpuinfo: Error parsing JSON: * Line 1, Column 33\n  Syntax error: value, object or array expected.","recorded":"2025-01-12 12:44:05.599009252","filePath":"null","pinned":false},{"value":"sysstat","recorded":"2025-01-12 12:42:14.354076496","filePath":"null","pinned":false},{"value":"m%                                                                                         (base) \u003e\u003e\u003e    ~  sudo pacman -S sysstat","recorded":"2025-01-12 12:42:13.579690719","filePath":"null","pinned":false},{"value":"sysstat \n[sudo] password for karna: \nresolving dependencies...\nlooking for conflicting packages...\n","recorded":"2025-01-12 12:42:11.655866851","filePath":"null","pinned":false},{"value":"#!/usr/bin/env sh\n\n# cpu model\nmodel=$(cat /proc/cpuinfo | grep 'model name' | head -n 1 | awk -F ': ' '{print $2}' | sed 's/@.*//' | sed 's/(r)//g' | sed 's/(tm)//g')\n\n# cpu utilization\nutilization=$(top -bn1 | grep '^%Cpu' | awk '{print 100 - $8}')\n\n# clock speed\nfreqlist=$(cat /proc/cpuinfo | grep \"cpu MHz\" | awk '{ print $4 }')\nmaxfreq=$(cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq | sed 's/...$//')\nfrequency=$(echo \"$freqlist\" | tr ' ' '\\n' | awk -v maxfreq=\"$maxfreq\" '{ sum+=$1 } END {printf \"%.0f/%s MHz\", sum/NR, maxfreq}')\n\n# cpu temp\ntemp=$(sensors | awk '/Package id 0/ {print $4}' | awk -F '[+.]' '{print $2}')\nif [ -z \"$temp\" ]; then\n    temp=$(sensors | awk '/Tctl/ {print $2}' | tr -d '+°C')\nfi\nif [ -z \"$temp\" ]; then\n    temp=\"n/a\"\nfi\n\n# cpu cores\ncores=$(grep -c ^processor /proc/cpuinfo)\n\n# map icons\nset_ico=\"{\\\"thermo\\\":{\\\"0\\\":\\\"󱃃\\\",\\\"45\\\":\\\"󰔏\\\",\\\"65\\\":\\\"󱃂\\\",\\\"85\\\":\\\"󰸁\\\"},\\\"util\\\":{\\\"0\\\":\\\"󰾆\\\",\\\"30\\\":\\\"󰾅\\\",\\\"60\\\":\\\"󰓅\\\",\\\"90\\\":\\\"󰀪\\\"}}\"\neval_ico() {\n    map_ico=$(echo \"${set_ico}\" | jq -r --arg aky \"$1\" --argjson avl \"$2\" '.[$aky] | keys_unsorted | map(tonumber) | map(select(. \u003c= $avl)) | max')\n    echo \"${set_ico}\" | jq -r --arg aky \"$1\" --arg avl \"$map_ico\" '.[$aky] | .[$avl]'\n}\n\nthermo=$(eval_ico thermo $temp)\nspeedo=$(eval_ico util $utilization)\n\n# print cpu info (json)\necho \"{\\\"text\\\":\\\"${thermo} ${temp}°C\\\", \\\"tooltip\\\":\\\"${model}\\ntemperature: ${temp}°C\\nutilization: ${utilization}%\\nclock speed: ${frequency}\\ncores: ${cores}\\\"}\"\n","recorded":"2025-01-12 12:41:07.156338302","filePath":"null","pinned":false},{"value":"set preview_images_method ueberzug\n","recorded":"2025-01-11 16:41:02.161995683","filePath":"null","pinned":false},{"value":"/home/karna/.config/ranger/now/plugins\n/home/karna/.config/ranger/now/commands.py\n/home/karna/.config/ranger/now/commands_full.py\n/home/karna/.config/ranger/now/rc.conf\n/home/karna/.config/ranger/now/rifle.conf\n/home/karna/.config/ranger/now/scope.sh","recorded":"2025-01-11 16:40:56.333480458","filePath":"null","pinned":false},{"value":"cp -vi /usr/share/doc/ranger/config/rc.conf ~/.config/ranger/rc.conf","recorded":"2025-01-11 16:38:54.567520855","filePath":"null","pinned":false},{"value":"ueberzug","recorded":"2025-01-11 16:37:39.006691618","filePath":"null","pinned":false},{"value":"set preview_script ~/.config/ranger/scope.sh\n","recorded":"2025-01-11 16:27:31.507733822","filePath":"null","pinned":false},{"value":"(Specimen Signature of authorized representative)","recorded":"2025-01-11 16:25:26.686501157","filePath":"null","pinned":false},{"value":"Signature of Director (in case of Private Company)/ Designated Partner (in case of Limited Liability Partnership)/ Designated Partner (in case of Registered Partnership)","recorded":"2025-01-11 16:24:54.692471606","filePath":"null","pinned":false},{"value":"set default-fg \t\t\t    \"#d9e0ee\"\nset default-bg \t\t\t    \"#1e1d2f\"\n\nset completion-bg\t\t    \"#302d41\"\nset completion-fg\t\t    \"#d9e0ee\"\nset completion-highlight-bg\t\"#575268\"\nset completion-highlight-fg\t\"#d9e0ee\"\nset completion-group-bg\t\t\"#302d41\"\nset completion-group-fg\t\t\"#96cdfb\"\n\nset statusbar-fg\t\t    \"#d9e0ee\"\nset statusbar-bg\t\t    \"#302d41\"\n\nset notification-bg\t\t    \"#302d41\"\nset notification-fg\t\t    \"#d9e0ee\"\nset notification-error-bg\t\"#302d41\"\nset notification-error-fg\t\"#f28fad\"\nset notification-warning-bg\t\"#302d41\"\nset notification-warning-fg\t\"#fae3b0\"\n\nset inputbar-fg\t\t\t    \"#d9e0ee\"\nset inputbar-bg \t\t    \"#302d41\"\n\nset recolor-lightcolor\t\t\"#1e1d2f\"\nset recolor-darkcolor\t\t\"#d9e0ee\"\n\nset index-fg\t\t\t    \"#d9e0ee\"\nset index-bg\t\t\t    \"#1e1d2f\"\nset index-active-fg\t\t    \"#d9e0ee\"\nset index-active-bg\t\t    \"#302d41\"\n\nset render-loading-bg\t\t\"#1e1d2f\"\nset render-loading-fg\t\t\"#d9e0ee\"\n\nset highlight-color\t\t    \"#575268\"\nset highlight-fg            \"#f5c2e7\"\nset highlight-active-color\t\"#f5c2e7\"","recorded":"2025-01-11 16:18:22.064303629","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Cambria-Font/Cambria-Font-For Android.ttf\n/home/karna/Downloads/Cambria-Font/Cambria-Font-For-Linux.ttf\n/home/karna/Downloads/Cambria-Font/Cambria-Font-For-MAC.ttf\n/home/karna/Downloads/Cambria-Font/Cambria-Font-For-Windows.ttf","recorded":"2025-01-11 16:17:42.332807043","filePath":"null","pinned":false},{"value":"Name: CHAGANTI BRAHMANANDA REDDY\nDesignation: DIRECTOR\nDate: 11/01/2025\nSeal of the Signing Authority","recorded":"2025-01-11 16:05:54.418649376","filePath":"null","pinned":false},{"value":"Sub: Letter of Authorization for filing in SISFS Application","recorded":"2025-01-11 16:05:06.473731729","filePath":"null","pinned":false},{"value":"📷 105579-636212067.png","recorded":"2025-01-11 16:02:23.659914242","filePath":"/home/karna/.config/clipse/tmp_files/105579-636212067.png","pinned":false},{"value":"___________________________\nSignature of Director (in case of Private Company)/ Designated Partner (in case of Limited Liability Partnership)/ Designated Partner (in case of Registered Partnership)","recorded":"2025-01-11 15:59:18.698177751","filePath":"null","pinned":false},{"value":"____________________\n(Specimen Signature of authorized representative)\nYours faithfully,","recorded":"2025-01-11 15:59:10.180329888","filePath":"null","pinned":false},{"value":"LETTER OF AUTHORIZATION\n\nThe Chairperson,                                                                                                   DATE: 11/01/2025\nIncubator Seed Management Committee                                                                                                                    \n\nDear Ma’am/ Sir,\nM\nSub: Letter of Authorization for filing in SISFS Application\n\nWe hereby authorize Smt/ Shri CHAGANTI KUSUMA KUMARI holding Aadhaar 6906 0978 9836 (copy to be attached) to submit the application for Startup India Seed Fund Scheme (“SISFS”) on behalf of our DPIIT Recognised Startup TESLA AGRO PRIVATE LIMITED DIPP No. (•)DIPP174578 having registered 1-21-129/3, INDRA COLONY, REVENUE WARD 1, DACHPALLE, GUNTUR- 522414, ANDRA PRADESH and PAN AAKCT0214E*\nWe also authorize Smt/ Shri CHAGANTI KUSUMA KUMARI to make declarations and to submit documents, wherever required, on our behalf. These declarations and submissions are made towards the requirement of the SISFS application.\n\nWe further confirm that we are liable for and bound by all acts of commission and omission by the authorized representative. All acts committed by the above authorized representatives shall be treated as if these acts were committed by the Incubator.\n\nThe Specimen signature of Shri. / Smt.  CHAGANTI KUSUMA KUMARI (Authorized representative) is attested below:","recorded":"2025-01-11 15:57:28.435370699","filePath":"null","pinned":false},{"value":"/home/karna/.config/ranger/bak/scope.sh","recorded":"2025-01-11 15:54:38.248856998","filePath":"null","pinned":false},{"value":"Day-05 of 40 Days of Kubernetes with blog (Part2)","recorded":"2025-01-11 15:49:22.600237227","filePath":"null","pinned":false},{"value":"😆","recorded":"2025-01-11 15:48:41.954365095","filePath":"null","pinned":false},{"value":"😭","recorded":"2025-01-11 15:47:20.741674293","filePath":"null","pinned":false},{"value":"PC started at 2025-01-11 15:40:23, now rebooting at 2025-01-11 15:42:46 with an uptime of 2 min 2 hrs 20 sh min \n","recorded":"2025-01-11 15:44:01.117705935","filePath":"null","pinned":false},{"value":"\n","recorded":"2025-01-11 15:43:45.927915624","filePath":"null","pinned":false},{"value":"PC started at 2025-01-11 15:39:14, now rebooting at 2025-01-11 15:40:07 with an uptime of 0 min \n","recorded":"2025-01-11 15:41:18.904892842","filePath":"null","pinned":false},{"value":"PC started at 2025-01-11 13:38:17, now shutting down at 2025-01-11 15:37:24 with an uptime of 1 hrs 59 min \n","recorded":"2025-01-11 15:37:36.199939887","filePath":"null","pinned":false},{"value":"PC started at 2025-01-11 13:38:17, now rebooting at 2025-01-11 15:37:03 with an uptime of 1 hrs 58 min \n","recorded":"2025-01-11 15:37:35.249399410","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/waybar/.config/waybar_cava/wallpaper_random.sh","recorded":"2025-01-11 15:32:20.446302566","filePath":"null","pinned":false},{"value":"","recorded":"2025-01-11 15:30:08.373640675","filePath":"null","pinned":false},{"value":" ","recorded":"2025-01-11 15:29:55.748223356","filePath":"null","pinned":false},{"value":"\"format-icons\": {\n      \"activated\": \"󰈈 \",\n      \"deactivated\": \"󰈉 \"\n    },","recorded":"2025-01-11 15:29:22.722546182","filePath":"null","pinned":false},{"value":"    \"custom/backlight\",\n","recorded":"2025-01-11 15:26:56.037218251","filePath":"null","pinned":false},{"value":"    \"bluetooth\",\n","recorded":"2025-01-11 15:26:42.243401847","filePath":"null","pinned":false},{"value":"\n[2025-01-11 15:25:35.892] [info] Using configuration file /home/karna/.config/waybar/config.jsonc\n[2025-01-11 15:25:35.894] [info] Unable to receive desktop appearance: GDBus.Error:org.freedesktop.DBus.Error.UnknownMethod: No such interface “org.freedesktop.portal.Settings” on object at path /org/freedesktop/portal","recorded":"2025-01-11 15:25:41.722267651","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/waybar/.config/waybar_cava/volumecontrol.sh","recorded":"2025-01-11 15:25:13.277136159","filePath":"null","pinned":false},{"value":"        \"on-click-right\": \"pavucontrol -t 3\",\n","recorded":"2025-01-11 15:24:48.376851477","filePath":"null","pinned":false},{"value":"\"on-click\": \"~/.config/waybar/volumecontrol.sh -o m\",\n        \"on-click-right\": \"pavucontrol -t 3\",\n        \"on-scroll-up\": \"~/.config/waybar/volumecontrol.sh -o i\",\n        \"on-scroll-down\": \"~/.config/waybar/volumecontrol.sh -o d\",","recorded":"2025-01-11 15:24:42.753590356","filePath":"null","pinned":false},{"value":"\"on-click\": \"~/.config/waybar/volumecontrol.sh -o m\",\n        \"on-click-right\": \"pavucontrol -t 3\",\n        \"on-scroll-up\": \"~/.config/waybar/volumecontrol.sh -o i\",\n        \"on-scroll-down\": \"~/.config/waybar/volumecontrol.sh -o d\",\n","recorded":"2025-01-11 15:22:33.947646135","filePath":"null","pinned":false},{"value":"    \"pulseaudio\": {\n        \"format\": \"{icon} {volume}%\",\n        \"format-muted\": \"婢 {volume}%\",\n        \"format-icons\": {\n            \"headphone\": \"󰋋\",\n            \"default\": [\"󰖀\", \"󰕾\"]\n        },\n        \"on-click\": \"~/.config/waybar/volumecontrol.sh -o m\",\n        \"on-click-right\": \"pavucontrol -t 3\",\n        \"on-scroll-up\": \"~/.config/waybar/volumecontrol.sh -o i\",\n        \"on-scroll-down\": \"~/.config/waybar/volumecontrol.sh -o d\",\n        \"scroll-step\": 10,\n        \"min-length\": 6,\n        \"max-length\": 6\n    },","recorded":"2025-01-11 15:21:11.194126200","filePath":"null","pinned":false},{"value":"found","recorded":"2025-01-11 15:09:57.523368885","filePath":"null","pinned":false},{"value":"    \"format-source\": \"{volume}% \",\n","recorded":"2025-01-11 15:08:32.911999218","filePath":"null","pinned":false},{"value":" ","recorded":"2025-01-11 15:05:57.734498508","filePath":"null","pinned":false},{"value":"\n[2025-01-11 14:57:43.515] [debug] Received SIGCHLD in signalThread","recorded":"2025-01-11 14:57:55.507726850","filePath":"null","pinned":false},{"value":"    \"idle_inhibitor\",\n","recorded":"2025-01-11 14:57:04.403097080","filePath":"null","pinned":false},{"value":"\"custom/cpuinfo\",\n    \"memory\",\n    \"cpu\",","recorded":"2025-01-11 14:56:28.000203922","filePath":"null","pinned":false},{"value":"","recorded":"2025-01-11 14:53:37.715255728","filePath":"null","pinned":false},{"value":"󰍬","recorded":"2025-01-11 14:53:19.653504215","filePath":"null","pinned":false},{"value":"\u003cspan color='#f38ba8' \u003e","recorded":"2025-01-11 14:53:09.349920791","filePath":"null","pinned":false},{"value":"\u003e","recorded":"2025-01-11 14:53:09.318518686","filePath":"null","pinned":false},{"value":"\u003cspan color='#bac2de' \u003e","recorded":"2025-01-11 14:51:47.233516222","filePath":"null","pinned":false},{"value":"[2025-01-11 14:50:24.060] [trace] Set tray item property: Fcitx.ToolTip = ('', [], '', '')","recorded":"2025-01-11 14:50:29.587294732","filePath":"null","pinned":false},{"value":"property: Fcitx.Status = 'Active'\n[2025-01-11 14:50:24.060] [trace] Set tray item property: Fcitx.Title = 'Input Method'\n[2025-01-11 14:50:24.060] [trace] Set tray item property","recorded":"2025-01-11 14:50:29.354046794","filePath":"null","pinned":false},{"value":"/* PulseAudio */\n#pulseaudio {\n  color: @subtext0;\n  background-color: @mantle;\n}\n\n#pulseaudio.muted {\n  color: @red;\n  background-color: @mantle;\n}","recorded":"2025-01-11 14:49:18.693409680","filePath":"null","pinned":false},{"value":"#pulseaudio#output,\n#pulseaudio#output.muted,\n#pulseaudio#input,\n#pulseaudio#input.muted,","recorded":"2025-01-11 14:49:09.691520871","filePath":"null","pinned":false},{"value":"#pulseaudio,\n#pulseaudio.muted,","recorded":"2025-01-11 14:49:09.664348573","filePath":"null","pinned":false},{"value":"#pulseaudio#output,\n#pulseaudio#output.muted,\n#","recorded":"2025-01-11 14:48:41.031858244","filePath":"null","pinned":false},{"value":"#pulseaudio#output,\n","recorded":"2025-01-11 14:48:07.134952879","filePath":"null","pinned":false},{"value":"#input","recorded":"2025-01-11 14:45:30.139708428","filePath":"null","pinned":false},{"value":"    \"on-click-right\": \"pavucontrol -t 3\",\n","recorded":"2025-01-11 14:44:35.513933574","filePath":"null","pinned":false},{"value":"    \"pulseaudio\",\n","recorded":"2025-01-11 14:38:16.904496329","filePath":"null","pinned":false},{"value":"\"pulseaudiomic\": {\n        \"format\": \"{format_source}\",\n        \"format-source\": \" {volume}%\",\n        \"format-source-muted\": \" Muted\",\n        \"on-click\": \"pactl set-source-mute @DEFAULT_SOURCE@ toggle\",\n        \"on-scroll-up\": \"pactl set-source-volume @DEFAULT_SOURCE@ +5%\",\n        \"on-scroll-down\": \"pactl set-source-volume @DEFAULT_SOURCE@ -5%\",\n        \"scroll-step\": 5\n    }","recorded":"2025-01-11 14:37:42.149223090","filePath":"null","pinned":false},{"value":"waybar -l trace","recorded":"2025-01-11 14:36:45.437745997","filePath":"null","pinned":false},{"value":"\"format-icons\": {\n        \"alsa_output.pci-0000_00_1f.3.analog-stereo\": \"\",\n        \"alsa_output.pci-0000_00_1f.3.analog-stereo-muted\": \"\",\n        \"headphone\": \"\",\n        \"hands-free\": \"\",\n        \"headset\": \"\",\n        \"phone\": \"\",\n        \"phone-muted\": \"\",\n        \"portable\": \"\",\n        \"car\": \"\",\n        \"default\": [\"\", \"\"]\n    },","recorded":"2025-01-11 14:23:20.061381424","filePath":"null","pinned":false},{"value":"        },\n        \"on-click\": \"~/.config/waybar/volumecontrol.sh -o m\",\n        \"on-click-right\": \"pavucontrol -t 3\",\n","recorded":"2025-01-11 14:18:58.897762575","filePath":"null","pinned":false},{"value":"/* Tooltip Styling */\ntooltip {\n  background: @main-bg;\n  border: solid;\n  border-width: 1.5px;\n  border-radius: 8px;\n  border-color: @main-br;\n}\ntooltip label {\n  /* color: rgba(255, 77, 0, 1); */\n  color: rgba(255, 200, 0, 1);\n  font-weight: bold;\n  margin: 0.25px;\n}","recorded":"2025-01-11 14:10:51.718058654","filePath":"null","pinned":false},{"value":"@import \"mocha.css\";\n\n/* ================================ */\n/*            Common CSS            */\n/* ================================ */\n* {\n  font-family: \"JetBrainsMono Nerd Font\";\n  font-size: 11pt;\n  font-weight: bold;\n  padding: 0;\n  border-radius: 0;\n  min-height: 0;\n  margin: 0;\n  border: none;\n  text-shadow: none;\n  transition: none;\n  box-shadow: none;\n  color: @text;\n}\n\n/* The whole window */\nwindow#waybar {\n  background-color: shade(@base, 0.9);\n  border: 2px solid alpha(@crust, 0.3);\n  padding: 0px 5px;\n  margin: 0;\n  border-radius: 15px;\n}\n\n.modules-left {\n  padding-left: 5px;\n}\n\n.modules-right {\n  padding-right: 5px;\n}\n\n/* Module styling */\n#custom-rofi,\n#workspaces button:hover,\n#workspaces button.visible,\n#workspaces button.visible:hover,\n#workspaces button.active,\n#workspaces button.active:hover,\n#workspaces button.urgent,\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock,\n.tooltip,\n.tooltip-label {\n  font-family: JetBrainsMono Nerd Font Propo;\n  font-size: 14px;\n  font-weight: bold;\n  color: @subtext0;\n  background-color: @base;\n  border-radius: 2px;\n}\n\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock,\n.tooltip,\n.tooltip-label {\n  padding-right: 4px;\n  margin: 5px 0px;\n}\n\n#custom-rofi {\n  background-color: shade(@mantle, 0.9);\n  padding: 0 6px;\n  margin: 5px 0px;\n}\n\n/* Workspaces module */\n#workspaces {\n  margin: 0px;\n}\n\n#workspaces button {\n  color: @text;\n  background-color: transparent;\n  min-width: 25px;\n  padding: 0 4px;\n  margin: 5px 3px;\n  border: none;\n}\n\n#workspaces button:hover {\n  background-color: shade(@surface1, 1.1);\n  border: 2px solid @mauve;\n  border-radius: 12px;\n}\n\n#workspaces button.visible {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: @surface1;\n}\n\n#workspaces button.visible:hover {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: shade(@surface1, 1.1);\n}\n\n#workspaces button.active {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: @surface1;\n}\n\n#workspaces button.active:hover {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: shade(@surface1, 1.1);\n}\n\n#workspaces button.urgent {\n  border: 2px solid @red;\n  border-radius: 12px;\n  background-color: @flamingo;\n}\n\n/* Tooltip Styling */\ntooltip {\n  background: @mantle;\n  border: solid;\n  border-width: 1.5px;\n  border-radius: 8px;\n  border-color: @blue;\n}\ntooltip label {\n  color: @yellow;\n  font-weight: bold;\n  margin: 0.25px;\n}\n\n/* Window */\n#window {\n  color: @subtext1;\n  background-color: @mantle;\n}\n\n/* Tray */\n#tray {\n  background-color: @mantle;\n}\n\n/* Disk */\n#disk {\n  color: @peach;\n  border: 2px solid @peach;\n}\n\n/* CPU */\n#custom-cpu {\n  color: @yellow;\n  border: 2px solid @yellow;\n}\n\n/* Temperature */\n#temperature {\n  color: @yellow;\n  border: 2px solid @yellow;\n}\n\n#temperature.critical {\n  color: @red;\n  border: 2px solid @red;\n}\n\n/* Backlight */\n#custom-backlight,\n#backlight {\n  color: @peach;\n  background-color: @mantle;\n}\n\n/* Memory */\n#custom-memory {\n  color: @blue;\n  border: 2px solid @blue;\n}\n\n/* PulseAudio */\n#pulseaudio {\n  color: @subtext0;\n  background-color: @mantle;\n}\n\n#pulseaudio.muted {\n  color: @red;\n  background-color: @mantle;\n}\n\n/* Battery */\n#battery {\n  color: @text;\n  background-color: @mantle;\n}\n\n#battery.critical {\n  color: @red;\n  background-color: @mantle;\n}\n\n#battery.warning {\n  color: @yellow;\n  background-color: @mantle;\n}\n\n/* Clock */\n#clock.time {\n  color: @text;\n  background-color: @mantle;\n}\n\n#clock.date {\n  color: @blue;\n  background-color: @mantle;\n}\n\n#mpris {\n  color: @crust;\n  border: 2px solid @mantle;\n  border-radius: 21px;\n  background-color: @text;\n  padding: 5px 5px;\n  margin: 1px 1px; \n}\n\n#custom-notification {\n  color: @text;\n  font-size: 14px;\n  background-color: @mantle;\n  padding: 2px 2px;\n}\n\n#custom-powermenu {\n  color: @text;\n  font-size: 14px;\n  background-color: @mantle;\n  padding: 2px 2px;\n}\n\n#custom-paddc,\n#custom-paddc:hover,\n#custom-cpuinfo,\n#custom-cpuinfo:hover,\n#cpu {\n  background-color: @mantle;\n}\n\n#idle_inhibitor {\n  color: @inhibitor;\n}\n\n#idle_inhibitor.activated {\n  color: @red;\n}\n","recorded":"2025-01-11 14:10:51.682593021","filePath":"null","pinned":false},{"value":"@import \"mocha.css\";\n\n/* ================================ */\n/*            Common CSS            */\n/* ================================ */\n* {\n  font-family: \"JetBrainsMono Nerd Font\";\n  font-size: 11pt;\n  font-weight: bold;\n  padding: 0;\n  border-radius: 0;\n  min-height: 0;\n  margin: 0;\n  border: none;\n  text-shadow: none;\n  transition: none;\n  box-shadow: none;\n  color: @text;\n}\n\n/* The whole window */\nwindow#waybar {\n  background-color: shade(@base, 0.9);\n  border: 2px solid alpha(@crust, 0.3);\n  padding: 0px 5px;\n  margin: 0;\n  border-radius: 15px;\n}\n\n.modules-left {\n  padding-left: 5px;\n}\n\n.modules-right {\n  padding-right: 5px;\n}\n\n/* Module styling */\n#custom-rofi,\n#workspaces button:hover,\n#workspaces button.visible,\n#workspaces button.visible:hover,\n#workspaces button.active,\n#workspaces button.active:hover,\n#workspaces button.urgent,\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock,\n.tooltip,\n.tooltip-label {\n  font-family: JetBrainsMono Nerd Font Propo;\n  font-size: 14px;\n  font-weight: bold;\n  color: @subtext0;\n  background-color: @base;\n  border-radius: 2px;\n}\n\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock,\n.tooltip,\n.tooltip-label {\n  padding-right: 4px;\n  margin: 5px 0px;\n}\n\n#custom-rofi {\n  background-color: shade(@mantle, 0.9);\n  padding: 0 6px;\n  margin: 5px 0px;\n}\n\n/* Workspaces module */\n#workspaces {\n  margin: 0px;\n}\n\n#workspaces button {\n  color: @text;\n  background-color: transparent;\n  min-width: 25px;\n  padding: 0 4px;\n  margin: 5px 3px;\n  border: none;\n}\n\n#workspaces button:hover {\n  background-color: shade(@surface1, 1.1);\n  border: 2px solid @mauve;\n  border-radius: 12px;\n}\n\n#workspaces button.visible {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: @surface1;\n}\n\n#workspaces button.visible:hover {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: shade(@surface1, 1.1);\n}\n\n#workspaces button.active {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: @surface1;\n}\n\n#workspaces button.active:hover {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: shade(@surface1, 1.1);\n}\n\n#workspaces button.urgent {\n  border: 2px solid @red;\n  border-radius: 12px;\n  background-color: @flamingo;\n}\n\n/* Tooltip Styling */\ntooltip {\n  background: @mantle;\n  border: solid;\n  border-width: 1.5px;\n  border-radius: 8px;\n  border-color: @blue;\n}\ntooltip label {\n  color: @teal;\n  font-weight: bold;\n  margin: 0.25px;\n}\n\n/* Window */\n#window {\n  color: @subtext1;\n  background-color: @mantle;\n}\n\n/* Tray */\n#tray {\n  background-color: @mantle;\n}\n\n/* Disk */\n#disk {\n  color: @peach;\n  border: 2px solid @peach;\n}\n\n/* CPU */\n#custom-cpu {\n  color: @yellow;\n  border: 2px solid @yellow;\n}\n\n/* Temperature */\n#temperature {\n  color: @yellow;\n  border: 2px solid @yellow;\n}\n\n#temperature.critical {\n  color: @red;\n  border: 2px solid @red;\n}\n\n/* Backlight */\n#custom-backlight,\n#backlight {\n  color: @peach;\n  background-color: @mantle;\n}\n\n/* Memory */\n#custom-memory {\n  color: @blue;\n  border: 2px solid @blue;\n}\n\n/* PulseAudio */\n#pulseaudio {\n  color: @subtext0;\n  background-color: @mantle;\n}\n\n#pulseaudio.muted {\n  color: @red;\n  background-color: @mantle;\n}\n\n/* Battery */\n#battery {\n  color: @text;\n  background-color: @mantle;\n}\n\n#battery.critical {\n  color: @red;\n  background-color: @mantle;\n}\n\n#battery.warning {\n  color: @yellow;\n  background-color: @mantle;\n}\n\n/* Clock */\n#clock.time {\n  color: @text;\n  background-color: @mantle;\n}\n\n#clock.date {\n  color: @blue;\n  background-color: @mantle;\n}\n\n#mpris {\n  color: @crust;\n  border: 2px solid @mantle;\n  border-radius: 21px;\n  background-color: @text;\n  padding: 5px 5px;\n  margin: 1px 1px; \n}\n\n#custom-notification {\n  color: @text;\n  font-size: 14px;\n  background-color: @mantle;\n  padding: 2px 2px;\n}\n\n#custom-powermenu {\n  color: @text;\n  font-size: 14px;\n  background-color: @mantle;\n  padding: 2px 2px;\n}\n\n#custom-paddc,\n#custom-paddc:hover,\n#custom-cpuinfo,\n#custom-cpuinfo:hover,\n#cpu {\n  background-color: @mantle;\n}\n\n#idle_inhibitor {\n  color: @inhibitor;\n}\n\n#idle_inhibitor.activated {\n  color: @red;\n}","recorded":"2025-01-11 14:10:49.233767898","filePath":"null","pinned":false},{"value":"#F28FAD","recorded":"2025-01-11 14:10:27.539500852","filePath":"null","pinned":false},{"value":"rgb(242, 143, 173)","recorded":"2025-01-11 14:09:12.162908492","filePath":"null","pinned":false},{"value":"@import \"mocha.css\";\n\n/* ================================ */\n/*            Common CSS            */\n/* ================================ */\n* {\n  font-family: \"JetBrainsMono Nerd Font\";\n  font-size: 11pt;\n  font-weight: bold;\n  padding: 0;\n  border-radius: 0;\n  min-height: 0;\n  margin: 0;\n  border: none;\n  text-shadow: none;\n  transition: none;\n  box-shadow: none;\n  color: @text;\n}\n\n/* The whole window */\nwindow#waybar {\n  background-color: shade(@base, 0.9);\n  border: 2px solid alpha(@crust, 0.3);\n  padding: 0px 5px;\n  margin: 0;\n  border-radius: 15px;\n}\n\n.modules-left {\n  padding-left: 5px;\n}\n\n.modules-right {\n  padding-right: 5px;\n}\n\n/* Tooltip Styling */\ntooltip {\n  background: @main-bg;\n  border: solid;\n  border-width: 1.5px;\n  border-radius: 8px;\n  border-color: @main-br;\n}\ntooltip label {\n  /* color: rgba(255, 77, 0, 1); */\n  color: rgba(255, 200, 0, 1);\n  font-weight: bold;\n  margin: 0.25px;\n}\n\n/* Module styling */\n#custom-rofi,\n#workspaces button:hover,\n#workspaces button.visible,\n#workspaces button.visible:hover,\n#workspaces button.active,\n#workspaces button.active:hover,\n#workspaces button.urgent,\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock {\n  font-family: JetBrainsMono Nerd Font Propo;\n  font-size: 14px;\n  font-weight: bold;\n  color: @subtext0;\n  background-color: @base;\n  border-radius: 2px;\n}\n\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock {\n  padding-right: 4px;\n  margin: 5px 0px;\n}\n\n#custom-rofi {\n  background-color: shade(@mantle, 0.9);\n  padding: 0 6px;\n  margin: 5px 0px;\n}\n\n/* Workspaces module */\n#workspaces {\n  margin: 0px;\n}\n\n#workspaces button {\n  color: @text;\n  background-color: transparent;\n  min-width: 25px;\n  padding: 0 4px;\n  margin: 5px 3px;\n  border: none;\n}\n\n#workspaces button:hover {\n  background-color: shade(@surface1, 1.1);\n  border: 2px solid @mauve;\n  border-radius: 12px;\n}\n\n#workspaces button.visible {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: @surface1;\n}\n\n#workspaces button.visible:hover {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: shade(@surface1, 1.1);\n}\n\n#workspaces button.active {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: @surface1;\n}\n\n#workspaces button.active:hover {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: shade(@surface1, 1.1);\n}\n\n#workspaces button.urgent {\n  border: 2px solid @red;\n  border-radius: 12px;\n  background-color: @flamingo;\n}\n\n/* Window */\n#window {\n  color: @subtext1;\n  background-color: @mantle;\n}\n\n/* Tray */\n#tray {\n  background-color: @mantle;\n}\n\n/* Disk */\n#disk {\n  color: @peach;\n  border: 2px solid @peach;\n}\n\n/* CPU */\n#custom-cpu {\n  color: @yellow;\n  border: 2px solid @yellow;\n}\n\n/* Temperature */\n#temperature {\n  color: @yellow;\n  border: 2px solid @yellow;\n}\n\n#temperature.critical {\n  color: @red;\n  border: 2px solid @red;\n}\n\n/* Backlight */\n#custom-backlight,\n#backlight {\n  color: @peach;\n  background-color: @mantle;\n}\n\n/* Memory */\n#custom-memory {\n  color: @blue;\n  border: 2px solid @blue;\n}\n\n/* PulseAudio */\n#pulseaudio {\n  color: @subtext0;\n  background-color: @mantle;\n}\n\n#pulseaudio.muted {\n  color: @red;\n  background-color: @mantle;\n}\n\n/* Battery */\n#battery {\n  color: @text;\n  background-color: @mantle;\n}\n\n#battery.critical {\n  color: @red;\n  background-color: @mantle;\n}\n\n#battery.warning {\n  color: @yellow;\n  background-color: @mantle;\n}\n\n/* Clock */\n#clock.time {\n  color: @text;\n  background-color: @mantle;\n}\n\n#clock.date {\n  color: @blue;\n  background-color: @mantle;\n}\n\n#mpris {\n  color: @crust;\n  border: 2px solid @mantle;\n  border-radius: 21px;\n  background-color: @text;\n  padding: 5px 5px;\n  margin: 1px 1px; \n}\n\n#custom-notification {\n  color: @text;\n  font-size: 14px;\n  background-color: @mantle;\n  padding: 2px 2px;\n}\n\n#custom-powermenu {\n  color: @text;\n  font-size: 14px;\n  background-color: @mantle;\n  padding: 2px 2px;\n}\n\n#custom-paddc,\n#custom-paddc:hover,\n#custom-cpuinfo,\n#custom-cpuinfo:hover,\n#cpu {\n  background-color: @mantle;\n}\n\n#idle_inhibitor {\n  color: @inhibitor;\n}\n\n#idle_inhibitor.activated {\n  color: @red;\n}\n","recorded":"2025-01-11 14:07:44.779345101","filePath":"null","pinned":false},{"value":"@import \"mocha.css\";\n\n/* ================================ */\n/*            Common CSS            */\n/* ================================ */\n* {\n  font-family: \"JetBrainsMono Nerd Font\";\n  font-size: 11pt;\n  font-weight: bold;\n  padding: 0;\n  border-radius: 0;\n  min-height: 0;\n  margin: 0;\n  border: none;\n  text-shadow: none;\n  transition: none;\n  box-shadow: none;\n  color: @text;\n}\n\n/* The whole window */\nwindow#waybar {\n  background-color: shade(@base, 0.9);\n  border: 2px solid alpha(@crust, 0.3);\n  padding: 0px 5px;\n  margin: 0;\n  border-radius: 15px;\n}\n\n.modules-left {\n  padding-left: 5px;\n}\n\n.modules-right {\n  padding-right: 5px;\n}\n\n/* Module styling */\n#custom-rofi,\n#workspaces button:hover,\n#workspaces button.visible,\n#workspaces button.visible:hover,\n#workspaces button.active,\n#workspaces button.active:hover,\n#workspaces button.urgent,\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock,\n.tooltip,\n.tooltip-label {\n  font-family: JetBrainsMono Nerd Font Propo;\n  font-size: 14px;\n  font-weight: bold;\n  color: @subtext0;\n  background-color: @base;\n  border-radius: 2px;\n}\n\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock,\n.tooltip,\n.tooltip-label {\n  padding-right: 4px;\n  margin: 5px 0px;\n}\n\n#custom-rofi {\n  background-color: shade(@mantle, 0.9);\n  padding: 0 6px;\n  margin: 5px 0px;\n}\n\n/* Workspaces module */\n#workspaces {\n  margin: 0px;\n}\n\n#workspaces button {\n  color: @text;\n  background-color: transparent;\n  min-width: 25px;\n  padding: 0 4px;\n  margin: 5px 3px;\n  border: none;\n}\n\n#workspaces button:hover {\n  background-color: shade(@surface1, 1.1);\n  border: 2px solid @mauve;\n  border-radius: 12px;\n}\n\n#workspaces button.visible {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: @surface1;\n}\n\n#workspaces button.visible:hover {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: shade(@surface1, 1.1);\n}\n\n#workspaces button.active {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: @surface1;\n}\n\n#workspaces button.active:hover {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: shade(@surface1, 1.1);\n}\n\n#workspaces button.urgent {\n  border: 2px solid @red;\n  border-radius: 12px;\n  background-color: @flamingo;\n}\n\n/* Tooltip Styling */\ntooltip {\n  background: @mantle;\n  border: solid;\n  border-width: 1.5px;\n  border-radius: 8px;\n  border-color: @blue;\n}\ntooltip label {\n  color: @yellow;\n  font-weight: bold;\n  margin: 0.25px;\n}\n\n/* Window */\n#window {\n  color: @subtext1;\n  background-color: @mantle;\n}\n\n/* Tray */\n#tray {\n  background-color: @mantle;\n}\n\n/* Disk */\n#disk {\n  color: @peach;\n  border: 2px solid @peach;\n}\n\n/* CPU */\n#custom-cpu {\n  color: @yellow;\n  border: 2px solid @yellow;\n}\n\n/* Temperature */\n#temperature {\n  color: @yellow;\n  border: 2px solid @yellow;\n}\n\n#temperature.critical {\n  color: @red;\n  border: 2px solid @red;\n}\n\n/* Backlight */\n#custom-backlight,\n#backlight {\n  color: @peach;\n  background-color: @mantle;\n}\n\n/* Memory */\n#custom-memory {\n  color: @blue;\n  border: 2px solid @blue;\n}\n\n/* PulseAudio */\n#pulseaudio {\n  color: @subtext0;\n  background-color: @mantle;\n}\n\n#pulseaudio.muted {\n  color: @red;\n  background-color: @mantle;\n}\n\n/* Battery */\n#battery {\n  color: @text;\n  background-color: @mantle;\n}\n\n#battery.critical {\n  color: @red;\n  background-color: @mantle;\n}\n\n#battery.warning {\n  color: @yellow;\n  background-color: @mantle;\n}\n\n/* Clock */\n#clock.time {\n  color: @text;\n  background-color: @mantle;\n}\n\n#clock.date {\n  color: @blue;\n  background-color: @mantle;\n}\n\n#mpris {\n  color: @crust;\n  border: 2px solid @mantle;\n  border-radius: 21px;\n  background-color: @text;\n  padding: 5px 5px;\n  margin: 1px 1px; \n}\n\n#custom-notification {\n  color: @text;\n  font-size: 14px;\n  background-color: @mantle;\n  padding: 2px 2px;\n}\n\n#custom-powermenu {\n  color: @text;\n  font-size: 14px;\n  background-color: @mantle;\n  padding: 2px 2px;\n}\n\n#custom-paddc,\n#custom-paddc:hover,\n#custom-cpuinfo,\n#custom-cpuinfo:hover,\n#cpu {\n  background-color: @mantle;\n}\n\n#idle_inhibitor {\n  color: @inhibitor;\n}\n\n#idle_inhibitor.activated {\n  color: @red;\n}","recorded":"2025-01-11 14:07:43.239419980","filePath":"null","pinned":false},{"value":"@import \"mocha.css\";\n\n/* ================================ */\n/*            Common CSS            */\n/* ================================ */\n* {\n  font-family: \"JetBrainsMono Nerd Font\";\n  font-size: 11pt;\n  font-weight: bold;\n  padding: 0;\n  border-radius: 0;\n  min-height: 0;\n  margin: 0;\n  border: none;\n  text-shadow: none;\n  transition: none;\n  box-shadow: none;\n  color: @text;\n}\n\n/* The whole window */\nwindow#waybar {\n  background-color: shade(@base, 0.9);\n  border: 2px solid alpha(@crust, 0.3);\n  padding: 0px 5px;\n  margin: 0;\n  border-radius: 15px;\n}\n\n.modules-left {\n  padding-left: 5px;\n}\n\n.modules-right {\n  padding-right: 5px;\n}\n\n/* Module styling */\n#custom-rofi,\n#workspaces button:hover,\n#workspaces button.visible,\n#workspaces button.visible:hover,\n#workspaces button.active,\n#workspaces button.active:hover,\n#workspaces button.urgent,\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock {\n  font-family: JetBrainsMono Nerd Font Propo;\n  font-size: 14px;\n  font-weight: bold;\n  color: @subtext0;\n  background-color: @base;\n  border-radius: 2px;\n}\n\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock {\n  padding-right: 4px;\n  margin: 5px 0px;\n}\n\n#custom-rofi {\n  background-color: shade(@mantle, 0.9);\n  padding: 0 6px;\n  margin: 5px 0px;\n}\n\n/* Workspaces module */\n#workspaces {\n  margin: 0px;\n}\n\n#workspaces button {\n  color: @text;\n  background-color: transparent;\n  min-width: 25px;\n  padding: 0 4px;\n  margin: 5px 3px;\n  border: none;\n}\n\n#workspaces button:hover {\n  background-color: shade(@surface1, 1.1);\n  border: 2px solid @mauve;\n  border-radius: 12px;\n}\n\n#workspaces button.visible {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: @surface1;\n}\n\n#workspaces button.visible:hover {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: shade(@surface1, 1.1);\n}\n\n#workspaces button.active {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: @surface1;\n}\n\n#workspaces button.active:hover {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: shade(@surface1, 1.1);\n}\n\n#workspaces button.urgent {\n  border: 2px solid @red;\n  border-radius: 12px;\n  background-color: @flamingo;\n}\n\n/* Window */\n#window {\n  color: @subtext1;\n  background-color: @mantle;\n}\n\n/* Tray */\n#tray {\n  background-color: @mantle;\n}\n\n/* Disk */\n#disk {\n  color: @peach;\n  border: 2px solid @peach;\n}\n\n/* CPU */\n#custom-cpu {\n  color: @yellow;\n  border: 2px solid @yellow;\n}\n\n/* Temperature */\n#temperature {\n  color: @yellow;\n  border: 2px solid @yellow;\n}\n\n#temperature.critical {\n  color: @red;\n  border: 2px solid @red;\n}\n\n/* Backlight */\n#custom-backlight,\n#backlight {\n  color: @peach;\n  background-color: @mantle;\n}\n\n/* Memory */\n#custom-memory {\n  color: @blue;\n  border: 2px solid @blue;\n}\n\n/* PulseAudio */\n#pulseaudio {\n  color: @subtext0;\n  background-color: @mantle;\n}\n\n#pulseaudio.muted {\n  color: @red;\n  background-color: @mantle;\n}\n\n/* Battery */\n#battery {\n  color: @text;\n  background-color: @mantle;\n}\n\n#battery.critical {\n  color: @red;\n  background-color: @mantle;\n}\n\n#battery.warning {\n  color: @yellow;\n  background-color: @mantle;\n}\n\n/* Clock */\n#clock.time {\n  color: @text;\n  background-color: @mantle;\n}\n\n#clock.date {\n  color: @blue;\n  background-color: @mantle;\n}\n\n#mpris {\n  color: @crust;\n  border: 2px solid @mantle;\n  border-radius: 21px;\n  background-color: @text;\n  padding: 5px 5px;\n  margin: 1px 1px; \n}\n\n#custom-notification {\n  color: @text;\n  font-size: 14px;\n  background-color: @mantle;\n  padding: 2px 2px;\n}\n\n#custom-powermenu {\n  color: @text;\n  font-size: 14px;\n  background-color: @mantle;\n  padding: 2px 2px;\n}\n\n#custom-paddc,\n#custom-paddc:hover,\n#custom-cpuinfo,\n#custom-cpuinfo:hover,\n#cpu {\n  background-color: @mantle;\n}\n\n#idle_inhibitor {\n  color: @inhibitor;\n}\n\n#idle_inhibitor.activated {\n  color: @red;\n}\n","recorded":"2025-01-11 14:04:12.665472984","filePath":"null","pinned":false},{"value":"@import \"mocha.css\";\n\n/* ================================ */\n/*            Common CSS            */\n/* ================================ */\n* {\n  font-family: \"JetBrainsMono Nerd Font\";\n  font-size: 11pt;\n  font-weight: bold;\n  padding: 0;\n  border-radius: 0;\n  min-height: 0;\n  margin: 0;\n  border: none;\n  text-shadow: none;\n  transition: none;\n  box-shadow: none;\n  color: @text;\n}\n\n/* The whole window */\nwindow#waybar {\n  background-color: shade(@base, 0.9);\n  border: 2px solid alpha(@crust, 0.3);\n  padding: 0px 5px;\n  margin: 0;\n  border-radius: 15px;\n}\n\n.modules-left {\n  padding-left: 5px;\n}\n\n.modules-right {\n  padding-right: 5px;\n}\n\n/* Module styling */\n#custom-rofi,\n#workspaces button:hover,\n#workspaces button.visible,\n#workspaces button.visible:hover,\n#workspaces button.active,\n#workspaces button.active:hover,\n#workspaces button.urgent,\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock,\n.tooltip,\n.tooltip-label {\n  font-family: JetBrainsMono Nerd Font Propo;\n  font-size: 14px;\n  font-weight: bold;\n  color: @subtext0;\n  background-color: @base;\n  border-radius: 2px;\n}\n\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock,\n.tooltip,\n.tooltip-label {\n  padding-right: 4px;\n  margin: 5px 0px;\n}\n\n#custom-rofi {\n  background-color: shade(@mantle, 0.9);\n  padding: 0 6px;\n  margin: 5px 0px;\n}\n\n/* Workspaces module */\n#workspaces {\n  margin: 0px;\n}\n\n#workspaces button {\n  color: @text;\n  background-color: transparent;\n  min-width: 25px;\n  padding: 0 4px;\n  margin: 5px 3px;\n  border: none;\n}\n\n#workspaces button:hover {\n  background-color: shade(@surface1, 1.1);\n  border: 2px solid @mauve;\n  border-radius: 12px;\n}\n\n#workspaces button.visible {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: @surface1;\n}\n\n#workspaces button.visible:hover {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: shade(@surface1, 1.1);\n}\n\n#workspaces button.active {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: @surface1;\n}\n\n#workspaces button.active:hover {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: shade(@surface1, 1.1);\n}\n\n#workspaces button.urgent {\n  border: 2px solid @red;\n  border-radius: 12px;\n  background-color: @flamingo;\n}\n\n/* Window */\n#window {\n  color: @subtext1;\n  background-color: @mantle;\n}\n\n/* Tray */\n#tray {\n  background-color: @mantle;\n}\n\n/* Disk */\n#disk {\n  color: @peach;\n  border: 2px solid @peach;\n}\n\n/* CPU */\n#custom-cpu {\n  color: @yellow;\n  border: 2px solid @yellow;\n}\n\n/* Temperature */\n#temperature {\n  color: @yellow;\n  border: 2px solid @yellow;\n}\n\n#temperature.critical {\n  color: @red;\n  border: 2px solid @red;\n}\n\n/* Backlight */\n#custom-backlight,\n#backlight {\n  color: @peach;\n  background-color: @mantle;\n}\n\n/* Memory */\n#custom-memory {\n  color: @blue;\n  border: 2px solid @blue;\n}\n\n/* PulseAudio */\n#pulseaudio {\n  color: @subtext0;\n  background-color: @mantle;\n}\n\n#pulseaudio.muted {\n  color: @red;\n  background-color: @mantle;\n}\n\n/* Battery */\n#battery {\n  color: @text;\n  background-color: @mantle;\n}\n\n#battery.critical {\n  color: @red;\n  background-color: @mantle;\n}\n\n#battery.warning {\n  color: @yellow;\n  background-color: @mantle;\n}\n\n/* Clock */\n#clock.time {\n  color: @text;\n  background-color: @mantle;\n}\n\n#clock.date {\n  color: @blue;\n  background-color: @mantle;\n}\n\n#mpris {\n  color: @crust;\n  border: 2px solid @mantle;\n  border-radius: 21px;\n  background-color: @text;\n  padding: 5px 5px;\n  margin: 1px 1px; \n}\n\n#custom-notification {\n  color: @text;\n  font-size: 14px;\n  background-color: @mantle;\n  padding: 2px 2px;\n}\n\n#custom-powermenu {\n  color: @text;\n  font-size: 14px;\n  background-color: @mantle;\n  padding: 2px 2px;\n}\n\n#custom-paddc,\n#custom-paddc:hover,\n#custom-cpuinfo,\n#custom-cpuinfo:hover,\n#cpu {\n  background-color: @mantle;\n}\n\n#idle_inhibitor {\n  color: @inhibitor;\n}\n\n#idle_inhibitor.activated {\n  color: @red;\n}\n","recorded":"2025-01-11 14:04:09.146643925","filePath":"null","pinned":false},{"value":"    \"format-icons\": {\n      \"1\": \"\u003cspan color='#cc241d' \u003e󰊠\u003c/span\u003e\",\n      \"2\": \"\u003cspan color='#98971a' \u003e󰊠\u003c/span\u003e\",\n      \"3\": \"\u003cspan color='#d79921' \u003e󰊠\u003c/span\u003e\",\n      \"4\": \"\u003cspan color='#458588' \u003e󰊠\u003c/span\u003e\",\n      \"5\": \"\u003cspan color='#b16286' \u003e󰊠\u003c/span\u003e\",\n      \"6\": \"\u003cspan color='#689d6a' \u003e󰊠\u003c/span\u003e\",\n      \"7\": \"\u003cspan color='#fe8019' \u003e󰊠\u003c/span\u003e\",\n      \"default\": \"\u003cspan color='#cc241d'\u003e󰊠\u003c/span\u003e\",\n    },","recorded":"2025-01-11 14:02:21.616166051","filePath":"null","pinned":false},{"value":"#9D8F99","recorded":"2025-01-11 14:02:21.586489126","filePath":"null","pinned":false},{"value":"#bac2de","recorded":"2025-01-11 14:02:18.331790722","filePath":"null","pinned":false},{"value":"#ea6962","recorded":"2025-01-11 14:01:43.939079740","filePath":"null","pinned":false},{"value":"#f38ba8","recorded":"2025-01-11 14:01:41.263775373","filePath":"null","pinned":false},{"value":"#DDB6F2","recorded":"2025-01-11 14:00:13.080256830","filePath":"null","pinned":false},{"value":" \"format-icons\": {\n  \"1\": \"\u003cspan color='@red'\u003e󰊠\u003c/span\u003e\",\n  \"2\": \"\u003cspan color='@green'\u003e󰊠\u003c/span\u003e\",\n  \"3\": \"\u003cspan color='@yellow'\u003e󰊠\u003c/span\u003e\",\n  \"4\": \"\u003cspan color='@teal'\u003e󰊠\u003c/span\u003e\",\n  \"5\": \"\u003cspan color='@mauve'\u003e󰊠\u003c/span\u003e\",\n  \"6\": \"\u003cspan color='@blue'\u003e󰊠\u003c/span\u003e\",\n  \"7\": \"\u003cspan color='@peach'\u003e󰊠\u003c/span\u003e\",\n  \"default\": \"\u003cspan color='@red'\u003e󰊠\u003c/span\u003e\"\n},","recorded":"2025-01-11 13:59:27.630767259","filePath":"null","pinned":false},{"value":"\"format-icons\": {\n  \"1\": \"\u003cspan color='#f38ba8'\u003e󰊠\u003c/span\u003e\",  // red\n  \"2\": \"\u003cspan color='#a6e3a1'\u003e󰊠\u003c/span\u003e\",  // green\n  \"3\": \"\u003cspan color='#f9e2af'\u003e󰊠\u003c/span\u003e\",  // yellow\n  \"4\": \"\u003cspan color='#94e2d5'\u003e󰊠\u003c/span\u003e\",  // teal\n  \"5\": \"\u003cspan color='#cba6f7'\u003e󰊠\u003c/span\u003e\",  // mauve\n  \"6\": \"\u003cspan color='#89b4fa'\u003e󰊠\u003c/span\u003e\",  // blue\n  \"7\": \"\u003cspan color='#fab387'\u003e󰊠\u003c/span\u003e\",  // peach\n  \"default\": \"\u003cspan color='#f38ba8'\u003e󰊠\u003c/span\u003e\" // red\n}\n","recorded":"2025-01-11 13:59:22.527497465","filePath":"null","pinned":false},{"value":"   \"format-icons\": {\n      \"1\": \"\u003cspan color='#cc241d' \u003e󰊠\u003c/span\u003e\",\n      \"2\": \"\u003cspan color='#98971a' \u003e󰊠\u003c/span\u003e\",\n      \"3\": \"\u003cspan color='#d79921' \u003e󰊠\u003c/span\u003e\",\n      \"4\": \"\u003cspan color='#458588' \u003e󰊠\u003c/span\u003e\",\n      \"5\": \"\u003cspan color='#b16286' \u003e󰊠\u003c/span\u003e\",\n      \"6\": \"\u003cspan color='#689d6a' \u003e󰊠\u003c/span\u003e\",\n      \"7\": \"\u003cspan color='#fe8019' \u003e󰊠\u003c/span\u003e\",\n      \"default\": \"\u003cspan color='#cc241d'\u003e󰊠\u003c/span\u003e\",\n    },","recorded":"2025-01-11 13:58:02.227520215","filePath":"null","pinned":false},{"value":"\"format-icons\": {\n  \"1\": \"\u003cspan color='@red'\u003e󰊠\u003c/span\u003e\",\n  \"2\": \"\u003cspan color='@green'\u003e󰊠\u003c/span\u003e\",\n  \"3\": \"\u003cspan color='@yellow'\u003e󰊠\u003c/span\u003e\",\n  \"4\": \"\u003cspan color='@teal'\u003e󰊠\u003c/span\u003e\",\n  \"5\": \"\u003cspan color='@mauve'\u003e󰊠\u003c/span\u003e\",\n  \"6\": \"\u003cspan color='@blue'\u003e󰊠\u003c/span\u003e\",\n  \"7\": \"\u003cspan color='@peach'\u003e󰊠\u003c/span\u003e\",\n  \"default\": \"\u003cspan color='@red'\u003e󰊠\u003c/span\u003e\"\n}\n","recorded":"2025-01-11 13:57:57.378058478","filePath":"null","pinned":false},{"value":"also change in these as well based on catppuchin \n\n    \"format-icons\": {\n      \"1\": \"\u003cspan color='#cc241d' \u003e󰊠\u003c/span\u003e\",\n      \"2\": \"\u003cspan color='#98971a' \u003e󰊠\u003c/span\u003e\",\n      \"3\": \"\u003cspan color='#d79921' \u003e󰊠\u003c/span\u003e\",\n      \"4\": \"\u003cspan color='#458588' \u003e󰊠\u003c/span\u003e\",\n      \"5\": \"\u003cspan color='#b16286' \u003e󰊠\u003c/span\u003e\",\n      \"6\": \"\u003cspan color='#689d6a' \u003e󰊠\u003c/span\u003e\",\n      \"7\": \"\u003cspan color='#fe8019' \u003e󰊠\u003c/span\u003e\",\n      \"default\": \"\u003cspan color='#cc241d'\u003e󰊠\u003c/span\u003e\",\n    },","recorded":"2025-01-11 13:57:45.172790980","filePath":"null","pinned":false},{"value":"@import \"mocha.css\";\n\n/* ================================ */\n/*            Common CSS            */\n/* ================================ */\n* {\n  font-family: \"JetBrainsMono Nerd Font\";\n  font-size: 11pt;\n  font-weight: bold;\n  padding: 0;\n  border-radius: 0;\n  min-height: 0;\n  margin: 0;\n  border: none;\n  text-shadow: none;\n  transition: none;\n  box-shadow: none;\n  color: @text;\n}\n\n/* The whole window */\nwindow#waybar {\n  background-color: shade(@base, 0.9);\n  border: 2px solid alpha(@crust, 0.3);\n  padding: 0px 5px;\n  margin: 0;\n  border-radius: 15px;\n}\n\n.modules-left {\n  padding-left: 5px;\n}\n\n.modules-right {\n  padding-right: 5px;\n}\n\n/* Module styling */\n#custom-rofi,\n#workspaces button,\n#workspaces button:hover,\n#workspaces button.visible,\n#workspaces button.visible:hover,\n#workspaces button.active,\n#workspaces button.active:hover,\n#workspaces button.urgent,\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock {\n  font-family: JetBrainsMono Nerd Font Propo;\n  font-size: 14px;\n  font-weight: bold;\n  color: @subtext0;\n  background-color: @base;\n  border-radius: 2px;\n}\n\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock {\n  padding-right: 4px;\n  margin: 5px 0px;\n}\n\n#custom-rofi {\n  background-color: shade(@mantle, 0.9);\n  padding: 0 6px;\n  margin: 5px 0px;\n}\n\n/* Workspaces module */\n#workspaces {\n  margin: 0px;\n}\n\n#workspaces button {\n  color: @text;\n  background-color: @surface1;\n  min-width: 25px;\n  padding: 0 4px;\n  margin: 5px 3px;\n}\n\n#workspaces button:hover {\n  background-color: shade(@surface1, 1.1);\n  border: 2px solid @mauve;\n  border-radius: 12px;\n}\n\n#workspaces button.visible {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: @surface1;\n}\n\n#workspaces button.visible:hover {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: shade(@surface1, 1.1);\n}\n\n#workspaces button.active {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: @surface1;\n}\n\n#workspaces button.active:hover {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: shade(@surface1, 1.1);\n}\n\n#workspaces button.urgent {\n  border: 2px solid @red;\n  border-radius: 12px;\n  background-color: @flamingo;\n}\n\n/* Window */\n#window {\n  color: @subtext1;\n  background-color: @mantle;\n}\n\n/* Tray */\n#tray {\n  background-color: @mantle;\n}\n\n/* Disk */\n#disk {\n  color: @peach;\n  border: 2px solid @peach;\n}\n\n/* CPU */\n#custom-cpu {\n  color: @yellow;\n  border: 2px solid @yellow;\n}\n\n/* Temperature */\n#temperature {\n  color: @yellow;\n  border: 2px solid @yellow;\n}\n\n#temperature.critical {\n  color: @red;\n  border: 2px solid @red;\n}\n\n/* Backlight */\n#custom-backlight,\n#backlight {\n  color: @peach;\n  background-color: @mantle;\n}\n\n/* Memory */\n#custom-memory {\n  color: @blue;\n  border: 2px solid @blue;\n}\n\n/* PulseAudio */\n#pulseaudio {\n  color: @subtext0;\n  background-color: @mantle;\n}\n\n#pulseaudio.muted {\n  color: @red;\n  background-color: @mantle;\n}\n\n/* Battery */\n#battery {\n  color: @text;\n  background-color: @mantle;\n}\n\n#battery.critical {\n  color: @red;\n  background-color: @mantle;\n}\n\n#battery.warning {\n  color: @yellow;\n  background-color: @mantle;\n}\n\n/* Clock */\n#clock.time {\n  color: @text;\n  background-color: @mantle;\n}\n\n#clock.date {\n  color: @blue;\n  background-color: @mantle;\n}\n\n#mpris {\n  color: @crust;\n  border: 2px solid @mantle;\n  border-radius: 21px;\n  background-color: @text;\n  padding: 5px 5px;\n  margin: 1px 1px; \n}\n\n#custom-notification {\n  color: @text;\n  font-size: 14px;\n  background-color: @mantle;\n  padding: 2px 2px;\n}\n\n#custom-powermenu {\n  color: @text;\n  font-size: 14px;\n  background-color: @mantle;\n  padding: 2px 2px;\n}\n\n#custom-paddc,\n#custom-paddc:hover,\n#custom-cpuinfo,\n#custom-cpuinfo:hover,\n#cpu {\n  background-color: @mantle;\n}\n\nidle_inhibitor.deactivated {\n  color: #DDB6F2;\n}\n\n#idle_inhibitor.activated {\n  color: @red;\n}\n","recorded":"2025-01-11 13:57:07.291629107","filePath":"null","pinned":false},{"value":"@import \"mocha.css\";\n\n/* ================================ */\n/*            Common CSS            */\n/* ================================ */\n* {\n  font-family: \"JetBrainsMono Nerd Font\";\n  font-size: 11pt;\n  font-weight: bold;\n  padding: 0;\n  border-radius: 0;\n  min-height: 0;\n  margin: 0;\n  border: none;\n  text-shadow: none;\n  transition: none;\n  box-shadow: none;\n  color: @text;\n}\n\n/* The whole window */\nwindow#waybar {\n  background-color: shade(@base, 0.9);\n  border: 2px solid alpha(@crust, 0.3);\n  padding: 0px 5px;\n  margin: 0;\n  border-radius: 15px;\n}\n\n.modules-left {\n  padding-left: 5px;\n}\n\n.modules-right {\n  padding-right: 5px;\n}\n\n/* Module styling */\n#custom-rofi,\n#workspaces button:hover,\n#workspaces button.visible,\n#workspaces button.visible:hover,\n#workspaces button.active,\n#workspaces button.active:hover,\n#workspaces button.urgent,\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock {\n  font-family: JetBrainsMono Nerd Font Propo;\n  font-size: 14px;\n  font-weight: bold;\n  color: @subtext0;\n  background-color: @base;\n  border-radius: 2px;\n}\n\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock {\n  padding-right: 4px;\n  margin: 5px 0px;\n}\n\n#custom-rofi {\n  background-color: shade(@mantle, 0.9);\n  padding: 0 6px;\n  margin: 5px 0px;\n}\n\n/* Workspaces module */\n#workspaces {\n  margin: 0px;\n}\n\n#workspaces button {\n  color: @text;\n  background-color: transparent;\n  min-width: 25px;\n  padding: 0 4px;\n  margin: 5px 3px;\n  border: none;\n}\n\n#workspaces button:hover {\n  background-color: shade(@surface1, 1.1);\n  border: 2px solid @mauve;\n  border-radius: 12px;\n}\n\n#workspaces button.visible {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: @surface1;\n}\n\n#workspaces button.visible:hover {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: shade(@surface1, 1.1);\n}\n\n#workspaces button.active {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: @surface1;\n}\n\n#workspaces button.active:hover {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: shade(@surface1, 1.1);\n}\n\n#workspaces button.urgent {\n  border: 2px solid @red;\n  border-radius: 12px;\n  background-color: @flamingo;\n}\n\n/* Window */\n#window {\n  color: @subtext1;\n  background-color: @mantle;\n}\n\n/* Tray */\n#tray {\n  background-color: @mantle;\n}\n\n/* Disk */\n#disk {\n  color: @peach;\n  border: 2px solid @peach;\n}\n\n/* CPU */\n#custom-cpu {\n  color: @yellow;\n  border: 2px solid @yellow;\n}\n\n/* Temperature */\n#temperature {\n  color: @yellow;\n  border: 2px solid @yellow;\n}\n\n#temperature.critical {\n  color: @red;\n  border: 2px solid @red;\n}\n\n/* Backlight */\n#custom-backlight,\n#backlight {\n  color: @peach;\n  background-color: @mantle;\n}\n\n/* Memory */\n#custom-memory {\n  color: @blue;\n  border: 2px solid @blue;\n}\n\n/* PulseAudio */\n#pulseaudio {\n  color: @subtext0;\n  background-color: @mantle;\n}\n\n#pulseaudio.muted {\n  color: @red;\n  background-color: @mantle;\n}\n\n/* Battery */\n#battery {\n  color: @text;\n  background-color: @mantle;\n}\n\n#battery.critical {\n  color: @red;\n  background-color: @mantle;\n}\n\n#battery.warning {\n  color: @yellow;\n  background-color: @mantle;\n}\n\n/* Clock */\n#clock.time {\n  color: @text;\n  background-color: @mantle;\n}\n\n#clock.date {\n  color: @blue;\n  background-color: @mantle;\n}\n\n#mpris {\n  color: @crust;\n  border: 2px solid @mantle;\n  border-radius: 21px;\n  background-color: @text;\n  padding: 5px 5px;\n  margin: 1px 1px; \n}\n\n#custom-notification {\n  color: @text;\n  font-size: 14px;\n  background-color: @mantle;\n  padding: 2px 2px;\n}\n\n#custom-powermenu {\n  color: @text;\n  font-size: 14px;\n  background-color: @mantle;\n  padding: 2px 2px;\n}\n\n#custom-paddc,\n#custom-paddc:hover,\n#custom-cpuinfo,\n#custom-cpuinfo:hover,\n#cpu {\n  background-color: @mantle;\n}\n\n#idle_inhibitor.activated {\n  color: @red;\n}\n","recorded":"2025-01-11 13:57:04.646826093","filePath":"null","pinned":false},{"value":"@import \"mocha.css\";\n\n/* ================================ */\n/*            Common CSS            */\n/* ================================ */\n* {\n  font-family: \"JetBrainsMono Nerd Font\";\n  font-size: 11pt;\n  font-weight: bold;\n  padding: 0;\n  border-radius: 0;\n  min-height: 0;\n  margin: 0;\n  border: none;\n  text-shadow: none;\n  transition: none;\n  box-shadow: none;\n}\n\n/* The whole window */\nwindow#waybar {\n  background: var(--mantle);\n  color: var(--text);\n  padding: 0px 5px;\n  margin: 0;\n  border-radius: 15px;\n}\n\n.modules-left {\n  padding-left: 5px;\n}\n\n.modules-right {\n  padding-right: 5px;\n}\n\n/* Module styling */\n#custom-rofi,\n#workspaces button,\n#workspaces button:hover,\n#workspaces button.visible,\n#workspaces button.visible:hover,\n#workspaces button.active,\n#workspaces button.active:hover,\n#workspaces button.urgent,\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock {\n  font-family: JetBrainsMono Nerd Font Propo;\n  font-size: 14px;\n  font-weight: bold;\n  color: var(--subtext0);\n  background: var(--base);\n  border-radius: 2px;\n}\n\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock {\n  padding-right: 4px;\n  margin: 5px 0px;\n}\n\n#custom-rofi {\n  background: var(--mantle);\n  padding: 0 6px;\n  margin: 5px 0px;\n}\n\n/* Workspaces module */\n#workspaces {\n  margin: 0px;\n}\n\n#workspaces button {\n  color: var(--text);\n  background: var(--surface1);\n  min-width: 25px;\n  padding: 0 4px;\n  margin: 5px 3px;\n}\n\n#workspaces button:hover {\n  background: var(--surface1);\n  border: 2px solid var(--mauve);\n  border-radius: 12px;\n}\n\n#workspaces button.visible {\n  border: 2px solid var(--green);\n  border-radius: 12px;\n  background: var(--surface1);\n}\n\n#workspaces button.visible:hover {\n  border: 2px solid var(--green);\n  border-radius: 12px;\n  background: var(--surface1);\n}\n\n#workspaces button.active {\n  border: 2px solid var(--green);\n  border-radius: 12px;\n  background: var(--surface1);\n}\n\n#workspaces button.active:hover {\n  border: 2px solid var(--green);\n  border-radius: 12px;\n  background: var(--surface1);\n}\n\n#workspaces button.urgent {\n  border: 2px solid var(--red);\n  border-radius: 12px;\n  background: var(--flamingo);\n}\n\n/* Window */\n#window {\n  color: var(--subtext1);\n  background: var(--mantle);\n}\n\n/* Tray */\n#tray {\n  background: var(--mantle);\n}\n\n/* Disk */\n#disk {\n  color: var(--peach);\n  border: 2px solid var(--peach);\n}\n\n/* CPU */\n#custom-cpu {\n  color: var(--yellow);\n  border: 2px solid var(--yellow);\n}\n\n/* Temperature */\n#temperature {\n  color: var(--yellow);\n  border: 2px solid var(--yellow);\n}\n\n#temperature.critical {\n  color: var(--red);\n  border: 2px solid var(--red);\n}\n\n/* Backlight */\n#custom-backlight,\n#backlight {\n  color: var(--peach);\n  background: var(--mantle);\n}\n\n/* Memory */\n#custom-memory {\n  color: var(--blue);\n  border: 2px solid var(--blue);\n}\n\n/* PulseAudio */\n#pulseaudio {\n  color: var(--subtext0);\n  background: var(--mantle);\n}\n\n#pulseaudio.muted {\n  color: var(--red);\n  background: var(--mantle);\n}\n\n/* Battery */\n#battery {\n  color: var(--text);\n  background: var(--mantle);\n}\n\n#battery.critical {\n  color: var(--red);\n  background: var(--mantle);\n}\n\n#battery.warning {\n  color: var(--yellow);\n  background: var(--mantle);\n}\n\n/* Clock */\n#clock.time {\n  color: var(--text);\n  background: var(--mantle);\n}\n\n#clock.date {\n  color: var(--blue);\n  background: var(--mantle);\n}\n\n#mpris {\n  color: var(--crust);\n  border: 2px solid var(--mantle);\n  border-radius: 21px;\n  background: var(--text);\n  padding: 5px 5px;\n  margin: 1px 1px; \n}\n\n#custom-notification {\n  color: var(--text);\n  font-size: 14px;\n  background: var(--mantle);\n  padding: 2px 2px;\n}\n\n#custom-powermenu {\n  color: var(--text);\n  font-size: 14px;\n  background: var(--mantle);\n  padding: 2px 2px;\n}\n\n#custom-paddc,\n#custom-paddc:hover,\n#custom-cpuinfo,\n#custom-cpuinfo:hover,\n#cpu {\n  background: var(--mantle);\n}\n\n#idle_inhibitor.activated {\n  color: var(--red);\n}\n","recorded":"2025-01-11 13:51:19.837343027","filePath":"null","pinned":false},{"value":"@import \"mocha.css\";\n\n/* ================================ */\n/*            Common CSS            */\n/* ================================ */\n* {\n  font-family: \"JetBrainsMono Nerd Font\";\n  font-size: 11pt;\n  font-weight: bold;\n  padding: 0;\n  border-radius: 0;\n  min-height: 0;\n  margin: 0;\n  border: none;\n  text-shadow: none;\n  transition: none;\n  box-shadow: none;\n  color: @text;\n}\n\n/* The whole window */\nwindow#waybar {\n  background-color: shade(@base, 0.9);\n  border: 2px solid alpha(@crust, 0.3);\n  padding: 0px 5px;\n  margin: 0;\n  border-radius: 15px;\n}\n\n.modules-left {\n  padding-left: 5px;\n}\n\n.modules-right {\n  padding-right: 5px;\n}\n\n/* Module styling */\n#custom-rofi,\n#workspaces button,\n#workspaces button:hover,\n#workspaces button.visible,\n#workspaces button.visible:hover,\n#workspaces button.active,\n#workspaces button.active:hover,\n#workspaces button.urgent,\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock {\n  font-family: JetBrainsMono Nerd Font Propo;\n  font-size: 14px;\n  font-weight: bold;\n  color: @subtext0;\n  background-color: @base;\n  border-radius: 2px;\n}\n\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock {\n  padding-right: 4px;\n  margin: 5px 0px;\n}\n\n#custom-rofi {\n  background-color: shade(@mantle, 0.9);\n  padding: 0 6px;\n  margin: 5px 0px;\n}\n\n/* Workspaces module */\n#workspaces {\n  margin: 0px;\n}\n\n#workspaces button {\n  color: @text;\n  background-color: @surface1;\n  min-width: 25px;\n  padding: 0 4px;\n  margin: 5px 3px;\n}\n\n#workspaces button:hover {\n  background-color: shade(@surface1, 1.1);\n  border: 2px solid @mauve;\n  border-radius: 12px;\n}\n\n#workspaces button.visible {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: @surface1;\n}\n\n#workspaces button.visible:hover {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: shade(@surface1, 1.1);\n}\n\n#workspaces button.active {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: @surface1;\n}\n\n#workspaces button.active:hover {\n  border: 2px solid @green;\n  border-radius: 12px;\n  background-color: shade(@surface1, 1.1);\n}\n\n#workspaces button.urgent {\n  border: 2px solid @red;\n  border-radius: 12px;\n  background-color: @flamingo;\n}\n\n/* Window */\n#window {\n  color: @subtext1;\n  background-color: @mantle;\n}\n\n/* Tray */\n#tray {\n  background-color: @mantle;\n}\n\n/* Disk */\n#disk {\n  color: @peach;\n  border: 2px solid @peach;\n}\n\n/* CPU */\n#custom-cpu {\n  color: @yellow;\n  border: 2px solid @yellow;\n}\n\n/* Temperature */\n#temperature {\n  color: @yellow;\n  border: 2px solid @yellow;\n}\n\n#temperature.critical {\n  color: @red;\n  border: 2px solid @red;\n}\n\n/* Backlight */\n#custom-backlight,\n#backlight {\n  color: @peach;\n  background-color: @mantle;\n}\n\n/* Memory */\n#custom-memory {\n  color: @blue;\n  border: 2px solid @blue;\n}\n\n/* PulseAudio */\n#pulseaudio {\n  color: @subtext0;\n  background-color: @mantle;\n}\n\n#pulseaudio.muted {\n  color: @red;\n  background-color: @mantle;\n}\n\n/* Battery */\n#battery {\n  color: @text;\n  background-color: @mantle;\n}\n\n#battery.critical {\n  color: @red;\n  background-color: @mantle;\n}\n\n#battery.warning {\n  color: @yellow;\n  background-color: @mantle;\n}\n\n/* Clock */\n#clock.time {\n  color: @text;\n  background-color: @mantle;\n}\n\n#clock.date {\n  color: @blue;\n  background-color: @mantle;\n}\n\n#mpris {\n  color: @crust;\n  border: 2px solid @mantle;\n  border-radius: 21px;\n  background-color: @text;\n  padding: 5px 5px;\n  margin: 1px 1px; \n}\n\n#custom-notification {\n  color: @text;\n  font-size: 14px;\n  background-color: @mantle;\n  padding: 2px 2px;\n}\n\n#custom-powermenu {\n  color: @text;\n  font-size: 14px;\n  background-color: @mantle;\n  padding: 2px 2px;\n}\n\n#custom-paddc,\n#custom-paddc:hover,\n#custom-cpuinfo,\n#custom-cpuinfo:hover,\n#cpu {\n  background-color: @mantle;\n}\n\n#idle_inhibitor.activated {\n  color: @red;\n}\n","recorded":"2025-01-11 13:51:15.567684412","filePath":"null","pinned":false},{"value":"Usage\nDownload the file with your desired flavor e.g. mocha.css (to be found in the release or after cloning the repository)\nCopy it into your waybar config e.g. ~/.config/waybar/\nInclude the file at the top of your style.css\n\n@import \"\u003cflavor\u003e.css\";\n\nUse the colors in your Waybar style.css. Waybar uses GTK3 CSS.\n\n* {\n  /* reference the color by using @color-name */\n  color: @text;\n}\n\nwindow#waybar {\n  /* you can also GTK3 CSS functions! */\n  background-color: shade(@base, 0.9);\n  border: 2px solid alpha(@crust, 0.3);\n}","recorded":"2025-01-11 13:50:08.520119458","filePath":"null","pinned":false},{"value":"/* ================================ */\n/*            Common CSS            */\n/* ================================ */\n@import \"mocha.css\";\n* {\n  /* `otf-font-awesome` is required to be installed for icons */\n  font-family: \"JetBrainsMono Nerd Font\";\n  font-size: 11pt;\n  font-weight: bold;\n  padding: 0;\n  border-radius: 0;\n  min-height: 0;\n  margin: 0;\n  border: none;\n  text-shadow: none;\n  transition: none;\n  box-shadow: none;\n}\n\n/* the whole window */\nwindow#waybar {\n  background: #3c3835;\n  color: #fff4d2;\n  padding: 0px 5px;\n  margin: 0;\n  border-radius: 15px;\n}\n\n.modules-left {\n  padding-left: 5px;\n}\n\n.modules-right {\n  padding-right: 5px;\n}\n\n#custom-rofi,\n#workspaces button,\n#workspaces button:hover,\n#workspaces button.visible,\n#workspaces button.visible:hover,\n#workspaces button.active,\n#workspaces button.active:hover,\n#workspaces button.urgent,\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock {\n  font-family: JetBrainsMono Nerd Font Propo;\n  font-size: 14px;\n  font-weight: bold;\n  color: #202020;\n  background: #202020;\n  border-radius: 2px;\n}\n\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock {\n  padding-right: 4px;\n  margin: 5px 0px;\n}\n\n#custom-rofi {\n  /* border: 2px solid #458588; */\n  /* border-radius: 5px; */\n  background: #3c3835;\n  padding: 0 6px;\n  margin: 5px 0px;\n}\n\n/* ================================ */\n/*       workspaces module          */\n/* ================================ */\n#workspaces {\n  margin: 0px;\n}\n\n#workspaces button {\n  color: #fff4d2;\n  background: #3c3835;\n  /* border: 2px solid #fff4d2; */\n  min-width: 25px;\n  padding: 0 4px;\n  margin: 5px 3px;\n}\n\n#workspaces button:hover {\n  background: #3c3835;\n  border: 2px solid #b16286;\n  border-radius: 12px;\n}\n\n#workspaces button.visible {\n  border: 2px solid #689d6a;\n  border-radius: 12px;\n  background: #3c3835;\n}\n\n#workspaces button.visible:hover {\n  border: 2px solid #689d6a;\n  border-radius: 12px;\n  background: #3c3835;\n}\n\n#workspaces button.active {\n  border: 2px solid #689d6a;\n  border-radius: 12px;\n  background: #3c3835;\n}\n\n#workspaces button.active:hover {\n  border: 2px solid #689d6a;\n  border-radius: 12px;\n  background: #3c3835;\n}\n\n#workspaces button.urgent {\n  border: 2px solid #cc241d;\n  border-radius: 12px;\n  background: #ea6962;\n}\n\n/* ================================ */\n/*            window                 */\n/* ================================ */\n\n#window {\n  color: #a89884;\n  background: #3c3835;\n  /* border: 2px solid #d3869b; */\n}\n\n/* ================================ */\n/*            tray                 */\n/* ================================ */\n\n#tray {\n  /* padding: 0 6px; */\n  background: #3c3835;\n}\n\n/* ================================ */\n/*            disk                 */\n/* ================================ */\n\n#disk {\n  color: #ea6962;\n  border: 2px solid #ea6962;\n}\n\n/* ================================ */\n/*            cpu                  */\n/* ================================ */\n#custom-cpu {\n  color: #e78a4e;\n  border: 2px solid #e78a4e;\n}\n\n/* ================================ */\n/*            temp                  */\n/* ================================ */\n#temperature {\n  color: #d8a657;\n  border: 2px solid #d8a657;\n}\n\n#temperature.critical {\n  color: #cc241d;\n  border: 2px solid #cc241d;\n}\n\n/* ================================ */\n/*            backlight             */\n/* ================================ */\n#custom-backlight {\n  color: #f6c657;\n  background: #3c3835;\n}\n\n#backlight {\n  color: #f6c657;\n  background: #3c3835;\n}\n\n/* ================================ */\n/*            memory                */\n/* ================================ */\n#custom-memory {\n  color: #458588;\n  border: 2px solid #458588;\n}\n\n/* ================================ */\n/*         pulseaudio               */\n/* ================================ */\n#pulseaudio {\n  /* color: #fbf1c7; */\n  color: #9D8F99;\n  background: #3c3835;\n}\n\n#pulseaudio.muted {\n  color: #ea6962;\n  background: #3c3835;\n}\n\n/* ================================ */\n/*            battery               */\n/* ================================ */\n#battery {\n  color: #fbf1c7;\n  background: #3c3835;\n}\n\n#battery.critical {\n  color: #cc241d;\n  background: #3c3835;\n}\n\n#battery.warning {\n  color: #e78a4e;\n  background: #3c3835;\n}\n/* ================================ */\n/*            clock                 */\n/* ================================ */\n#clock.time {\n  color: #fbf1c7;\n  background: #3c3835;\n}\n\n#clock.date {\n  color: #91CEEC;\n  background: #3c3835;\n}\n\n#mpris {\n  color: #282828;\n  border: 2px solid #3c3835;\n  border-radius: 21px;\n  background: #fbf1c7;\n  padding: 5px 5px;\n  margin: 1px 1px; \n}\n\n#custom-notification {\n  color: #fbf1c7;\n  font-size: 14px;\n  background: #3c3835;\n  padding: 2px 2px;\n}\n#custom-powermenu {\n  color: #fbf1c7;\n  font-size: 14px;\n  background: #3c3835;\n  padding: 2px 2px;\n}\n\n#custom-paddc {\n  background: #3c3835;\n}\n\n#custom-paddc:hover {\n  background: #3c3835;\n}\n\n#custom-cpuinfo {\n  background: #3c3835;\n}\n\n#custom-cpuinfo:hover {\n  background: #3c3835;\n}\n\n#cpu {\n  background: #3c3835;\n}\n\n#idle_inhibitor.activated {\n  color: #cc241d;\n}\n\n#custom-powermenu {\n  color: rgb(242, 143, 173);\n}\n","recorded":"2025-01-11 13:49:36.958280024","filePath":"null","pinned":false},{"value":"@import \"mocha.css\";\n\n/* ================================ */\n/*            Common CSS            */\n/* ================================ */\n* {\n  font-family: \"JetBrainsMono Nerd Font\";\n  font-size: 11pt;\n  font-weight: bold;\n  padding: 0;\n  border-radius: 0;\n  min-height: 0;\n  margin: 0;\n  border: none;\n  text-shadow: none;\n  transition: none;\n  box-shadow: none;\n}\n\n/* The whole window */\nwindow#waybar {\n  background: var(--mantle);\n  color: var(--text);\n  padding: 0px 5px;\n  margin: 0;\n  border-radius: 15px;\n}\n\n.modules-left {\n  padding-left: 5px;\n}\n\n.modules-right {\n  padding-right: 5px;\n}\n\n/* Module styling */\n#custom-rofi,\n#workspaces button,\n#workspaces button:hover,\n#workspaces button.visible,\n#workspaces button.visible:hover,\n#workspaces button.active,\n#workspaces button.active:hover,\n#workspaces button.urgent,\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock {\n  font-family: JetBrainsMono Nerd Font Propo;\n  font-size: 14px;\n  font-weight: bold;\n  color: var(--subtext0);\n  background: var(--base);\n  border-radius: 2px;\n}\n\n#window,\n#tray,\n#disk,\n#custom-cpu,\n#temperature,\n#temperature.critical,\n#backlight,\n#custom-memory,\n#pulseaudio,\n#pulseaudio.muted,\n#battery,\n#battery.critical,\n#battery.warning,\n#clock {\n  padding-right: 4px;\n  margin: 5px 0px;\n}\n\n#custom-rofi {\n  background: var(--mantle);\n  padding: 0 6px;\n  margin: 5px 0px;\n}\n\n/* Workspaces module */\n#workspaces {\n  margin: 0px;\n}\n\n#workspaces button {\n  color: var(--text);\n  background: var(--surface1);\n  min-width: 25px;\n  padding: 0 4px;\n  margin: 5px 3px;\n}\n\n#workspaces button:hover {\n  background: var(--surface1);\n  border: 2px solid var(--mauve);\n  border-radius: 12px;\n}\n\n#workspaces button.visible {\n  border: 2px solid var(--green);\n  border-radius: 12px;\n  background: var(--surface1);\n}\n\n#workspaces button.visible:hover {\n  border: 2px solid var(--green);\n  border-radius: 12px;\n  background: var(--surface1);\n}\n\n#workspaces button.active {\n  border: 2px solid var(--green);\n  border-radius: 12px;\n  background: var(--surface1);\n}\n\n#workspaces button.active:hover {\n  border: 2px solid var(--green);\n  border-radius: 12px;\n  background: var(--surface1);\n}\n\n#workspaces button.urgent {\n  border: 2px solid var(--red);\n  border-radius: 12px;\n  background: var(--flamingo);\n}\n\n/* Window */\n#window {\n  color: var(--subtext1);\n  background: var(--mantle);\n}\n\n/* Tray */\n#tray {\n  background: var(--mantle);\n}\n\n/* Disk */\n#disk {\n  color: var(--peach);\n  border: 2px solid var(--peach);\n}\n\n/* CPU */\n#custom-cpu {\n  color: var(--yellow);\n  border: 2px solid var(--yellow);\n}\n\n/* Temperature */\n#temperature {\n  color: var(--yellow);\n  border: 2px solid var(--yellow);\n}\n\n#temperature.critical {\n  color: var(--red);\n  border: 2px solid var(--red);\n}\n\n/* Backlight */\n#custom-backlight,\n#backlight {\n  color: var(--peach);\n  background: var(--mantle);\n}\n\n/* Memory */\n#custom-memory {\n  color: var(--blue);\n  border: 2px solid var(--blue);\n}\n\n/* PulseAudio */\n#pulseaudio {\n  color: var(--subtext0);\n  background: var(--mantle);\n}\n\n#pulseaudio.muted {\n  color: var(--red);\n  background: var(--mantle);\n}\n\n/* Battery */\n#battery {\n  color: var(--text);\n  background: var(--mantle);\n}\n\n#battery.critical {\n  color: var(--red);\n  background: var(--mantle);\n}\n\n#battery.warning {\n  color: var(--yellow);\n  background: var(--mantle);\n}\n\n/* Clock */\n#clock.time {\n  color: var(--text);\n  background: var(--mantle);\n}\n\n#clock.date {\n  color: var(--blue);\n  background: var(--mantle);\n}\n\n#mpris {\n  color: var(--crust);\n  border: 2px solid var(--mantle);\n  border-radius: 21px;\n  background: var(--text);\n  padding: 5px 5px;\n  margin: 1px 1px; \n}\n\n#custom-notification {\n  color: var(--text);\n  font-size: 14px;\n  background: var(--mantle);\n  padding: 2px 2px;\n}\n\n#custom-powermenu {\n  color: var(--text);\n  font-size: 14px;\n  background: var(--mantle);\n  padding: 2px 2px;\n}\n\n#custom-paddc,\n#custom-paddc:hover,\n#custom-cpuinfo,\n#custom-cpuinfo:hover,\n#cpu {\n  background: var(--mantle);\n}\n\n#idle_inhibitor.activated {\n  color: var(--red);\n}","recorded":"2025-01-11 13:49:34.619137047","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/waybar/.config/waybar/style.css","recorded":"2025-01-11 13:48:59.193053675","filePath":"null","pinned":false},{"value":"  color: @text\n","recorded":"2025-01-11 13:46:49.428654989","filePath":"null","pinned":false},{"value":"@import \"\u003cflavor\u003e.css\";","recorded":"2025-01-11 13:46:05.723971526","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/mocha.css","recorded":"2025-01-11 13:45:46.705551187","filePath":"null","pinned":false},{"value":"#custom-notification {\n  color: #fbf1c7;\n  font-size: 14px;\n  background: #3c3835;\n  padding: 2px 2px;\n}","recorded":"2025-01-11 13:32:21.381495471","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/waybar/.config/waybar_old/kernelinfo.sh","recorded":"2025-01-11 13:31:28.169732901","filePath":"null","pinned":false},{"value":"    \"on-click-right\": \"~/.config/rofi/powermenu/type-4/powermenu.sh\",\n","recorded":"2025-01-11 13:30:26.461700475","filePath":"null","pinned":false},{"value":"\t\t\"on-click\": \"~/.config/rofi/launchers/type-7/launcher.sh\",\n","recorded":"2025-01-11 13:30:25.976024053","filePath":"null","pinned":false},{"value":"    \"tooltip\" : false\n","recorded":"2025-01-11 13:30:19.573853700","filePath":"null","pinned":false},{"value":"\"exec\": \"~/.config/waybar/kernelinfo.sh\",\n        \"return-type\": \"json\",\n        \"tooltip\": true,\n    \"on-click\": \"~/.config/rofi/launchers/type-7/launcher.sh\",\n        \"on-click-right\": \"kitty -- bash -c 'sudo pacman -Syu'\"","recorded":"2025-01-11 13:30:05.675737613","filePath":"null","pinned":false},{"value":"  \"custom/powermenu\": {\n    \"format\": \"\",\n    \"on-click\": \"~/.config/rofi/powermenu/type-4/powermenu.sh\",\n    \"tooltip\": false\n  },","recorded":"2025-01-11 13:29:23.631111139","filePath":"null","pinned":false},{"value":"exec-once = swaync \u0026\n","recorded":"2025-01-11 13:28:02.239843150","filePath":"null","pinned":false},{"value":"exec-once = waybar \u0026\n","recorded":"2025-01-11 13:26:24.828279846","filePath":"null","pinned":false},{"value":"exec-once = ~/.config/hypr/start.sh \u0026\n","recorded":"2025-01-11 13:26:00.619504139","filePath":"null","pinned":false},{"value":"sudo pacman -S swaync","recorded":"2025-01-11 13:25:23.025934920","filePath":"null","pinned":false},{"value":"#91CEEC","recorded":"2025-01-11 13:17:59.884358480","filePath":"null","pinned":false},{"value":"#1E1E2E","recorded":"2025-01-11 13:17:35.437897729","filePath":"null","pinned":false},{"value":"\u003cspan size='9pt'","recorded":"2025-01-11 13:09:27.769923090","filePath":"null","pinned":false},{"value":"        \"America/Montevideo\",\n","recorded":"2025-01-11 13:07:22.719337064","filePath":"null","pinned":false},{"value":"        \"Etc/UTC\",\n","recorded":"2025-01-11 13:07:20.926581844","filePath":"null","pinned":false},{"value":"        \"Asia/Tokyo\"\n","recorded":"2025-01-11 13:07:08.793914573","filePath":"null","pinned":false},{"value":"\"timezones\": [\n        \"Etc/UTC\",\n        \"America/New_York\",\n        \"America/Montevideo\",\n        \"America/Los_Angeles\",\n        \"Asia/Tokyo\"\n    ]","recorded":"2025-01-11 13:06:51.047586891","filePath":"null","pinned":false},{"value":"\u003cspan color='#8ec07c' \u003e󰃭 \u003c/span\u003e","recorded":"2025-01-11 13:05:06.972206945","filePath":"null","pinned":false},{"value":"\u003cspan color='#cc241d' \u003e󱑂 \u003c/span\u003e","recorded":"2025-01-11 13:05:06.942456421","filePath":"null","pinned":false},{"value":"\u003cspan color='#8ec07c' \u003e󰃭 \u003c/span\u003e{:%a %d %b}","recorded":"2025-01-11 13:04:09.152572122","filePath":"null","pinned":false},{"value":"\u003cspan color='#cc241d' \u003e󱑂 \u003c/span\u003e{:%I:%M %p}","recorded":"2025-01-11 13:03:57.539433639","filePath":"null","pinned":false},{"value":"{:%H:%M}  ","recorded":"2025-01-11 13:03:57.492256298","filePath":"null","pinned":false},{"value":"    \"clock\": {\n        \"format\": \"{:%H:%M}  \",\n        \"format-alt\": \"{:%A, %B %d, %Y (%R)}  \",\n        \"tooltip-format\": \"\u003ctt\u003e\u003csmall\u003e{calendar}\u003c/small\u003e\u003c/tt\u003e\",\n        \"calendar\": {\n                    \"mode\"          : \"year\",\n                    \"mode-mon-col\"  : 3,\n                    \"weeks-pos\"     : \"right\",\n                    \"on-scroll\"     : 1,\n                    \"format\": {\n                              \"months\":     \"\u003cspan color='#ffead3'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\",\n                              \"days\":       \"\u003cspan color='#ecc6d9'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\",\n                              \"weeks\":      \"\u003cspan color='#99ffdd'\u003e\u003cb\u003eW{}\u003c/b\u003e\u003c/span\u003e\",\n                              \"weekdays\":   \"\u003cspan color='#ffcc66'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\",\n                              \"today\":      \"\u003cspan color='#ff6699'\u003e\u003cb\u003e\u003cu\u003e{}\u003c/u\u003e\u003c/b\u003e\u003c/span\u003e\"\n                              }\n                    },\n        \"actions\":  {\n                    \"on-click-right\": \"mode\",\n                    \"on-scroll-up\": \"tz_up\",\n                    \"on-scroll-down\": \"tz_down\",\n                    \"on-scroll-up\": \"shift_up\",\n                    \"on-scroll-down\": \"shift_down\"\n                    }\n    },","recorded":"2025-01-11 13:01:57.186784964","filePath":"null","pinned":false},{"value":"/sys/class/power_supply/","recorded":"2025-01-11 12:59:00.020811362","filePath":"null","pinned":false},{"value":"{health}","recorded":"2025-01-11 12:56:02.686093880","filePath":"null","pinned":false},{"value":"{cycles}","recorded":"2025-01-11 12:55:35.215745383","filePath":"null","pinned":false},{"value":"{power}","recorded":"2025-01-11 12:54:56.437806347","filePath":"null","pinned":false},{"value":"{capacity}","recorded":"2025-01-11 12:54:30.622508171","filePath":"null","pinned":false},{"value":"\"battery\",\n    \"custom/paddc\",\n    \"custom/notification\",","recorded":"2025-01-11 12:52:50.459820951","filePath":"null","pinned":false},{"value":"󰂰 ","recorded":"2025-01-11 12:51:58.499309260","filePath":"null","pinned":false},{"value":"{device_alias}","recorded":"2025-01-11 12:51:15.682510777","filePath":"null","pinned":false},{"value":"\t\t\"format\": \"\u003cspan color='#fbf1c7' \u003e󰮯\u003c/span\u003e\",\n","recorded":"2025-01-11 12:50:56.597664459","filePath":"null","pinned":false},{"value":"    \"tooltip-format\": \n      \"{num_connections} connected\",\n    \"tooltip-format-disabled\": \n      \"Bluetooth Disabled\",\n    \"tooltip-format-connected\": \n      \"{num_connections} connected\\n{device_enumerate}\",\n    \"tooltip-format-enumerate-connected\": \n      \"{device_alias}\",\n    \"tooltip-format-enumerate-connected-battery\": \n      \"{device_alias}: {device_battery_percentage}%\",","recorded":"2025-01-11 12:50:56.575406549","filePath":"null","pinned":false},{"value":"\"tooltip-format\": \n      \"{controller_alias}\\n{num_connections} connected\",\n    \"tooltip-format-connected\": \n      \"{controller_alias}\\n{num_connections} connected\\n\\n{device_enumerate}\",\n    \"tooltip-format-enumerate-connected\": \n      \"{device_alias}\",\n    \"tooltip-format-enumerate-connected-battery\": \n      \"{device_alias}\\t{icon} {device_battery_percentage}%\",","recorded":"2025-01-11 12:50:50.389508116","filePath":"null","pinned":false},{"value":"\"format-icons\": [\"󰥇\", \"󰤾\", \"󰤿\", \"󰥀\", \"󰥁\", \"󰥂\", \"󰥃\", \"󰥄\", \"󰥅\", \"󰥆\", \"󰥈\"],","recorded":"2025-01-11 12:50:35.114052210","filePath":"null","pinned":false},{"value":"{num_connections}","recorded":"2025-01-11 12:50:12.974516593","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/style-1.rasi\n/home/karna/Downloads/style-2.rasi\n/home/karna/Downloads/style-3.rasi","recorded":"2025-01-11 12:47:38.451093707","filePath":"null","pinned":false},{"value":"\"user\": {\n        \"format\": \"{user} (up {work_d} days ↑)\",\n        \"interval\": 60,\n        \"height\": 30,\n        \"width\": 30,\n        \"icon\": true,\n}","recorded":"2025-01-11 12:30:29.762265701","filePath":"null","pinned":false},{"value":"[2025-01-11 12:29:22.361] [info] Hyprland IPC starting","recorded":"2025-01-11 12:29:33.061353397","filePath":"null","pinned":false},{"value":"\"privacy\": {\n\t\"icon-spacing\": 4,\n\t\"icon-size\": 18,\n\t\"transition-duration\": 250,\n\t\"modules\": [\n\t\t{\n\t\t\t\"type\": \"screenshare\",\n\t\t\t\"tooltip\": true,\n\t\t\t\"tooltip-icon-size\": 24\n\t\t},\n\t\t{\n\t\t\t\"type\": \"audio-out\",\n\t\t\t\"tooltip\": true,\n\t\t\t\"tooltip-icon-size\": 24\n\t\t},\n\t\t{\n\t\t\t\"type\": \"audio-in\",\n\t\t\t\"tooltip\": true,\n\t\t\t\"tooltip-icon-size\": 24\n\t\t}\n\t]\n},","recorded":"2025-01-11 12:29:04.663729168","filePath":"null","pinned":false},{"value":" ","recorded":"2025-01-11 12:26:58.306848917","filePath":"null","pinned":false},{"value":"fbf1c7","recorded":"2025-01-11 12:26:44.827974039","filePath":"null","pinned":false},{"value":"","recorded":"2025-01-11 12:25:46.492609722","filePath":"null","pinned":false},{"value":"󰈈","recorded":"2025-01-11 12:24:25.376970865","filePath":"null","pinned":false},{"value":"󰈉","recorded":"2025-01-11 12:24:00.104692264","filePath":"null","pinned":false},{"value":"","recorded":"2025-01-11 12:23:42.850086087","filePath":"null","pinned":false},{"value":"#cc241d","recorded":"2025-01-11 12:23:17.045790052","filePath":"null","pinned":false},{"value":"#3c3835","recorded":"2025-01-11 12:22:33.724629233","filePath":"null","pinned":false},{"value":"\"idle_inhibitor\": {\n    \"format\": \"{icon}\",\n    \"format-icons\": {\n      \"activated\": \"\",\n      \"deactivated\": \"\"\n    },\n    \"tooltip\": true,\n    \"tooltip-format-activated\": \"Presentation Mode\",\n    \"tooltip-format-deactivated\": \"Idle Mode\",\n    \"start-activated\": false,\n    \"timeout\": 600\n  },\n","recorded":"2025-01-11 12:20:01.336809255","filePath":"null","pinned":false},{"value":"","recorded":"2025-01-11 12:17:02.167590664","filePath":"null","pinned":false},{"value":"\"format-paused\": \"DEFAULT: {status_icon} \u003ci\u003e{dynamic}\u003c/i\u003e\",","recorded":"2025-01-11 12:16:43.912800313","filePath":"null","pinned":false},{"value":"{player_icon}","recorded":"2025-01-11 12:16:18.409449045","filePath":"null","pinned":false},{"value":"󰟎","recorded":"2025-01-11 12:13:49.960751040","filePath":"null","pinned":false},{"value":"󰋋","recorded":"2025-01-11 12:12:52.851183834","filePath":"null","pinned":false},{"value":"#fbf1c7","recorded":"2025-01-11 12:11:23.121378133","filePath":"null","pinned":false},{"value":"#b16286","recorded":"2025-01-11 12:10:15.591557982","filePath":"null","pinned":false},{"value":"\u003cspan color='#b16286' \u003e","recorded":"2025-01-11 12:08:09.176645980","filePath":"null","pinned":false},{"value":"\u003cspan color='#98971a' \u003e","recorded":"2025-01-11 12:06:46.726687561","filePath":"null","pinned":false},{"value":"\u003cspan color='#cc241d'\u003e󰊠\u003c/span\u003e","recorded":"2025-01-11 12:05:48.625446507","filePath":"null","pinned":false},{"value":"\u003cspan color='#689d6a' \u003e󰊠\u003c/span\u003e","recorded":"2025-01-11 12:05:29.469468801","filePath":"null","pinned":false},{"value":"#689d6a","recorded":"2025-01-11 12:05:06.578665842","filePath":"null","pinned":false},{"value":"\"memory\": {\n  \"interval\":1,\n        \"states\": {\"c\": 90},\n\t    \"format\": \"󰘚 {percentage}%\",\n\t    \"format-c\": \"󰀪 {percentage}%\",\n        \"tooltip\": true,\n        \"tooltip-format\": \"{used:0.1f} GB / {total:0.1f} GB\",\n        \"interval\": 20,\n        // \"min-length\": 7,\n       // \"max-length\": 15,\n\"states\": {\n      \"warning\": 85\n    }\n    },\n\n  \"cpu\": {\n    \"interval\": 1,\n\"format\": \"󰻠 {usage}%\",\n        \"tooltip\": true,\n        \"interval\": 5,\n        \"min-length\": 6,\n        \"max-length\": 10\n  },","recorded":"2025-01-11 12:00:33.749848462","filePath":"null","pinned":false},{"value":"    \"custom/paddc\",\n","recorded":"2025-01-11 11:58:46.676692225","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/pacman-waybar-main/waybar/scripts/cpuinfo.sh","recorded":"2025-01-11 11:58:32.197232541","filePath":"null","pinned":false},{"value":"    \"custom/cpuinfo\": {\n        \"exec\": \"~/.config/waybar/cpuinfo.sh\",\n        \"return-type\": \"json\",\n        \"format\": \"{}\",\n        \"tooltip\": true,\n        \"interval\": 5\n    },","recorded":"2025-01-11 11:57:04.980767250","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/waybar/.config/waybar_old/cpuinfo.sh","recorded":"2025-01-11 11:56:57.773571221","filePath":"null","pinned":false},{"value":"\"custom/paddc\",\n    \"network\",\n","recorded":"2025-01-11 11:54:46.753709950","filePath":"null","pinned":false},{"value":"    \"clock#time\"\n","recorded":"2025-01-11 11:52:55.471342399","filePath":"null","pinned":false},{"value":"    \"format\": \"\u003cspan color='#8ec07c' \u003e󰃭 \u003c/span\u003e{:%a %d %b}\",\n","recorded":"2025-01-11 11:52:26.467234741","filePath":"null","pinned":false},{"value":"","recorded":"2025-01-11 11:52:19.210539321","filePath":"null","pinned":false},{"value":"    \"format\": \"\u003cspan color='#cc241d' \u003e󱑂 \u003c/span\u003e{:%I:%M:%S %p}\",\n","recorded":"2025-01-11 11:52:08.810280699","filePath":"null","pinned":false},{"value":"    \"mpris\",\n","recorded":"2025-01-11 11:50:05.507364426","filePath":"null","pinned":false},{"value":"\"clock#date\",\n    \"custom/paddc\",\n    \"clock#time\"","recorded":"2025-01-11 11:49:10.046802563","filePath":"null","pinned":false},{"value":"  background: rgb(242, 143, 173);\n","recorded":"2025-01-11 11:46:24.071880593","filePath":"null","pinned":false},{"value":" ","recorded":"2025-01-11 11:44:18.793495278","filePath":"null","pinned":false},{"value":",","recorded":"2025-01-11 11:44:17.147043493","filePath":"null","pinned":false},{"value":"\"rewrite\": {\n        \"\": \"\u003cspan foreground='#cba6f7'\u003e \u003c/span\u003e Karna\",\n\n            // terminal\n            \"karna@karna:(.*)\": \"  $1\",\n            \"(.*)karna@karna:~\": \"  Karna@arch\"\n    }","recorded":"2025-01-11 11:44:16.485859108","filePath":"null","pinned":false},{"value":"    // \"custom/paddc\",\n","recorded":"2025-01-11 11:42:43.587457415","filePath":"null","pinned":false},{"value":"\n\n#custom-paddc:hover {\n  background: #000;\n}","recorded":"2025-01-11 11:40:20.200476441","filePath":"null","pinned":false},{"value":"  color: #f6c657;\n","recorded":"2025-01-11 11:39:30.627194602","filePath":"null","pinned":false},{"value":"      \"(.*) - Zen Browser\": \"\u003cspan foreground='#f38ba8'\u003e󰈹 \u003c/span\u003e $1\",\n","recorded":"2025-01-11 11:37:34.899519627","filePath":"null","pinned":false},{"value":"      \"(.*)Zen Browser\": \"\u003cspan foreground='#f38ba8'\u003e󰈹 \u003c/span\u003e Zen Browser\",\n","recorded":"2025-01-11 11:37:34.427342395","filePath":"null","pinned":false},{"value":"\"\": \"\u003cspan foreground='#cba6f7'\u003e \u003c/span\u003e Karna 󰅂 Hyprland\",\n\n            // terminal\n            \"karna@karna:(.*)\": \"  $1\",\n            \"(.*)karna@karna:~\": \"  Karna@arch\",","recorded":"2025-01-11 11:36:49.500400864","filePath":"null","pinned":false},{"value":"\u003cspan foreground= '#458588'\u003e","recorded":"2025-01-11 11:36:29.361309106","filePath":"null","pinned":false},{"value":"\"\": \"\u003cspan foreground= '#458588'\u003e\u003c/span\u003e hyprland\",\n      \"~\": \" terminal\",\n      \"com.mitchellh.ghostty\": \"\u003e\u003e ghostty\",\n      \"zen-beta\": \"\u003e\u003e zen\"","recorded":"2025-01-11 11:36:29.331769835","filePath":"null","pinned":false},{"value":"\"(.*) - Zen Browser\": \"\u003cspan foreground='#f38ba8'\u003e󰈹 \u003c/span\u003e $1\",\n            \"(.*)Zen Browser\": \"\u003cspan foreground='#f38ba8'\u003e󰈹 \u003c/span\u003e Zen Browser\",","recorded":"2025-01-11 11:36:24.242549587","filePath":"null","pinned":false},{"value":"👉 {}","recorded":"2025-01-11 11:34:14.951442442","filePath":"null","pinned":false},{"value":"\"separate-outputs\": true","recorded":"2025-01-11 11:32:39.160617028","filePath":"null","pinned":false},{"value":"󰈹 ","recorded":"2025-01-11 11:28:35.440271812","filePath":"null","pinned":false},{"value":"// terminal\n","recorded":"2025-01-11 11:28:25.512747485","filePath":"null","pinned":false},{"value":"// terminal\n            \"karna@karna:(.*)\": \"  $1\",\n            \"(.*)karna@karna:~\": \"  Karna@arch\",\n","recorded":"2025-01-11 11:28:21.415498209","filePath":"null","pinned":false},{"value":"\"rewrite\": {\n            // desktop\n            \"\": \"\u003cspan foreground='#cba6f7'\u003e \u003c/span\u003e Karna 󰅂 Hyprland\",\n\n            // terminal\n            \"karna@karna:(.*)\": \"  $1\",\n            \"(.*)karna@karna:~\": \"  Karna@arch\",\n\n            // firefox\n            \"(.*) — Mozilla Firefox\": \"\u003cspan foreground='#f38ba8'\u003e󰈹 \u003c/span\u003e $1\",\n            \"(.*)Mozilla Firefox\": \"\u003cspan foreground='#f38ba8'\u003e󰈹 \u003c/span\u003e Firefox\",\n\n            // Zen Browser\n            \"(.*) - Zen Browser\": \"\u003cspan foreground='#f38ba8'\u003e󰈹 \u003c/span\u003e $1\",\n            \"(.*)Zen Browser\": \"\u003cspan foreground='#f38ba8'\u003e󰈹 \u003c/span\u003e Zen Browser\",\n\n            // vscode\n            \"(.*) - Visual Studio Code\": \"\u003cspan foreground='#89b4fa'\u003e󰨞 \u003c/span\u003e $1\",\n            \"(.*)Visual Studio Code\": \"\u003cspan foreground='#89b4fa'\u003e󰨞 \u003c/span\u003e Visual Studio Code\",\n\n            \"(.*) - Kate\": \"\u003cspan foreground='#89b4fa'\u003e󰨞 \u003c/span\u003e $1\",\n            \"(.*)Kate\": \"\u003cspan foreground='#89b4fa'\u003e󰨞 \u003c/span\u003e Kate\",\n\n\n            // spotify\n            \"(.*)Spotify\": \"\u003cspan foreground='#a6e3a1'\u003e \u003c/span\u003e Spotify\",\n            \"(.*)Spotify Premium\": \"\u003cspan foreground='#a6e3a1'\u003e \u003c/span\u003e Spotify Premium\",\n\n            // discord\n            \"Discord\": \"\u003cspan foreground='#89b4fa'\u003e \u003c/span\u003e Discord\",\n            \"(.*)Discord(.*)\": \"\u003cspan foreground='#89b4fa'\u003e \u003c/span\u003e $1Discord$2\",\n\n            \"Ferdium\": \"\u003cspan foreground='#89b4fa'\u003e \u003c/span\u003e Ferdium\",\n            \"(.*)Ferdium(.*)\": \"\u003cspan foreground='#89b4fa'\u003e \u003c/span\u003e $1Ferdium$2\",\n\n            // OBS Studio\n            \"OBS(.*)\": \"\u003cspan foreground='#a6adc8'\u003e󰐌 \u003c/span\u003e OBS Studio\",\n\n            \"(.*) — Github Desktop\": \"\u003cspan foreground='#f38ba8'\u003e  \u003c/span\u003e $1\",\n            \"(.*)Github Desktop\": \"\u003cspan foreground='#f38ba8'\u003e  \u003c/span\u003e Github Desktop\",\n\n            // VLC Media Player\n            \"VLC media player\": \"\u003cspan foreground='#fab387'\u003e󰕼 \u003c/span\u003e VLC Media Player\",\n            \"(.*) - VLC media player\": \"\u003cspan foreground='#fab387'\u003e󰕼 \u003c/span\u003e $1\",\n\n             \"MPV\": \"\u003cspan foreground='#fab387'\u003e󰕼 \u003c/span\u003e MPV\",\n            \"(.*) - MPV\": \"\u003cspan foreground='#fab387'\u003e󰕼 \u003c/span\u003e $1\",\n\n            // Okular PDF Reader\n            \"Okular\": \"\u003cspan foreground='#f38ba8'\u003e󰅂 \u003c/span\u003e Okular\",\n            \"(.*) - Okular\": \"\u003cspan foreground='#f38ba8'\u003e󰅂 \u003c/span\u003e $1\",\n\n            //nvim \n            \"nvim\": \"\u003cspan foreground='#a6adc8'\u003e󰝓 \u003c/span\u003e Neovim\", \n            \"nvim (.*)\": \"\u003cspan foreground='#a6adc8'\u003e󰝓 \u003c/span\u003e $2\",\n\n            // GIMP\n            \"GNU Image Manipulation Program\": \"\u003cspan foreground='#a6adc8'\u003e \u003c/span\u003e GNU Image Manipulation Program\",\n\n            // Godot\n            \"Godot\": \"\u003cspan foreground='#89b4fa'\u003e \u003c/span\u003e Godot Engine\",\n            \"Godot Engine - (.*)\": \"\u003cspan foreground='#89b4fa'\u003e \u003c/span\u003e $1\",\n            \"(.*) - Godot Engine\": \"\u003cspan foreground='#89b4fa'\u003e \u003c/span\u003e $1\",\n            \n            // OnlyOffice\n            \"ONLYOFFICE Desktop Editors\": \"\u003cspan foreground='#f38ba8'\u003e \u003c/span\u003e OnlyOffice Desktop\",\n            \"(.*).docx\": \"\u003cspan foreground='#89b4fa'\u003e \u003c/span\u003e $1.docx\",\n            \"(.*).xlsx\": \"\u003cspan foreground='#a6e3a1'\u003e \u003c/span\u003e $1.xlsx\",\n            \"(.*).pptx\": \"\u003cspan foreground='#fab387'\u003e \u003c/span\u003e $1.pptx\",\n            \"(.*).pdf\": \"\u003cspan foreground='#f38ba8'\u003e \u003c/span\u003e $1.pdf\",\n\n            // file manager\n            \"karna - Thunar\": \"  File Manager\",\n\n            // qView\n            \"sxiv\": \"  sxiv\",\n            \"(.*).jpg\": \"  $1.jpg\",\n            \"(.*).png\": \"  $1.png\",\n            \"(.*).svg\": \"  $1.svg\",\n\n            // security\n            \"Authenticate\": \"  Authenticate\"\n        },","recorded":"2025-01-11 11:26:23.908195846","filePath":"null","pinned":false},{"value":"Zen Browser","recorded":"2025-01-11 11:26:03.941719553","filePath":"null","pinned":false},{"value":"","recorded":"2025-01-11 11:23:12.672495966","filePath":"null","pinned":false},{"value":"\u003cspan color='#fbf1c7' \u003e","recorded":"2025-01-11 11:20:30.562626832","filePath":"null","pinned":false},{"value":"/org/ayatana/NotificationItem/udiskie","recorded":"2025-01-11 11:20:16.648858449","filePath":"null","pinned":false},{"value":"\"format-icons\": {\n            \"headphone\": \"󰋋\",\n            \"default\": [\"󰖀\", \"󰕾\"]\n        },","recorded":"2025-01-11 10:11:07.942837757","filePath":"null","pinned":false},{"value":"font-family: \"JetBrainsMono Nerd Font\";\n  font-size: 11pt;","recorded":"2025-01-11 10:07:51.461861908","filePath":"null","pinned":false},{"value":"#ABE9B3","recorded":"2025-01-11 10:07:51.436203097","filePath":"null","pinned":false},{"value":"#f6c657","recorded":"2025-01-11 10:07:39.075359356","filePath":"null","pinned":false},{"value":"    \"on-click-middle\": \"~/.config/waybar/wallpaper_random.sh \u0026\",\n","recorded":"2025-01-11 10:05:39.471170062","filePath":"null","pinned":false},{"value":"        \"tooltip-format\": \"{:%I:%M %p}\",\n","recorded":"2025-01-11 10:03:09.573335175","filePath":"null","pinned":false},{"value":"    \"tooltip-format\": \"\u003ctt\u003e{calendar}\u003c/tt\u003e\",\n","recorded":"2025-01-11 10:01:31.837085751","filePath":"null","pinned":false},{"value":"\"calendar\": {\n            \"mode\": \"month\",\n            \"mode-mon-col\": 3,\n            \"on-click-right\": \"mode\",\n            \"format\": {\n                \"months\": \"\u003cspan color='#f5e0dc'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\",\n                \"weekdays\": \"\u003cspan color='#f9e2af'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\",\n                \"today\": \"\u003cspan color='#f38ba8'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\"\n            }\n        },\n        \"actions\": {\"on-click-right\": \"mode\"}","recorded":"2025-01-11 10:01:18.891195041","filePath":"null","pinned":false},{"value":"\"exec\": \"~/.config/hypr/scripts/greet.sh\",\n    \"return-type\": \"json\",\n    \"interval\": 60, // Updates every minute\n    \"format\": \"\",\n    \"tooltip\": true,\n        \"on-click-right\": \"~/dotfiles/hypr_wall/changelook\"","recorded":"2025-01-11 09:58:45.132530979","filePath":"null","pinned":false},{"value":"    \"format-icons\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n","recorded":"2025-01-11 09:56:41.377256144","filePath":"null","pinned":false},{"value":"    \"tooltip\": false\n","recorded":"2025-01-11 09:52:49.735183013","filePath":"null","pinned":false},{"value":"        \"tooltip-format\": \"{timeTo}\",\n","recorded":"2025-01-11 09:52:45.726790355","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/pacman-waybar-main/waybar","recorded":"2025-01-11 09:49:53.316738822","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/waybar/.config/waybar","recorded":"2025-01-10 23:14:59.545980024","filePath":"null","pinned":false},{"value":"#custom-backlight {\n  color: #f6c657;\n  background: #3c3835;\n}","recorded":"2025-01-10 23:12:19.831372432","filePath":"null","pinned":false},{"value":"  \"backlight\": {\n    \"device\": \"intel_backlight\",\n    \"on-scroll-up\": \"brightnessctl s 5%+\",\n    \"on-scroll-down\": \"brightnessctl s 5%-\",\n    \"format\": \"{icon} {percent}%\",\n    \"format-icons\": [\"\",\"\",\"\",\"\"],\n        \"tooltip-format\": \"{icon} {percent}% Brightness\",\n    \"on-click-right\": \"~/.config/rofi/applets/bin/brightness.sh\"\n  },","recorded":"2025-01-10 23:11:01.183261628","filePath":"null","pinned":false},{"value":"  \"network\": {\n    \"interval\": 1,\n\"tooltip\": true,\n    \"format-wifi\": \n        \"\u003cspan foreground='#ABE9B3'\u003e {bandwidthDownBytes}\u003c/span\u003e \u003cspan foreground='#ABE9B3'\u003e {bandwidthUpBytes}\u003c/span\u003e\",\n    \"format-ethernet\": \n      \"\u003cspan foreground='#ABE9B3'\u003e {bandwidthDownBytes}\u003c/span\u003e \u003cspan foreground='#ABE9B3'\u003e {bandwidthUpBytes}\u003c/span\u003e\",\n\n    \"tooltip-format\": \n      \"Network: \u003cb\u003e{essid}\u003c/b\u003e\\nSignal strength: \u003cb\u003e{signaldBm}dBm ({signalStrength}%)\u003c/b\u003e\\nFrequency: \u003cb\u003e{frequency}MHz\u003c/b\u003e\\nInterface: \u003cb\u003e{ifname}\u003c/b\u003e\\nIP: \u003cb\u003e{ipaddr}/{cidr}\u003c/b\u003e\\nGateway: \u003cb\u003e{gwaddr}\u003c/b\u003e\\nNetmask: \u003cb\u003e{netmask}\u003c/b\u003e\",\n    \"format-alt\": \"說 {essid}\",\n    \"format-linked\": \"說 {essid} (No IP)\",\n    \"format-disconnected\": \"說 Disconnected\",\n    \"interval\": 2,\n    \"on-click-right\": \"kitty -e nm-applet\"\n  },\n","recorded":"2025-01-10 23:08:53.082260411","filePath":"null","pinned":false},{"value":"swaync          \n[sudo] password for karna: \nwarning: swaync-0.10.1-3 is up to date -- reinstalling\nresolving dependencies...\nlooking for conflicting packages...\n\nPackages (1) swaync-0.10.1-3\n","recorded":"2025-01-10 23:06:21.600954170","filePath":"null","pinned":false},{"value":"swaync","recorded":"2025-01-10 23:06:05.553466534","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/pacman-waybar-main/swaync","recorded":"2025-01-10 23:05:52.017276126","filePath":"null","pinned":false},{"value":"bluetui rofi-lbonn-wayland-git","recorded":"2025-01-10 23:03:36.979795437","filePath":"null","pinned":false},{"value":"so welcome everyone this is um my mastering the curl command line session um and I'm doing this here today August 31 and I'm streaming it live on Twitch so hopefully there's an audience there I'm of course uh as I think you know I'm Daniel stemberg I'm the lead developer of Carl I started the curl project a long time ago and uh I'm here today I work for Wolf SSL I work full-time on Carl uh I'll get back to that a little bit but today I'm primarily going to talk about some things I meant I forgot about this slide of course so if I just want to mention that I work on car full time and that's possible thanks to the me working for Wilson SL we sell support uh commercial support to customers who need and want help with curl so the setup we have today is I'm here I'm going to talk about curl for a long time so basically sit back put your feet up or whatever this is live stream we have a chat room here that's of course not visible um in on screen but this is going to last a while I have a lot of slides here I have a lot of content I want to go through you will see the agenda in a few seconds I'm doing this recorded of course that's why most of you are going to see this recorded after the fact and I just wanted to mention the live audience that sure this is going to go on for a while so take a pause and come back if you feel you have to and you want to and and this is a lot of materials I have never previously presented or or talked about before I've done a lot of new slides for this so uh bear with me if I sort of sometimes might not remember exactly what I was going for and I'm of course going to do I'm going to try to to use the terminal in in several occasions as well you know bring it up and show how to do the command lines live I I will type I do correct command lines and you know with all my fancy typos and everything and this is how I intend to spend my next two and a half hours or something that's because that's my projected time we'll see later if how far off I am and of course again this is recorded but we're doing it live so there's a live chat here it's non-visible but if you're in the chat room feel free to ask questions and I will try to get it into the presentation if I can and if I manage to actually monitor the chat the slides will be available after the fact as well if you prefer to see them there are a lot of a lot of them but you might want to you know follow along later when you re-watch it or whatever so this is where I want us to go today so starting out just some words about the project the coral project what is what is the project what is curl how did you start and everything and so from the ground up I would always talk about internet transfers and at least in my family and my non-nurative friends people don't really know what an internet transfer is I'm going to try to guess get into that before I start talk about command line Basics how the sort of the basic fundamentals of command line Parts when you use Curl pretty much I'm going to show you how to use options how the options are constructed you know options URLs and things like that and then once we have laid the groundwork there how options work we're going to go into some of the more basic functionality and how you use those options to do things upload downloads and all sorts of fun things and one way of sort of when we have covered the basics I will go even deeper into some details around how to do TLS and then options around TLS uh there are a lot of different things you can do there of course and then a similar thing a lot of different proxy options what proxies are how they work and different options around that and then HTTP being maybe well it is the by far most commonly used protocol when you use Curl and I'm going to spend a significant amount of time to talk about how to do coral stuff to play with HTTP and HTTP features really and then by this time everyone is going to be really tired and fed up with me but then I'm going to just mention a few details about FTP because FTP is a protocol that stands out a little bit for some you know Reasons I'm going to get into and that's a fairly short section and then before we all die uh by uh from exhaust or exhaustion I'm going to talk a little bit about curl coming up next the future what's going to possibly happen or not so all of that a lot of stuff a lot of slides um take it easy lean back so the curl project um as you can see in the in the lower right corner here I I insert a little counter here every once in a while so just remind us that where we are in this Journey so the curl project is actually something that started a long time ago right so it back in November 1996 I found this project called HP get it was not written by me it was written by a Brazilian guy called Raphael sagula and he had created this he released his that first version 0.1 in November 11 1996 I found it I used it to to do download counter rates that's that was 160 lines of code C code and that taught me that was really easy to do it really small HTTP client in c h p 1.0 uh I sent back some patches Raphael retired by uh from me my sort of my patches so he said you can take over maintenance of this tool so I started so I became the maintainer continued working on that I added more protocols go for an FTP and in August 1997 we renamed this tool to URL get instead because it wasn't just HTTP anymore it was now gopher and then we added the FTP as well so and then after a long time we added upload support as well and we renamed the project again so in March 1998 we shipped Carl For the First Time by then we called it curl version 4.0 because we kept the version numbering from the previous ones and curl in March 1998 that was 2 400 lines of code 24 command line options two years later we changed a lot of the internals you know remodeled everything so that we could provide the networking stuff as a library instead of you know just the command line tool so now we re most of the stuff turned into this networking library and then we made curl just a small wrapper for accessing lip curl from from a shell really so the name right lots of people don't ask me so what why is called curl but but you know naming is really hard how do you what do you name something what do you call something but yes curl you know the previous version names I mentioned HP get URL get they were sort of references to protocols and getting things and they all eventually get things with URLs so I wanted it to be uh something with URL in the name and then the C could be for a client um I also wanted it to be short so that you could type it easily as you would with all Unix command lines you know command line tools you don't want it to belong because it's tedious to type and I I wanted it to be pronounceable and an easy word to say in many languages in primarily than in Swedish my language and English so curl excellent it's easy to say it's easy to spell it's easy to type and I also like that you can actually so that if you would separate the URL from the C you could also sort of you could say it C URL as it would sort of like the cat command but for a URL so instead of a file it would be a URL pretty much others have done after the fact we also found out some other fun uh ways you could actually maybe spell it out the the acronym curl but those are just you know funny ways to invent new ways to to explain the word Inc the curl project and of course project is a fun thing to call it because a project usually in most other aspects actually have a you know limited time scope too but the curl project is of course an open source project it will never end so we do two primary things in the project we do as I mentioned already the command line tool and the library they do internet transfers as a client so we have a few golden sort of rules that we don't deviate from we only do client-side networking so they're currently because they're always client-side no server side stuff really and there are or about internet transfers they're supposed to be upload or download or both but if they're not strictly upload download that's probably not curl materials and of course it also they should talk about um an endpoint specified as a URL and and then a URL should be a standard or a semi-standard or at least an attempted standard to exist the syntax um yeah I could also mention that of course all the URLs schemes that curl supports they are are all actually of the colon slash style right so hence the color slash for in the logo because that's all the URLs that curl supports they all use colon slash curl and everything we do is open source open source means that everything is there to be used openly shared and distributed by anyone we also make every discussion decision everything held in the open and um we do that to as as much as we can curl is MIT licensed it's not exactly the MIT license because someone at some point decided that he should change the edit the license a little bit I did I don't remember why it was stupid but it's so it's not a word for word MIT license it's actually slightly edited but it's essentially the same content it's short and sweet and this is how it looks if you just um read all the words it's the 200 words or something easy peasy nothing strange the MIT Style license pretty much you can do whatever you want um as long as you have this copyright notice somewhere in your product or documentation or something um it's a very very liberal license the current project we make these projects and it's open source and it means that it is developed by everyone or everyone is encouraged and welcome to change submit bugs and submit features and do anything I'm the only one around in a project who actually works on this full time so a lot of people are helping out for different reasons paid by others in different ways so anyone can provide the changes or proposals there's no paperwork we don't have any you don't have to sign any contracts there's no clas no license agreements um we of course review and test everything that is proposed before we merged and accept them but otherwise anyone can participate there's a small team of people who can accept the much changes it's certainly not just me where I think we're maybe 15 people who are have the right to do it and the ability we do releases of course we have done a lot of releases as I mentioned the first HP Gap came in 1996 the first curl in 1998. so for the last maybe 10 12 years we do releases every eight weeks on Wednesdays actually Wednesdays eight weeks Wednesday eight weeks Wednesday and sometimes we do them sooner when we need to do a patch release but where we have now we're looking forward to do our 250 first release the next time actually on September 13th so we've done it a lot of times we release what's in the master Branch at the time meaning that we don't work on particular features sort of rather we don't wait for features to get merged to do releases we release on the clock and whatever is done then we release and so that is how we how we work really and that's why we also do this calendar-based release so we have this cycle eight week release cycle if you look at the right side um that's the release Wednesday and then we go down because after the release we have a 10-day cooldown period during which we don't merge features we don't rock the boat we might merge bug fixes we might do patch releases and then after 10 days after that release it's a Saturday we open the feature window and we allow a feature with features to get merged for three weeks 21 21 days and then it's Saturday again then we close the feature window we have 25 days of feature freeze and then we do a release and then we start over over and over and over and over and it never ends and this is the schedule we stick to we also don't break existing functionality right so we have if we have shipped features we have shipped options we have shipped something it started to work as some version we keep it working like that we don't break it ever really I I could possibly say that of course there's some asterisks there in in the small print so sometimes it does happen due to bugs or due to other unforeseen circumstances but we really we make the utmost sort of we put in a lot of effort and make make it really this is something we really work hard to live up to everything this is on GitHub we work and so that we go by the GitHub model really so if you want to participate in the in the project you and you've done that with other GitHub projects you know how to do it you submit issues from your problem if we do pull requests you basically go to GitHub you do you Fork the repository and you do your changes and you submit the pull request to ecpc low low friction low bar so basically we do our best to make sure that it is easy to participate and and easy to contribute when you have something and there's a lot of documentation so if you want to learn more I'm going to dig into a lot of things today but you will of course feel that I'm not going through it enough but we have a lot of documentation so of course you can just start with the main page man curl also built into the tool itself curl dash dash manual you can go to the web page with this which is always the latest version of the man page rendered online then so if we have corrected the man page since your version this is the more up-to-date one and then there's this book everything curl which is online that's the that's the image here that's the front of it um that's more than a hundred thousand words in that thing now it's a lot of words a lot of documentation and of course the more um you do curl dash dash help together suggestions of what options to use and if if that is not enough there are of course ways for you to ask for help because of course there's a huge community of people using curl people who know to use Curl and others who are asking for help and we can all help out each other right so we're an old project we do things by mailing lists and we have done that since yeah since the 90s so we primarily have this done the the curl users mailing list Focus to command line tool questions command line tool users uh it's there on lists.txt.sc current users and there's another one called curl Library which is more focused on the library than development debugging you should sort of more architecture and stuff more Source more development and it's also on the same site and of course if you rather go with just disgusting discussing things that's that aren't really bugs but you don't want to go mailing lists you can use the discussion feature on the GitHub project on the GitHub project repository theme and if you want to pay for help because you run this you do this as a part of a business we're here for you to help you as well so just get in contact with mobile SSL and we will help you immediately da so basically curl done this is what the curl project has then accomplished during all this time we support a bus load of stuff that's why you often use that Swiss army knife symbol or toy image of curl because it has so many different toggles and and things that you can levers and things to do and Carl actually literally runs everywhere you can of course use it on Linux and all the links this juice is defaulting windows it's default on Mac you can run it on all those fun bsds all the Legacy systems VMS you cannot on anything I actually have this collection of operating systems where people have mentioned that they use Curl on or ever ran column and it's this amazing set of 92 different operating systems many of them you know we never knew existed as an operating system but it's an amazing number of them and of course all of this as I said it's a lot of people helping out to the the top blue graph plot here shows the number of committers in the project since the beginning soon reaching 1200 committers being someone who has authored code or a part of something that has been merged into git and just counting people who have contributed that number is uh approaching 3 000 soon that also doesn't include people that includes people who have reported bags and so on number of lines on code it's a fascinating growth as you can see in 1998 2000 lines of code and now 160 000 likes of code so 80 times growth roughly in 25 years so so so the project has really then come to this point where we count roughly maybe 20 billion installations worldwide it's really really hard to know it's a guesstimate at best but it's it's everywhere and yet of course the Simplicity of the tool and really I think the straightforwardness of the API has made of course it makes it simple to it looks simple it's easy to think that you can sort of you know re-implement this in a few days and then people keep thinking that but I really I really want to say that one of our goals with Carl has always been to make sure that everything that worked before still works right so even if you still use this um uh I mean you used it 10 years ago you use it today it still works the same it still looks the same it you in some cases you don't see the development because it looks the same it works the same to a large extent anyway that's the other setup yeah that's the curl project that's what we do a small project lots of people lots of installations we do internet transfers and what is an internet transfer this is so fun because I just want all of us or any reader here to be to sort of follow along what we're talking about here because an internet transfer is you know first we're talking always we talk when you talk about curl there's a client and there's a server the server is the remote machine somewhere Carl is the client we're here basically so we connect to the client and sorry the curl client connects to a server somewhere else usually somewhere remote player apps to do an internet transfer so we send data it's a stream of data to the server or from the server that's the that's the internet transfer right and if we get data from the server it's a download if you send data to the server it's an upload it's not that strange but um a little bit of what I got into before also that the data can be anything and curl doesn't really know so you know text images maps coffee and sound curl doesn't know and doesn't care everything it sends it just sends it because the the user asks Carl to get the data or send the data he doesn't know where the data is so and then I use this little image here to show my view of what an uh transfer is and I I also want to introduce these tiny images but I'm going to reuse these icons in some other slides as well so the the bottom thing here the client that's the kernel right that's the curl logo it doesn't have to be a laptop of course it could also be a phone a car a fridge a printer um and it usually is or television set or a game console or anything that runs curl but we're talking our command line today so command lines usually run by a computer thing so the laptop is a good symbol for that and it uploads things to the server I should show that as a cloud because the servers are sometimes in the cloud right downloads things from the cloud down to the computer that's the download so curl done supports a lot of protocols right if counting them like this they're sometimes you can count them just 28 if you separate the S versions from the non-s versions and they all do uploads or downloads or both or or one of them in in this fun combination it doesn't really matter I just want to show you that there's a mix some of them don't do uploads some of them don't do downloads and things like that there's a telnet there on line four it doesn't really do either because it's a weird mishmash of things but let's figure out about that right now I just wanted to mention that there's this mix upload download upload sending things up to the server download getting things down from the server and all of these protocols as you can see there's a lot of different things here with that s in parenthesis at the end s being for a secure and that is of course for the secure protocols authenticated versus unauthenticated protocols when Carl started there were basically Nobles on the KB protocols and over the time we pretty much all go to more and more authenticated protocols and of course we all want and emphasize and encourage everyone to use authenticated protocols and that means using TLS or SSH as the sort of the underlying protocol because Authentication well exactly that's all of these s protocols and sap and SFTP um and when you do that of course don't switch it off with insecure option curl provides this option that that says sure go ahead run it in securely but if you do it in securely yeah that's insecure don't do that it's Dash K in the in the shoulder version but we're really really strongly um suggest you never do that because if you use unauthenticated transfers like you know HTTP without the S it can be eavesdropped and it can be tampered with and um curl or the user using curl won't be able to tell when that is happening it's also then easily attacked in different ways so we really should avoid it we should try to use authenticated protocols as much as possible TLS or SSS SSH powered protocols so that is um that is internet transfers right so now already on slide 33 so that's uh 20 in after half an hour Jesus I need to speed this up um here we go so there's a command line curl is a command line two right um how do you use a command line tool uh command line of course when when we started this command line tools were perhaps more commonly used and a little bit more like every day and then over time we use it less and less but curl is still a command line tool and that's it's a very powerful command line tool so of course first you have different ways to specify options to the command line tool you can do a short option Dash capital V for example that's just you know minus and a letter that's how you spell it short option there are a lot basically all the letters both the low case and uppercase are already used and several digits so there are a lot of short options you can specify long options they start with two dashes dash dash version for example there are all the short options also have a long version of the same options you so that capital V in the short version is called the dash dash version in the long version so there's always the long version there's sometimes the short version all the long versions start with two dashes all the short versions start with one dash a pretty simple um some of the options or a lot of them actually are just Boolean you just put them there it's sort of you know it's enabling this here's an example the path as is option it's an IT switches it on you know it's like a light switch we switch on the path as is we want Carl to do Pat as is use this option and then you can do some some of the options are not Boolean they take arguments like I want to store the output somewhere then we have this dash dash output option and a space in between and then the output the argument to the option in this case store.html being the argument to the output option yeah you you follow along if you want to do them with spaces you usually have to do them with double quotes around them because otherwise the shell will do something else for you and when it comes to quotes around this um I I think I will use double quotes mostly here in my examples because that works better also on Windows and Linux but they're not fully equivalent of course so but that's more of a shell thing so I encourage you to to read up on the differences between double quotes and single quotes if you're on non-windows shells and if you're on Windows don't use shell single quotes because they won't work and of course all those Boolean options like the path as is you can sort of switch it off again by prefixing the option name with with the nodes that's so dash dash no path as this is you know switching off the light again pretty much so all the long Boolean options are like that and if they're Boolean or not it's not visible in the name you have to actually read the band page to figure that out and of course all these options are usually you know Standalone they just changed something so if you if you wanted to change more things you add more options so you can add a lot of options on off on off different arguments so this basically makes it a crazy amount of combinations when you add all of these options and there are many options to select from and you know you can read the documentation and find it out for yourself but there's a lot and the availability of which particular versions will depend on sorry which particular options that are available will depend on um your particular version that you have installed because if we keep adding um new command line options all the time we add them at the rate at about 10 per year so yes today we have at when I'm talking to you today we actually have 257 of command line options uh if you wait a little longer we will have more so sure and depending on which particular release you go with you will have a different amount a different set of options available and I just have to say that the this it's an error on this slide so yes that variable in write out it doesn't exist path as is I don't know it's mistake in there mistakes are fun okay so availability will depend on version and it will depend on particular build because you different builds can you can select to enable different things and they will run on different platforms and they will also use different third-party libraries so you know if you go with curl on different places it might work slightly differently depending on different things they all are there so they should be possible to have there but yeah you know and as I said the number of options command line options in curl have increased over the time so we started out 24 in 1998 we have 257 today it's not a good thing to have a lot of options but um we add them because we have features that we want to provide so URLs curl works with URLs right Dimension see the client for URLs so this is a typical this is not a typical URL but this is a URL with a lot of different components and I've used sort of change some colors to make sort of highlight the different components of a URL the URL that curl works with is specified by the standard called RFC 3986 and strictly speaking it's slightly patched version of that but anyway that's our guide here is this RFC that says how an URL or a URI really should work okay so basically for example you don't use a space anywhere in the URL because the URL cannot have a space you use present 20 instead and as a special thing curl can work with URLs without schemes that's not really a URL anymore because the URL has to have a scheme but curl still supports it so basically it means that you if you can for example just provide a hostname and just that host name curl will then just guess what kind of scheme you meant which usually means that guesses http and of course it you can provide a user and password in the in the URL there so if you do that you have to remember to URL encode them if you have some funny letters in there for example and that host name as you can see in in the example up there it says add host that's the host name that you want to connect to that's the server the name of the server could be a name like just ASCII letters or it could be an international domain name it can be an ipv4 address or it could be an IPv6 address like this right the very simple example here's the most basic URL you can imagine example.com https colon example.com or it could be you know they could have the idea in and name this is a I really cannot pronounce this but this is a genuine Taiwanese domain name it's an idn of course so Carl will understand this and convert it internally to to be able to work with it and it works fine or it could you could specify the ipv4 numerical address or you can just specify the IPv6 numerical address to the Target server kernel of course supports all that if you would leave out the scheme part the name colon slash from all of these examples curl with that guess what you meant in most cases it guesses http there anything that is not a option is a URL so if you don't start with a dash or a dash dash right so if if it's not an option it is a URL meaning that's the only thing you can provide to curl right options and URLs options and URLs there's nothing else you can provide options and urls you just select which well you can also select to not provide anything at all just provided the curl command line like if you go like this and let me pop up the the terminal here so here's the terminal right so if I if I enter curl no options at all yeah right so that's that's the the most bare minimum right so the the next bare minimum might be to go with curl localhost again no scheme you'll guess what it is it will guess HTTP so connect to my server on the host name called hoverkalhost and yep it downloaded HTTP spewed it out on the terminal yep where you can as I said the most basic things of course um add an option like that one which the or the longer version which is called version so it's easy peasy just that's sort of just the basic command line parser and URL thing when you talk about port numbers of course when you speak talk about URLs you provide a port number port number is a 60-bit number so it's from 0 to 65 535 in most cases you don't specify which port number it is because uh let me hide the terminal it sits there and in the way sorry uh so usually you just provide this the scheme name right so curl knows what port number it will use it uses the default one so you can set it in the URL like this this goes this will speak https to port 8080 at the example.com server yeah or you can you know provide it with IPv6 address easy so but I just want to emphasize then that I said that URLs in curl works with this RFC 3986 style of URLs and that is not necessarily always the case with URLs right and sorry uh with browsers and in particularly not with browsers you know the address field in browsers so if you go to your browser and you add stuff in the address bar in there that's not necessarily exactly the same standard for URLs um I'm not going to get into that many more details I'm just wanna make you aware that there might be some differences and it could be problematic sometimes the browsers have their own URL standard that they follow which is not the same as the one Carl works with and it's a bit of a sad situation but the reality is that there really is no good Global URL standard anymore it hasn't existed for for a long time so there will be times when you know we run into the problems where when when one tool meant something in the attitude woman did something else with exactly the same URL anyway so you provide options and URLs to curl right curl and the number of options of number of urls any amount of urls it really means there's no limit to the number of URLs you can provide to curl it might be a bit impractical to I mean at some point but it's not of the curl to set that limit so you can yeah you can provide however many you just managed to do um so that also means but when you provide a lot of them or just two of them every one of those provided URLs on the command line they need a place to put the output right if you want to get one URL and then another URL they need to end up somewhere like this um this example here I will show you first command line example so it provides two URLs you see one is example.com file.ed and the other one is curl.sc file two um so um you need two dash o options the dash lowercase o is for output file name right so as you can see there are two of them because there are two urls or you can I mean the order of them is not important either right so you could put them in a different order but they still correlate to the same so the first URL gets the first Dash o the second URL gets the second Dash o and so you can mix and match the order doesn't matter but the well the order does matter because the second URL will get the second Dash o but you mean you can mix them like this or like this this is a different option this is the uppercase o which saves the the URL according to the file name part of the URL so the first uh the example.com file one will be saved as file one and the curl.sc file 2 will be saved as file two or you can just you know send it everything out and redirect with the shell redirect which means that both of both contents from both of these files will get into this same output like the one called everything here it's not that strange you can also use it if you want to use remote name all it basically sets the dash capital O automatically for all the URLs on on the command lines you can actually use one of that and then a lot of URLs and it'll do the same for all of them so you can that's sort of you need to provide options for every URL that you transfer or you will get them on the standard ad usually standard out is not what you want sometimes it is you decide so there's a query array part in the URL as well as you can see the Creator part is the little thing that comes after the question mark right um before the fragment part the fragment part is never sent over the network at all so we can usually um well often we don't talk about the fragment part when we speak curl because it's not sent over the wire anyway so queries or the query part they're often created like name value pair separated by ampersands and it's typo okay so basically you provide a set of pairs right name is Daniel tool is curl ages old with a separation like that so this is it's not you don't have to do that but it's a very common thing to do it's more or less of a sort of a semi-standard de facto saying this is how basically a huge part of the internet or the web is made right and you can in Carlton has this fancy option called dash dash URL query that will add one of those pairs to the query part of the URL so you can do name equals Daniel and it will add that to the query part in the URL or you can add a whole range of them and they will and Curve will add them automatically to the query part which helps you create that particular URL you need to work with and it then gets a URL encoded suitably to work correctly URL encod meaning then that it encodes it with a character set and presenting codes it if it needs to if you if it would contain some other funky letters that otherwise couldn't work in a URL and you can also read contents from a file and so on so it helps you create that query if you want to do query things in your script for example like this if you go to example.com but you want to add a query that says name is Daniel stemberg again and I use this example just because it has a space in there so the space will be URL encoded um I also the money management talking about URLs this is not curl at all this is a companion tool the curl that we created earlier this year is called rural it is a tool that enforces and manipulates urls um and it's it's there to help you create fiddle update extract you know manage URLs you can for example if you have a URL but you want to change the host name you have a URL but you wanna sort of what is the new URL if this URL would redirect to this relative URL or why not change the port number URL how would it become then basically it is helper for your shell scripts to let you fiddle with URLs without parsing understanding URLs yourself this tool understands and manipulates the URLs for you you can also like things add stuff to the query string again just as I mentioned this particular tool can do that as well or you can make it output as a Json object or you can extract particular part from the query stream super handy when you write scripts or command lines when you want to in interact or sort of manipulate update extract things from urls yeah I just wanted to mention that so you keep that in mind try it out at some point when curl works with URLs it supports this concept we called globbing I don't know really if this is a really good term but we call it globally and globbing here means that you can provide ranges and lists sort of embedded in the URLs primarily basically like this uh has a range right one to one hundred so it means that instead of you riding this almost the same URL you know 100 times and just changing a number you can use this uh range instead within the URL or you can even have it zero prefixed you can make it uh letters Like A to Z or you can also even make it you know do jumps so 1 to 100 with a take steps by 10 at a time and you can even do that steps with the letters and then of course you can do lists which is then as you can see this using braces instead and you have comma separated so one two three uh or weak you know like that and and you can combine them so you can for example use a list and a range and you can use these funny hash on the numbers to refer back to the name used in that particular Globe part so in this case this will get what is six to six different URLs for you download them in different JPEG file names in your target directory by room kind of handy when you know that you have files or remote files remote resources that follow this various kind of patterns and you wanna get them and I want to just emphasize that then these of course can then do a ridiculous amount of uh you know variations if you combine them in in Endless and huge ranges so yes you can do a lot of them and you can um since then this then uses these braces and brackets as a sort of magic letters you can't use them as easily in URLs of course and this originally you could never use they were they are sort of reserved characters and URLs so they couldn't be used so that's why I used them originally when I designed this feature years later others have decided to go differently so sometimes you will see URLs using these letters and then you might want to go with glob off so that you can then curl will accept those letters as is in URLs even though they're strictly speaking not supported and if you provide a lot of URLs maybe you don't want them to be done serially right the default way for curl to get URLs is one by one by one by one by one you know go through the list of provided URLs one at a time but if you if you provide the uppercase Z or dash dash parallel it will do them in parallel up to 50 at a time by default it'll do fifth at a time so you if you provide more than 50 it will put the the rest in a queue until the first is done then we'll put it will you know pull from the queue to keep 50 alive all the time until there's less than 50 left to do and you can also change that parallel Max is the option to change to 50 you can go up to I think 300 as Max um it's kept because it of in most cases you it causes problems in your system when you go up a certain level Let's ignore that for now and it works um both up and down of course and you can also sort of we get a little bit and you can't go and say you prefer a multiplexing or Not multiplexing by saying I'd rather go multiplexing or not multiplexing by using this parallel immediate which sort of changes the priorities for curl on how to do things and you can do them in both directions it's really handy if you if you have a lot of different downloads and in this particular if they're independent of each other why not get them all at the same time so when you want to list which options you have available to use you use dash dash help it will list your most important ones I think from from sort of to start with like this here's here's my output from before let's clear that so if I do curl with typos and help yep these are the ones that we for some reason consider the most important or maybe the most frequently ones frequently used ones so yeah you can see those that's a not too intimidating list or a large list but you can also do then help category to get help or a list of options for a particular category so if you do it also says so here on the screen right so if you would use help category you would see the categories that exists so you can if we go help category it will show us a lot of different categories that that are available for us to list options for so if we let's say we want to get options we want to learn more about file system output options we would go help output not too many there either right so that's that's how you get options so without getting everything but if you want to do get everything you can also do help all which of course um is going to be a really big list so if I scroll up it looks like this these are this is the one the version I'm using here has does not have 257 options and I think this this is 254 objects but who's counting um and of course curl dash dash manual is a way to get to them to the manual basically you do manual and you can pipe it to something like less for example handy and here is here here is the man page and now I can read about it and you and then you know here here here comes the option so append the AWS blah blah blah of course to make this really convenient I would search for the options using something so um going further if providing everything on the command line is not good enough for you and it sometimes is not really convenient you know those super long command lines sometimes even some systems even have limited command line length so you might run into the maximum command line links because you have uh one bazillion number of URLs and options and everything so that it doesn't really fit on the command line then you can do these what we call config files basically putting a lot of config files and have config sorry con command lines into a file and then you just provide one option and its argument per line in a text file there's the default one in your home directory and you use it otherwise you can use it a lot just Dash capital K or Dash config in a file and then that file will be read and it will read command line options from that file and you can of course also then read it from standard input if you want to pipe that into curl and have it read from that and that I know sometimes people then generate those config files and they can be huge then of course you can put whatever you want in there and there there's now a 10 megabyte line limit in in this config file so you can you can put it a lot and there's no limit to the size of the config file either so it can just or maybe there's a I I know you can there is some limit but you can at least put a lot of stuff in there without running into problems and I just want to then go come sometimes of course when you want to do some things you provide passwords to curl and passwords credentials in general it will of course sometimes be a little bit sensitive you provide Dash U Name colon password when you want to do you want to well provide your credentials so that you get that resource that you want to because it's password protected there's also this other.net RC file that I'm going to mention in a second and you can provide passwords in config files because you know as I said there are command lines in a file right so you can put a dash u in one of those but you need to remember that for example there's a local leakage in that if others are running if you have a multi-user system there will be other users on your system and they might do a process listing right they could do PS or whatever it's called on your system and see your command lines maybe switch you know passing by in the process list that process list then might contain curl Dash U and your password you really need to be aware of that Carl tries to hide them but it doesn't always succeed and there's always sort of a risk that it leaks in there anyway and of course when you're using networking which you do with curl typically right the there's also this that you might will send the credentials over the network and if you're then using unauthenticated network protocols the passwords will will be sent in the clear right so anyone who is on the network can snoop on the network can then perhaps see your password fly by and steal it from you and abuse it in whatever ways and there's also this just as a sort of you know heads up remember that if you show curl logging tracing debugging outputs they might also contain credentials so remember um keep keep track of your your credentials and make sure that you use authenticated protocols always and don't leak your your secrets when you download stuff and in particular when you transfer things that are somewhat large it's it's usually handy sometimes handy to do progress meters so that you you know you see that something is happening and you can figure out how long time you have to wait until it's done so unless you use this dash s data silent or this no progress meter options curl will show you this is a download in progress and it shows percent of the transfer in percent and in total amount of data how much it has received what's the average download speed the upload speed the total amount of time that it estimates it estimates that the transfer will take how long it has been going on four seconds in this case and how long time it's left four hours 41 minutes and 39 seconds it's a slow transfer and the current speed 9287 bytes in this case which then of course is a rather slow transfer nowadays so this is how it will show them of course by default if you download a file if you're choose to instead use this Dash pound sign hash sign whether it's called the progress bar option you will instead get this progress bar thing that will go from you know up to 100 and then you're done if you instead do parallel transfers then of course these progress meters don't really work like that yeah I should mention that these the units up there there are in bytes unless there's a suffix there will be suffixes if they go it will be kilobyte k for kilobytes M for megabytes GE for gigabytes and there will be P for petabytes and so on so on so depending on your speed it will sort of reduce the accuracy because it will always only use five character with in the the progress meters progress meter valve so and when the same thing goes here here's another example this is a transfer two transfers in parallel and in in this case it has downloaded 12 percent of them they have downloaded 34 .5 gigabytes at the speed of 3903 megabytes per second and it's taken nine seconds so far um when it comes to parallel transfers there's it's harder for curl to sometimes know uh total expected time and total expected amount because it depends on what it knows about all the transfer and what usually what it doesn't know about all the transfers at that particular Moment In Time anyway so it shows completely different progress meter when you do them in parallel because it needs to show one line of data for potentially a lot of parallel transfers another little fancy thing to remember is that I mentioned that all the URLs need their output options right and basically um there's a lot of um there's a lot of things in the curl command line to tool that sort of add stuff up and then works on them which means that sometimes you need to put it in next that says stop it work on this what you got and then we reset everything and start over on the command line and I'll show you a pretty good example so um for example if you wanted to add headers to a request I I will sort of I will get into exactly what that means later but like in this case we can just see that it uses the dash Capital H option twice here header one header two and there are two URLs in this case it will actually add both headers to the request and then send that request to both URLs so both URLs will get both headers that's what the dash Capital H option does that what it means but what if you want to send the first header to the first URL and the second header to the second URL only one to each and different to each then you need the dash dash next option because it resets the parser so it then it just adds the first one to the first one reset create a new instead of headers to the second one this is uh this is a very powerful and and uh usually you can forget about it but if you want to do lots of things on the same command line this is also a savior for you so um let's take a little sort of deep breath that's um that's a third of the presentation in one hour so pretty good now I think we got into the basics how to use the command line options URLs parallels um any little things about downloads and stuff and now we're going to get into more more stuff how to do things with curl now we understand the options and stuff and now I'm going to tell you more about particular options and fancy things we want to do with options I already showed you curl Dash capital V or dash dash version that's how you get to know the version of the particular curl you have installed right curl Dash V I use a different colors here on the different lines just to highlight a little bit to make you see them better the the first line curl Dash the first line there is a version number curl version number the platform it's built for the lib curl version number usually the same if they're not the same that's usually a sign of something weird and then a lot of different components that is used in this lip curl and their versions so as you can see openssl zlim broadly said standard Lee by the N2 lead PSN a lot of that just tells the reader about version numbers of of components in this curl tool there's a release date that's oh we can see that yeah it's a fairly recent version right from July this year it's a little bit over a month old so it's fresh then what kind of protocols actually these are URL schemes so what kind of protocols does this version your installation of curl support a bunch of them we can see here dict file if the PFT of the best to go for go first blah blah blah and then maybe the the most interesting one in many cases is this fourth line called features these are just names tags basically for different features that curl can have or maybe does not have it all depends on your version your build and your third-party libraries and and so on so these ones will differ greatly depending on what kind of what build you're running what platform you're on what version of curl you have so but usually they when you have problems for example and you submit an issue to us we will often ask you for the curl Dash V output because it contains all of this so it hints it gives a lot of details and information about the particular curl insulation that you use or run when you use Curl it does a lot of things internal of course and then we provide this verbose option dash dash verbose or Dash V just to help it's yeah it makes the transfer the operation verbose it speaks more it tells more about what is what is going on what does it do when it does what it does right so by doing that we can get more information it's usually when things don't go the way you want them to don't go the way you expected them to you add the dash V and adding more makes no difference I know a lot of people like that and they use that because a lot of other tools in the world they actually you know add more verbosity the more number of these you add but for curl it doesn't matter you can add how many ever you want because it's a Boolean it will just add a sort of switch it on many times so it doesn't matter if you switch it on many more times it'll just be switched on um and then we have you can if Dash V is not enough verbose there's also these Trace ASCII and Trace options I'll show them in a second so they will just then make the even more helpful output descriptions available to you then we also provide this Trace time option which pref then makes a prefix to all lines with the time code so that you can that's for example is good to see is there a particular thing in time that takes time or how fast are things or whatever and then a recent newcomer in the family is the trace IDs that's also another prefix to the verbose output lines that outputs the prefix for the transfer ID and connection ID to help you identify which transfer and which connection are different verbose logging lines concerning try them out you'll see they they're a particular the trace IDs are particularly good when you do parallel transfers Trace time is particularly good when you want to identify what in a certain procedure is taking a lot of time or it's not taking a lot of time and so on and again be careful when you share these logs because sometimes they contain Secrets it doesn't have to be only credentials this could also be server names or port numbers or content that you transported with curl when you did this so when you want to do Trace you basically do this here's an example this makes an HP post sending the three bytes mu as a cow moo to This Server called curl.se that I happen to know about so this is how it looks like when you start out so you add dash dash trace and you see this as trace and the dash it means sends the output to standard out instead of to a particular file you can also save it to file if you prefer usually saving it to a file is better because then you can sort of inspect it after the fact and you know scroll around easier but as you can see here it starts out due to transfer a lot of details a lot of TLS and SSL data certificate information alpn negotiations details from the certificate and it goes on to details in this case it negotiated HTTP 2. we get to see the HTTP 2 headers even the sudo headers in HTTP 2. and then we can see the actual um HP requests being sent to the server and then we can see the server responding and we can see bytes getting read as the from the server as curl receives them and blah blah blah and then here finally we get content from the server so this is HTML done from this server kernel.sc so a lot of things you get to see and in this kind of course be very verbose at times if that is not enough we have some other fun option here for you and that's the write out option it basically helps you output information after a transfer is done I mean the way I wanna I wanted to do this so by providing this option you also ask for what particular information you want output after the transfer yeah in my previous example when I used that Dash D moo that was a post with HTTP post with the data move three bytes um maybe I wasn't quite clear on that anyway so if you want to have information from a transfer after the transfer is done you use this Dash W or dash dash write out and in this case you know it's a formatted string so this particular string is not really interesting but it has a variables in this string that you can use output there are a lot of variables you can then read that string for example from a file or you can get it from standard input if you want to and in that formatted string there are over 50 different variables and you can use them like this for example if you want to Output the content type from the response or the response code from a server or whatever there are as I said there are lots of different variables here so as you can see the variables are accessed with this percentage and braces around the variable name and then you just go ahead and output that and you can output that to a standard out standard error and you can also recent since very recently at least output that to a file as well so basically it provides a lot of data from the transfer for you to Output in case um you need that you want that in your scripting or results or whatever there's also this feature in in here to Output particular response header content so for example if you want to get this you know if you get a response instead server colon Apache 2.4 that that's that's content in the server response header and there's usually also a date response header for example and then here's a write out string that shows that outputs This Server header failed and the date header field if in case just in case that's what you wanted and you should look it up because there are many useful and fun variables here and by the time you I mean I'm sure we will add more variables and more information to this over time because this is a really handy and convenient way to get information and extract stuff from the previous transfer um when you use multiple URLs with curl curl always tries to use what we call persistent connections it means that it will keep connections alive as much as possible and what does alive mean it means that it doesn't close them prematurely doesn't close them easily actually it just tries to keep them alive so once it has set up set up a connection it tries to keep the connection alive keep the connection there in case you need it again um so if we do repeated transfers that uses the same hostname and other conditions we can reuse the same connection this is a of course a performance boost quite significant one because setting up a connection can be quite costly in in CPU and time and everything and why if you have the connection already there it's much much faster so a connection can be reused and if it uses the same scheme host name and port number add other conditions too actually but I just wanted to emphasize that it's not based on IP address it's based on host name not IP address because if you then want to use the same name again we remember oh we already have a connection to this name not the address because then you can skip the entire name resolving part and of course when curl the tool exits it cannot keep any connections alive so when curl exits the connections they close that's just how it is right and just to sort of drive it in you know properly this is how persistent connections work Illustrated so we invoke current right and we in this particular example we use First one URL that downloads from example.com https example.com file one and then we get another URL it's completely different hostname still https and uh but it's still a different server right so it's not the same connection but then we do another request another URL to this example.com host again and then again to the coil.se but a different protocol so basically Carl the laptop here sets up the connection to the first to the example.com that's the first URL right https colon example.com file one and we get that data from that server and then it says oh we're going to talk to carl.c we set up that connection and we get that transfer but then the third transfer you see same scheme same host name same port number we can reuse the same connection again so the third transfer here reduces the same connection to example.com and we gain a lot of speed by that and save resources and everything but the fourth transfer is still the same host name but it's a different scheme so it cannot reuse the same connection it has to do is separate third connection here to do the fourth transfer and of course after all these four transfers are completed now we have three connections live so if we would have added a fifth transfer it could possibly have used any of these three Live Connections then and of course the connection pool has a limit so it's not going to just keep everything alive for eternity but it's going to close them off as it goes along as well so when you do downloads you as I mentioned I had this example before when you do um Dash capital O is also called remote name it picks the name from the you know the remote the rightmost end of the URL the file name part that's where it picks the file name so sort of you know when you provide a URL you can see in the URL which kind of file limit will use and that's how it saves it it's kind of convenient sometimes there's this content disposition header in the server it provides a different name sometimes the phylum part of the URL is really crazy and sometimes the servers are set up to do this so you can use this remote header name and say I want to use the name the server tells me to use which of course is a bit dangerous because you might not know that ahead of time so if you save it in a directory maybe you overwrite some other files that has had the same name or something it's it's a little bit tricky to use that but it exists and of course you can always use the shell direct redirect so you can just you know get it a standard output and redirect the standard output often also very convenient and as in particular then because then you can do a lot of URLs at once to the same output you can limit for example if you only want to do this make sure that you never do this with files larger than a certain number of bytes you set the limits and I never want to do the transfer if it's bigger than this just to prevent perhaps if something is would have grown to some ridiculous size before you do the transfer but it has a limited functionality and and it's easily worked around because you don't always know how big a file is ahead of time and then this option is a little bit useless so be aware some other fun option that often used and in combination with the Dash capital O is the output dear option it basically says you know the dash capital O saves in your current directory by default so where you run curl it will save the file and that's kind of inconvenient sometimes then you can use the dash dash output D option says instead of saving it here in my current directory save it over there in that other directory like let me show you so for example if I would if I would download let me see for example a a typical random file from the internet called curl like 8.2 what's the version number like yeah we can here's here's a download from am server somewhere right bam so now it's downloaded and you know we know which kind of file limit use it uses we know that it is this file name oops sorry um because that's what we told it with that Dash capital O so we can make sure was it actually that yeah there's a three megabytes file there exactly as we told but if we didn't want it in the same file sorry the same directory we could have used output there and specified some somewhere else right and then I'm going to try to save it there instead in this case I don't have any such directory so it doesn't work but if I would do somewhere as a directory now there's a directory helical somewhere and I could then put the download in some where instead of in my current directory we can just check somewhere and there it is easy PC there's also this other option that you can also use which is kind of Handy in combination that's the created deals option so that makes it possible to do what I try to do first here if you go here and I provide an option that doesn't exist somewhere else and then I use create deals it will then create the directories that I'm asked asking to use but they don't exist [Music] and then you can see some where else yep there it is exactly as I asked for and it created them for me because that's what I asked for so downloads getting things down from the cloud and sometimes when you download things you fake the transfer fails and then you want curl to automatically retry because what if you set up in a chrome job you want to download currency rates every night and if the server for example has some little glitch at 4am in the morning when your job runs you want to make tell curl to retry again if the error is transient sort of temporary and the server knows about it and it says so why not try again so we have this retry option creative name right it retries it's an option it says retry and you specify number retry this many times so in case it's a transient error retry this many times and then give up if it still fails it'll return an error but otherwise it'll try again um and of course if you it has this default delay I think it's exponential so it will delay a little bit more longer after every failed um but if you want to specify yourself I only want to retry this for a particular time maybe I just want to do this for a minute so then I can limit in the time it will do those three tries because yeah I think maybe you know why I don't know or you can set a delay between each retry so give it a minute between each retry or maybe you can give it an hour between each retry you you decide that's you set the number of seconds to wait in case it ends up in a transient error you can also actually then tell well wait a minute let's consider a connection refused as a transient error it's typically not the translator because a connection refused is not typically transient it could be something else but you can tell Carl to treat it like that and then he'll consider oh it couldn't it couldn't connect to the server it got a connection refused but it will retry anyway because you asked it to or you can actually I mean the big hammer here to retry is to retry on all errors whatever happens retry if it if you got an error it might be a little bit blunt so be careful about this because it means literally means any error retry and um yeah keep it in mind of course you can upload data okay curl can download and upload sometimes we forget about the upload part right because maybe download is a little more used ones again remember upload from your client up to the server and that's very easy usually pretty much whatever protocol you're using you just use Curl Dash capital T file name and the URL it's actually called dash dash upload file if you want to do it with the longer version and if you don't provide a file name part in the URL itself it currently put that file the local file name at the end of the URL I'll show you like this if you if you want to upload the local file name called file to this URL as you can see it ends with the slash there's no file name part in this URL curl it and put that file name part in the URL at the rightmost part of the URL so it'll be called file in the remote site as well or you can decide to put it there yourself you can for example upload it to a different name and if you want to do it HTTP wise I'm going to get back to that because we have just gotten started and there's a lot to say about HTTP but I'm going to save that until we sort of all warmed up and cozy so anyway so if you if you do transfers upload download sometimes you want to control the speed the pace you know how things are going and curl then offers a bus load of different options what if you're doing a transfer and it takes and it really you know it goes really really slow and you want it you let's stop it if it goes too slow cancel it go away we can try again tomorrow and how do you tell Carl to do that well if it's below a certain threshold for a certain number of time or a certain certain period of time then kill the transfer if you're below and here we're talking about bytes per second and then second so if you're below 10 000 bytes per second for 60 seconds kill it or because you know if you're below 10 bytes per second in five seconds kill it or why not they'll do it like this the reverse situation pretty much right you don't want to clog up your pipe by my huge download that just eats all your bandwidth so no no no just use approximately 100K per second uh This Is kilobytes per second when you download so don't download faster or don't transfer faster than this basically it could be if you wanna for example if you want to do a huge number of simultaneous curl command lines right and you know you have a limited bandwidth maybe you want to make them you know work together in a better way so maybe I don't know if you want to limit the rate and if you want to slow it down make sure that it doesn't go faster than this and by this it's actually rough average so it might actually during periods be slightly faster slightly slower because going with the limit rate like this it's uh it's a bit of a bit of a black magic thing so um don't get upset if you get a 101 or 99k instead of 100 but it'll usually average out on 100. hmm so and sometimes you might let's not do more than this number of transfers per time unit and this for example might be the case when you get a lot of transfers with curl but you don't want them you know you don't want to torture your server by getting a million transfers the first second maybe you want to distribute them over an hour a week I don't know and then you can tell Carl no no use this rate of transfer starts no more than two per second for example here's a range download 20 jpegs from the server only two per second and or rather not more than two per second or not more than three per hour or why not more than 14 per minute and then there's as you can see shm there are look it up in the documentation it's all documented so this number of starts per time unit to make sure that you don't you know kill your server by by going overly eager to get your stuff um you can also do other fun things for example um if you in many cases for example if you you want to deploy your site you you're gonna you're gonna deploy your site and you know the name of your public site and it's up there but you're working on your your working on your private development version of of this server and it's over here with different IP address but you wanted to use then you can go with for example redirect you use this the correct URL but you can sort of fiddle with the name resolving for example like this so instead of going to the resolving example.com and going to the real example.com site you tell curl that example.com is actually resolved to this IP address 127.001. so instead of going to the real example.com it will go to your localhost and try to get this page the URL of course if you're using https there might be some challenges but anyway you can do it like this or you can redirect to an IPv6 address of course or you can even there's a different thing you can even redirect from one name import number to another name and port number by using the slightly different option called connect two which is which I know people have been using for example if you want to go to let's say you have a particular site and you have your site consists of 12 different load balancers so you go to one of the either one of those 12 when you go to your site but this today you want to go to a specific one that you want to torture try and so then you can instead of going to example.com being the generic one replace the example.com with your specifically particular specific load balancer hostname um and use that instead or whatever you can pretty much these are um very much you know it allows you to fiddle and create be creative with how you want to do things so and in particular one you you should remember that what is in the URL that's the for example where curl picks the name for the Sni when doing TLS negotiations so it's you want to make sure that you understand that so when you use the the right name in the SMI part that's what decides which certificate the server will provide for you and that's also the server will also make sure that the SMI name is a name that it knows about so that you it knows that you're talking to the right server right host um and of course if you're just basic HTTP lingo use something it's all sometimes fun useful uh convenient to be able to set the host header and then you can just set that host header it's just dashed capital A it's at the host header to something um that is not the same as a server name maybe or maybe it is it's up to you again if you use TLS and you really should then you might have a certificate shakes that fail here so sometimes that might actually warrant that you're using dash dash insecure or Dash K if you're perfectly aware of what you're doing and you don't do it in production I don't know you decide anyway so when we set up connections to different servers I showed you how it reuses persistent connections and I also wanted to get into how do you set up a connection these days and maybe um maybe maybe you're not really aware how we do things in in modern TCP clients these days and we're starting out simple we do things we raise IPv6 versus ipv4 and we call that happy eyeballs it's an algorithm it's actually what is said to be the correct way to connect to servers using multiple um IP families or IPv6 and ipv4 you can avoid this by saying I want to use ipv4 I want to use IPv6 if you have a particular reason to to restrict yourself or curl to that you can do that I look at that that's a curl on a laptop and curl of course it wants to connect curl.sc in this case it will resolve the hostname from the DNS server right hello DNS server where is curl.se and correlation.se is actually an excellent example here because curl.se has a ridiculous amount of IP addresses so look eight rpv6 addresses and four ipv4 addresses so how do you go about to use them well first curl will use all the IPv6 addresses initiate the connection and it will iterate through them all try the first then if that fails try the next try the next try the next try the next and the first one that works you'll be happy with it right but if it takes if once it has started this IPv6 connecting to connection attempt it will slightly afterwards start with its ipv4 attempt so they will go in parallel at the same time and the one that is succeeds first it wins so in this case it gives IPv6 a little little head start to make it sort of prioritized a little bit but if it's slow for some reason or fails for some reason ipv4 might win and both of them have this each of them have their own lists with IP addresses to go through right so if it's one of those fails it'll try the next one until let's run out of the options and the first one that connects it wins everything else is canceled killed disconnected and that is how the connection that curl will use so connections done they use a specific network interface so you can also actually if you have multiple network interfaces which you might do in servers you can actually ask Carl to use this particular network interface when you go out to reach to that um that server this is really a particular choice but usually you don't care usually the routing table in your kernel will do that for you you can also do other things that you usually don't you don't care about but you can limit the port number range that curl will use as Source port numbers in the TCP connection also again very I mean you have to be a particular condition to do this at all um there's also this for example when you do TCP connections as all of these are mostly often at least using TCP you can set the TCP keep alive TCP keep live is a little option that you set for a connection that makes it send a few bits and pieces back and forth every now and then to help curl to detect when the connection goes down and you can use that you can set keep alarm time send a little ping every 23 seconds even if nothing happens to just detect disconnects better it actually sets TCP keep alive by default but this allows you to set the timing if you if you want to do it more strict for example and why not use your own custom DNS server and this of course if you build curl with Cas which I'm afraid to say most people don't but if you do you have the option to say I want to use that particular DNS server when I resolve the hostname and not the one that I would otherwise put use which is also a way to to be creative and for particular use cases and of course doing things over the Internet sometimes is very slow sometimes it's ridiculously fast curl doesn't really know how fast things are going to be maybe you're very very close and you have a really high speed Network maybe you're talking to a server on the other side of the globe and everything is really really slow so there then we provide options to say I don't want the entire operation to take longer than this many seconds my transfer from the from the moment I start it until it's done it may it will it should not take life it's not allowed to take longer than this amount of time in this case 12.34 seconds this is number of seconds so that's the it limits the entire operation it should be done within this or it will be stopped and an error will be returned this of course it's really hard sometimes to set this maximum time because again maybe you don't know either how fast it'll be because it's really hard to know so it's usually you don't want to have these two restricted because maybe it's very slow sometimes and very fast other times so you can also instead say wait a minute I just wanted to try to connect to this server for this amount of time and if it hasn't connected by this time fail and this allows you to just maybe fail earlier because if if the connect if it takes this long just to connect to the server it's maybe not even bother maybe not worth to try it so only try 3.14 seconds in this case and then give it up and I want to say then because I get this question sometimes the connect timeout is sort of the time from start until the connection is there and connected everything up to that point and then it's not counted anymore so if you set the max time to 12 that's going to be no never everything is going to be done by 12 seconds if you set max connect timeout if you set the connect timeout to 3 and the connection connects then there's no more timeout so you usually sometimes at least often use both of these options so that you can limit both the connect time and the maximum time or either or you you choose so I mentioned this briefly before this is a way to provide credentials this is a net RC is actually a file to store credentials it's actually for FTP servers and it was invented a long time ago the default one is is in the home directory called dot not there see it's actually invent it will created back in 1978. so um it's not quite as old as I am but it's way way older than curl and if you use datashnet RC curve we'll find that and use it and use that to find credentials for your particular service that you're using you can also actually like this identify different file if you want to use a different file again if you save credentials in this file you really want to make sure that nobody else can read this file because it's you don't want your secrets out oh well maybe you do but you should do that with knowledge at least it works for our protocols for curl and it's actually a very weakly specified this I I call it the standard I don't know it's not a standard it's more of a habit or a lot of implementations use it but there's um there are different interpretations how to parse everything so it might not work perfectly interoperably between tools anyway this is how it looks like if you check this is a credentials login when you access the machine example.com machine login password easy peasy and of course when you run curl one of the convenient things you want to do is especially when you run curl from from Shell scripts is that you want to check the exit code right because the exit code will tell you how it did if it returns zero if it exits with the exit status zero that means success it succeeded no error it went exactly as what you asked for you got what you asked for so if you if it didn't return if it doesn't return a zero something went wrong and then it returns a numerical value back then so to the Shell prompt whatever called curl and this is very convenient and it's zero for Success zero means everything went exactly what you had you got what you asked for everything else is an error and what particular error um the number actually tells you because the number is there it's a fixed static error number that will tell you exactly what it is and you should of course test for that pretty much if you do like this for example if you cannot save this file in this particular directory you get an error in this case error 23 failure writing output to destination yep you can't save it there error 23 so it failed and then you can check in your main page what does error 23 mean if in this case of course it actually says it so anyway you can also then of course if you write a shell script for example write the curl command check the return code was it zero if it wasn't zero it failed and then you can well take action or rather when you write shell scripts you probably should do it like this or some version of that and there are I think we have documented up to number 99 I think and they will all recommend this is a snippet from the man page the first 12 miracles I'm not going to read them I'm just going to show you that they are there so they sort of describe what they are and they are fixed they will not be changed when we add new ones we add them last so the ones that exist now you know that error seven there you see failed to connect the host yeah it's going to be number seven even five years down the road or 12. you can do um can you curl to a lot of Protocols of course I just want to highlight a few of them a little bit particular because SCP and SFTP is a little bit different than many other protocols they're based on TLS so they're they're used they're not based on TLS they're based on SSH which makes them a little bit different because they don't use the ca system for example and that's not a little bit different so anyway you use it just like any other URL and in this case you're telling Carl which username it has it should use um you can use SCP there are two different they are different protocols they both go over SSH so in particular we usually we recommend going with SFTP the first one because it's slightly more portable and Define the second one SCP is less portable but use whatever you works for you um if you terminate or end the URL with a trailing slash like that it's marked in blue here in my example you will get a directory listing because there's no file name part there so you're asked for a download but without a file name in the URL it means a directory listing and that goes actually for several of the protocols curl supports if they support directory listings that's SFTP FTP and a few others some a little peculiar thing with the SFTP URL format is that if you go with just yeah if you can see this slash tilde slash thing in the beginning of the path it actually means that it it gets this file to do.txt from the user from the user's home directory based on then on the particular user that access is this height site it's a a little bit extra thing but both SCP and SFTP do that and of course these protocols they use is this dot SSH known hosts file by default which is a host it's a file that basically remembers fingerprints from the servers you have accessed in the past so that it'll detect if the servers change or if they're the same you can also use this dash dash insecure similar to how you do it how you would do it with the TLs based protocol it basically means skip the known hosts check so even if the server name and the fingerprints deviate if they don't match ignore that and continue anyway which is uh certainly an insecure way to do it and you really should avoid insecure of course you can also read email and by reading then of course it's a downloading curls link all right and yeah you can absolutely upload upload with sap and SFTP as well yeah in most actually most protocols I'm talking about you can actually do both download and upload um IMAP you can upload to POP3 cannot upload it can only download but but from a current perspective reading an email is like getting data that is to download so if you want to read a POP3 email you can do that with curl on an IMAP there's actually a little more complication than just what I'm showing you here but sort of the gist is like this and of course you want to add TLS as I've already mentioned several times by now but so that you and in the same vein you send the email by uploading data to SMTP SMTP then cannot download actually and in the same as before I showed you before how to do an upload with curl you upload you use Dash capital T send data this file has data you send it to this URL and here here are the credentials with the dash U option in the SMTP case you need to have that file formatted correctly and so on so it's a little bit complicated because as I told you a little bit before curl doesn't actually know about content right so he doesn't know how to make a mail content like that but it knows how to send the actual mail it's a little bit complicated but you can easily learn it and going on further you can do pretty much the same thing with mqtt it's a it's a usually a way to work with smaller embedded systems and you can in there you can download data that's basically means subscribing to something like a bedroom temperature or you can upload data or set data that's sort of you can set like this you set the value of 75 to the kitchen dimmer um with the mqtt colon slash scheme in url so download upload even though in those particular protocols they don't actually speak about download upload going further the same thing again tftp another protocol uh usually working with and there's no older product called done over UDP people it usually first has been for embedded system typically booting when download your in your bootloader or something over the network when you want to start the tiny little system and then it because it's a the T stands for trivial it's a trivial file transfer protocol it's pretty easy basic thing but it works the same thing I mean the same way as you can see the command line you want to download something from the tftp server just specify it or you want to upload the file to the tftp server again Dash capital T there's the file there's the server there's the URL upload download you you see a pattern here I hope telnet of course is the old child in the family and really if I would have done it today maybe I wouldn't have a loud tell that in because it's not really it's it's a weird sibling but you can use it and you can connect to it and it reads input from standard in it will send outputs standard out and it's really yeah inconvenient it doesn't really do uploads or uploads it's that session based thing so you can use it and play with it it's fun but it's different let me say that another fun thing of course maybe not the mostly used protocol in the car family dict Dictionary lookups um and here we can see some examples let me see if I can do one of them in a terminal instead like this curl and this is then a dictionary lookup of the word curl on this on the server dick.org which is then a dictionary online so then I ask for it and I get different matches for curl like this very very useful um yeah there are there I can obviously then use like if I use a different definition of Heisenberg I said bug from the dictionary jargon I think that's what it means and then I get the definition then like this very fun or maybe not okay so at least there's also this experimental protocol support for for websocket is coming still experimental so it's not enabled by default so most of you will not have it so I'm not going to get into much of the details here but it's going to be used in a similar way um job websocket is not strictly the upload download either it's more of a session thing but it's used as an upload download thing often enough so that in many cases you can point this to a websocket stream and you just get it sent out somewhere Anyway by the time in the future you will be able to try out much more about with the websocket stuff at least so I wanted to mention that a lot of people that are going to use Curl and use Curl to mimic things the the browser though or to do things with the browser and I did try to do things with a curl command line and sometimes you end up wait a minute what it looks very different I did it with my browser and then when I do it with curl it looks completely different why is that and and can you explain that sometimes faced in in less friendly way but it's of course one of the primary reasons why for example when you get things sent to Stana and let me move me up there if you for example use Curl and you send data to standard output in your terminal for example and you get a particular HTML file maybe the character set that you're downloading is not the same one you're displaying in your terminal so character set is a big explanation to why the HTML on the browser would show something in a completely different way than you would see when you get the raw HTML in your terminal or even if you load it into your editor or whatever it might not be the same character set um that's a very big explanation and you might have to ask for the right language character set or whatever in request headers and many times the server will also give you different results depending on who they think is asking and who they think is asking might be following protocol standards and just follow you know proper headers or they might be second guessing who is who's there and just give you depending on who they think or who they guess is actually asking so there's actually always a risk also an opportunity to get different things from div depending on curl and browsers and then of course browsers and the web today uses a lot of JavaScript and curl doesn't do JavaScript so if you download something we'd have JavaScript in it you know all bets are off and things are going to go completely different ways in the browser compared to the curl request getting the same URL just remember that and of course um then when they do things with JavaScript and everything um that can also set cookies for example in JavaScript and if call doesn't do JavaScript the browser version might get a lot of cookies and so on I'll go I'll get back into more HP details um soon and of course nowadays yeah let me save that uh I want to show you then so for example if you want to know if you want to figure out exactly what what a browser does and you want to do that with curl you can of course figure it out yourself or you can use the feature called PS curl it is a well it's a common feature these days in a lot of tools and in I think all the browsers nowadays it basically is a way for you to generate the curl command line to mimic your previous transfer all of these browsers all the big ones have the copious curl feature and it's actually available in several other tools as well I know it's available in several sort of man in the middle proxies another tools that help you do things http you have you always have to remember that this is never perfect it's always as a starting point it might be sort of it gives you a good Insight exactly what to do but then you need to do something fun yourself with it and I want to show you a cool little example here and let me to do this so I'm going to take away the terminal and I'm going to bring up a Chrome browser so this is a chrome it shows a website I've seen before and I'm going to show you I'm just going to find it here myself so here's the I'm scrolling here here if I press f 5 it reloaded right it was very slow for some reason it doesn't matter so anyway so here's here's the web page and I can press F12 to go into developer tools F12 there's also as menu option but I don't want to press the menu options so if I if I go here and I press the network tab here and I can do the reload again and then I can see that we have a lot of well maybe not a lot some web pages will have a lot more resources but we can see for example this the browser got the the um from the main page the HTML page and then we can go I want to do this with curl copy copy as curl select nice where is my terminal here it is remove the browser and then in my terminal I don't want to see any more dict I paste the curl command line so this is the curl command line Chrome say they used to do that this is done pretty much the same thing Chrome did but in curl lingo I press and I got nothing yeah to show you how complicated things can be and of course if I wanted to figure out exactly what happened I would use Dash I believe Dash V oh right and it you see we got it 304 it means that it has not been updated since the one we asked for it and that means that this particular request used conditions like this blah blah blah so it actually didn't get a new one because we asked for not getting it if it's not been modified since this date I'll show you in a second how that works and I also if I do remove my terminal and I pop up a Firefox instead looks very similar right so if I go to the Firefox one uh it's here and if I for some reason it's the same key right F12 and here's a network tab I can do reload and again look at this here's the the front page and I can do copy value copy copy s curl select I remove the Firefox I bring up my terminal and there's there's the Chrome thing and then now instead I paste the Firefox one it looks a little bit different this Big Blob of stuff does it use the conditional thing at least yeah it does if modified sense so yeah it didn't get anything either so it got also got the three or four response and like if I add a dash V I will see the dash is to be two three or four not updated oh so one thing that's a very convenient thing or did you did you yeah so that's a very convenient thing I can recommend using that when you want to reproduce What a browser did in in crawl it's never perfect and you should be aware that cookies and for example you want to um you want to double check exactly what it's doing and how you really want to do it and you can do other things to figure out the browsers I will I will show you later on how you can do SSL key log file and also this other fun thing if you want to mimic for example I wanted to show you this fun little um service that I have which is called if equals headers to curl so basically if you do like this and now I need a terminal as well here's my terminal okay so if I go to a now add different tabs on this terminal so as you can see here they change color so in in this tab I'm going to do I'm going to run mcnc being Network cat or whatever it's called so the exact options here very little there are different versions of NCS so sometimes it's not Dash L Dash that's P sometimes slightly different basically I mean wait for a listen for a connection on port 8080 and just output what it does so it does it does nothing right now port 8080 and then I could go like I can switch on my yeah Firefox over here and I can go to localhost colon 8080 it didn't do anything we think but if we check out the terminal in in the back there we see that it's actually and my mouse is acting up a little bit so where are we hello okay sorry for that uh okay so there we can see in the terminal that we got a bunch of headers right so these are these are that's a fun cookie I don't remember that's some kind of test cookie I've done for anyway so as we can see that these are the record this is the request that the browser will send to This Server so why do we do this well it's a cool experiment experiment right so this is what the server did and we can copy the entire header set right then we do copy that's how I do it with this um terminal and we can go back to Firefox and then we go to my cool service called headers to curl and in this particular form here we just paste the entire header set the entire request actually from the get down to the last header bam how do we make a curl command line that does the same thing convert bam and here this is now the curve command line that reproduces the same browser request that we just did towards our own server so that's a completely different way to mimic the same thing but sort of listening in the server and rather than copying it from from the browser it's really convenient and this is also convenient in particular if you you know you get you you have the headers somewhere or like there's a big bunch of headers and you you want to convert them to curl command line um just convenient thing and um of course I can never talk about curl without mentioning the call dash dash curl command line which is of course a way to generate lib curl source code from a curl command line so if you do curl command line and you're happy with it and you want to convert it into a leap curl source code data sleep curl is there for you so you you wanna you wanna go um yeah for example if one if we go back where am I I'm in the wrong tab if I go back to one of these huge generated things right this is the one that Firefox generated as copious girl from Firefox okay but we want to make a lib curl command uh lip curl source code that uses this so I add here on the on the very end of the command line I could put it anywhere in the command line but I put it in the end I do uh cool code.c and then when it does this it now saves a C code it's now called cool code.c and this is now an Embry for how to write this is now if I could now compile this actually and I will have the first embryo ta command tool that actually performs this request then that we just copied yeah this way as you can see it doesn't really it doesn't make a perfect copy of everything so you might need to tweak it and there are some defaults and so on so but this is meant as a first skeleton embryo for you to to get something started and then you build from that and what could possibly go wrong it's pretty cool and is um it's actually also that way that even if you don't use C even if you want to use another one of these bindings there are over 60 different bindings for lip curl so even if you want to do a different language then C doing this way you at least get a lot of options names and a rough idea how to do things because most bindings are very thin layers on top of the see API so then you can usually pretty easy copy it over and modify it just a little bit going forward into TLS I'm only on on slide 81 and I'm two hours in so if you're if you want if you thought I was going to do this in two and a half hours I'm sorry to do this this point I'm might be done in three hours okay so again you want to do TLS you don't want to do the protocols without TLS also referred to as SSL all over in our documentation we mix and match SSL and CLS all over all the time it's the same thing or actually nothing is SSL these days it's all TLs but the name is still used all over so don't care about if it's SSL or TLS it's the same thing to us it's done for Transport Security we want it unless we use SSH of course SSH is also fine but their SSI is only for sap and SFTP for all the others we talk about we use TLS and when we talk about TLS we protocol wise actually verify the pair and what does it mean to verify the pair it means that um we sort of we have a we have a handshake and we verify that the server we are talking to is has proven itself to be have a certificate that is signed by someone you trust people and so on so this is a lot of digital checks there right and by doing that we prevent eavesdropping now no one on the network of the network no one in between can read your network and your data or anything and it they cannot tamper with the data they cannot change anything so they cannot see what it is they cannot modify the data and typically the use of TLS is sort of indicator hinted by the URL scheme as in HTTPS as therefore secure so we know that if it's HBS it has TLS but of course you can still kill security by By Doing It Wrong don't do that but and all schemes curls supports them that ends with s they do T less so basically you know IMAP s smtps pop3s they're all TLS based and if you want to do TLS with one of these other some of those others some other protocols and which protocols they are you can only sort of learn by reading the documentation but FTP IMAP POP3 SMTP ldap they will have a different way to upgrade into TLS when you so they start out without they can start out without TLS and then negotiate your way up to TLS based so you can go with an FTP colon slash URL use SSL required this uses SSL required option and then it'll sort of switch over to the TLs version which is also a fine way to do it Android again ucls with TLS there are different versions we started out well SSL was invented created in the mid 90s by Netscape SSL V2 I think was the first one that was actually ever actually used it was later deprecated because it was insecure then we had got SSL V3 also deprecated because insecure then we got TLS version 1.0 and also deprecated by now and so on so we have sort of gone over a range of different versions over the years but but you should know that curl always tries to get the latest and most suitable sort of set of version and ciphers negotiated automatically so typically you don't need to care about that but you can if you for example if for some reason want to fiddle with that you can ask for a lowest possible accepted version and you can ask for a highest possible accepted version of TLS versions usually you don't want to care we also have the sslv2 SSL V3 options they typically never work these days because the tilas libraries and all of them have disabled them so don't bother when curl connects to an Attila server it verifies the certificate in the server side right connects to example.com check that the certificate we get from that server is trusted it comes from example.com and it's been signed by someone we trust by a certificate Authority and curl is set to trust a number of certificate authorities that have then been used to sign certificates to service or all over the world right and those certificate authorities are in a basically a bunch of uh signatures in a file somewhere in your file system there's also ah let's let's don't care about that so you can then typically use Curl as the cas in a file somewhere in your file system or you use the native way to check certificates the native one is for example if you use S channel on Windows or you use secure transport on Mac they have their native cea supports basically curl just asks the operating system is distrusted and then they tell you otherwise you can use this option.ca cert to 0.25 these or my CA search that I that we should trust and you know you can edit that and only provide the cas that you trust you can avoid checking the ca this search completely the server start by using the insecure Dash K which then of course as the name implies makes it really insecure because you skip the check you don't know that you're actually talking to the right server and if you don't talk to the right server it could be an imposter and then they of course that the fake one could read all your data and give you the wrong data back or whatever everything is then open for bad stuff you can use ND here's the URL to a service we provide that always provide the Firefox CA cert bundle automatically converted for you in pem format so it's actually updated daily so if you go there you can get the latest CA search bundle that Mozilla maintains provided for Firefox and they get you get it in a convenient format that works immediately for curl in a pen format and avoid Dash K which is then of course the insecure thing with curl you can also check for stapling because certificate revocation you know when when a certificate has gone bad and you want to revoke it the system for that doesn't really work really well over the world so sometimes bad certificates remain out there and remain in use and it's hard to detect that and one way to um sort of counter that bad system is to use UC uscp stapling which basically means that the certificate provides a guarantee that this has been recently verified to be up to date and you can add use Curl to ask for that stapling check that your double check that the server is actually still it's not revoked you can also do the certificates the other way which is basically the client providing certificates to the server saying hey I'm I'm the correct client talking to you often called them the mutual authentication because server to client always happens so if you go with client to server also it's mutual and then you're pretty much just here's my certificate here's my password or played up in in different options here's my certificate and my key when talking to a particular server and how would you get a certificate you would get it somehow from the server or from some admin somehow I don't know how usually using some other means using a secret handshake in the Park yesterday evening or something and of course you can in one when we're talking TLS there are tell us ciphers different ways to encrypt and and the hash things so you negotiate which ciphers and everything to use and the client of um sorry curl of course negotiates that with the server when it sets up the connection and which particular wants to use you can control or change with the dash their ciphers option again typically you don't do that because typically you just use an ink curl does its best to pick the best one but you can change if you want to and if you use a TLS based proxy like an HFS proxy there are different options to set the proxy options so you can go with both you can control both the connection to the proxy and the connection to the remote host so lots of stuff when talking about ciphers today until last people then often bring up post Quantum because uh that sort of lies in the time so post content when the quantum computers come they will break a lot of ciphers and rather encryption algorithms that we've been using in the past so if you want your data that you encrypt today to survive when the post quantum computers sort of become capable capable enough you need to switch to post Quantum safe ciphers right and how do you do that luckily for us that's all in the TLs Library so if the TLs libraries support post Quantum ciphers you can use a select them with the same options sort of out of our hands and we pass on that responsibility and fun job to the TLs libraries there's this URL with lots of Cipher names if you want to read up more I should also just mention then that of course curl supports a lot of different TLS backends so if you get if you run your particular command line today depending on things one of these different things one of these different libraries on the right side might have been used when it was built and you might then have different Behavior you can they might use different CA stores they have different features and they work on different platforms some of them are native on platforms and so on and openssl is the by far most commonly used and sort of possibly the most commonly known as well and that is when one of these 12 different ones that curl can be built to use and of course if you build curl yourself go crazy go with the one you want to use slightly limited of course depending on which platform you're on so it might limit your options in TLS we encrypt everything so when you use a TLS connection from a client to a server it's you cannot read the contents of the traffic right you cannot Snoop on the traffic but not being able to Snoop on the traffic can be really problematic when you want to understand what is going on here what is happening I want to know nope it's encrypted but then luckily someone invented this funk SSL key log file actually I think it's invented by the NSS people and the Firefox developers many many moons ago so basically what this means is that you can set a environment variable called SSL key log file and you specify a file name actually set SSL key log file equals a file name and then if you use that if you set that first and then you use a tool that supports this like Firefox Chrome curl when they are started and this one exists they will save the secrets the TLs secrets in that file name the run time secrets you don't have to figure that out you don't have to be a sort of you know crack it in a way it'll save this secrets for you and if you then use a two like Wireshark for example and who doesn't use Wireshark right so if you use yshark you can tell why shark get the secrets from this file that we we're saving all the secrets to and then we can run curl save the secrets and why you sure can get the secrets and decrypt the DLS all over the wire or or the Crypt the Firefox traffic and it works like this in in here's um the config window from a Wireshark a while ago it might not look exactly like this and this is on Linux maybe it looks different on windows so here I said oh my pre-master secret log file name is called home Daniel TMP tileski the secrets will end up there so and then I go there and go to the secret TLS data with my browser and then in Wireshark I snooped on the traffic and it can decrypt everything and show content so in this case actually an HTTP 2 traffic from where you go I found this screenshot it's very old but it looks like this anyway and it managed to decrypt the data and show the contents of the traffic very convenient you should use it proxies is a way to do traffic sort of with an intermediary that sits between you and where you want to go it's an proxy is an intermediaries a man in the middle somewhere in between and it basically if I wanted to show you with the with the pictures I that's the that's the curl laptop laptop again talking to the website and you know normally we just go directly to the website setting up a connection and we communicate back and forth but when we introduce a proxy in this game we that's the middleman right the intermediary so it sits on the network a so we do a connection to the proxy first and the proxy it's then relays data over to the website on network B so the client on the left side it doesn't have a direct connection to the website it goes via the intermediary that's that's what the proxy is Right Middleman so it is common thing in Enterprises and companies and organizations to have these sort of mandatory things so for example maybe your machine at work you cannot connect to the server directly you have to configure a proxy to reach the server and how do you know which proxy your machine is using Well normally curl doesn't it doesn't Auto detected it can't find it by itself you have to tell curl where is it and usually you can find out that in your browser network settings or your computers network settings and there it is and then you can for example and sometimes you also have it set in environment variables that's a common Unix way to do it sometimes when you configure a proxy especially when you configure browsers you you have these pack files proxy order configuration a pack file is something as ugly as a small well it's supposed to be small sometimes it's really big JavaScript thing that given a URL Returns what proxy to use which makes it really complicated for curl because curl doesn't speak JavaScript so maybe you need to parse that JavaScript just usually it's very simple you know usually you don't have a lot of different proxies to select from anyway but you should be aware sometimes you need to sort of do some a little bit of a detective work to figure out which exact proxy your croquemine line should use talking about um proxies then I I also wanted to mention the thing you know called captive portals typically you're you know your airport or hotel or stuff when when you cannot get on to the internet before you log in before you pay before you do something before you agree to click click click that's a captive portal it limits you until you've done something and then you're allowed out to the internet they're not actually proxies but so this sort of work similar to that and of course curl will always also be but not always but it will be limited by captive portals in the same way as your typical browser will hmm doing proxies that that man in the middle machine there are several different proxy types and Carl speaks a lot of them so you can have for example HTTP or socks different kinds of proxies and when you talk about HP they can be different you can do speakers HP https you can do H to P2 over https and socks also have we speak we took socks in four different flavors we have socks four and we have socks five we have socks four that resolves the hostname itself or you let this proc series all the hostname and and the same thing with five so a lot of different sort of flavors here and you set you typically set the type as a sort of made up URL scheme when you use the dash proxy option it's kind of convenient you can even actually set a pre-proc so that allows you to set up socks proxy that connects to an HTTP proxy it's super crazy but some people do that if you want to do tour transfers with curl that is typically set up through a Sox proxy usually then you do your connection or you point out the socks proxy and that is your entry point into the tour Network and then you provide the URL and that URL done is used sort of into the Tor Network there's also these concepts of a forward prox and a reverse proxy and in in these cases we talk about forward proxy because the forward proxy is usually in the curl and sort of in the client side Carl's side the reverse proxy is usually in the server side so we can as a client as a curl user we can often ignore the concept of reverse proxies I'm just mentioning so that you know that the words they're there curl done of course speaks https proxies and if you're going to do with a if you're going with an HTTP proxy or an HPS proxy again we say TLS is better than not Tila so go with the https proxy if you can so then it'll authenticate the proxy and it will encrypt all the traffic so that other users on network a cannot see your traffic if you go with an edge even if even if you talk to the website with HTTP for example which is a clear text version if the if you use an https proxy you're protecting your network your day data at least from people on the network a here and this and of course curve supports both HTTP 1 and hp2 when talking to the https proxy complicated but fun stuff and a lot of options to allow you to you know tweak those things some people are also using these men in the middle proxies that sometimes you use them for debugging sometimes you use them for surveillance which basically they try to intercept your traffic without you knowing it so you don't explicitly tell which proxy to use they just magically know that there is an outgoing connection going on so they intercept it and go with Let It Go through a proxy and sort of determinate the traffic and send back something but the the good part with you using TLS all the time is that you will notice because they cannot do that without sort of permission because the only way to make that work is that the client needs to permit it by um saying that that's CA that sits in the proxy is okay it's trusted normally it's not going to be trusted so normally those connections are going to fail but of course blindly trusting a mailman like this and and middlemen in general like this is a if not very nice and of course you can do authentication with proxies it basically means that you have credentials and there are different ways to authenticate authenticate with practice different methods different algorithms and so on we have a lot of different options depending on which kind of algorithm your proxy uses use the one that makes it go through typically you control which proxy to use you know you can control by setting environment variables basically they control the scheme in the URL you're using so basically if you're going to http colon slash then it curl will check the HTTP underscore proxy environment variable so like this going to the HTTP s it checks database underscore proxy lip after P checks F to P underscore proxy the HTTP HTTP underscore proxy and as you can see the HTTP one in lowercase preferably for reasons if if none of them exist there's also a fallback and check maybe there's an all proxy set and that it can use that and it also checks the no proxy even if one of the above matched if if no proxy no proxy contains a list of exceptions we should not use proxy for this host name patterns I should also just left go into this a lot but there's also this difference if you if you're talking HTTP through an HTTP proxy you can there's a double sort of request right you set up a request first to the proxy and if you do https through to the website to set up first a connect request to the proxy and then a remote request through to the website that means that you're sending headers to two different parties that are involved in the same transfer and you can separate headers to curl consent headers just to the proxy or just to the website and you separate them or you differentiate between them using these proxy header or versus header just think about that if you if you're setting headers when you're using http proxies okay this is going well where are we're only 50 slides left um and now of course HTTP is one of those protocols that is a well when as we ask users every year which Protocols are you using with curl people say HTTP and HBS I mean 95 99 of all users use these protocols and then the other Protocols are much less used so this HBS and HP are buy for the most by far the most popular and most frequently used protocols that curl supports and of course then in some ways the most important ones to curl and curl users so some Basics just about ATP they're different versions pretty simply there one two three um nhps that's HTTP and TLS right it's the same sort of underlying protocol it's just HTTP secured with TLS so basically sometimes that we then sort of use the words interchangeably a little bit possibly a bit sloppy sometimes and then um so basically it means there's a name resolve and you set up the TCP connection and then add TLS handshake on that or when you use atp3 you actually replace TCP and TLS with quick it doesn't really matter and then the protocol is a request response so you you ask for something you get it back in just one ask one response and all um all requests that we send to servers they they have methods called verbs sometimes get post head put delete short words often spelled in uppercase and this is how a very basic one dot HTTP 1.1 request looks like this is a get get slash index.html that's the resource it wants to get then the version of HTTP and then a set of headers this does Name colon value set some of them needs to be there pretty much host pretty much needs to be there in the request the other ones are often I mean optional some sometimes you want them there for features and so on here's the user agent header it basically says which client is asking for this this is curl 2000 very fancy um user agent you can then the same thing but with a different method different verb called Head this is then it looks identical but it's the different method or you can send the data to the server by sending a post in this case and then the data then follows the headers and as you can see here the last header here says content length that's actually the content of the data that follows so hello that's five bytes content length five um or a variation of uploading is put put this actually more replacing the resource post this posting data to that resource uh semantic difference but still there so it's same thing there it sends data in the request five bytes it says hello that's basically and this is how HTTP 1.1 looks like um I'll get back to slightly about different versions um yeah and here's a response the other the the first further or request and here's the response right 200 okay everything went fine the server is example server here's there's five byte of contents and here's the type of the content it's plain text hello five bytes playing context that's how sort of this is what http 1 looks like so they just set that verb or typically you it depends on what kind of transfer you want to do by default curl makes a get request you can you can ask for a head request it doesn't provide any body at all just headers nobody just give me just the head that's just the top part the headers or you can send a post which contains some data you send to the server to that resource and we have done the Dash D or Dash capital F options and we can upload data which is to put replace the resource with this you can actually send any verb with curl there are also sometimes abuse sometimes you can switch switch them around a little bit and and you can tell Carl to use whatever um it's a little bit flexible and the HP is not a very I mean you can implement it in many different ways you don't have to be very strict in following it so sometimes you need to customize it a little bit and then you use this Dash X whatever so you can set whatever typically and you will hear me say that a lot this a lot in in many circumstances but typically you don't want to use Dash capital x and you absolutely don't want to set it to get head post or put but because if you do that you're typically wrong so avoid it so when you want to get HTTP headers in the terminal you get them bolded for example and you're right and you get the local linkified location URLs like this if you if you get the headers from curl.sc like this you get them in bold and let me show you what it looks like if I um bring up my terminal so basically as the example slide shows if I do go to curl and if I if I you know there's no scheme here there's just the stream so I can do this and you see the header names are in bold I can also go to https colon slash and then I got a HTTP 2 instead of HTTP one so all the headers are now lowercase but they're also all bold and a fun part then is the week now all right if I do the one on http I get a location and as you can see that gets underlined when I move the mouse over it because it gets linkified so if you're if you have the right terminal curl will um show use this as sort of a magic escape code so it'll turn this into a proper link and it's the link should also work even when the URL is relative here the the dash I here is actually done ahead so it makes a head request so it's the same thing so it's a capital i am sort of a bit damaged I always use the short version of course because I've done this a bazillion times but so that's what you do and um if you wanted to instead send a post to the server I could send a post a post data and then it would send these nine bytes to the server but this serve doesn't care about that so it didn't do anything it just returned to redirect right so anyway response codes that's the two number 200 in here that's a typically a return code saying what kind of success it got back 200 means fine you get a 404 if it means the file not found there's a whole plethora of them you can read up on what they mean important here is curl normally doesn't care about the the Response Code basically if you get a 200 okay is back or you get a 404 filon found it's the same thing for curl it's actually a successful transfer and that people have a little bit hard time to grasp other times but if you ask for a file that doesn't exist it's still a file fine transfer for curl and I'll show you for example what that means let me here's you know here's the the curl website https colon we want to get a page somewhere and if I would get the I could get I could get a for example the downloaded curl before right curl8201 Tor um different extension this time and if I download this you know it works fine and I got it but even then even if I you know I yada yada not likely to exist on the server right because this is not actually a curl download I just mistyped this is a typo here in the URL and I downloaded it look it worked and it worked why because yeah the transfer went fine but and and I saved this now as a curl yada yada in in my directory so if I look at curl yada yada that was says I think six thousand one hundred and fifty six byte and it probably says something about uh four or four file not found blah blah whatever you hoped you were going to get to and so yeah it's a 404 page basically but successfully retrieved so it worked so curl did not return an error it said fine it worked keep that in mind and if you don't want that to happen you can use Dash lowercase f um and then it is a dash dash fail actually in the long one then if you do the same thing with that like this if you if then if you would do the yada yada and like that then you dash dash fail instead you instead get an error because now now you told Carl to care about it normally it does not care about it and if you want to do more fancy things remember I told you about this right out option Dash W so you can actually also if you want to Output the response code for example afterwards like this um and I I can show you that as well of course so if for EFI for example did this and I wanted to when I'm done with the transfer show me Response Code show me the Response Code after the transfer is completed up there so to come to maybe combine with another option silent shut up about the progress meter and just show me the response code 404 it tells me that the transfer maybe it was not to my satisfaction or maybe I just wanted to test the error page and then it worked so that's fun stuff and there's also of course response headers so in all responses you get from an HTTP we have headers back and of course you can see them with using just the verbal shop verbose option I showed you dash capital I which makes a head you can also use the lowercase i which means include headers in the response sometimes not what you want you can also use actually minus capital d to dump headers in a separate file so there are many different ways the response headers also describe the body and or the transfer so the the headers in a response they have different responsibilities and they're sort of depending on what they're there for you can see the difference but they actually can both describe the resource and they can describe the transfer right you can say that with Dash and capital D in particularly in a separate file name if you want to save the header somewhere else when you use the other HP versions then one they will sort of still look the same as they did with one so one two three they look the same even if they actually don't look the same over the wire we make them look the same for you in response bodies that the response coming back from the server when you ask for something that's sort of the data the payload so that's it usually has a Content length it can have a Content like that it can also be done in many different other ways like enchant encoding basically then you don't know ahead of time how big it is just a series of chunks coming and with HTTP 203 basically they can send data without chunking and without telling the size ahead of time and just tell then it just tells us when the data is done you can also ask for data to be compressed so basically you know if you wanna if you go back to my little example here let me say let's let's ask for a proper download again we want to get this download the latest curl version I can add compressed to this command line and now when when doing this I will ask the server so if you can please compress the data when you send it to me and when I receive this it'll automatically uncompress the data and this actually works for anything right so I can do like this if I want to get the web page from the main page from the site save it to index.html but ask for it to get delivered compressed which basically then saves data right it makes it gets smaller and gets compressed over the buyer and then curl will automatically uncompress it in in my end so if I do like this I ask for it compressed and this time I got 3 000 bytes right and it's still 8 500 bytes when uncompressed so we saved 5K from the transfer neat of course in many cases you actually want that by default more or less and of course remember saving things you can save it to the lowercase o and the file name or uppercase o and then put fixed name from the URL there's this authentication in in HTTP which basically means credential right so you want to prove that you have the right to get stuff I mean usually these days when you do web logins and things on the web it's not done with HTTP Authentication mostly because people want to control the login experience and things like that so um we we will get to that in a second but usually it HTTP authentication it it's pretty much like when you get a 401 back from a server it means I want authentication if it's proxy it returns 407 and it contains this a server would then say include this header and says I I can speak one of these different authentication methods and then you would use one of those and curl supports several of them and you again you use authentication like you've done with all the other protocols I mentioned already with the dash U user column password typically maybe you would use the end any auth which says use the authentication um that you know sort of it lets curl pick the best one out of the ones the service as it speaks if Carl can do one of them usually it can otherwise you can also say no no I want to use this specific authentication method basic digest ntlm negotiate you can also get data you want to have look at the fun picture a piece of the pie you just want to get a little piece of a remote resource a really big file you just want the first uh snippet dial out of it or you want the range index five from five five by 500 to byte 999 out of file.txt and just get that written in this case front to standard output yeah this has the unfortunate downside that the server can ignore your request and just deliver the entire thing anyway you just wanted those 500 bytes but you got those Mega lights from the server you can also use this resume function which which is just a slight variation of doing the same thing you can resume my transfer from this index um and as I mentioned there are different versions of http started out HTTP was sort of created sometimes called invented in the 90s right in the early 90s or maybe late 80s so anyway the first specification of HTTP was called HTTP 1.0 and that was in 1990 six or seven I want to say that was hb1 and sometimes then when people talk about what existed before that standard before HTTP one people called that time the HTTP 0.9 so therefore we have the 0.9 and we have one with a zero we have 1.1 we have two and we have three curls 10 speak all of them HTTP 3 is still experimental so usually people don't have that enabled yet so maybe in your version of curl you cannot enable hp3 just yet hopefully we can do that soon and generally you don't need to care about HTTP version if you just want to get or send stuff over HTTP right curl will just negotiate that for you and you can just ignore it it'll work the same way still act the same way it's different over the wire it's made sort of so that the users shouldn't have to care if you wanna let your curl speak 0.9 you have to tell it to do so allow it because it's a bit of a weirdo thing when a server responds back with a 0.9 it opens up for different mistakes and problems so we don't want to do that unless you actually want to um and you know what you're doing if you want to go with one of those ancient version I said mid 90s protocol h.0 I want to go with that ask current to do that otherwise H.A 1.1 is a general default for HTTP if you go with https curl will try to go to http 2 if it can negotiate that in in the handshake and there's this experimental hp3 that you if you build with hp3 support you have to enable it or ask for it with this option it won't use that otherwise and how do you know which server in which version the server supports you can ask or you can again the write out option has that info in the invariable called HP version so if you connect to the server ditched output just want to know the HTTP version it's there in the write out option and if you happen to run an HTTP 3 enabled curl you can actually also allow it to try hb3 and in this case you will get 1.0 1.12 or 3 depending on what what version this particular server speaks in this exact case with the curl.sc server it supports HTTP 3 so it should say three if you have a three enabled curl otherwise it should say two if you have a two enabled curl and if you don't you really should have otherwise it'll say 1.1 when you do a request to a remote resource you want to do you want to get a resource back to my Chrome job you want to do you want to get something every day or every hour every week you can do the transfer maybe only if it's newer than a particular timestamp right um what about if the server is newer then if it is created or it has a modified time that is newer than September 1st 2021 only then return it if it's not newer get it give it'll return us a 304 Response Code and nobody or you can reverse the condition only if it's older than that give me it and then you pref you just prefix the date with a dash a single minus there you can also even do if it's newer than the local file that happened I happen to have here so it's if it's new and if it's done file name it will pick extract the date the timestamp from that file your local file and use that as the time condition in the request and this is usually then also very neatly combined with if you use the dash R option called dash dash remote time I think in the long version if you use that option when you get a file it'll use that remote file stamp and put it on your local file so if you're if you're getting a file that was made in 2021 on September 1st and you use Dash R your local file will also get the timestamp September 1 2021. which is convenient if you want to do it like one of these time-based things for your next request checking if the file has updated is it newer than what I got the last time then similarly you can also do e-tags and e-tags and it's another way to do conditional things only get the data again if it's different than the last time you basically do this save the e-tag for this resource this time and your e-text saved it into this file in this file in case we call the file remember so if I get this file remember the e-tag here and then I get it again tomorrow only get it if it's different than what I got yesterday right e-tag save e-tag compare so as long as it's the same that I already have don't get it again what if it's a super huge file I don't want to get it again until I need to so as long as it's the same and of course you don't want to do the convenient thing so if it does update you want to save the new update right so remember the new one if it's different so only update if it's different get the file if it's different update the e-tag if you actually do download it very convenient thing for automated things your Chrome job that you do every day every hour every week every year it's no need to re-download it again if it's the same thing as it was the last time because you already have it and of course I mentioned TLS 24 bazillion times in in this talk already but https is HTTP with TLS for security right so there's really no difference in use typically you just add that s and you have TLS and everything is fine and dandy it'll automatically negotiate whatever for you and even try HTTP 2 by default if it can it'll sort of ask the server if it can if it doesn't it'll stick to 1.1 and HTTP 3 the next where the newest version of HTTP will only ever be done over https because there is no clear text version of hb3 it will only um be done over https so if you ever want to do it should be three you have to make sure that you speak https because otherwise you don't have to even try it because it won't use it it can't so anyway I going forward um HTTP post that's a way to send data to your server right and sending data to server it's really you can send anything there's no there's no limitation here you can send a single byte a bazillion number of bytes and the bytes can be in any order in any form we don't know what it is could be you know code even use film we don't know we don't care it's just data bytes Over The Wire typically you if you if you want to do it easy you send it with the Dash D option it was also called dash dash data in the long form basically here's a stream of data that you want to send to the server it is often as I mentioned already before done in this name equals value pairs separated by ampersands so in this case name is admin shoes size is 12. it's a standard sort of way to provided well I shouldn't say standard but it's a common way to do it so you'll see that this is very very very commonly used everywhere so you just send this data to the server um you can also split it up in multiple Dash this and curl it put it together automatically for you so that you don't have to think about it it's very it makes it nicer perhaps when you create command lines or write scripts you don't have to sort of mush everything together if you don't want to or you can read the data of a file name so you don't have to put it all in the command line and we could put the data to send in a file or you know read it from standard in or you can even sort of make sure that if you I you know in this third example I mean reading from a file name if you have to specify that by an at sign in the beginning at file name someone that pointed out to me that what if you want to send data that starts with that at symbol so then we had to create the option called Data raw that doesn't read from a file ever so you can send it can begin with an ad symbol without a problem uh you know that's how things are and uh if you if you want to actually read everything from a file strictly including all the new lines exactly as they are you can use the data binary option so a lot of different ways to send data more things about posting posting is a big part of of curl right it's a very popular common thing sending data to a server it's fun it's good it's convenient and when you send SATA data with Dash D it defaults it sets the content type the content type is supposed to describe whatever are you sending usually many servers don't care about the content type it doesn't matter what the content type is they just expect some data to come and they will sort of assume that the client is sending the data in the right way so that's but curl sets this content type because it's this sort of default way to send post X www formula encoded a hint about the data is supposed to be URL encoded but you can change that right just set whatever content type you want and you can do that as a test if you want to use Services if they care about it or not most and you'll see that most services will not care about it some will um and of course recently within the last decade I don't remember five years ago I don't run uh we added also extra new support as a sort of an aliased Dash D that's just data to better send Json so if you want to send Json like this his name Daniel in a Json style I'm not really a Json guy but I did so I write this sort of Json looking things and I say it's Json so come on it's Json right so if you do this it puts this data and it says that it's Json it sets the right headers and makes it look proper Json to the server and you can do the same thing there you can read the Json from a file from disk and send it to the server and you can send it you know standard input as a Json and so on and it sets these this content type header and then accept header because it turns out that quite a lot of Json receiving ends at least then checks these content types and accepts basically just a convenient shortcut to send Jason you could send Json fine before that but now it's even easier because it's less options to use right and if you want to create Json to send it I can also only encourage you to try out the the command line called tool called Jo as a sort of a companion tool to JQ Json output maybe I don't know it makes it makes it easier to create a Json objects like this on the command line just Jo and I don't know Jo either but this creates a Json object passes it on to curl curl reads the Json from standard input as you see that at Dash thing and sends the Json with the right headers and everything to This Server really neat and if you want to then do the other way around when you get Json back from the server sometimes all or perhaps often you send Json to the server you get Json back and you want to parse that you of course know that there's this awesome tool called JQ that is a perfect tool for you to parse Json with and pretty print it and extract it and do whatever it's it's a very powerful tool so you if you get Json back pipe it into JQ and then you of course can do the magic triplet use Jo use Jo create a Json send it to curl send it to the server get Json back pass it on to the JQ awesome set success win profit everything so when you do this these are um usually URL as I mentioned before the default is the URL encoded content types that you see usually you send stuff URL encoded URL encoded meaning you encode everything that is part of the data that can't be part of URL you encode it as a percent encoding like percent two digits which is the ASCII or byte number for the byte so basically if you wanna send name John Doe you know percentage so sorry parenthesis Junior you know with some spaces and some parentheses and stuff here and you want it to be URL encoded and you want to post it to the server then we have the data URL in code option that does it for you it'll then send this blob over to the server because it'll URL encode all the stuff that's not safe to put in a URL which means in this case the spaces and the parenthesis so and you see they get encoded to their URL encoded versions which is a percentage sign and two digit hexadecimal bytecode and you can do this in in several different versions as you can encode content and you can sort of encode the name and you can read the content from a file and you can URL encode contents directly from a file and so on so it's a it's a powerful thing it helps you send data URL encoded in particular from from the command line when you maybe get data that is not properly URL encoded and you need to send it URL encoded you could do this um you can also then create everything for a post and then convert it to a get this is this is super crazy but if you do like this you want to send a post with the admin and shoe size this is example I used from the before right but convert it into a get and put that data instead of doing a post make it query a query part in the URL so basically you add dash dash get and ilden use that as a query part in the URL and make a get instead as then the request will look like this it's a super crazy thing basically don't make you to post get the data and convert it into query Parts instead and instead make it a get with that query I really recommend you using URL query instead the status get thing is an older invention created long time ago I think URL query is much more convenient way and a better way to do the building the query part and more powerful actually too when sending data to a server over HTTP actually over hdp 1.1 there's this concept of X called expect 100 continue basically it's a way to allow the server to because with HTTP 1.1 when you start to send data there's no way to really stop sending the data without sort of killing the connection so if you want to send a lot of data to the server you want to give the server away to say wait a minute we don't want it stop don't send me any data you're not allowed to until blah blah blah or something like that so there's this notion that you can send expect 100 continue which asks the servers to say please tell me everything is okay and then I will continue so Encore will use this if you're telling curl to upload something that is larger than one megabyte it's actually in some other cases as well but basically if you're going to send a lot of data to the server curl will add this header if we add this header we the the server is supposed to tell you go ahead sometimes the server doesn't know about this it'll just don't say anything then the curl will wait a while I didn't get any thumbs up I will go ahead anyway so it waits for a 100 to say go ahead if it it waits for a while and if it doesn't get it get out go ahead it will go ahead anyway sometimes if you know that it won't get that you can skip it basically ask Carl to don't use that header because we will not get the 100 continue so you can avoid wasting time you can also send data without knowing the size ahead of time we can basically Force curl to send a chunked encoding data for 1.1 server it's basically it's a way to send data but just without sending the total size ahead of time a convenient way to do it sometimes and especially if you send data from standard input or something when you don't actually know the data so basically when you when you a browser sends a post it does that as as a sort of a response to a form tag in HTML typically and a post is done sort of filling in the form and sending the form results back to the server that's that's the typical way to do a post or that's how browsers do post and when they do that they include all the the types the sort of in HTML there's input tags and they can be type hidden so they're not actually visible in the web page but their data that are sent to the server anyway and you just provide all the input Fields like this when you want to fake a want to look like a your submitting a form as a browser right and you need to check then because there's a action equals Target in that form tag in the HTML it actually says where what's the target to send the post to and again copy s curl is really your friend check whether your browser does when it's when you submit a form and you want to do the same form with curl do the copious curl and check what kind of uh request the browser did and then go from there okay a post can also be more complicated you can send more and more formatted more sort of structural way to send data to the server I call it the multipart Forum post that sends a number of parts in a structured way to the server it has a different content type it says multi-platform data it's a number of serious reports one or more this can actually be an unlimited number of parts usually a low number but there's no restriction to the number and each part has a name it has its own set of headers file name and more and it's a they're separated by mine boundaries I'll show you how it looks like basically like this this first a mine a mime boundary that's the line with dashes and a random number it's basically just a random thing it's a random thing it's a separator um and then there's there are headers for this part in this case it says name equals person and then there's content for this person Anonymous that's the content for this part and then a new boundary which the next part starts and that's new part it says name secret and that has a file name because it's a file attachment basically it's a file name so it has a content type text plane and then there's contents of that file and then there's another mime boundary and this mind boundary by has a actually ends with two dashes which means it's the final one so this is two parts a two-part multi-part form multipart Forum post yeah so this is how it looks like and this is typically how you do file uploads with browsers or Whatever Whenever you you know you get the file selected to select an image or file or something you upload it that's how a web browser does it and that's how you can do it with your crawl as well and if you want to do it with curl you use the dash capital F option and you do sort of specify what kind of content for each part you want to upload so and you do as many parts as you want you can I mean there's no limit to how many you do them so it could be that simple person is anonymous it could be name is Daniel it could be name reading the content from a file it could be some sort of Faking a file upload instead of you get the name as a file here and it'll set it as a file name in the in the multi-platform so it looks like if like one of those uploaded file things and you can set a different file name in the upload or sort of in the post then that you actually used to read from and you can set a different content type there's a plethora of different alternative options here basically this is how to sort of do the same things as the browsers do when they get this Inc type multi-platform data thing in the form tag very convenient and Powerful so when do you use D or Dash have two different kinds of posts right different contents different ways to do them in both sense if HP posts they both work over any HTTP version and both sort of can fill in forms form tag uses different I mean you can see in the form tag which different kind the server expects and you can rarely just pick anyone you want it's typically the server who decides because the server has you know code in the other end that's check stuff and parses and decode stuff and it usually doesn't you know handle either or ill want one of them and you need to pick the one that it wants for Success at least uh yeah and you know maybe this is not news to anyone but the HTTP also has this redirect concept so basically instead of returning the data right now it has it doesn't it actually is not here it's over there and it's a three zero something Response Code in this case a 301 and and this is a location header in there so the location says it's actually over there now go look there and there are different response codes uh the different response codes are different actually different time Scopes and you act differently you modify the method differently when you follow the redirect so the time the response code is actually it matters but usually you don't have to think about it you just if you just ask ask Carl to get this resource and you get a location like you get a response go through your code 301 back you could ask you got it back if you add this dash dash location option that's capital L it will ask Carl to follow that redirect over to the fall of their location wherever it points and it'll do that so in this case very easy this is and this web page curl um curl capital L curl dot SE right and this is using HTTP and since the site says oh if you're an HTTP redirect to the https version so if you see contents here now we see that it actually followed the redirect and if we use Dash V we can and if we can even you know hide the output just use the verbose output and then we scroll up a little bit and then we can see that it first connect the connected to the plain text version it got a new location and then it got blah blah blah issue another request to this URL and then got the day for other one and of course you can set maximum number of redirects to follow because sometimes it'll end up in a loop so it'll just never stop following redirects and so it can be convenient to set the max number um and if you're using credentials or sending a username like you know username password typically that password and username will not be passed on to other host names other than the first and just the one used in the first request but sometimes you want it to be transferred to the ones you're following then you use this location trusted instead and you really want to avoid the dash capital x I mentioned this before but in particular in combination with location you you will get sad faces all over if you try that it's not going to be fun so avoid Dash capital X and when you want to play with a request of course you can do all sorts of fun things but you should remember that curl tries to be sensible and basic by default you know if you use Curl and the URL it makes a get by default you do you don't ask for get to be used it's just that if you use Curl Dash D and send in post it'll do a post by default you don't have to ask for it but it also means that it'll be in sort of a No Frills version so if you want to do if you want to add bells and whistles you have to tell Carl to add stuff you can modify along like you can modify the method with request if you want to send a delete method do that just request delete and it'll send a delete instead of a get by default you can change headers with the dash dash header option you can add headers you can change headers you can remove headers and you can send blank headers with dash dash header um that's the short version is called Dash uppercase Capital H right like this sun in this example here includes the new header curl Master very soon to this in this request very useful maybe not but who knows you could actually add a useful header but you can also do it like this this is I mean by default code will send the host header but if you set your own host header you will replace the one that curl would use by default so if by setting one that curl would use you override it and you say hey use my version instead I know better this is going to be fun and you can provide a completely wrong one or you can do it like this if you don't provide any content on the right side of the colon like this user agent colon you say you tell curl to don't use your own version in fact don't use any at all it just remove this header from their default request so it'll send the same request except this particular header and you can of course combine everything all this in the same request if you want to and if you use this magical trick and use a semicolon instead of a colon basically user agent semicolon it means send this header but with a blank content on the other side of the colon so basically no no value for this header which is rather unusual but still you can do it it's fun and you could modify the request in other ways for example the target is called the thing the thing but when you do a HTTP request basically what you're asking for is a path plus query right in this case slash user slash profile Quest question mark shoe size equal 12. that's the target this made it comes from the URL right that's the target what's the ask you ask the server for this and you can if you want to you can set the target to something more crazy than than you can set in the URL for example if you want to send a request Target this is just an asterisk it's not possible to actually set just an asterisk in the URL because it's always a slash in there so if you want to send options asterisk to This Server here's how you do it yeah there's also some convenient shortcuts like if you want to set user agent you don't have to do an application age setting header this this user agent and I set a string it even has a short version called Dash capital A you can set a referral and referral is another header yes it's spelled wrong but it's a way to tell the when you get a resource you can tell I came from this other place the other place redirected me here when I got or so I followed the link from there usually sort of um maybe privacy leaks but so use it with with care but that's at least a convenient thing and again obvious curl and you can know you can sort of learn how to browser would do it and then edit that line and and do have fun it's a more uploady thing pretty much it's this https lingo to replace a remote remote resource right put my file here remotely the entire file over there post it more sending data to another place put is sending you're sort of replacing the file over there and if you do the upload as you do without all the other protocols with curl like this you could do it from standard in you can put the file and if the file name is not at the end of the URL like in this case you see the URL doesn't end with a file name it will put the local file name on the end of the URL you can even do this globbing thing with upload so if you want to upload 100 a thousand actually a thousand images like this in a single command line have a go at it and it'll upload 1000 images to the asputs and oh yeah you can do that without the kind of globbings as well and if you want to do fancy you want to go crazy you can use that uppercase X as I told you not to but if you want to do it you know provide the data to put with Dash D which otherwise would do a default to post you can actually check change the post to put like this so you can be creative with curl and no worries so okay when you do when you work with the your random servers these days you also want to speak cookies right cookies is a way for a server to send key value pairs to the client you access something on the server and and the server tells the client save this and the curl will sorry the client will send it back on subsequent requests on some conditions right when the properties match and curl supports this of course each cookie has an expiration date um or a sort of or end of session so it lives for a while or end of session there's also a session is kind of not defined what is a session typically a session end when a user closes the browser but these days like but there's a lot of browsers that never close so basically those sessions never ends but but anyway that's sort of that's a cookie session it's a little bit weird but that's ignore that but that's just how it don't ignore it but just keep it in mind so when you run a command curl command line right that sort of mimics a browser or does a lot of things uh when does the session end it doesn't really end right there's no session for for when you do 22 different curl command lines but maybe you want it you you should still be able to tell crawl that's let's mimic a browser Clips basically I'll get to it you'll understand it's not that complicated so basically you can tell Carl to send specific cookie names with values because it's fun usually you don't actually know exactly what to send but maybe you want to send that the cookie that calls my name is Daniel I talk a lot to the example yes easy busy just specific cookie that's rarely what you want to do but you can do that and and often that's exactly how you get the command line from copy as curl because it will save exactly the cookie it would send you it would have sent is rarely the way you want it because you actually rather wanted to send the cookie contents that you got in a previous request not this exactly every time but the last one because it's going to be dynamically updated right so usually you want to do it like this first of course curl ignores cookies by default so you want to sort of enable cookies and you do that we call it cookie engine so that enable it and you enable it by for example specify a file to read from or use a blank string and you can use the dash B again here so by doing this you enable the cookie engine and in this case of course it doesn't really matter but just you just get one file you don't save the cookies anywhere so it doesn't matter if you enable cookies here but if you would follow redirects here um then it's a good thing because then you enable redirects enable cookies and then if this then the first page sets cookies redirects to the second page again curl will then send cookies in the in the second request if they should be sent and keep the cookie onion then keeps those cookies in memory related to this of course and it it forgets cookies automatically then that that expires if any expires I mean they set a time right so if the process process is slow and there's a short expiration time they will expire while Carl handles them so sort of it follows the rules it abides by the ruins it does what it should do for cookies and of course it only sends them back according to the rules because that's how cookies work right they're defined and when you want to save them Current Saves them if we say to me what we call a cookie jar that's this that's the storage we save cookies in and you when you exit when curl exits when it's it's done you can ask curl save everything save all the cookies in the bra in the cookie jar I'm getting I've talked a lot now okay uh so when Kurt is done save all the cookies in the cookie jar and you do and you tell Carl to do that with the dash C option so pick some basically like this in this example follow redirects enable the cookie engine by by this default read nothing and then save at the end of the session save everything to cookies.txt if there is anything to say if there were no cookie set it will not save anything it will just be a blank file and by by I just want to emphasize that since Dash B and dash C they both take file names so you can make it read from one file and write to another file or they could be the same file usually they the same file you don't have to have them the same file I just wanted to sort of remember that so usually when you when you play around with this you you set the dash B and dash C to the same file name because it's then it reads the old cookies from the file if it upstates them it'll update it'll rewrite the new ones or the current new set to the file back again just over and over so you can have that in your Chrome job and your scripts like this for example you sort of do this every time and it'll just maintain the cookie State correctly in in the cookies.txt file yeah it uses it so this so-called Netscape cookie format we call it like that because Netscape the browser actually sort of created that cookie file format once in the 90s it was used for a while by other browsers but the browsers then switched away from that but curl did not switch away from that so curl still uses that it's a very simple text based format where each cookie is a single line with tap separations and okay and as I mentioned there are session sessions then so some cookies are stored sort of for a session they don't have any specific expiration data they live for a session so you have to tell Carl when the session ends when does the session ends in Carl you don't actually tell when the session ends you tell when there's a new new session so we have this news and we have this option called dash dash junk session cookies it's I believe it's could be a short option for that yeah the dash capital j it basically says load old cookies again with Dash B yes normally but throw away all session cookies because the the session is now gone this is a new one so all the old the ones that we already have they are part of the past session they're gone throw them out this is I mean you actually rarely use this but this is a way to sort of clean up the the session cookies okay I told you before that HP versions are rarely that much to care about it's just it'll just be used by defaults and sort of automatically and version two changed how things are sent over the wire but but it's typically curl doesn't really show that it tries to hide it it converts everything and makes it looks like HP one as it looked like before it tries to negotiate HTTP 2 for all https and you can make it use hb2 or try to use it to be too even for ATP transfers if you just ask it to it's sometimes a recipe for disaster so maybe not go overboard and do it too much basically because of how I mean the internet and servers work not because of what kernel does and if you have the opportunity to do use hb2 the good part with HTTP 2 is that it can do Multiplex transfers meaning it can do multiple transfers over the same connection so if you do Multiplex transfers using the capital Z you know many transfers at the same same time if you use HTTP 2 it might actually use Multiplex transfers so it doesn't have to even when you do 50 parallel transfers it doesn't have to do 50 parallel connections it can do much fewer connections hopefully possibly in the ideal case nhb3 being the new kid in in in town then it's still experimental so you don't have it enabled by default you have to enable it in your build most people who do it we discourage people from use it in production it's changed again how it's done over the wire right so it's now done over quick it's not TCP it's not TLS it's now quick it's a new transport protocol done over UDP it replaces TCP and TLS it's a completely new thing everything is different it is even more encrypted how it's more hides more things over the wire but again the fact that it is so different over the wire and different in many kinds in many ways it's sort of hidden to the users of the curl tool so you don't have to care about it it's only for the sdps I'm I mentioned before and you can ask curl to use hp3 or attempt to use it to B3 if you use this option HTTP 3. and we have this fun race when you use this so HTTP 3 rate races against the older FTP versions and you pick the winner you remember I mentioned the happy eyeballs thing when when we sort of raise a ipv4 versus IPv6 when we do a connection so we had a white IPv6 car and the red ipv4 4 car and the one that sort of wins the race gets the connection and now when we ask for hdb 3 we add another dimension to this and and let me show you all right I forgot to mention that to it so if you do this if you do this well again multiplexed transfers work with hp3 so if you use parallel transfers it could do Multiplex transfers same as for hp2 but different connections so HTTP 3 racing fun stuff so then we have this curl client laptop again you want it it wants to talk to curl.sc it resolves the hostname from the DNS it's get that a huge list of HTTP sorry sorry IP addresses as I mentioned eight IPv6 addresses four ipv4 addresses and it then starts the HTTP 3 IPv6 car and it got it gets done all the IPv6 addresses to try try to do a to B3 which then means over quick for IPv6 to this and and slide with a slight delay we start the hp3 ipv4 car which gets a set of ipv4 addresses just try try to set up quick to this these addresses and and again then slightly after it delayed a little bit more we set up the HTTP 2 IPv6 attempt and then if slightly after that we set up the HTTP 2fpv4 attempt so the ipv4 attempts here used ipv4 addresses and IPv6 attempts used IPv6 addresses and the first who wins then wins and all the ones that sort of didn't win they will get discarded and thrown away it it gives um its three a small Edge because in this case you ask for hp3 support right so you you wanted it to be HTTP 3 but in case of hb3 gets problems it's slow it's bad and there should be three cars will not succeed and then the fastest atp2 car will win instead and in this case I mentioned it to be two cars here that goes HTTP 2 in this case is a negotiation between H1 and H2 so you'll pick H1 or H2 depending on what the server can speak fun stuff rather complicated but it works really well in in reality and it makes it makes so that Carl picks the one that works and is the fastest answer in HTTP we also have other fun things getting really into the weeds of the HP details we have this I like this finger pointing over there because this is the old service the same service also exists over there it's an alternative service over there it's like that finger pointing so it's over there for a certain number of seconds into the future and it's all service response header and this is how um the server can say that I also exist over here possibly different version different Source replace hostname and so on it has an expiry time and it's only over https but um can then save these Alternatives and you can ask Carl to use these Alternatives in your follow up request so basically save the Alternatives now do a second request use the Alternatives and then you can go to the SEC to the sort of like this saved Alternatives if there are alternatives this time use them so then you might not go to the same server anymore and could go to complete a different host name because example.com told us that there's an alternative that it wants us to use pretty neat thing this is the official way to switch to hp3 that's how the standards mandate things to do so once you have HTTP 3 supporting curl you might want to do it this way it's a text-based readable file and you can read it you can edit it you can do whatever you want you can also um a slight variation of the old service it might you can say is the hsts thing which is high this HTTP strict Transport Security which is a way to for the server to tell the client to tell Carl don't contact me over clear text HTTP anymore for this amount of time into the future basically it's a way to so as I showed you before how curl when I accessed curl.sc with HTTP HTTP being an unauthenticated insecure protocol we want to avoid going to using clear text protocols so we don't want to go with a clear text protocol to have that upgraded to https because that HTTP face is an insecure weak point right so once we've done that once we can save the hsts data says we should never for this host time we should never speak clear text again until this expires and it the service says this with this strict Transport Security response header and Curve will save that in a file if you ask it to and then you can tell current to use it and then it'll in this case if if we had saved that hjss data for this example.com site and we use this hdsts cache it will not go to the over clear text again it'll then automatically internally switch to the https version thus avoiding clear text thus avoiding the insecure part and insecure a sort of avoiding the attack risk or the vulnerable vulnerable point in time where someone could eavesdrop or interfere or do something bad and that again is a text-based file that curls saves and reads data back from right we're we're on three and a half hours so slightly over time but as you can see here down at the bottom right and we are only 12 slides away from the end I hope you all are hydrated awake or or so so I think by by reaching the end of HTTP we also reach the end of the you know the super popular protocols that people use Curl with but I still wanted to get into FTP is still used by two digit percentage of users at least when I ask them so I wanted to get into some details we'd have to pay FTP being a little bit of a legacy protocol it's not used much it's sort of you know possibly slowly dying and windling away but still first I want to emphasize because this is so common you know ftps is not SFTP it's the same letters in a different order but they completely different that's an apple that's an orange they are different do not confuse them they're they're actually it actually matters in which whatever you put the letters they're super different one is done with TLS one is done with SSH they actually have basically nothing in common apart from them using the same letters in the acronym it's not an acronym is it it's an abbreviation or whatever it is okay first what makes FTP funny weird strange complicated ugly yet super annoying to work with that is it uses two connections to do transfers yes two how does it do two connections and why well basically you set up when you you communicate when you want to do a transfer the curl connects to the FTP server it first sets up a connection and it speaks to the server it authenticate says hello and you log in and it's chain communicates and then it has to set up a second connection to do the actual transfer and this second connection adds complications for everyone involved for firewalls for Network setups for for this an insecure part in it so it's really really difficult to manage um and um so if that is not enough you can do that second connection two different ways you can do it in the active way or the passive way so you can ask the server to connect to you or you to connect to the server for that second transfer the passive way is default and it is default just because it's a higher chance of actually working while active is even less of a chance to work because I'll show you it works like this look at that the client curl laptop wants to talk to the FTP server there's actually no FTP server on that host name but it doesn't matter it's an example so when it does that you know it curl connects over the network on the it's accepted control connection to the server exactly like it does for any other protocol you know TCP to This Server over there it actually does this it's one of these I call Ping Pong protocols because there's a lot of command and response command and response several times back and forth to to instruct the server to do things and then to do the transfer we either do the set up the connection to the server or from the server passive or active and if we want the server to connect back to us that is usually a problem because we have firewalls routers Network equipment whatever it's really hard to allow the server to connect back to the client because the client is usually Beyond a lot of fluffy networky stuff so it's complicated anyway both of them are complicated in this if the piece is basically always authenticated typically Carl uses the default Anonymous user and this password called FTP at example.com um but it doesn't matter if it's basically on on the Miss right but you set the user password like normal look all the other protocols like this with curl if you if you have if you want it to be authenticated typically if you want to upload it with you have to pay you have to log in first and you can do directory listings with FTP and then you just add a trailing slash because curl doesn't really know what is the directory what's the file name if you don't add that trailing slash on on the like this there's a trailing slash here it means that it's the directory so Curve will make a directory listing out of this but if you don't add the slash there you just add with Linux kernel thinks that's the file name so it'll ask for that file to get transferred which if it's actually directory will just cause failure and if you get a direct release thing you will notice that that's not a standardized look it it might look completely different on the complete on another server it's just basically the server doing something now to providing a human readable directory list which is super annoying if you want to parse that directory with a machine you can make it slightly better by asking for list only which is a different command that you send to the server which then only lists the file names in that directory which makes it a little bit easier but there's still lots of caveats and FTP is is a weird protocol in general it's a old and weird and if you want to upload again curl Dash capital T you normally want to be uh have a user um name and password because service rarely allow that for anonymous users and again you put the file name at the end and so on with FTP you can also append to the remote file right by adding Dash app and it will not only upload to that file on the other side it will ask the server to append this local data to the remote file and you can also create file directory sort of files on the remote side so to create a directory hierarchy on the other side so if you want to upload this and some of those directories are not existing remotely try to create them when you do this upload operation and of course you want to go with TLS always go with the authenticated version of all the protocols and then you add this SSL required to the command line and then you can still keep using the FTP colon it doesn't have a s in the URL scheme right but it SSL required means that it's required to upgrade into TLS or fail so you can be sure that it will still use ftps sort of the secure version you can also use ftps colon slash but that's called to use implicit TLS and there's actually rarely supported by servers so you will see that you can try it with your server but you it would most likely fail because that's another way to do it more of a non-standard way if the pass is even more problematic for for the firewalls and stateful firewalls you know the second connection coming back or going out is even more complicated because in the ftps case when when when you have a encrypted control Channel no one can actually even then know when to open which ports and so on which you could otherwise see in the FTP communication but with ftps that's completely impossible that makes it even less likely to actually work so if the paths really difficult to get to work um in general unless I mean within your networks or stuff in more controlled environments sure but over the internet complicated and end now we are on slide 149 and we are tired by now right I think we probably dropped about everyone in the chat all the listeners are gone but never mind their future first of course let me just remind you get back to the fact that how do you get into this deeper so curl is of course everything sort of it's accumulated results and experience from from a lot of time a lot of experiments a lot of testing and a lot of a user report so it's if it's not always very easy to understand sort of um everything because it's sort of we've changed we did things from the beginning that maybe wasn't done in the most clever way and so when we do things again we make them in a better way but then you might see that it's a little bit inconsistent so maybe we added a feature back in the days and now when we add this roughly the next generation of the same thing it's slightly different and that's why because of that we learned things we were we were all kids in the beginning now we understand a little bit more so things are actually done better now but then and also thanks to the fact that we we don't break behaviors right so we added that slightly crazy option 22 years ago we still support that slightly crazy option today because we decided to keep the functionality right so that's one reason why some things are a little bit sort of maybe not ideal but for the great part of things are there and also that's also we've been at it for a while so we have 257 options now so read the band page read every uh I mean don't read it search in them and find exactly what you want to read don't read everything and tell us if you find any problems and there's of course you can always go down to the source code and you can always ask anyone if you if it doesn't help if you don't find the problems uh yeah I mentioned everything Carl this is the URL everything.curl.dev it's really um I shouldn't say complete it's never going to be complete but I'm trying to cover pretty much all functionality and it's pretty much sure everything I mentioned today in in my super long video is is detailed even more in the book so if if you didn't understand it if if my talk was incomprehensive or or just go there and read a book and and if you still don't understand it ask and we will clarify and it will be better in the next uh commit so I want to just go out and emphasize and sort of curl we celebrated 25 Euro curls and earlier this year called of course as I mentioned curl was also just the third name of this project so it actually existed before it was curled but still curl the name the project we didn't call it the girl project until it was named curl so it's 25 years old it's been growing and developed for 25 years its entire lifetime it has changed there's a development speed that is increasing still increasing after 25 years so that combined with the fact that the internet doesn't really stop or slow down I mean it keeps changing we don't do things today like we did even five years ago so compared to 15 years ago things are different so curl needs to keep up so if we want to do internet transfers with curl we need to keep up and modifying and improving curve all the time right because Protocols are new ways of doing things change all the times I mean new version systems Concepts everything changes and I mean there's no slowdown in in general internet development right or anything in the world things typically don't slow down really it's you know it just things keep moving so we have to keep up and keep moving with with everything around us so reasonably we will keep doing this and we will keep expanding and adding stuff and and everything I've said today I mean there's a risk that it still feel outdated in a while because we will keep adding things and keep changing things and improving things and we do whatever we think we should do right I I like to say that curl is just code right it's just code we can make it do whatever we want it's just code so as long as we agree that this is the right thing to do we can just do it it's this easy and where I mean Carl is the result of a community and the wishes of a community and we go forward to where we want it to go and we have the luxury in the car project that we are completely independent we don't we don't go by anyone's rules right we're not owned by a project a particular company we're not even in an in any umbrella organization or anything we can do whatever we want so you can certainly affect what's next for curl so I try too often to ask people and you're always welcome to tell me tell us what you think about whatever we're trying to do and whatever you want us to do because it's helpful we want we need to get everyone's well maybe not everyone's but as many people as possible to get involved in and tell us what's right and what's wrong so that we get more get correct get feedback for for sort of to take the decisions so you can certainly help and and affect them and change things for what's going forward and by that we are at the end I'm at three hours 38 minutes by my count and it's been it's been a while thank you for for enduring this and for listening uh I know there's a plenty of people left in the chat at least not everyone has died yes yet so any questions in the chat room did I did I forget any any important stuff did I stumble did I I don't see any questions but I'm going to just sit here and mention I could go back to the beginning and say this was the mastering the curl command line session I didn't find too many typos I just I detected that I had missed animation on a few slides but I was fine I I had a few typos I think but yeah all in all pretty good so um this was what I did get crammed into this presentation yeah so there's this joke about someone missing the beginning and asking if I could start over but yeah of course I will make this available on YouTube I'm going to stop the recording right now ","recorded":"2025-01-10 22:43:54.815951665","filePath":"null","pinned":false},{"value":"https://youtu.be/V5vZWHP-RqU?si=kPYEWRjkoPDoINvx","recorded":"2025-01-10 22:42:05.542476562","filePath":"null","pinned":false},{"value":"exec-once = ~/dotfiles/waybar/.config/waybar/launch_waybar.sh\n","recorded":"2025-01-10 22:27:59.817655686","filePath":"null","pinned":false},{"value":"exec-once = waybar -c ~/.config/waybar/config.jsonc -s ~/.config/waybar/style.css \u0026\n","recorded":"2025-01-10 22:27:57.762033048","filePath":"null","pinned":false},{"value":"* {\n  font-family: \"JetBrainsMono Nerd Font\";\n  font-size: 11pt;\n  min-height: 10pt;\n  font-weight: bold;\n  border-radius: 0px;\n  transition-property: background-color;\n  transition-duration: 0.5s;\n}\n@keyframes blink_red {\n  to {\n    background-color: rgb(242, 143, 173);\n    color: rgb(26, 24, 38);\n  }\n}\n.warning, .critical, .urgent {\n  animation-name: blink_red;\n  animation-duration: 1s;\n  animation-timing-function: linear;\n  animation-iteration-count: infinite;\n  animation-direction: alternate;\n}\nwindow#waybar {\n  background-color: transparent;\n}\nwindow \u003e box {\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n  background-color: rgb(30, 30, 46);\n}\n#workspaces {\n  padding-left: 0px;\n  padding-right: 4px;\n}\n#workspaces button {\n  padding-top: 4.5px;\n  padding-bottom: 4px;\n  padding-left: 6px;\n  padding-right: 6px;\n}\n#workspaces button.focused {\n  background-color: rgb(181, 232, 224);\n  color: rgb(26, 24, 38);\n}\n#workspaces button.urgent {\n  color: rgb(26, 24, 38);\n}\n#workspaces button:hover {\n  background-color: rgb(248, 189, 150);\n  color: rgb(26, 24, 38);\n}\n#workspaces button.active {\n  background-color: rgba(248, 189, 150, 0.5);\n  color: rgb(26, 24, 38);\n}\ntooltip {\n  background: rgb(48, 45, 65);\n}\ntooltip label {\n  color: rgb(217, 224, 238);\n}\n#custom-launcher {\n  padding-left: 8px;\n  padding-right: 6px;\n  color: rgb(201, 203, 255);\n}\n\n#mode, #clock, #memory, #temperature,#custom-cpuinfo,#cpu,#mpd, #idle_inhibitor, #temperature, #backlight, #bluetooth, #pulseaudio, #network, #battery, #custom-powermenu, #custom-cava-internal {\n  padding-left: 10px;\n  padding-right: 10px;\n}\n/* #mode { */\n/* \tmargin-left: 10px; */\n/* \tbackground-color: rgb(248, 189, 150); */\n/*     color: rgb(26, 24, 38); */\n/* } */\n#memory {\n  color: rgb(181, 232, 224);\n}\n#cpu {\n  color: rgb(245, 194, 231);\n}\n#clock {\n  color: rgb(217, 224, 238);\n}\n#idle_inhibitor {\n  color: rgb(221, 182, 242);\n}\n#temperature {\n  color: rgb(150, 205, 251);\n}\n#custom-cpuinfo {\n  color: rgb(150, 205, 251);\n  /* color: rgb(201, 203, 255); */\n}\n#backlight {\n  color: rgb(248, 189, 150);\n}\n#pulseaudio {\n  color: rgb(245, 224, 220);\n}\n#network {\n  color: #ABE9B3;\n}\n\n#network.disconnected {\n  color: rgb(255, 255, 255);\n}\n#battery.charging, #battery.full, #battery.discharging {\n  color: rgb(250, 227, 176);\n}\n#battery.critical:not(.charging) {\n  color: rgb(242, 143, 173);\n}\n#custom-powermenu {\n  color: rgb(242, 143, 173);\n}\n#tray {\n  padding-right: 8px;\n  padding-left: 10px;\n}\n#mpd.paused {\n  color: #414868;\n  font-style: italic;\n}\n#mpd.stopped {\n  background: transparent;\n}\n#mpd {\n  color: #c0caf5;\n}\n#bluetooth {\n  color: #ABE9B3;\n}\n#custom-cava-internal{\n  font-family: \"Hack Nerd Font\" ;\n}\n","recorded":"2025-01-10 22:23:51.564802551","filePath":"null","pinned":false},{"value":"* {\n  font-family: \"JetBrainsMono Nerd Font\";\n  font-size: 11pt;\n  min-height: 10pt;\n  font-weight: bold;\n  border-radius: 0px;\n  transition-property: background-color;\n  transition-duration: 0.5s;\n}\n\n@keyframes blink_red {\n  to {\n    background-color: rgb(242, 143, 173);\n    color: rgb(26, 24, 38);\n  }\n}\n\n.warning, .critical, .urgent {\n  animation-name: blink_red;\n  animation-duration: 1s;\n  animation-timing-function: linear;\n  animation-iteration-count: infinite;\n  animation-direction: alternate;\n}\n\nwindow#waybar {\n  background-color: transparent;\n}\n\nwindow \u003e box {\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n  background-color: rgb(30, 30, 46);\n}\n\n#workspaces {\n  padding-left: 0px;\n  padding-right: 4px;\n  height: 30px; /* Ensure uniform height */\n}\n\n#workspaces button {\n  padding: 4px 6px;\n  height: 30px; /* Fixed height for consistency */\n  box-sizing: border-box; /* Avoid size changes */\n  background-color: transparent; /* Remove hover box effects */\n  border: none;\n}\n\n#workspaces button.focused {\n  background-color: rgb(181, 232, 224);\n  color: rgb(26, 24, 38);\n}\n\n#workspaces button.urgent {\n  color: rgb(26, 24, 38);\n}\n\n#workspaces button:hover {\n  background-color: rgb(248, 189, 150);\n  color: rgb(26, 24, 38);\n}\n\n#workspaces button.active {\n  background-color: rgba(248, 189, 150, 0.5);\n  color: rgb(26, 24, 38);\n}\n\ntooltip {\n  background: rgb(48, 45, 65);\n}\n\ntooltip label {\n  color: rgb(217, 224, 238);\n}\n\n#custom-launcher {\n  padding-left: 8px;\n  padding-right: 6px;\n  color: rgb(201, 203, 255);\n}\n\n#mode, #clock, #memory, #temperature, #custom-cpuinfo, #cpu, #mpd, #idle_inhibitor, #temperature, #backlight, #bluetooth, #pulseaudio, #network, #battery, #custom-powermenu, #custom-cava-internal {\n  padding: 5px 10px;\n  height: 30px; /* Uniform height for modules */\n  box-sizing: border-box; /* Prevent size changes */\n}\n\n/* Module colors */\n#memory {\n  color: rgb(181, 232, 224);\n}\n#cpu {\n  color: rgb(245, 194, 231);\n}\n#clock {\n  color: rgb(217, 224, 238);\n}\n#idle_inhibitor {\n  color: rgb(221, 182, 242);\n}\n#temperature {\n  color: rgb(150, 205, 251);\n}\n#custom-cpuinfo {\n  color: rgb(150, 205, 251);\n}\n#backlight {\n  color: rgb(248, 189, 150);\n}\n#pulseaudio {\n  color: rgb(245, 224, 220);\n}\n#network {\n  color: #ABE9B3;\n}\n\n#network.disconnected {\n  color: rgb(255, 255, 255);\n}\n#battery.charging, #battery.full, #battery.discharging {\n  color: rgb(250, 227, 176);\n}\n#battery.critical:not(.charging) {\n  color: rgb(242, 143, 173);\n}\n#custom-powermenu {\n  color: rgb(242, 143, 173);\n}\n#tray {\n  padding-right: 8px;\n  padding-left: 10px;\n}\n#mpd.paused {\n  color: #414868;\n  font-style: italic;\n}\n#mpd.stopped {\n  background: transparent;\n}\n#mpd {\n  color: #c0caf5;\n}\n#bluetooth {\n  color: #ABE9B3;\n}\n#custom-cava-internal {\n  font-family: \"Hack Nerd Font\";\n}\n\n/* Ensure consistent hover states */\n#mode:hover, #clock:hover, #memory:hover, #temperature:hover, #custom-cpuinfo:hover, #cpu:hover, #mpd:hover, #idle_inhibitor:hover, #backlight:hover, #bluetooth:hover, #pulseaudio:hover, #network:hover, #battery:hover, #custom-powermenu:hover, #custom-cava-internal:hover {\n  background-color: transparent; /* Prevent size changes on hover */\n  color: inherit;\n}\n","recorded":"2025-01-10 22:23:51.530242323","filePath":"null","pinned":false},{"value":"/* Global Styling */\n* {\n    border: none;\n    font-family: \"JetBrainsMono Nerd Font\";\n    font-weight: bold;\n    font-size: 11px;\n    min-height: 10px;\n  color: rgba(255, 200, 0, 1);\ntext-shadow: 0 0 5px rgba(0, 0, 0, 0.7);\n}\n\n@import \"theme.css\";\n\n/* Main Background */\nwindow#waybar {\n    background: @background;\n    color: @foreground;\n    /* Adjust text color globally */\n}\n\n/* Drop Shadow (No Border Color) */\nwindow#waybar\u003ebox {\n    background-color: transparent;\n    box-shadow: 0px 0px 6px 2px rgba(0, 0, 0, 0.8);\n    /* Subtle black glow for depth */\n    margin: 2px 2px 2px 2px;\n}\n\n/* Tooltip Styling */\ntooltip {\n  background: @main-bg;\n  border: solid;\n  border-width: 1.5px;\n  border-radius: 8px;\n  border-color: @main-br;\n}\ntooltip label {\n  /* color: rgba(255, 77, 0, 1); */\n  color: rgba(255, 200, 0, 1);\n  font-weight: bold;\n  margin: 0.25px;\n}\n\n/* Workspace Button */\n#workspaces button {\n    color: rgba(255, 255, 0, 1);\n    background: @background;\n    /* Text matches the main theme */\n    border-radius: 8px;\n    margin-top: 2px;\n    margin-bottom: 2px;\n    padding: 0px 1px;\n    /* Adjusted padding for a cleaner look */\n    transition: all 0.3s ease;\n}\n\n/* Active Workspace Button */\n#workspaces button.active {\n    color: #fff;\n    /* White text */\n    background: @active-bg;\n    /* Fiery red background */\n    text-shadow: 0px 0px 4px rgba(255, 77, 77, 0.8);\n    /* Glow effect for active */\n    box-shadow: none;\n    transition: all 0.4s cubic-bezier(0.55, -0.68, 0.48, 1.682);\n}\n\n/* Hover Effect for Workspace Buttons */\n#workspaces button:hover {\n    color: @active-fg;\n    /* White text for hover */\n    background: rgba(255, 77, 77, 0.4);;\n    /* Warm orange background */\n    box-shadow: 0px 0px 4px rgba(255, 77, 77, 0.8);\n    /* Orange glow */\n    transition: all 0.3s cubic-bezier(0.55, -0.68, 0.48, 1.682);\n}\n\n/* Custom Text Colors */\n#clock,\n#cpu,\n#memory,\n#network {\n    color: rgba(255, 200, 0, 1);\n    /* Ensure consistent text color for modules */\n}\n\n/* Tooltip Text */\ntooltip {\n    /* color: #ffffff; */\n    /* White for readability */\n}\n\n/* General Module Styling */\n#custom-ws,\n#workspaces,\n#window,\n#custom-cpuinfo,\n#memory,\n#network,\n#cpu,\n#clock,\n#custom-wifi,\n#pulseaudio,\n#idle_inhibitor,\n#backlight,\n#battery,\n#custom-power {\n    opacity: 1;\n    margin-bottom: 0px;\n    padding-right: 4px;\n    padding-left: 4px;\n    text-shadow: 0px 0px 2px rgba(0, 0, 0, 1);\n}\n\n/* General Left Arrow Styling */\n#custom-left1,\n#custom-left2,\n#custom-left3,\n#custom-left4,\n#custom-left5,\n#custom-left6,\n#custom-left7,\n#custom-left8 {\n    font-size: 11pt;\n    text-shadow: -1px 0px 2px rgba(0, 0, 0, 1);\n}\n\n/* General Right Arrow Styling */\n#custom-right1,\n#custom-right2,\n#custom-right3,\n#custom-right4,\n#custom-right5 {\n    font-size: 11pt;\n    padding-right: 3px;\n    text-shadow: 1px 0px 2px rgba(0, 0, 0, 1);\n}\n\n/* Color Definitions */\n@define-color workspaces #181825;\n@define-color cpuinfo #181825;\n@define-color memory #1e1e2e;\n@define-color cpu #313244;\n@define-color arch #9399b2;\n@define-color time #313244;\n@define-color date #1e1e2e;\n@define-color wifi #181825;\n@define-color pulseaudio #181825;\n@define-color backlight #1e1e2e;\n@define-color battery #313244;\n@define-color power #6c7086;\n\n/* Window Icon */\n#custom-ws {\n    background: @background;\n}\n\n/* Workspaces */\n#custom-left1 {\n    color: rgba(255, 77, 77, 0.15);\n    background: @background;\n    padding-left: 2px;\n}\n\n#workspaces {\n    background: #000000;\n    /* background: rgba(255, 165, 79, 0.1); */\n}\n\n#custom-right1 {\n    color: rgba(255, 165, 79, 0.15);\n    /* background: @background; */\n}\n\n/* Temperature */\n#custom-paddc {\n    padding-right: 3px;\n}\n\n#custom-left2 {\n    /* color: rgba(255, 165, 79, 0.2); */\n  color: rgba(255, 77, 77, 0.3);\n    background: rgba(255, 77, 77, 0.15);\n    /* border-radius: 10px; */\n    /* padding-left: 3px; */\n}\n\n#custom-cpuinfo {\n    /* background: rgba(255, 165, 79, 0.1); */\n  background: rgba(255, 77, 77, 0.3);\n    padding-left: 1px;\n    padding-right: 0px;\n}\n\n/* Memory */\n#custom-left3 {\n    color: rgba(255, 77, 77, 0.3);\n    /* background: @cpuinfo; */\n    padding-left: 3px;\n}\n\n#memory {\n    /* background: rgba(255, 165, 79, 0.1); */\n  background: rgba(255, 77, 77, 0.3);\n    padding-left: 1px;\n    padding-right: 0px;\n}\n\n#custom-kernelinfo {\n    /* background: rgba(255, 165, 79, 0.1); */\n  background: rgba(255, 77, 77, 0.15);\n    padding-left: 1px;\n    padding-right: 0px;\n}\n\n/* CPU */\n#custom-left4 {\n    /* color: rgba(255, 165, 79, 0.2); */\n  color: rgba(255, 77, 77, 0.5);\n    background: rgba(255, 77, 77, 0.3);\n    padding-left: 3px;\n}\n\n#cpu {\n    /* background: rgba(255, 165, 79, 0.2); */\n  background: rgba(255, 77, 77, 0.5);\n}\n\n#custom-leftin1 {\n    color: rgba(255, 77, 77, 0.5);\n  background: #000;\n    font-size: 12.2pt;\n    margin-bottom: -2px;\n}\n\n/* Arch Logo */\n#custom-left5 {\n    color: rgba(255, 77, 77, 0.8);\n    /* Bright orange */\n    background: transparent;\n    text-shadow: -1px 0px 2px rgba(0, 0, 0, 0.6);\n    padding-left: 3px;\n}\n\n#custom-arch {\n    color: black;\n    background: rgba(255, 165, 79, 0.2);\n    /* Light orange with 20% opacity */\n    font-size: 11pt;\n    margin-right: -1px;\n    margin-bottom: -2px;\n    padding-right: 0px;\n    padding-left: 3px;\n    text-shadow: 0px 0px 1.5px rgba(0, 0, 0, 1);\n}\n\n#idle_inhibitor {\n    /* color: #ffae42; */\n  color: rgba(255, 255, 50, 1);\n    /* Warm orange to match the theme */\n    /* background: rgba(255, 174, 66, 0.3); */\n    background: rgba(255, 77, 77, 0.8);\n    /* Light orange with 30% opacity */\n    font-size: 11pt;\n    /* Retain font size */\n    margin-right: -1px;\n    margin-bottom: -2px;\n    padding-right: 0px;\n    padding-left: 3px;\n    text-shadow: 0px 0px 4px rgba(255, 174, 66, 0.8);\n    /* Soft golden glow for emphasis */\n    transition:\n        color 0.3s ease,\n        text-shadow 0.3s ease;\n    /* Smooth transitions */\n}\n\n/* Hover Effect for Idle Inhibitor */\n#idle_inhibitor:hover {\n    color: #ff4d4d;\n    /* Fiery red for hover effect */\n    text-shadow: 0px 0px 6px rgba(255, 77, 77, 1);\n    /* Stronger glow on hover */\n    background: rgba(0, 0, 0, 0.2);\n    /* Slight dark background for hover */\n}\n\n#custom-right2 {\n    color: rgba(255, 77, 77, 0.8);\n    /* Bright orange */\n    background: transparent;\n    text-shadow: -1px 0px 2px rgba(0, 0, 0, 0.6);\n    padding-left: 3px;\n}\n\n/* Time */\n#custom-rightin1 {\n    color: rgba(255, 77, 77, 0.5);\n  background: #000;\n    font-size: 12.2pt;\n    margin-bottom: -2px;\n}\n\n#clock.time {\n    background: rgba(255, 77, 77, 0.5);\n}\n\n#custom-right3 {\n    color: rgba(255, 77, 77, 0.5);\n    background: rgba(255, 77, 77, 0.3);\n}\n\n/* Date */\n#clock.date {\n    background: rgba(255, 77, 77, 0.3);\n}\n\n#custom-right4 {\n    color: rgba(255, 77, 77, 0.3);\n    background: rgba(255, 77, 77, 0.15);\n}\n\n/* Network */\n#custom-wi {\n    background: @wifi;\n    text-shadow: 0px 0px 2px rgba(0, 0, 0, 1);\n    margin-right: -2px;\n    padding-left: 5px;\n}\n\n#custom-wifi {\n    background: @wifi;\n    padding-right: 0px;\n    padding-left: 0px;\n}\n\n#network {\n  background: rgba(255, 77, 77, 0.15);\n}\n\n#custom-right5 {\n    color: rgba(255, 77, 77, 0.15);\n    background: #000;\n    /* background: @background; */\n}\n\n/* Media Info */\n#custom-media {\n    /* background-color: @background; */\n    padding-right: 8px;\n    padding-left: 8px;\n}\n\n/* PulseAudio */\n#custom-left6 {\n    color: rgba(255, 77, 77, 0.3);\n    background: rgba(255, 77, 77, 0.15);\n    padding-left: 3px;\n}\n\n#custom-left11 {\n    color: rgba(255, 77, 77, 0.1);\n    /* background: @background; */\n    padding-left: 3px;\n    padding-right: 3px;\n}\n\n#pulseaudio {\n    background: rgba(255, 77, 77, 0.3);\n}\n\n/* Brightness */\n#custom-left7 {\n    color: rgba(255, 77, 77, 0.5);\n    background: rgba(255, 77, 77, 0.3);\n    padding-left: 2px;\n}\n\n#backlight {\n    background: rgba(255, 77, 77, 0.5);\n}\n\n/* Battery */\n#custom-left8 {\n    color: rgba(255, 77, 77, 0.8);\n    background: rgba(255, 77, 77, 0.5);\n    padding-left: 2px;\n}\n\n#custom-left9 {\n    color: rgba(255, 165, 79, 0.15);\n    background: #000;\n    padding-left: 2px;\n}\n\n#battery {\n    background: rgba(255, 77, 77, 0.8);\n}\n\n#battery.warning {\n    color: #f9e2af;\n}\n\n#battery.critical {\n    color: #f38ba8;\n}\n\n/* Power Button */\n#custom-leftin2 {\n    color: rgba(255, 77, 77, 0.8);\n    background: @background;\n    font-size: 12.2pt;\n    margin-bottom: -2px;\n}\n\n#custom-power {\n    color: @background;\n    background: @power;\n    text-shadow: 0px 0px 2px rgba(0, 0, 0, 0.6);\n    box-shadow: 0px 0px 2px 1px rgba(0, 0, 0, 1);\n    border-radius: 20px;\n    margin-top: 2px;\n    margin-right: 4px;\n    margin-bottom: 2px;\n    padding-right: 6px;\n    padding-left: 9px;\n}\n\n#custom-power:hover {\n    color: @hover-fg;\n    background: @hover-bg;\n    box-shadow: none;\n    transition: all 0.3s cubic-bezier(0.55, -0.68, 0.48, 1.682);\n}\n\n/* Pomodoro Module */\n\n#custom-pomodoro {\n    color: rgba(255, 150, 0, 0.8);\n    background: rgba(255, 77, 77, 0.15);\n    padding: 5px;\n    border-radius: 4px;\n}\n\n/* Pomodoro States */\n#custom-pomodoro.work {\n    background: rgba(100, 50, 50, 1);\n    /* Active state background for work */\n    color: rgba(255, 255, 0, 1);\n    /* Active state foreground for work */\n    text-shadow: 0px 0px 3px rgba(255, 255, 255, 0.6);\n    /* Bright shadow */\n}\n\n#custom-pomodoro.break {\n    background: @hover-bg;\n    /* Hover state background for breaks */\n    color: rgba(255, 150, 0, 0.5);\n    /* Hover state foreground for breaks */\n}\n\n#custom-pomodoro.pause {\n    background: rgba(255, 77, 77, 0.15);\n    /* Neutral background for pause */\n    color: rgba(255, 150, 0, 0.7);\n    /* Match foreground color */\n    opacity: 0.8;\n    /* Slightly dimmed for paused state */\n}\n\n@define-color light-background #4c4c4c;\n\n/* Manually lightened color */\n/* Hover Effect for Pomodoro */\n#custom-pomodoro:hover {\n    background: @light-background;\n    /* Adjust lightness */\n    box-shadow: 0px 0px 4px 2px rgba(0, 0, 0, 0.8);\n    /* Enhanced hover shadow */\n    transition: all 0.3s cubic-bezier(0.55, -0.68, 0.48, 1.682);\n    /* Smooth hover effect */\n}\n\n/* #tray { */\n/*     color: rgba(255, 165, 79, 0.2); */\n/*     background: rgba(255, 174, 66, 0.3); */\n/*     box-shadow: 0px 0px 4px 2px rgba(0, 0, 0, 0.8); */\n/*     transition: all 0.3s cubic-bezier(0.55, -0.68, 0.48, 1.682); */\n/*     padding: 5px; */\n/*     border-radius: 4px; */\n/* } */\n\n#bluetooth {\n    color: rgba(255, 150, 0, 1);\n    background: rgba(255, 77, 77, 0.3);\n    padding: 5px;\n    border-radius: 0px;\n}\n","recorded":"2025-01-10 22:23:26.631425468","filePath":"null","pinned":false},{"value":"/* Global Styling */\n* {\n  font-family: \"JetBrainsMono Nerd Font\";\n  font-size: 11pt;\n  min-height: 10pt;\n  font-weight: bold;\n  border: none; /* Remove unintended borders */\n  color: rgba(255, 200, 0, 1);\n  text-shadow: 0 0 5px rgba(0, 0, 0, 0.7);\n  border-radius: 0px;\n  transition-property: background-color;\n  transition-duration: 0.5s;\n}\n\n@import \"theme.css\";\n\n/* Main Background */\nwindow#waybar {\n  background: transparent;\n  color: rgba(255, 200, 0, 1); /* Set text color globally */\n}\n\n/* Drop Shadow (No Border Color) */\nwindow#waybar \u003e box {\n  background-color: transparent;\n  box-shadow: 0px 0px 6px 2px rgba(0, 0, 0, 0.8); /* Subtle black glow */\n  margin: 2px 2px 2px 2px;\n}\n\n/* Tooltip Styling */\ntooltip {\n  background: rgba(0, 0, 0, 0.8);\n  border: solid;\n  border-width: 1.5px;\n  border-radius: 8px;\n  border-color: rgba(255, 200, 0, 1);\n}\n\ntooltip label {\n  color: rgba(255, 200, 0, 1);\n  font-weight: bold;\n  margin: 0.25px;\n}\n\n/* Workspace Button */\n#workspaces button {\n  color: rgba(255, 255, 0, 1);\n  background: transparent;\n  border-radius: 8px;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  padding: 4px 6px;\n  box-sizing: border-box; /* Prevent size changes */\n  transition: all 0.3s ease;\n}\n\n#workspaces button.active {\n  color: white;\n  background: rgba(255, 77, 77, 0.5);\n  text-shadow: 0px 0px 4px rgba(255, 77, 77, 0.8);\n  transition: all 0.4s cubic-bezier(0.55, -0.68, 0.48, 1.682);\n}\n\n#workspaces button:hover {\n  color: white;\n  background: rgba(255, 77, 77, 0.3);\n  box-shadow: 0px 0px 4px rgba(255, 77, 77, 0.8);\n  transition: all 0.3s ease;\n}\n\n/* General Module Styling */\n#custom-ws,\n#workspaces,\n#window,\n#custom-cpuinfo,\n#memory,\n#network,\n#cpu,\n#clock,\n#pulseaudio,\n#idle_inhibitor,\n#backlight,\n#battery,\n#custom-power {\n  margin-bottom: 0px;\n  padding: 5px 10px;\n  height: 30px; /* Ensure uniform height */\n  box-sizing: border-box; /* Prevent size changes */\n  background: transparent;\n  text-shadow: 0px 0px 2px rgba(0, 0, 0, 1);\n}\n\n/* Module Colors */\n#memory {\n  color: rgb(181, 232, 224);\n}\n#cpu {\n  color: rgb(245, 194, 231);\n}\n#clock {\n  color: rgb(217, 224, 238);\n}\n#idle_inhibitor {\n  color: rgb(221, 182, 242);\n}\n#temperature {\n  color: rgb(150, 205, 251);\n}\n#backlight {\n  color: rgb(248, 189, 150);\n}\n#pulseaudio {\n  color: rgb(245, 224, 220);\n}\n#network {\n  color: #ABE9B3;\n}\n#battery.charging,\n#battery.full,\n#battery.discharging {\n  color: rgb(250, 227, 176);\n}\n#battery.critical:not(.charging) {\n  color: rgb(242, 143, 173);\n}\n#custom-power {\n  color: rgb(242, 143, 173);\n}\n\n/* Hover Effects */\n#mode:hover,\n#clock:hover,\n#memory:hover,\n#temperature:hover,\n#custom-cpuinfo:hover,\n#cpu:hover,\n#mpd:hover,\n#idle_inhibitor:hover,\n#backlight:hover,\n#bluetooth:hover,\n#pulseaudio:hover,\n#network:hover,\n#battery:hover,\n#custom-power:hover {\n  background-color: transparent; /* Prevent hover size changes */\n  color: inherit;\n}\n\n/* Consistent Hover States */\n#workspaces button:hover {\n  background: rgba(255, 77, 77, 0.3);\n}\n\n#tray {\n  padding-right: 8px;\n  padding-left: 10px;\n}\n","recorded":"2025-01-10 22:23:24.276420161","filePath":"null","pinned":false},{"value":"no no please use the second entried one as help and change the first entried one\nbecause that is my present config","recorded":"2025-01-10 21:31:03.243464510","filePath":"null","pinned":false},{"value":"* {\n  font-family: \"JetBrainsMono Nerd Font\";\n  font-size: 11pt;\n  min-height: 10pt;\n  font-weight: bold;\n  border-radius: 0px;\n  transition-property: background-color;\n  transition-duration: 0.5s;\n}\n\n@keyframes blink_red {\n  to {\n    background-color: rgb(242, 143, 173);\n    color: rgb(26, 24, 38);\n  }\n}\n\n.warning, .critical, .urgent {\n  animation-name: blink_red;\n  animation-duration: 1s;\n  animation-timing-function: linear;\n  animation-iteration-count: infinite;\n  animation-direction: alternate;\n}\n\nwindow#waybar {\n  background-color: transparent;\n}\n\nwindow \u003e box {\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n  background-color: rgb(30, 30, 46);\n}\n\n#workspaces {\n  padding-left: 0px;\n  padding-right: 4px;\n  height: 30px; /* Ensure uniform height */\n}\n\n#workspaces button {\n  padding: 4px 6px;\n  height: 30px; /* Fixed height for consistency */\n  box-sizing: border-box; /* Avoid size changes */\n  background-color: transparent; /* Remove hover box effects */\n}\n\n#workspaces button.focused {\n  background-color: rgb(181, 232, 224);\n  color: rgb(26, 24, 38);\n}\n\n#workspaces button.urgent {\n  color: rgb(26, 24, 38);\n}\n\n#workspaces button:hover {\n  background-color: rgb(248, 189, 150);\n  color: rgb(26, 24, 38);\n}\n\n#workspaces button.active {\n  background-color: rgba(248, 189, 150, 0.5);\n  color: rgb(26, 24, 38);\n}\n\ntooltip {\n  background: rgb(48, 45, 65);\n}\n\ntooltip label {\n  color: rgb(217, 224, 238);\n}\n\n#custom-launcher {\n  padding-left: 8px;\n  padding-right: 6px;\n  color: rgb(201, 203, 255);\n}\n\n#mode, #clock, #memory, #temperature, #custom-cpuinfo, #cpu, #mpd, #idle_inhibitor, #temperature, #backlight, #bluetooth, #pulseaudio, #network, #battery, #custom-powermenu, #custom-cava-internal {\n  padding: 5px 10px;\n  height: 30px; /* Uniform height for modules */\n  box-sizing: border-box; /* Prevent size changes */\n}\n\n/* Module colors */\n#memory {\n  color: rgb(181, 232, 224);\n}\n#cpu {\n  color: rgb(245, 194, 231);\n}\n#clock {\n  color: rgb(217, 224, 238);\n}\n#idle_inhibitor {\n  color: rgb(221, 182, 242);\n}\n#temperature {\n  color: rgb(150, 205, 251);\n}\n#custom-cpuinfo {\n  color: rgb(150, 205, 251);\n}\n#backlight {\n  color: rgb(248, 189, 150);\n}\n#pulseaudio {\n  color: rgb(245, 224, 220);\n}\n#network {\n  color: #ABE9B3;\n}\n\n#network.disconnected {\n  color: rgb(255, 255, 255);\n}\n#battery.charging, #battery.full, #battery.discharging {\n  color: rgb(250, 227, 176);\n}\n#battery.critical:not(.charging) {\n  color: rgb(242, 143, 173);\n}\n#custom-powermenu {\n  color: rgb(242, 143, 173);\n}\n#tray {\n  padding-right: 8px;\n  padding-left: 10px;\n}\n#mpd.paused {\n  color: #414868;\n  font-style: italic;\n}\n#mpd.stopped {\n  background: transparent;\n}\n#mpd {\n  color: #c0caf5;\n}\n#bluetooth {\n  color: #ABE9B3;\n}\n#custom-cava-internal {\n  font-family: \"Hack Nerd Font\";\n}\n\n/* Ensure consistent hover states */\n#mode:hover, #clock:hover, #memory:hover, #temperature:hover, #custom-cpuinfo:hover, #cpu:hover, #mpd:hover, #idle_inhibitor:hover, #backlight:hover, #bluetooth:hover, #pulseaudio:hover, #network:hover, #battery:hover, #custom-powermenu:hover, #custom-cava-internal:hover {\n  background-color: transparent; /* Prevent size changes on hover */\n  color: inherit;\n}\n","recorded":"2025-01-10 21:25:22.432947029","filePath":"null","pinned":false},{"value":"padding-top: 4.5px;\n  padding-bottom: 4px;\n  padding-left: 6px;\n  padding-right: 6px;","recorded":"2025-01-10 21:22:34.964977346","filePath":"null","pinned":false},{"value":"configured","recorded":"2025-01-10 21:17:57.839729601","filePath":"null","pinned":false},{"value":"  font-weight: bold;\n","recorded":"2025-01-10 21:17:35.290909017","filePath":"null","pinned":false},{"value":"Item","recorded":"2025-01-10 21:16:27.192122590","filePath":"null","pinned":false},{"value":"[2025-01-10 21:16:05.019] [warning] Requested height: 33 is less than the minimum height: 35 required by the modules","recorded":"2025-01-10 21:16:07.958391479","filePath":"null","pinned":false},{"value":"warning","recorded":"2025-01-10 21:16:07.680781517","filePath":"null","pinned":false},{"value":"min-height: 0;","recorded":"2025-01-10 21:14:35.996518032","filePath":"null","pinned":false},{"value":"[warning] Requested height: 33 is less than the minimum height: 35 required by the modules","recorded":"2025-01-10 21:13:51.187908011","filePath":"null","pinned":false},{"value":"exec-once = swww img ~/dotfiles/hypr_wall/Wall/wall3.png \u0026\n","recorded":"2025-01-10 20:54:09.493988477","filePath":"null","pinned":false},{"value":"exec-once = waybaryle.css \u0026\n","recorded":"2025-01-10 20:53:23.882448610","filePath":"null","pinned":false},{"value":"~/.config/waybar/launch_waybar.sh \u0026\n","recorded":"2025-01-10 20:51:13.470593775","filePath":"null","pinned":false},{"value":"# ~/dotfiles/hypr_wall/wallpaper_random.sh \u0026\n","recorded":"2025-01-10 20:51:13.127489079","filePath":"null","pinned":false},{"value":"exec-once = xfce4-power-manager \u0026\n","recorded":"2025-01-10 20:29:28.424974448","filePath":"null","pinned":false},{"value":"xfconf-query --create -c xfce4-session -p /general/LockCommand -t string -s \"light-locker-command --lock\"","recorded":"2025-01-10 20:24:41.715582060","filePath":"null","pinned":false},{"value":"$HOME/.config/waybar/launch_waybar.sh \n","recorded":"2025-01-10 20:08:01.516868342","filePath":"null","pinned":false},{"value":"export SSH_AUTH_SOCK\nexport GPG_AGENT_INFO\nexport GNOME_KEYRING_CONTROL\nexport GNOME_KEYRING_PID\n\n","recorded":"2025-01-10 20:04:55.959120359","filePath":"null","pinned":false},{"value":"https://removebg-image.streamlit.app/","recorded":"2025-01-10 19:59:06.260170754","filePath":"null","pinned":false},{"value":"    \"show-special\": true\n","recorded":"2025-01-10 19:56:53.543028274","filePath":"null","pinned":false},{"value":"libgl1-mesa-glx\nlibglib2.0-0\n","recorded":"2025-01-10 19:51:52.145986633","filePath":"null","pinned":false},{"value":"libgl1-mesa-glx\nlibglib2.0-0","recorded":"2025-01-10 19:51:29.605575858","filePath":"null","pinned":false},{"value":"opencv-python-headless","recorded":"2025-01-10 19:50:57.731671378","filePath":"null","pinned":false},{"value":"ImportError: libGL.so.1: cannot open shared object file: No such file or \n\ndirectory\n\n2025-01-10 14:19:03.098 Uncaught app execution\n\nTraceback (most recent call last):\n\n  File \"/home/adminuser/venv/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/exec_code.py\", line 88, in exec_func_with_error_handling\n\n    result = func()\n\n  File \"/home/adminuser/venv/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py\", line 579, in code_to_exec\n\n    exec(code, module.__dict__)\n\n  File \"/mount/src/removebg/app.py\", line 2, in \u003cmodule\u003e\n\n    from rembg import remove\n\n  File \"/home/adminuser/venv/lib/python3.10/site-packages/rembg/__init__.py\", line 5, in \u003cmodule\u003e\n\n    from .bg import remove\n\n  File \"/home/adminuser/venv/lib/python3.10/site-packages/rembg/bg.py\", line 7, in \u003cmodule\u003e\n\n    from cv2 import (\n\nImportError: libGL.so.1: cannot open shared object file: No such file or directory\n\n","recorded":"2025-01-10 19:49:15.078544538","filePath":"null","pinned":false},{"value":"use_container_width","recorded":"2025-01-10 18:19:26.262349447","filePath":"null","pinned":false},{"value":"onnxruntime","recorded":"2025-01-10 18:16:20.861257961","filePath":"null","pinned":false},{"value":"import streamlit as st\nfrom rembg import remove\nimport numpy as np\nimport cv2\nfrom io import BytesIO\n\ndef remove_background(input_image):\n    # Use rembg to remove the background\n    output_data = remove(input_image.read())\n    \n    # Convert the output data (bytes) into a numpy array\n    output_image = np.frombuffer(output_data, np.uint8)\n    \n    # Decode the image\n    output_image = cv2.imdecode(output_image, cv2.IMREAD_UNCHANGED)\n    \n    # Convert to PNG for transparent background\n    _, output_png = cv2.imencode('.png', output_image)\n    return output_png.tobytes()\n\ndef main():\n    st.title(\"Background Removal from Image\")\n    st.write(\"Upload an image to remove its background\")\n\n    # Upload image\n    uploaded_file = st.file_uploader(\"Choose an image...\", type=[\"jpg\", \"jpeg\", \"png\"])\n\n    if uploaded_file is not None:\n        # Show the original image\n        st.image(uploaded_file, caption=\"Uploaded Image\", use_column_width=True)\n\n        # Remove background\n        output_image_bytes = remove_background(uploaded_file)\n\n        # Show the background removed image\n        st.image(output_image_bytes, caption=\"Background Removed Image\", use_column_width=True)\n\n        # Provide a download button\n        st.download_button(\n            label=\"Download Image with Background Removed\",\n            data=output_image_bytes,\n            file_name=\"output.png\",\n            mime=\"image/png\"\n        )\n\nif __name__ == \"__main__\":\n    main()\n","recorded":"2025-01-10 18:15:39.043441391","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/waybar/.config/waybar/greet.sh","recorded":"2025-01-10 18:02:43.630875669","filePath":"null","pinned":false},{"value":"exec-once = ~/.config/waybar/launch_waybar.sh\n","recorded":"2025-01-10 17:44:37.931923055","filePath":"null","pinned":false},{"value":"exec-once = ~/dotfiles/hypr_wall/wallpaper_random.sh \u0026\n","recorded":"2025-01-10 17:44:36.552774531","filePath":"null","pinned":false},{"value":"~/.config/waybar/launch_waybar.sh \u0026\n~/dotfiles/hypr_wall/wallpaper_random.sh \u0026","recorded":"2025-01-10 17:44:18.197601980","filePath":"null","pinned":false},{"value":"exec-once =  \u0026\n","recorded":"2025-01-10 17:42:38.526279591","filePath":"null","pinned":false},{"value":"~/dotfiles/hypr_wall/wallpaper_random.sh","recorded":"2025-01-10 17:42:30.040748888","filePath":"null","pinned":false},{"value":"# exec-once = waybar -c ~/.config/hypr/waybar/config.jsonc -s ~/.config/hypr/waybar/style.css\n","recorded":"2025-01-10 17:42:04.793826217","filePath":"null","pinned":false},{"value":"sudo modprobe tun","recorded":"2025-01-10 17:36:27.663159159","filePath":"null","pinned":false},{"value":"Error starting domain: Unable to open /dev/net/tun, is tun module loaded?: No such device\n\nTraceback (most recent call last):\n  File \"/usr/share/virt-manager/virtManager/asyncjob.py\", line 71, in cb_wrapper\n    callback(asyncjob, *args, **kwargs)\n    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/share/virt-manager/virtManager/asyncjob.py\", line 107, in tmpcb\n    callback(*args, **kwargs)\n    ~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/usr/share/virt-manager/virtManager/object/libvirtobject.py\", line 57, in newfn\n    ret = fn(self, *args, **kwargs)\n  File \"/usr/share/virt-manager/virtManager/object/domain.py\", line 1384, in startup\n    self._backend.create()\n    ~~~~~~~~~~~~~~~~~~~~^^\n  File \"/usr/lib/python3.13/site-packages/libvirt.py\", line 1379, in create\n    raise libvirtError('virDomainCreate() failed')\nlibvirt.libvirtError: Unable to open /dev/net/tun, is tun module loaded?: No such device","recorded":"2025-01-10 17:36:15.817247138","filePath":"null","pinned":false},{"value":"        \"on-click-right\": \"~/dotfiles/hypr_wall/changelook\"\n","recorded":"2025-01-10 17:32:11.397338874","filePath":"null","pinned":false},{"value":"\nCommitting: \"create hypr_wall/Wall/wall1.png\"\n[master 8d446aaf] create hypr_wall/Wall/wall1.png\n 1 file changed, 0 insertions(+), 0 deletions(-)","recorded":"2025-01-10 17:27:37.684697889","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/wall2.png\n/home/karna/Downloads/wall3.png\n/home/karna/Downloads/wall4.png","recorded":"2025-01-10 17:27:12.046461038","filePath":"null","pinned":false},{"value":"exec-once = dunst \u0026 mpd \u0026 mpc \u0026\n","recorded":"2025-01-10 16:46:36.602323817","filePath":"null","pinned":false},{"value":"fcitx5","recorded":"2025-01-10 16:46:13.282723566","filePath":"null","pinned":false},{"value":"\n        \"min-length\": 8,\n        \"max-length\": 8","recorded":"2025-01-10 16:40:54.996968432","filePath":"null","pinned":false},{"value":"#c0caf5","recorded":"2025-01-10 16:36:50.948548694","filePath":"null","pinned":false},{"value":"\"bluetooth\": {\n    \"format\": \" \",\n    \"format-disabled\": \" Disabled\",\n    \"format-connected\": \" {num_connections}\",\n    \"format-connected-battery\": \"{device_alias} - {icon} {device_battery_percentage}%\",\n    // \"format-connected-battery\":\n      // \"{icon} {device_alias}-{device_battery_percentage}%\",\n\n    \"format-icons\": [\"󰥇\", \"󰤾\", \"󰤿\", \"󰥀\", \"󰥁\", \"󰥂\", \"󰥃\", \"󰥄\", \"󰥅\", \"󰥆\", \"󰥈\"],\n    // \"format-device-preference\": [ \"device1\", \"device2\" ],\n    // Preference list deciding the displayed device.\n    // If this is not defined or none of the devices in the list are connected,\n    // it will fall back to showing the last connected device.\n\n    \"tooltip-format\": \n      \"{controller_alias}\\n{num_connections} connected\",\n    \"tooltip-format-connected\": \n      \"{controller_alias}\\n{num_connections} connected\\n\\n{device_enumerate}\",\n    \"tooltip-format-enumerate-connected\": \n      \"{device_alias}\",\n    \"tooltip-format-enumerate-connected-battery\": \n      \"{device_alias}\\t{icon} {device_battery_percentage}%\",\n      \"on-click-right\": \"blueman-manager\"\n},","recorded":"2025-01-10 16:31:16.950850889","filePath":"null","pinned":false},{"value":"󰝛","recorded":"2025-01-10 16:18:11.209039688","filePath":"null","pinned":false},{"value":"xfce4-power-manager-settings","recorded":"2025-01-10 16:13:46.193402877","filePath":"null","pinned":false},{"value":"    \"on-click-right\": \"kitty -e nm-applet\"\n","recorded":"2025-01-10 16:11:41.883823157","filePath":"null","pinned":false},{"value":"    \"interval\": 2,\n","recorded":"2025-01-10 16:11:34.704027961","filePath":"null","pinned":false},{"value":"https://music.youtube.com/watch?v=IllLc0XM8KY\u0026si=5YTui91EA9vFBOEj","recorded":"2025-01-10 16:09:29.960460599","filePath":"null","pinned":false},{"value":"  color: rgb(150, 205, 251);\n","recorded":"2025-01-10 15:53:03.509834289","filePath":"null","pinned":false},{"value":"\n#custom-launcher:hover {\n  /* background-color: rgb(248, 189, 150); */\n  color: rgb(30, 30, 46);\n}","recorded":"2025-01-10 15:52:40.933745414","filePath":"null","pinned":false},{"value":"rgb(30, 30, 46)","recorded":"2025-01-10 15:52:10.934257275","filePath":"null","pinned":false},{"value":"\n#custom-launcher:hover {\n  color: rgb(48, 45, 65);\n}","recorded":"2025-01-10 15:51:27.430569181","filePath":"null","pinned":false},{"value":"rgb(48, 45, 65);","recorded":"2025-01-10 15:50:52.210572385","filePath":"null","pinned":false},{"value":"rgb(26, 24, 38);","recorded":"2025-01-10 15:50:52.181663913","filePath":"null","pinned":false},{"value":"  background-color: #000;\n","recorded":"2025-01-10 15:49:37.785828743","filePath":"null","pinned":false},{"value":"    border: none;\n","recorded":"2025-01-10 15:43:47.807327347","filePath":"null","pinned":false},{"value":"    // \"tooltip\": false\n","recorded":"2025-01-10 15:42:03.332132223","filePath":"null","pinned":false},{"value":"    \"tooltip-format\": \"{output}\"\n","recorded":"2025-01-10 15:39:38.179944217","filePath":"null","pinned":false},{"value":"        \"return-type\": \"json\",\n","recorded":"2025-01-10 15:39:21.194255346","filePath":"null","pinned":false},{"value":"echo \"{\\\"text\\\":\\\"${thermo} ${temp}°C\\\", \\\"tooltip\\\":\\\"${model}\\nTemperature: ${temp}°C\\nUtilization: ${utilization}%\\nClock Speed: ${frequency}\\\"}\"\n","recorded":"2025-01-10 15:38:26.682274723","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\nhour=$(date +%H)\nif [ $hour -ge 5 ] \u0026\u0026 [ $hour -lt 12 ]; then\n    greeting=\"Good Morning\"\nelif [ $hour -ge 12 ] \u0026\u0026 [ $hour -lt 18 ]; then\n    greeting=\"Good Afternoon\"\nelse\n    greeting=\"Good Evening\"\nfi\n\ncat \u003c\u003cEOF\n$greeting, $USER\nMorning: Mathematics\nAfternoon: Photoshop\nEvening: Golang\nEOF\n","recorded":"2025-01-10 15:38:26.661162288","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\nhour=$(date +%H)\nif [ $hour -ge 5 ] \u0026\u0026 [ $hour -lt 12 ]; then\n    greeting=\"Good Morning\"\nelif [ $hour -ge 12 ] \u0026\u0026 [ $hour -lt 18 ]; then\n    greeting=\"Good Afternoon\"\nelse\n    greeting=\"Good Evening\"\nfi\n\n# Dynamic tooltip output\ntext=\"Dynamic Greeting\"\ntooltip=\"${greeting}, $USER\\nMorning: Mathematics\\nAfternoon: Photoshop\\nEvening: Golang\"\n\n# Output JSON-like string\necho \"{\\\"text\\\":\\\"${text}\\\", \\\"tooltip\\\":\\\"${tooltip}\\\"}\"\n","recorded":"2025-01-10 15:38:21.242375867","filePath":"null","pinned":false},{"value":"custom/dynamic-greeting","recorded":"2025-01-10 15:36:39.893609821","filePath":"null","pinned":false},{"value":"\"custom/dynamic-greeting\": {\n    \"exec\": \"~/.config/waybar/dynamic-tooltip.sh\",\n    \"interval\": 60, // Updates every minute\n    \"tooltip\": true,\n    \"tooltip-format\": \"{output}\"\n}\n","recorded":"2025-01-10 15:35:21.600947317","filePath":"null","pinned":false},{"value":"    \"exec\": \"~/.config/waybar/greet.sh\",\n","recorded":"2025-01-10 15:35:13.312764020","filePath":"null","pinned":false},{"value":"\"custom/dynamic-greeting\": {\n    \"exec\": \"~/.config/waybar/dynamic-tooltip.sh\",\n    \"interval\": 60, // Updates every minute\n    \"tooltip\": true,\n    \"tooltip-format\": \"{output}\"\n}","recorded":"2025-01-10 15:34:21.188781889","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\nhour=$(date +%H)\nif [ $hour -ge 5 ] \u0026\u0026 [ $hour -lt 12 ]; then\n    greeting=\"Good Morning\"\nelif [ $hour -ge 12 ] \u0026\u0026 [ $hour -lt 18 ]; then\n    greeting=\"Good Afternoon\"\nelse\n    greeting=\"Good Evening\"\nfi\n\ncat \u003c\u003cEOF\n{\n    \"greeting\": \"$greeting, $USER\",\n    \"morning\": \"Mathematics\",\n    \"afternoon\": \"Photoshop\",\n    \"evening\": \"Golang\"\n}\nEOF\n","recorded":"2025-01-10 15:33:38.870636003","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\nhour=$(date +%H)\n\nif [ $hour -ge 5 ] \u0026\u0026 [ $hour -lt 12 ]; then\n    greeting=\"Good Morning\"\nelif [ $hour -ge 12 ] \u0026\u0026 [ $hour -lt 18 ]; then\n    greeting=\"Good Afternoon\"\nelse\n    greeting=\"Good Evening\"\nfi\n\necho \"$greeting, $USER\"\n","recorded":"2025-01-10 15:29:52.482244118","filePath":"null","pinned":false},{"value":"https://github.com/Alexays/Waybar/issues/298","recorded":"2025-01-10 15:29:02.658479095","filePath":"null","pinned":false},{"value":"\"tooltip-format\": \"\\nMorning: Mathematics\\nAfternoon: Photoshop\\nEvening: Golang\\n\\n\u003ctt\u003e{calendar}\u003c/tt\u003e\"\n","recorded":"2025-01-10 15:25:49.629040102","filePath":"null","pinned":false},{"value":"\"tooltip-format\": \"$(~/.config/waybar/dynamic-greeting.sh)\\nMorning: Mathematics\\nAfternoon: Photoshop\\nEvening: Golang\\n\\n\u003ctt\u003e{calendar}\u003c/tt\u003e\"","recorded":"2025-01-10 15:24:57.526286116","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\nhour=$(date +%H)\n\nif [ $hour -ge 5 ] \u0026\u0026 [ $hour -lt 12 ]; then\n    echo \"Good Morning\"\nelif [ $hour -ge 12 ] \u0026\u0026 [ $hour -lt 18 ]; then\n    echo \"Good Afternoon\"\nelse\n    echo \"Good Evening\"\nfi\n","recorded":"2025-01-10 15:24:41.254002228","filePath":"null","pinned":false},{"value":"dynamic-greeting","recorded":"2025-01-10 15:23:31.679709800","filePath":"null","pinned":false},{"value":"  \"clock#date\": {\n    // \"on-click\": \"~/.config/waybar/switch_style1.sh \u0026\",\n    \"on-click-middle\": \"~/.config/waybar/wallpaper_random.sh \u0026\",\n    \"interval\": 1,\n\n    \"format\": \" {:%I:%M %p %A %b %d}\",\n    // \"format\": \"󱑂 {:%I:%M %p %A %b %d}\",\n    \"tooltip\": true,\n    /* \"tooltip-format\": \"{:%A, %d %B %Y}\\n\u003ctt\u003e{calendar}\u003c/tt\u003e\" */\n    \"tooltip-format\": \"Morning: Mathematics\\nAfternoon: Photoshop\\nEvening: Golang\\n\\n\u003ctt\u003e{calendar}\u003c/tt\u003e\",\n\"calendar\": {\n            \"mode\": \"month\",\n            \"mode-mon-col\": 3,\n            \"on-click-right\": \"mode\",\n            \"format\": {\n                \"months\": \"\u003cspan color='#f5e0dc'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\",\n                \"weekdays\": \"\u003cspan color='#f9e2af'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\",\n                \"today\": \"\u003cspan color='#f38ba8'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\"\n            }\n        },\n        \"actions\": {\"on-click-right\": \"mode\"}\n  },","recorded":"2025-01-10 15:23:00.920891366","filePath":"null","pinned":false},{"value":"\"clock#date\": {\n    // \"on-click\": \"~/.config/waybar/switch_style1.sh \u0026\",\n    \"on-click-middle\": \"~/.config/waybar/wallpaper_random.sh \u0026\",\n    \"interval\": 1,\n\n    \"format\": \" {:%I:%M %p %A %b %d}\",\n    // \"format\": \"󱑂 {:%I:%M %p %A %b %d}\",\n    \"tooltip\": true,\n    \"tooltip-format\": \"\u003ctt\u003e{dynamic-greeting}\u003c/tt\u003e\\n\\n\u003ctt\u003e{calendar}\u003c/tt\u003e\",\n    \"calendar\": {\n        \"mode\": \"month\",\n        \"mode-mon-col\": 3,\n        \"on-click-right\": \"mode\",\n        \"format\": {\n            \"months\": \"\u003cspan color='#f5e0dc'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\",\n            \"weekdays\": \"\u003cspan color='#f9e2af'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\",\n            \"today\": \"\u003cspan color='#f38ba8'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\"\n        }\n    },\n    \"actions\": {\"on-click-right\": \"mode\"}\n}\n","recorded":"2025-01-10 15:22:54.996248082","filePath":"null","pinned":false},{"value":"\"tooltip-format\": \"Morning: Mathematics\\nAfternoon: Photoshop\\nEvening: Golang\\n\\n\u003ctt\u003e{calendar}\u003c/tt\u003e\",","recorded":"2025-01-10 15:21:35.166489032","filePath":"null","pinned":false},{"value":"    \"format\": \"󱑂 {:%I:%M %p %A %b %d}\",\n","recorded":"2025-01-10 15:19:52.040977824","filePath":"null","pinned":false},{"value":"    \"exec\": \"~/.config/waybar/Cava.sh\"\n","recorded":"2025-01-10 15:19:07.642834255","filePath":"null","pinned":false},{"value":"    // \"temperature\",\n","recorded":"2025-01-10 15:18:49.726222686","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/hypr/waybar/scripts/kernelinfo.sh","recorded":"2025-01-10 15:17:54.525313860","filePath":"null","pinned":false},{"value":"        \"on-click-right\": \"kitty -- bash -c 'sudo pacman -Syu'\",\n","recorded":"2025-01-10 15:17:28.669707616","filePath":"null","pinned":false},{"value":"        \"tooltip\": true,\n","recorded":"2025-01-10 15:16:28.816215700","filePath":"null","pinned":false},{"value":"\"exec\": \"~/.config/hypr/waybar/scripts/kernelinfo.sh\",\n        \"return-type\": \"json\",","recorded":"2025-01-10 15:16:22.744664854","filePath":"null","pinned":false},{"value":"\n  // \"temperature\": {\n    // \"hwmon-path\": \"/sys/class/hwmon/hwmon7/temp2_input\",\n  //   //\"critical-threshold\": 80,\n  //   \"tooltip\": false,\n  //   \"format\": \" {temperatureC}°C\"\n  // },","recorded":"2025-01-10 15:14:29.004080138","filePath":"null","pinned":false},{"value":"{icon} {percent}%","recorded":"2025-01-10 15:05:29.054670047","filePath":"null","pinned":false},{"value":"        \"tooltip-format\": \"Brightness\",\n","recorded":"2025-01-10 15:05:14.344370457","filePath":"null","pinned":false},{"value":"        \"tooltip-format\": \"{volume}%\"\n","recorded":"2025-01-10 15:04:33.106185051","filePath":"null","pinned":false},{"value":"    // \"format-ethernet\": \"  {ifname} ({ipaddr})\",\n","recorded":"2025-01-10 14:58:34.795347564","filePath":"null","pinned":false},{"value":"        // \"\u003cspan foreground='#ffcc66'\u003e {bandwidthDownBytes}\u003c/span\u003e \u003cspan foreground='#ffcc66'\u003e {bandwidthUpBytes}\u003c/span\u003e\",\n","recorded":"2025-01-10 14:58:10.855450548","filePath":"null","pinned":false},{"value":"\"states\": {\n      \"warning\": 85\n    }","recorded":"2025-01-10 14:57:53.577045564","filePath":"null","pinned":false},{"value":"#ffc800","recorded":"2025-01-10 14:57:53.547605439","filePath":"null","pinned":false},{"value":"\"tooltip\": true,\n    \"format-wifi\": \n        // \"\u003cspan foreground='#ffcc66'\u003e {bandwidthDownBytes}\u003c/span\u003e \u003cspan foreground='#ffcc66'\u003e {bandwidthUpBytes}\u003c/span\u003e\",\n        \"\u003cspan foreground='#ffc800'\u003e {bandwidthDownBytes}\u003c/span\u003e \u003cspan foreground='#ffc800'\u003e {bandwidthUpBytes}\u003c/span\u003e\",\n    \"format-ethernet\": \n      \"\u003cspan foreground='#ffc800'\u003e {bandwidthDownBytes}\u003c/span\u003e \u003cspan foreground='#ffc800'\u003e {bandwidthUpBytes}\u003c/span\u003e\",\n\n    \"tooltip-format\": \n      \"Network: \u003cbig\u003e\u003cb\u003e{essid}\u003c/b\u003e\u003c/big\u003e\\nSignal strength: \u003cb\u003e{signaldBm}dBm ({signalStrength}%)\u003c/b\u003e\\nFrequency: \u003cb\u003e{frequency}MHz\u003c/b\u003e\\nInterface: \u003cb\u003e{ifname}\u003c/b\u003e\\nIP: \u003cb\u003e{ipaddr}/{cidr}\u003c/b\u003e\\nGateway: \u003cb\u003e{gwaddr}\u003c/b\u003e\\nNetmask: \u003cb\u003e{netmask}\u003c/b\u003e\",","recorded":"2025-01-10 14:55:13.657890647","filePath":"null","pinned":false},{"value":"\"\u003cspan foreground='#ffc800'\u003e {bandwidthDownBytes}\u003c/span\u003e \u003cspan foreground='#ffc800'\u003e {bandwidthUpBytes}\u003c/span\u003e\",\n    \"format-ethernet\": \n      \"\u003cspan foreground='#ffc800'\u003e {bandwidthDownBytes}\u003c/span\u003e \u003cspan foreground='#ffc800'\u003e {bandwidthUpBytes}\u003c/span\u003e\",\n","recorded":"2025-01-10 14:54:29.988820290","filePath":"null","pinned":false},{"value":"    \"custom/cpuinfo\",\n","recorded":"2025-01-10 14:36:26.597834215","filePath":"null","pinned":false},{"value":"    \"format\": \" {usage}%\"\n","recorded":"2025-01-10 14:30:30.733661430","filePath":"null","pinned":false},{"value":"\"format\": \"󰻠 {usage}% - 8C\",\n        \"tooltip\": true,\n        \"interval\": 5,\n        \"min-length\": 6,\n        \"max-length\": 10","recorded":"2025-01-10 14:30:27.160331029","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/hypr/waybar/scripts/cpuinfo.sh","recorded":"2025-01-10 14:28:33.598300063","filePath":"null","pinned":false},{"value":"    \"custom/cpuinfo\": {\n        \"exec\": \"~/.config/hypr/waybar/scripts/cpuinfo.sh\",\n        \"return-type\": \"json\",\n        \"format\": \"{}\",\n        \"tooltip\": true,\n        \"interval\": 5,\n        \"min-length\": 8,\n        \"max-length\": 8\n    },","recorded":"2025-01-10 14:28:16.573622570","filePath":"null","pinned":false},{"value":"  \"memory\": {\n    \"interval\": 1,\n    \"format\": \"﬙ {percentage}%\",\n    \"states\": {\n      \"warning\": 85\n    }\n  },","recorded":"2025-01-10 14:27:04.384771641","filePath":"null","pinned":false},{"value":"\n\n //    \"clock#date\": {\n //        //\"format\": \"󱨴 {:%d-%m-%y}\",\n //        \"format\": \"󱨴 {:%a %d %h}\",\n //        \"tooltip-format\": \"\u003ctt\u003e{calendar}\u003c/tt\u003e\",\n //        \"calendar\": {\n //            \"mode\": \"month\",\n //            \"mode-mon-col\": 3,\n //            \"on-click-right\": \"mode\",\n //            \"format\": {\n //                \"months\": \"\u003cspan color='#f5e0dc'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\",\n //                \"weekdays\": \"\u003cspan color='#f9e2af'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\",\n //                \"today\": \"\u003cspan color='#f38ba8'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\"\n //            }\n //        },\n //        \"actions\": {\"on-click-right\": \"mode\"},\n //        \"min-length\": 8,\n //        \"max-length\": 15\n\t// },","recorded":"2025-01-10 14:26:22.145500894","filePath":"null","pinned":false},{"value":"\"memory\": {\n        \"states\": {\"c\": 90},\n\t    \"format\": \"󰘚 {percentage}%\",\n\t    \"format-c\": \"󰀪 {percentage}%\",\n        \"tooltip\": true,\n        \"tooltip-format\": \"{used:0.1f} GB / {total:0.1f} GB\",\n        \"interval\": 20,\n        \"min-length\": 7,\n        \"max-length\": 15\n    },","recorded":"2025-01-10 14:26:10.629864716","filePath":"null","pinned":false},{"value":"    \"on-click-middle\": \"~/.config/waybar/live_wallpaper.sh \u0026\",\n","recorded":"2025-01-10 14:24:26.564991456","filePath":"null","pinned":false},{"value":"        \"actions\": {\"on-click-right\": \"mode\"},\n","recorded":"2025-01-10 14:21:41.925356216","filePath":"null","pinned":false},{"value":"\"calendar\": {\n            \"mode\": \"month\",\n            \"mode-mon-col\": 3,\n            \"on-click-right\": \"mode\",\n            \"format\": {\n                \"months\": \"\u003cspan color='#f5e0dc'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\",\n                \"weekdays\": \"\u003cspan color='#f9e2af'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\",\n                \"today\": \"\u003cspan color='#f38ba8'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\"\n            }\n        },\n","recorded":"2025-01-10 14:17:20.403462090","filePath":"null","pinned":false},{"value":"    \"clock#date\": {\n        //\"format\": \"󱨴 {:%d-%m-%y}\",\n        \"format\": \"󱨴 {:%a %d %h}\",\n        \"tooltip-format\": \"\u003ctt\u003e{calendar}\u003c/tt\u003e\",\n        \"calendar\": {\n            \"mode\": \"month\",\n            \"mode-mon-col\": 3,\n            \"on-click-right\": \"mode\",\n            \"format\": {\n                \"months\": \"\u003cspan color='#f5e0dc'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\",\n                \"weekdays\": \"\u003cspan color='#f9e2af'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\",\n                \"today\": \"\u003cspan color='#f38ba8'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\"\n            }\n        },\n        \"actions\": {\"on-click-right\": \"mode\"},\n        \"min-length\": 8,\n        \"max-length\": 15\n\t},","recorded":"2025-01-10 14:16:18.555408116","filePath":"null","pinned":false},{"value":"        \"actions\": {\"on-click-right\": \"mode\"}\n","recorded":"2025-01-10 13:52:48.484588313","filePath":"null","pinned":false},{"value":"󱑂 ","recorded":"2025-01-10 13:48:50.411796591","filePath":"null","pinned":false},{"value":"󱨴 ","recorded":"2025-01-10 13:48:34.180263913","filePath":"null","pinned":false},{"value":"        \"format\": \"󱨴 {:%a %d %h}\",\n","recorded":"2025-01-10 13:48:26.435650141","filePath":"null","pinned":false},{"value":"    \"tooltip-format\": \"上午：高数\\n下午：Ps\\n晚上：Golang\\n\u003ctt\u003e{calendar}\u003c/tt\u003e\"\n","recorded":"2025-01-10 13:46:37.293302077","filePath":"null","pinned":false},{"value":"\"tooltip-format\": \"Morning: Advanced Mathematics\\nAfternoon: Photoshop\\nEvening: Golang\\n\u003ctt\u003e{calendar}\u003c/tt\u003e\"\n","recorded":"2025-01-10 13:46:31.590500824","filePath":"null","pinned":false},{"value":"上午：高数\\n下午：Ps\\n晚上：Golang\\n\u003ctt\u003e{calendar}\u003c/tt\u003e","recorded":"2025-01-10 13:45:44.648752638","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/hypr/waybar/scripts/brightnesscontrol.sh","recorded":"2025-01-10 13:39:08.962052219","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/hypr/waybar/scripts/volumecontrol.sh","recorded":"2025-01-10 13:38:16.158279212","filePath":"null","pinned":false},{"value":"wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+","recorded":"2025-01-10 13:36:39.373085931","filePath":"null","pinned":false},{"value":"","recorded":"2025-01-10 13:29:42.444541246","filePath":"null","pinned":false},{"value":"\"tooltip\": true,\n    \"tooltip-format-activated\": \"Presentation Mode\",\n    \"tooltip-format-deactivated\": \"Idle Mode\",\n    \"start-activated\": false,\n    \"timeout\": 600","recorded":"2025-01-10 13:28:57.742312763","filePath":"null","pinned":false},{"value":" \"tooltip\": true,\n\"tooltip-format\": \"{hostname}\"\n","recorded":"2025-01-10 13:25:01.961303065","filePath":"null","pinned":false},{"value":"m/cava-internal: argument not found\n[2025-01-10 13:24:38.722] [error] custom/cava-internal: argument not found\n[2025-01-10 13:24:38.739] [error] custom/cava-internal: argument not found\n[2025-01-10 13:24:38.755] [error] custom/cava-internal: argument not found\n[2025-01-10 13:24:38.772] [error] custom/cava-internal: argument not found\n[2025-01-10 13:24:38.788] [error] custo","recorded":"2025-01-10 13:24:38.996594983","filePath":"null","pinned":false},{"value":"\"tooltip-format\": \"{ipaddr}\",","recorded":"2025-01-10 13:01:56.195208153","filePath":"null","pinned":false},{"value":"#workspaces button:hover {\n  background-color: rgb(248, 189, 150);\n  color: rgb(26, 24, 38);\n}","recorded":"2025-01-10 12:55:54.479446046","filePath":"null","pinned":false},{"value":"        \"active-only\": false,\n","recorded":"2025-01-10 12:54:22.833930248","filePath":"null","pinned":false},{"value":"        \"all-outputs\": false,\n","recorded":"2025-01-10 12:54:22.455386195","filePath":"null","pinned":false},{"value":"\"show-special\": true,\n        \"all-outputs\": false,\n        \"active-only\": false,\n","recorded":"2025-01-10 12:54:01.643705458","filePath":"null","pinned":false},{"value":"waybar -c \"$SDIR\"/config1.jsonc -s \"$SDIR\"/style1.css \u0026\n","recorded":"2025-01-10 12:52:18.815101487","filePath":"null","pinned":false},{"value":"** (waybar:37338): WARNING **: 12:51:48.325: Status Notifier Item with bus name ':1.31' and object path '/org/ayatana/NotificationItem/udiskie' is already registered","recorded":"2025-01-10 12:51:52.552707798","filePath":"null","pinned":false},{"value":"if [[ ! -d \"$dir1\" ]]; then\n  mkdir -p \"$dir1\"\nfi","recorded":"2025-01-10 12:51:26.222194171","filePath":"null","pinned":false},{"value":"  \"hyprland/workspaces\": {\n    \"disable-scroll\": true,\n    \"persistent_workspaces\": {\n      \"1\": [],\n      \"2\": [],\n      \"3\": [],\n      \"4\": [],\n      \"5\": [],\n      \"6\": [],\n      //\"7\": [],\n      //\"8\": [],\n      //\"9\": []\n    }\n  },","recorded":"2025-01-10 12:51:26.209877202","filePath":"null","pinned":false},{"value":"    \"hyprland/workspaces\": {\n    \"show-special\": true,\n        \"all-outputs\": false,\n        \"active-only\": false,\n        \"on-click\": \"activate\",\n        \"disable-scroll\": false,\n        \"on-scroll-up\": \"hyprctl dispatch workspace -1\",\n        \"on-scroll-down\": \"hyprctl dispatch workspace +1\",\n        \"persistent-workspaces\": {\n            \"1\": [],\n            \"2\": [],\n            \"3\": [],\n            \"4\": [],\n            \"5\": []\n        },\n        \"sort-by-number\": true,\n        // \"format-window-separator\": \"|\",\n        // \"window-rewrite-default\": \"\",\n        // \"window-rewrite\": {\n        //   \"title\u003c.*youtube.*\u003e\": \" \", // Windows whose titles contain \"youtube\"\n        //   \"class\u003cfirefox\u003e\": \" \", // Windows whose classes are \"firefox\"\n        //   \"class\u003cfirefox\u003e title\u003c.*github.*\u003e\": \" \", // Windows whose class is \"firefox\" and title contains \"github\". Note that \"class\" always comes first.\n        //   \"class\u003calacritty\u003e\": \"\", // Windows that contain \"foot\" in either class or title. For optimization reasons, it will only match against a title if at least one other window explicitly matches against a title.\n        //   \"code\": \"󰨞\"\n        //   }\n    },","recorded":"2025-01-10 12:51:12.487066971","filePath":"null","pinned":false},{"value":"swaymsg gaps outer all set 0 \u0026\u0026 swaymsg gaps inner all set 5\n","recorded":"2025-01-10 12:48:11.425508527","filePath":"null","pinned":false},{"value":"fade wipe left right top bottom center random","recorded":"2025-01-09 23:47:11.646671263","filePath":"null","pinned":false},{"value":"\t\ttransition=$(get_random_transition)\n","recorded":"2025-01-09 23:46:09.460411177","filePath":"null","pinned":false},{"value":"    echo $transition\n","recorded":"2025-01-09 23:46:07.610921590","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/hypr_wall\"\ndir=$(find $WALL -mindepth 1 -maxdepth 1 -type d -exec basename {} \\;)\nchoice=$(echo -e \"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\" | dmenu -i -l 10 -p \"Choose an Option: \")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\nif [ \"$choice\" = \"Random\" ]; then\n\twall_dir=$(ls $WALL)\n\twall=\"\"\n\n\tfor dir in $wall_dir; do\n\t\twall+=$(find $WALL/$dir -type f -name \"*.jpg\" -o -name \"*.png\")\n\tdone\n\n\tvalid_paper=\"No\"\n\tuntil [ \"$valid_paper\" = \"Yes\" ]; do\n\t\twallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n    \techo $wallk\n\t\tswww img \"$wallk\"\n\t\tvalid_paper=\"$(printf \"Yes\\nNo\" | dmenu -i -l 2 -p \"Do you like the new wallpaper?\")\"\n\tdone\n\texit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n\t/usr/local/bin/waldl\n\tif [ ! -d \"$WALL/Wallheaven\" ]; then\n\t\tmkdir \"$WALL/Wallheaven\"\n\tfi\n\tWALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n\tif [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n\t\tmkdir $HOME/.cache/wallheaven\n\tfi\n\t/usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n\tif [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n\t\tdunstify \"Directory is empty.\"\n\t\texit 1\n\tfi\n\tchoice=$(echo -e \"Yes\\nNo\" | dmenu -i -l 3 -p \"Would you like to change wallpaper?\")\n\tif [ \"$choice\" = \"No\" ]; then\n\t\tdunstify \"Program terminated.\"\n\t\texit 1\n\tfi\n\twall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n\twall=\"$HOME/.cache/wallheaven/$wall\"\n\tdunstify \"Wallpaper set to $wall\"\n\tif [ -n \"$wall\" ]; then\n\t\tswww img \"$wall\"\n\telse\n\t\tdunstify \"No wallpaper selected.\"\n\tfi\n\texit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n\tdunstify \"Program terminated.\"\n\texit 1\nfi\n\n# if the directory is empty, and its path should not be .cache/wallheaven then download some WALLPAPERS\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n\tif [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n\t\tdunstify \"Directory is empty.\"\n\t\tchoice=$(echo -e \"Download\\nExit\" | dmenu -i -l 2 -p \"Would you like to Download Some?\")\n\t\tif [ \"$choice\" = \"Download\" ]; then\n\t\t\t/usr/local/bin/waldl\n\t\telse\n\t\t\tdunstify \"Program terminated.\"\n\t\t\texit 1\n\t\tfi\n\tfi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n\tdunstify \"No wallpapers found.\"\n\texit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | dmenu -i -l 5 -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n\tSELECTED_WALLPAPER=$(sxiv -to $WALLPAPER_DIR | awk '{print $NF}')\n\t# Check if a wallpaper was selected\n\tif [ -n \"$SELECTED_WALLPAPER\" ]; then\n\t\t# Set the wallpaper\n\t\tswww img \"$SELECTED_WALLPAPER\"\n\telse\n\t\tdunstify \"No wallpaper selected.\"\n\tfi\n\t;;\n\n\"Random\")\n\tvalid_paper=\"No\"\n\tuntil [ \"$valid_paper\" = \"Yes\" ]; do\n\t\tRANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n\t\tswww img \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\"\n\t\tvalid_paper=\"$(printf \"Yes\\nNo\" | dmenu -i -l 2 -p \"Do you like the new wallpaper?\")\"\n\tdone\n\t;;\n\n\"Exit\") dunstify \"Program terminated\" \u0026\u0026 exit 1 ;;\n*)\n\tdunstify \"Invalid option.\"\n\t;;\nesac\n","recorded":"2025-01-09 23:44:41.458618124","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/hypr_wall\"\ndir=$(find $WALL -mindepth 1 -maxdepth 1 -type d -exec basename {} \\;)\nchoice=$(echo -e \"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\" | dmenu -i -l 10 -p \"Choose an Option: \")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\n# Random transition type generator function\nget_random_transition() {\n  echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1\n}\n\nif [ \"$choice\" = \"Random\" ]; then\n\twall_dir=$(ls $WALL)\n\twall=\"\"\n\n\tfor dir in $wall_dir; do\n\t\twall+=$(find $WALL/$dir -type f -name \"*.jpg\" -o -name \"*.png\")\n\tdone\n\n\tvalid_paper=\"No\"\n\tuntil [ \"$valid_paper\" = \"Yes\" ]; do\n\t\twallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n    \techo $wallk\n\t\t# Apply the wallpaper with a random transition effect\n\t\ttransition=$(get_random_transition)\n\t\tswww img --transition-type \"$transition\" \"$wallk\"\n\t\tvalid_paper=\"$(printf \"Yes\\nNo\" | dmenu -i -l 2 -p \"Do you like the new wallpaper?\")\"\n\tdone\n\texit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n\t/usr/local/bin/waldl\n\tif [ ! -d \"$WALL/Wallheaven\" ]; then\n\t\tmkdir \"$WALL/Wallheaven\"\n\tfi\n\tWALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n\tif [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n\t\tmkdir $HOME/.cache/wallheaven\n\tfi\n\t/usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n\tif [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n\t\tdunstify \"Directory is empty.\"\n\t\texit 1\n\tfi\n\tchoice=$(echo -e \"Yes\\nNo\" | dmenu -i -l 3 -p \"Would you like to change wallpaper?\")\n\tif [ \"$choice\" = \"No\" ]; then\n\t\tdunstify \"Program terminated.\"\n\t\texit 1\n\tfi\n\twall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n\twall=\"$HOME/.cache/wallheaven/$wall\"\n\tdunstify \"Wallpaper set to $wall\"\n\tif [ -n \"$wall\" ]; then\n\t\t# Apply the wallpaper with a random transition effect\n\t\ttransition=$(get_random_transition)\n\t\tswww img --transition-type \"$transition\" \"$wall\"\n\telse\n\t\tdunstify \"No wallpaper selected.\"\n\tfi\n\texit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n\tdunstify \"Program terminated.\"\n\texit 1\nfi\n\n# if the directory is empty, and its path should not be .cache/wallheaven then download some WALLPAPERS\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n\tif [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n\t\tdunstify \"Directory is empty.\"\n\t\tchoice=$(echo -e \"Download\\nExit\" | dmenu -i -l 2 -p \"Would you like to Download Some?\")\n\t\tif [ \"$choice\" = \"Download\" ]; then\n\t\t\t/usr/local/bin/waldl\n\t\telse\n\t\t\tdunstify \"Program terminated.\"\n\t\t\texit 1\n\t\tfi\n\tfi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n\tdunstify \"No wallpapers found.\"\n\texit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | dmenu -i -l 5 -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n\tSELECTED_WALLPAPER=$(sxiv -to $WALLPAPER_DIR | awk '{print $NF}')\n\t# Check if a wallpaper was selected\n\tif [ -n \"$SELECTED_WALLPAPER\" ]; then\n\t\t# Apply the wallpaper with a random transition effect\n\t\ttransition=$(get_random_transition)\n\t\tswww img --transition-type \"$transition\" \"$SELECTED_WALLPAPER\"\n\telse\n\t\tdunstify \"No wallpaper selected.\"\n\tfi\n\t;;\n\n\"Random\")\n\tvalid_paper=\"No\"\n\tuntil [ \"$valid_paper\" = \"Yes\" ]; do\n\t\tRANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n\t\t# Apply the wallpaper with a random transition effect\n\t\ttransition=$(get_random_transition)\n\t\tswww img --transition-type \"$transition\" \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\"\n\t\tvalid_paper=\"$(printf \"Yes\\nNo\" | dmenu -i -l 2 -p \"Do you like the new wallpaper?\")\"\n\tdone\n\t;;\n\n\"Exit\") dunstify \"Program terminated\" \u0026\u0026 exit 1 ;;\n*)\n\tdunstify \"Invalid option.\"\n\t;;\nesac\n","recorded":"2025-01-09 23:44:38.573366787","filePath":"null","pinned":false},{"value":"--transition-type \"$transition\"","recorded":"2025-01-09 23:43:39.324081010","filePath":"null","pinned":false},{"value":"transition=$(echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1)","recorded":"2025-01-09 23:43:20.314896986","filePath":"null","pinned":false},{"value":"dir=$(ls $WALL)\n","recorded":"2025-01-09 23:41:34.003495446","filePath":"null","pinned":false},{"value":"dir=$(find $WALL -mindepth 1 -maxdepth 1 -type d -exec basename {} \\;)\n","recorded":"2025-01-09 23:41:28.792763854","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/hypr_wall/Dark_Nature.png/home/karna/dotfiles/hypr_wall/Fantasy-Lake3.png/home/karna/dotfiles/hypr_wall/genshin-wallpaper-2.png/home/karna/dotfiles/hypr_wall/genshin-wallpaper-3.png/home/karna/dotfiles/hypr_wall/Linux-user-Room.png\nError: \"failed to read file: Not a directory (os error 20)\"","recorded":"2025-01-09 23:39:26.946687025","filePath":"null","pinned":false},{"value":"    options=\"Random\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\"\n","recorded":"2025-01-09 23:38:35.071129517","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# rofi command variable\nrof=\"rofi -dmenu -theme ~/.config/rofi/launchers/type-1/style-5.rasi -i\"\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/hypr_wall\"\n\n# Get directories in the specified folder\ndir=$(find $WALL -mindepth 1 -maxdepth 1 -type d -exec basename {} \\;)\n\n# Prepare the options based on whether directories exist\nif [ -n \"$dir\" ]; then\n    options=\"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\"\nelse\n    options=\"Random\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\"\nfi\n\n# Show the options to the user\nchoice=$(echo -e \"$options\" | $rof -p \"Choose an Option: \")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\nif [ \"$choice\" = \"Random\" ]; then\n    # Choose a random transition effect\n    transition=$(echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1)\n    \n    wall=\"\"\n    # Only loop over directories if there are directories available\n    if [ -n \"$dir\" ]; then\n        for d in $dir; do\n            # Find all image files and append them properly\n            wall+=$(find \"$WALL/$d\" -type f -name \"*.jpg\" -o -name \"*.png\" | tr '\\n' ' ')\n        done\n    else\n        wall+=$(find \"$WALL\" -type f -name \"*.jpg\" -o -name \"*.png\" | tr '\\n' ' ')\n    fi\n\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        transition=$(echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1)\n        # Randomly select a wallpaper from the list\n        wallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n        echo $wallk\n        swww img \"$wallk\" --transition-type \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    exit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n    /usr/local/bin/waldl\n    if [ ! -d \"$WALL/Wallheaven\" ]; then\n        mkdir \"$WALL/Wallheaven\"\n    fi\n    WALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n    if [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n        mkdir $HOME/.cache/wallheaven\n    fi\n    /usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n    if [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n        $rof -e \"Directory is empty.\"\n        exit 1\n    fi\n    choice=$(echo -e \"Yes\\nNo\" | $rof -p \"Would you like to change wallpaper?\")\n    if [ \"$choice\" = \"No\" ]; then\n        $rof -e \"Program terminated.\"\n        exit 1\n    fi\n    wall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n    wall=\"$HOME/.cache/wallheaven/$wall\"\n    $rof -e \"Wallpaper set to $wall\"\n    # Random transition effect on each selection\n    transition=$(echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1)\n    if [ -n \"$wall\" ]; then\n        swww img \"$wall\" --transition-type \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    exit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n    $rof -e \"Program terminated.\"\n    exit 1\nfi\n\n# If the directory is empty, and its path should not be .cache/wallheaven then download some wallpapers\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n    if [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n        $rof -e \"Directory is empty.\"\n        choice=$(echo -e \"Download\\nExit\" | $rof -p \"Would you like to Download Some?\")\n        if [ \"$choice\" = \"Download\" ]; then\n            /usr/local/bin/waldl\n        else\n            $rof -e \"Program terminated.\"\n            exit 1\n        fi\n    fi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n    $rof -e \"No wallpapers found.\"\n    exit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | $rof -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n    SELECTED_WALLPAPER=$(sxiv -to \"$WALLPAPER_DIR\" | awk '{print $NF}')\n    # Check if a wallpaper was selected\n    if [ -n \"$SELECTED_WALLPAPER\" ]; then\n        # Choose a random transition effect on each selection\n        transition=$(echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1)\n        # Set the wallpaper\n        swww img \"$SELECTED_WALLPAPER\" --transition-type \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    ;;\n\n\"Random\")\n    # Choose a random transition effect\n    transition=$(echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1)\n    \n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        RANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n        swww img \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\" --transition-type \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    ;;\n\n\"Exit\")\n    $rof -e \"Program terminated.\"\n    exit 1\n    ;;\n\n*)\n    $rof -e \"Invalid option.\"\n    ;;\nesac\n","recorded":"2025-01-09 23:38:35.037592571","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/XFCEPic/Pictures/\"\ndir=$(ls $WALL)\nchoice=$(echo -e \"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\" | dmenu -i -l 10 -p \"Choose an Option: \")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\nif [ \"$choice\" = \"Random\" ]; then\n\twall_dir=$(ls $WALL)\n\twall=\"\"\n\n\tfor dir in $wall_dir; do\n\t\twall+=$(find $WALL/$dir -type f -name \"*.jpg\" -o -name \"*.png\")\n\tdone\n\n\tvalid_paper=\"No\"\n\tuntil [ \"$valid_paper\" = \"Yes\" ]; do\n\t\twallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n    \techo $wallk\n\t\tswww img \"$wallk\"\n\t\tvalid_paper=\"$(printf \"Yes\\nNo\" | dmenu -i -l 2 -p \"Do you like the new wallpaper?\")\"\n\tdone\n\texit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n\t/usr/local/bin/waldl\n\tif [ ! -d \"$WALL/Wallheaven\" ]; then\n\t\tmkdir \"$WALL/Wallheaven\"\n\tfi\n\tWALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n\tif [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n\t\tmkdir $HOME/.cache/wallheaven\n\tfi\n\t/usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n\tif [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n\t\tdunstify \"Directory is empty.\"\n\t\texit 1\n\tfi\n\tchoice=$(echo -e \"Yes\\nNo\" | dmenu -i -l 3 -p \"Would you like to change wallpaper?\")\n\tif [ \"$choice\" = \"No\" ]; then\n\t\tdunstify \"Program terminated.\"\n\t\texit 1\n\tfi\n\twall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n\twall=\"$HOME/.cache/wallheaven/$wall\"\n\tdunstify \"Wallpaper set to $wall\"\n\tif [ -n \"$wall\" ]; then\n\t\tswww img \"$wall\"\n\telse\n\t\tdunstify \"No wallpaper selected.\"\n\tfi\n\texit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n\tdunstify \"Program terminated.\"\n\texit 1\nfi\n\n# if the directory is empty, and its path should not be .cache/wallheaven then download some WALLPAPERS\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n\tif [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n\t\tdunstify \"Directory is empty.\"\n\t\tchoice=$(echo -e \"Download\\nExit\" | dmenu -i -l 2 -p \"Would you like to Download Some?\")\n\t\tif [ \"$choice\" = \"Download\" ]; then\n\t\t\t/usr/local/bin/waldl\n\t\telse\n\t\t\tdunstify \"Program terminated.\"\n\t\t\texit 1\n\t\tfi\n\tfi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n\tdunstify \"No wallpapers found.\"\n\texit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | dmenu -i -l 5 -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n\tSELECTED_WALLPAPER=$(sxiv -to $WALLPAPER_DIR | awk '{print $NF}')\n\t# Check if a wallpaper was selected\n\tif [ -n \"$SELECTED_WALLPAPER\" ]; then\n\t\t# Set the wallpaper\n\t\tswww img \"$SELECTED_WALLPAPER\"\n\telse\n\t\tdunstify \"No wallpaper selected.\"\n\tfi\n\t;;\n\n\"Random\")\n\tvalid_paper=\"No\"\n\tuntil [ \"$valid_paper\" = \"Yes\" ]; do\n\t\tRANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n\t\tswww img \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\"\n\t\tvalid_paper=\"$(printf \"Yes\\nNo\" | dmenu -i -l 2 -p \"Do you like the new wallpaper?\")\"\n\tdone\n\t;;\n\n\"Exit\") dunstify \"Program terminated\" \u0026\u0026 exit 1 ;;\n*)\n\tdunstify \"Invalid option.\"\n\t;;\nesac\n","recorded":"2025-01-09 23:38:32.555676675","filePath":"null","pinned":false},{"value":"rm -rf ~/.walcache/\n\t\tmkdir ~/.walcache\n\t\tcp \"$wall\" ~/.walcache/1","recorded":"2025-01-09 23:37:33.519124508","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/XFCEPic/Pictures/\"\ndir=$(ls $WALL)\nchoice=$(echo -e \"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\" | dmenu -i -l 10 -p \"Choose an Option: \")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\nif [ \"$choice\" = \"Random\" ]; then\n\n\twall_dir=$(ls $WALL)\n\twall=\"\"\n\n\tfor dir in $wall_dir; do\n\t\twall+=$(find $WALL/$dir -type f -name \"*.jpg\" -o -name \"*.png\")\n\tdone\n\n\tvalid_paper=\"No\"\n\tuntil [ \"$valid_paper\" = \"Yes\" ]; do\n\t\twallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n    echo $wallk\n\t\txwallpaper --zoom \"$wallk\"\n\t\twal -c\n\t\twal -i \"$wallk\"\n\t\txdotool key super+F5\n\t\trm -rf ~/.walcache/\n\t\tmkdir ~/.walcache\n\t\tcp \"$wallk\" ~/.walcache/1\n\t\tvalid_paper=\"$(printf \"Yes\\nNo\" | dmenu -i -l 2 -p \"Do you like the new wallpaper?\")\"\n\tdone\n\t# betterlockscreen -u ~/.walcache/1\n\texit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n\t/usr/local/bin/waldl\n\tif [ ! -d \"$WALL/Wallheaven\" ]; then\n\t\tmkdir \"$WALL/Wallheaven\"\n\tfi\n\tWALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n\tif [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n\t\tmkdir $HOME/.cache/wallheaven\n\tfi\n\t/usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n\tif [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n\t\tdunstify \"Directory is empty.\"\n\t\texit 1\n\tfi\n\tchoice=$(echo -e \"Yes\\nNo\" | dmenu -i -l 3 -p \"Would you like to change wallpaper?\")\n\tif [ \"$choice\" = \"No\" ]; then\n\t\tdunstify \"Program terminated.\"\n\t\texit 1\n\tfi\n\twall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n\twall=\"$HOME/.cache/wallheaven/$wall\"\n\tdunstify \"Wallpaper set to $wall\"\n\tif [ -n \"$wall\" ]; then\n\t\txwallpaper --zoom \"$wall\"\n\t\twal -c\n\t\twal -i \"$wall\"\n\t\txdotool key super+F5\n\t\trm -rf ~/.walcache/\n\t\tmkdir ~/.walcache\n\t\tcp \"$wall\" ~/.walcache/1\n\t\t# betterlockscreen -u ~/.walcache/1\n\telse\n\t\tdunstify \"No wallpaper selected.\"\n\tfi\n\texit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n\tdunstify \"Program terminated.\"\n\texit 1\nfi\n\n# if the directory is empty, and its path should not be .cache/wallheaven then download some WALLPAPERS\n\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n\tif [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n\t\tdunstify \"Directory is empty.\"\n\t\tchoice=$(echo -e \"Download\\nExit\" | dmenu -i -l 2 -p \"Would you like to Download Some?\")\n\t\tif [ \"$choice\" = \"Download\" ]; then\n\t\t\t/usr/local/bin/waldl\n\t\telse\n\t\t\tdunstify \"Program terminated.\"\n\t\t\texit 1\n\t\tfi\n\tfi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n\tdunstify \"No wallpapers found.\"\n\texit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | dmenu -i -l 5 -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n\tSELECTED_WALLPAPER=$(sxiv -to $WALLPAPER_DIR | awk '{print $NF}')\n\t# Check if a wallpaper was selected\n\tif [ -n \"$SELECTED_WALLPAPER\" ]; then\n\t\t# Set the wallpaper\n\t\txwallpaper --zoom \"$SELECTED_WALLPAPER\"\n\t\twal -c\n\t\twal -i \"$SELECTED_WALLPAPER\"\n\t\txdotool key super+F5\n\t\trm -rf ~/.walcache/\n\t\tmkdir ~/.walcache\n\t\tcp \"$SELECTED_WALLPAPER\" ~/.walcache/1\n\t\t# betterlockscreen -u ~/.walcache/1\n\telse\n\t\tdunstify \"No wallpaper selected.\"\n\tfi\n\t;;\n\n\"Random\")\n\tvalid_paper=\"No\"\n\tuntil [ \"$valid_paper\" = \"Yes\" ]; do\n\t\tRANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n\t\txwallpaper --zoom \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\"\n\t\twal -c\n\t\twal -i \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\"\n\t\txdotool key super+F5\n\t\trm -rf ~/.walcache/\n\t\tmkdir ~/.walcache\n\t\tcp \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\" ~/.walcache/1\n\t\tvalid_paper=\"$(printf \"Yes\\nNo\" | dmenu -i -l 2 -p \"Do you like the new wallpaper?\")\"\n\tdone\n\t# betterlockscreen -u ~/.walcache/1\n\t;;\n\n\"Exit\") dunstify \"Program terminated\" \u0026\u0026 exit 1 ;;\n*)\n\tdunstify \"Invalid option.\"\n\t;;\nesac\n","recorded":"2025-01-09 23:35:39.502348792","filePath":"null","pinned":false},{"value":"t","recorded":"2025-01-09 23:32:11.672830360","filePath":"null","pinned":false},{"value":"# Prepare the options based on whether directories exist\nif [ -n \"$dir\" ]; then\n    options=\"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\"\nelse\n    options=\"Random\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\"\nfi","recorded":"2025-01-09 23:31:17.744787299","filePath":"null","pinned":false},{"value":"# Prepare the options based on whether directories exist\nif [ -n \"$dir\" ]; then\n    options=\"Random\\n$dir\\nChoose\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\"\nelse\n    options=\"Random\\nChoose\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\"\nfi\n","recorded":"2025-01-09 23:31:14.202656996","filePath":"null","pinned":false},{"value":"    transition=$(echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1)\n","recorded":"2025-01-09 23:30:03.096769804","filePath":"null","pinned":false},{"value":"transition=$(echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1)\n","recorded":"2025-01-09 23:29:49.661067403","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# rofi command variable\nrof=\"rofi -dmenu -theme ~/.config/rofi/launchers/type-1/style-5.rasi -i\"\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/hypr_wall\"\n\n# Get directories in the specified folder\ndir=$(find $WALL -mindepth 1 -maxdepth 1 -type d -exec basename {} \\;)\n\n# Prepare the options based on whether directories exist\nif [ -n \"$dir\" ]; then\n    options=\"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\"\nelse\n    options=\"Random\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\"\nfi\n\n# Show the options to the user\nchoice=$(echo -e \"$options\" | $rof -p \"Choose an Option: \")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\nif [ \"$choice\" = \"Random\" ]; then\n    # Choose a random transition effect\n    transition=$(echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1)\n    \n    wall=\"\"\n    # Only loop over directories if there are directories available\n    if [ -n \"$dir\" ]; then\n        for d in $dir; do\n            # Find all image files and append them properly\n            wall+=$(find \"$WALL/$d\" -type f -name \"*.jpg\" -o -name \"*.png\" | tr '\\n' ' ')\n        done\n    else\n        wall+=$(find \"$WALL\" -type f -name \"*.jpg\" -o -name \"*.png\" | tr '\\n' ' ')\n    fi\n\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        # Randomly select a wallpaper from the list\n        wallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n        echo $wallk\n        swww img \"$wallk\" --transition-type \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    exit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n    /usr/local/bin/waldl\n    if [ ! -d \"$WALL/Wallheaven\" ]; then\n        mkdir \"$WALL/Wallheaven\"\n    fi\n    WALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n    if [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n        mkdir $HOME/.cache/wallheaven\n    fi\n    /usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n    if [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n        $rof -e \"Directory is empty.\"\n        exit 1\n    fi\n    choice=$(echo -e \"Yes\\nNo\" | $rof -p \"Would you like to change wallpaper?\")\n    if [ \"$choice\" = \"No\" ]; then\n        $rof -e \"Program terminated.\"\n        exit 1\n    fi\n    wall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n    wall=\"$HOME/.cache/wallheaven/$wall\"\n    $rof -e \"Wallpaper set to $wall\"\n    # Random transition effect on each selection\n    transition=$(echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1)\n    if [ -n \"$wall\" ]; then\n        swww img \"$wall\" --transition-type \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    exit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n    $rof -e \"Program terminated.\"\n    exit 1\nfi\n\n# If the directory is empty, and its path should not be .cache/wallheaven then download some wallpapers\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n    if [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n        $rof -e \"Directory is empty.\"\n        choice=$(echo -e \"Download\\nExit\" | $rof -p \"Would you like to Download Some?\")\n        if [ \"$choice\" = \"Download\" ]; then\n            /usr/local/bin/waldl\n        else\n            $rof -e \"Program terminated.\"\n            exit 1\n        fi\n    fi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n    $rof -e \"No wallpapers found.\"\n    exit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | $rof -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n    SELECTED_WALLPAPER=$(sxiv -to \"$WALLPAPER_DIR\" | awk '{print $NF}')\n    # Check if a wallpaper was selected\n    if [ -n \"$SELECTED_WALLPAPER\" ]; then\n        # Choose a random transition effect on each selection\n        transition=$(echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1)\n        # Set the wallpaper\n        swww img \"$SELECTED_WALLPAPER\" --transition-type \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    ;;\n\n\"Random\")\n    # Choose a random transition effect\n    transition=$(echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1)\n    \n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        RANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n        swww img \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\" --transition-type \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    ;;\n\n\"Exit\")\n    $rof -e \"Program terminated.\"\n    exit 1\n    ;;\n\n*)\n    $rof -e \"Invalid option.\"\n    ;;\nesac\n","recorded":"2025-01-09 23:29:49.630184522","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# rofi command variable\nrof=\"rofi -dmenu -theme ~/.config/rofi/launchers/type-1/style-5.rasi -i\"\n\n# Choose a transition effect at the start\ntransition=$(echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1)\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/hypr_wall\"\n\n# Get directories in the specified folder\ndir=$(find $WALL -mindepth 1 -maxdepth 1 -type d -exec basename {} \\;)\n\n# Prepare the options based on whether directories exist\nif [ -n \"$dir\" ]; then\n    options=\"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\"\nelse\n    options=\"Random\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\"\nfi\n\n# Show the options to the user\nchoice=$(echo -e \"$options\" | $rof -p \"Choose an Option: \")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\nif [ \"$choice\" = \"Random\" ]; then\n    wall=\"\"\n    # Only loop over directories if there are directories available\n    if [ -n \"$dir\" ]; then\n        for d in $dir; do\n            # Find all image files and append them properly\n            wall+=$(find \"$WALL/$d\" -type f -name \"*.jpg\" -o -name \"*.png\" | tr '\\n' ' ')\n        done\n    else\n        wall+=$(find \"$WALL\" -type f -name \"*.jpg\" -o -name \"*.png\" | tr '\\n' ' ')\n    fi\n\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        # Randomly select a wallpaper from the list\n        wallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n        echo $wallk\n        swww img \"$wallk\" --transition-type \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    exit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n    /usr/local/bin/waldl\n    if [ ! -d \"$WALL/Wallheaven\" ]; then\n        mkdir \"$WALL/Wallheaven\"\n    fi\n    WALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n    if [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n        mkdir $HOME/.cache/wallheaven\n    fi\n    /usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n    if [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n        $rof -e \"Directory is empty.\"\n        exit 1\n    fi\n    choice=$(echo -e \"Yes\\nNo\" | $rof -p \"Would you like to change wallpaper?\")\n    if [ \"$choice\" = \"No\" ]; then\n        $rof -e \"Program terminated.\"\n        exit 1\n    fi\n    wall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n    wall=\"$HOME/.cache/wallheaven/$wall\"\n    $rof -e \"Wallpaper set to $wall\"\n    if [ -n \"$wall\" ]; then\n        swww img \"$wall\" --transition-type \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    exit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n    $rof -e \"Program terminated.\"\n    exit 1\nfi\n\n# If the directory is empty, and its path should not be .cache/wallheaven then download some wallpapers\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n    if [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n        $rof -e \"Directory is empty.\"\n        choice=$(echo -e \"Download\\nExit\" | $rof -p \"Would you like to Download Some?\")\n        if [ \"$choice\" = \"Download\" ]; then\n            /usr/local/bin/waldl\n        else\n            $rof -e \"Program terminated.\"\n            exit 1\n        fi\n    fi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n    $rof -e \"No wallpapers found.\"\n    exit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | $rof -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n    SELECTED_WALLPAPER=$(sxiv -to \"$WALLPAPER_DIR\" | awk '{print $NF}')\n    # Check if a wallpaper was selected\n    if [ -n \"$SELECTED_WALLPAPER\" ]; then\n        # Set the wallpaper\n        swww img \"$SELECTED_WALLPAPER\" --transition-type \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    ;;\n\n\"Random\")\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        RANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n        swww img \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\" --transition-type \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    ;;\n\n\"Exit\")\n    $rof -e \"Program terminated.\"\n    exit 1\n    ;;\n\n*)\n    $rof -e \"Invalid option.\"\n    ;;\nesac\n","recorded":"2025-01-09 23:29:16.750881583","filePath":"null","pinned":false},{"value":"echo \"$transition\"\n","recorded":"2025-01-09 23:28:27.308939920","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# rofi command variable\nrof=\"rofi -dmenu -theme ~/.config/rofi/launchers/type-1/style-5.rasi -i\"\n\n# Choose a transition effect at the start\ntransition=$(echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1)\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/hypr_wall\"\n# dir=$(ls $WALL)\ndir=$(find $WALL -mindepth 1 -maxdepth 1 -type d -exec basename {} \\;)\n\n# Prepare the options based on whether directories exist\nif [ -n \"$dir\" ]; then\n    options=\"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\"\nelse\n    options=\"Random\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\"\nfi\n\n# Show the options to the user\nchoice=$(echo -e \"$options\" | $rof -p \"Choose an Option: \")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\nif [ \"$choice\" = \"Random\" ]; then\n    wall_dir=$(ls $WALL)\n    wall=\"\"\n\n    for dir in $wall_dir; do\n        wall+=$(find $WALL/$dir -type f -name \"*.jpg\" -o -name \"*.png\")\n    done\n\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        wallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n        echo $wallk\n        swww img \"$wallk\" --transition-type \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    exit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n    /usr/local/bin/waldl\n    if [ ! -d \"$WALL/Wallheaven\" ]; then\n        mkdir \"$WALL/Wallheaven\"\n    fi\n    WALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n    if [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n        mkdir $HOME/.cache/wallheaven\n    fi\n    /usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n    if [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n        $rof -e \"Directory is empty.\"\n        exit 1\n    fi\n    choice=$(echo -e \"Yes\\nNo\" | $rof -p \"Would you like to change wallpaper?\")\n    if [ \"$choice\" = \"No\" ]; then\n        $rof -e \"Program terminated.\"\n        exit 1\n    fi\n    wall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n    wall=\"$HOME/.cache/wallheaven/$wall\"\n    $rof -e \"Wallpaper set to $wall\"\n    if [ -n \"$wall\" ]; then\n        swww img \"$wall\" --transition-type \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    exit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n    $rof -e \"Program terminated.\"\n    exit 1\nfi\n\n# if the directory is empty, and its path should not be .cache/wallheaven then download some WALLPAPERS\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n    if [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n        $rof -e \"Directory is empty.\"\n        choice=$(echo -e \"Download\\nExit\" | $rof -p \"Would you like to Download Some?\")\n        if [ \"$choice\" = \"Download\" ]; then\n            /usr/local/bin/waldl\n        else\n            $rof -e \"Program terminated.\"\n            exit 1\n        fi\n    fi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n    $rof -e \"No wallpapers found.\"\n    exit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | $rof -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n    SELECTED_WALLPAPER=$(sxiv -to \"$WALLPAPER_DIR\" | awk '{print $NF}')\n    # Check if a wallpaper was selected\n    if [ -n \"$SELECTED_WALLPAPER\" ]; then\n        # Set the wallpaper\n        swww img \"$SELECTED_WALLPAPER\" --transition-type \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    ;;\n\n\"Random\")\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        RANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n        swww img \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\" --transition-type \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    ;;\n\n\"Exit\")\n    $rof -e \"Program terminated.\"\n    exit 1\n    ;;\n\n*)\n    $rof -e \"Invalid option.\"\n    ;;\nesac\n","recorded":"2025-01-09 23:27:03.746040029","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/hypr_wall/Dark_Nature.png/home/karna/dotfiles/hypr_wall/Fantasy-Lake3.png/home/karna/dotfiles/hypr_wall/g","recorded":"2025-01-09 23:26:01.337597468","filePath":"null","pinned":false},{"value":"  cd ~/dotfiles/Extras/Extras/waldl-master/ \u0026\u0026 sudo make install \u0026\u0026 cd ~/dotfiles\n","recorded":"2025-01-09 23:25:41.153353206","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# rofi command variable\nrof=\"rofi -dmenu -theme ~/.config/rofi/launchers/type-1/style-5.rasi -i\"\n\n# Choose a transition effect at the start\ntransition=$(echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1)\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/hypr_wall\"\n\n# Get directories in the specified folder\ndir=$(find $WALL -mindepth 1 -maxdepth 1 -type d -exec basename {} \\;)\n\n# Prepare the options based on whether directories exist\nif [ -n \"$dir\" ]; then\n    options=\"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\"\nelse\n    options=\"Random\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\"\nfi\n\n# Show the options to the user\nchoice=$(echo -e \"$options\" | $rof -p \"Choose an Option: \")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\nif [ \"$choice\" = \"Random\" ]; then\n    # Only loop over directories if dir contains directory names\n    if [ -n \"$dir\" ]; then\n        wall=\"\"\n\n        for d in $dir; do\n            wall+=$(find \"$WALL/$d\" -type f -name \"*.jpg\" -o -name \"*.png\")\n        done\n\n        valid_paper=\"No\"\n        until [ \"$valid_paper\" = \"Yes\" ]; do\n            wallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n            swww img \"$wallk\" --transition-type \"$transition\"\n            valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n        done\n    else\n        $rof -e \"No directories available for random selection.\"\n    fi\n    exit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n    /usr/local/bin/waldl\n    if [ ! -d \"$WALL/Wallheaven\" ]; then\n        mkdir \"$WALL/Wallheaven\"\n    fi\n    WALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n    if [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n        mkdir $HOME/.cache/wallheaven\n    fi\n    /usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n    if [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n        $rof -e \"Directory is empty.\"\n        exit 1\n    fi\n    choice=$(echo -e \"Yes\\nNo\" | $rof -p \"Would you like to change wallpaper?\")\n    if [ \"$choice\" = \"No\" ]; then\n        $rof -e \"Program terminated.\"\n        exit 1\n    fi\n    wall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n    wall=\"$HOME/.cache/wallheaven/$wall\"\n    $rof -e \"Wallpaper set to $wall\"\n    if [ -n \"$wall\" ]; then\n        swww img \"$wall\" --transition-type \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    exit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n    $rof -e \"Program terminated.\"\n    exit 1\nfi\n\n# if the directory is empty, and its path should not be .cache/wallheaven then download some WALLPAPERS\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n    if [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n        $rof -e \"Directory is empty.\"\n        choice=$(echo -e \"Download\\nExit\" | $rof -p \"Would you like to Download Some?\")\n        if [ \"$choice\" = \"Download\" ]; then\n            /usr/local/bin/waldl\n        else\n            $rof -e \"Program terminated.\"\n            exit 1\n        fi\n    fi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n    $rof -e \"No wallpapers found.\"\n    exit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | $rof -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n    SELECTED_WALLPAPER=$(sxiv -to \"$WALLPAPER_DIR\" | awk '{print $NF}')\n    # Check if a wallpaper was selected\n    if [ -n \"$SELECTED_WALLPAPER\" ]; then\n        # Set the wallpaper\n        swww img \"$SELECTED_WALLPAPER\" --transition-type \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    ;;\n\n\"Random\")\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        RANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n        swww img \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\" --transition-type \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    ;;\n\n\"Exit\")\n    $rof -e \"Program terminated.\"\n    exit 1\n    ;;\n\n*)\n    $rof -e \"Invalid option.\"\n    ;;\nesac\n","recorded":"2025-01-09 23:22:48.711794539","filePath":"null","pinned":false},{"value":"dir=$(find $WALL -mindepth 1 -maxdepth 1 -type d -exec basename {} \\;)","recorded":"2025-01-09 23:20:40.014104807","filePath":"null","pinned":false},{"value":"WALL=\"$HOME/dotfiles/hypr_wall\"\n","recorded":"2025-01-09 23:19:43.683078779","filePath":"null","pinned":false},{"value":"# Directory containing wallpapers\n","recorded":"2025-01-09 23:19:43.245552684","filePath":"null","pinned":false},{"value":"choice=$(echo -e \"Random\\n$dir\\n Download to Collection\\nTemporary Wallpaper\\nQuit\" | $rof -p \"Choose an Option: \")\n","recorded":"2025-01-09 23:19:39.063315075","filePath":"null","pinned":false},{"value":"# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/hypr_wall\"\ndir=$(ls $WALL)\n\n# Prepare the options based on whether directories exist\nif [ -n \"$dir\" ]; then\n    options=\"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\"\nelse\n    options=\"Random\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\"\nfi\n\n# Show the options to the user\nchoice=$(echo -e \"$options\" | $rof -p \"Choose an Option: \")\n","recorded":"2025-01-09 23:19:27.772483280","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# rofi command variable\nrof=\"rofi -dmenu -theme ~/.config/rofi/launchers/type-1/style-5.rasi -i\"\n\n# Choose a transition effect at the start\ntransition=$(echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1)\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/hypr_wall\"\ndir=$(ls $WALL)\nchoice=$(echo -e \"Random\\n$dir\\n Download to Collection\\nTemporary Wallpaper\\nQuit\" | $rof -p \"Choose an Option: \")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\nif [ \"$choice\" = \"Random\" ]; then\n    wall_dir=$(ls $WALL)\n    wall=\"\"\n\n    for dir in $wall_dir; do\n        wall+=$(find $WALL/$dir -type f -name \"*.jpg\" -o -name \"*.png\")\n    done\n\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        wallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n        echo $wallk\n        swww img \"$wallk\" --transition-type \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    exit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n    /usr/local/bin/waldl\n    if [ ! -d \"$WALL/Wallheaven\" ]; then\n        mkdir \"$WALL/Wallheaven\"\n    fi\n    WALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n    if [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n        mkdir $HOME/.cache/wallheaven\n    fi\n    /usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n    if [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n        $rof -e \"Directory is empty.\"\n        exit 1\n    fi\n    choice=$(echo -e \"Yes\\nNo\" | $rof -p \"Would you like to change wallpaper?\")\n    if [ \"$choice\" = \"No\" ]; then\n        $rof -e \"Program terminated.\"\n        exit 1\n    fi\n    wall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n    wall=\"$HOME/.cache/wallheaven/$wall\"\n    $rof -e \"Wallpaper set to $wall\"\n    if [ -n \"$wall\" ]; then\n        swww img \"$wall\" --transition-type \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    exit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n    $rof -e \"Program terminated.\"\n    exit 1\nfi\n\n# if the directory is empty, and its path should not be .cache/wallheaven then download some WALLPAPERS\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n    if [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n        $rof -e \"Directory is empty.\"\n        choice=$(echo -e \"Download\\nExit\" | $rof -p \"Would you like to Download Some?\")\n        if [ \"$choice\" = \"Download\" ]; then\n            /usr/local/bin/waldl\n        else\n            $rof -e \"Program terminated.\"\n            exit 1\n        fi\n    fi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n    $rof -e \"No wallpapers found.\"\n    exit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | $rof -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n    SELECTED_WALLPAPER=$(sxiv -to \"$WALLPAPER_DIR\" | awk '{print $NF}')\n    # Check if a wallpaper was selected\n    if [ -n \"$SELECTED_WALLPAPER\" ]; then\n        # Set the wallpaper\n        swww img \"$SELECTED_WALLPAPER\" --transition-type \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    ;;\n\n\"Random\")\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        RANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n        swww img \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\" --transition-type \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    ;;\n\n\"Exit\")\n    $rof -e \"Program terminated.\"\n    exit 1\n    ;;\n\n*)\n    $rof -e \"Invalid option.\"\n    ;;\nesac\n","recorded":"2025-01-09 23:17:56.010726742","filePath":"null","pinned":false},{"value":"choice=$(echo -e \"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\" | $rof)\n","recorded":"2025-01-09 23:16:00.741139998","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# rofi command variable\nrof=\"rofi -dmenu -theme ~/.config/rofi/launchers/type-1/style-5.rasi -i\"\n# swww transition settings\nsww=(\"fade\" \"slide\" \"zoom\" \"blur\")\n\n# Choose a transition effect at the start\ntransition=$(echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1)\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/XFCEPic/Pictures/\"\ndir=$(ls $WALL)\nchoice=$(echo -e \"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\" | $rof -p \"Choose an Option: \")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\nif [ \"$choice\" = \"Random\" ]; then\n    wall_dir=$(ls $WALL)\n    wall=\"\"\n\n    for dir in $wall_dir; do\n        wall+=$(find $WALL/$dir -type f -name \"*.jpg\" -o -name \"*.png\")\n    done\n\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        wallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n        echo $wallk\n        swww img \"$wallk\" --transition \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    exit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n    /usr/local/bin/waldl\n    if [ ! -d \"$WALL/Wallheaven\" ]; then\n        mkdir \"$WALL/Wallheaven\"\n    fi\n    WALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n    if [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n        mkdir $HOME/.cache/wallheaven\n    fi\n    /usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n    if [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n        $rof -e \"Directory is empty.\"\n        exit 1\n    fi\n    choice=$(echo -e \"Yes\\nNo\" | $rof -p \"Would you like to change wallpaper?\")\n    if [ \"$choice\" = \"No\" ]; then\n        $rof -e \"Program terminated.\"\n        exit 1\n    fi\n    wall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n    wall=\"$HOME/.cache/wallheaven/$wall\"\n    $rof -e \"Wallpaper set to $wall\"\n    if [ -n \"$wall\" ]; then\n        swww img \"$wall\" --transition \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    exit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n    $rof -e \"Program terminated.\"\n    exit 1\nfi\n\n# if the directory is empty, and its path should not be .cache/wallheaven then download some WALLPAPERS\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n    if [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n        $rof -e \"Directory is empty.\"\n        choice=$(echo -e \"Download\\nExit\" | $rof -p \"Would you like to Download Some?\")\n        if [ \"$choice\" = \"Download\" ]; then\n            /usr/local/bin/waldl\n        else\n            $rof -e \"Program terminated.\"\n            exit 1\n        fi\n    fi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n    $rof -e \"No wallpapers found.\"\n    exit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | $rof -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n    SELECTED_WALLPAPER=$(sxiv -to \"$WALLPAPER_DIR\" | awk '{print $NF}')\n    # Check if a wallpaper was selected\n    if [ -n \"$SELECTED_WALLPAPER\" ]; then\n        # Set the wallpaper\n        swww img \"$SELECTED_WALLPAPER\" --transition \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    ;;\n\n\"Random\")\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        RANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n        swww img \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\" --transition \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    ;;\n\n\"Exit\")\n    $rof -e \"Program terminated.\"\n    exit 1\n    ;;\n\n*)\n    $rof -e \"Invalid option.\"\n    ;;\nesac\n","recorded":"2025-01-09 23:12:45.682526110","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# rofi command variable\nrof=\"rofi -dmenu -theme ~/.config/rofi/launchers/type-1/style-5.rasi -i\"\n\n# Choose a transition effect at the start\ntransition=$(echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1)\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/XFCEPic/Pictures/\"\ndir=$(ls $WALL)\nchoice=$(echo -e \"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\" | $rof -p \"Choose an Option: \")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\nif [ \"$choice\" = \"Random\" ]; then\n    wall_dir=$(ls $WALL)\n    wall=\"\"\n\n    for dir in $wall_dir; do\n        wall+=$(find $WALL/$dir -type f -name \"*.jpg\" -o -name \"*.png\")\n    done\n\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        wallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n        echo $wallk\n        swww img \"$wallk\" --transition-type \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    exit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n    /usr/local/bin/waldl\n    if [ ! -d \"$WALL/Wallheaven\" ]; then\n        mkdir \"$WALL/Wallheaven\"\n    fi\n    WALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n    if [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n        mkdir $HOME/.cache/wallheaven\n    fi\n    /usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n    if [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n        $rof -e \"Directory is empty.\"\n        exit 1\n    fi\n    choice=$(echo -e \"Yes\\nNo\" | $rof -p \"Would you like to change wallpaper?\")\n    if [ \"$choice\" = \"No\" ]; then\n        $rof -e \"Program terminated.\"\n        exit 1\n    fi\n    wall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n    wall=\"$HOME/.cache/wallheaven/$wall\"\n    $rof -e \"Wallpaper set to $wall\"\n    if [ -n \"$wall\" ]; then\n        swww img \"$wall\" --transition-type \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    exit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n    $rof -e \"Program terminated.\"\n    exit 1\nfi\n\n# if the directory is empty, and its path should not be .cache/wallheaven then download some WALLPAPERS\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n    if [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n        $rof -e \"Directory is empty.\"\n        choice=$(echo -e \"Download\\nExit\" | $rof -p \"Would you like to Download Some?\")\n        if [ \"$choice\" = \"Download\" ]; then\n            /usr/local/bin/waldl\n        else\n            $rof -e \"Program terminated.\"\n            exit 1\n        fi\n    fi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n    $rof -e \"No wallpapers found.\"\n    exit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | $rof -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n    SELECTED_WALLPAPER=$(sxiv -to \"$WALLPAPER_DIR\" | awk '{print $NF}')\n    # Check if a wallpaper was selected\n    if [ -n \"$SELECTED_WALLPAPER\" ]; then\n        # Set the wallpaper\n        swww img \"$SELECTED_WALLPAPER\" --transition-type \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    ;;\n\n\"Random\")\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        RANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n        swww img \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\" --transition-type \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    ;;\n\n\"Exit\")\n    $rof -e \"Program terminated.\"\n    exit 1\n    ;;\n\n*)\n    $rof -e \"Invalid option.\"\n    ;;\nesac\n","recorded":"2025-01-09 23:12:42.744847291","filePath":"null","pinned":false},{"value":"--transition-step 20 --transition-fps 30","recorded":"2025-01-09 23:11:48.771647617","filePath":"null","pinned":false},{"value":"--transition-type","recorded":"2025-01-09 23:11:35.104296413","filePath":"null","pinned":false},{"value":"transition=$(echo -e \"${sww[*]}\" | tr ' ' '\\n' | $rof -p \"Choose a transition effect:\")\n","recorded":"2025-01-09 23:10:15.298305272","filePath":"null","pinned":false},{"value":"transition_type=$(echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1)\n","recorded":"2025-01-09 23:10:08.636792439","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# rofi command variable\nrof=\"rofi -dmenu -theme ~/.config/rofi/launchers/type-1/style-5.rasi -i\"\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/XFCEPic/Pictures/\"\ndir=$(ls $WALL)\nchoice=$(echo -e \"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\" | $rof -p \"Choose an Option: \")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\nif [ \"$choice\" = \"Random\" ]; then\n    wall_dir=$(ls $WALL)\n    wall=\"\"\n\n    for dir in $wall_dir; do\n        wall+=$(find $WALL/$dir -type f -name \"*.jpg\" -o -name \"*.png\")\n    done\n\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        wallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n        echo $wallk\n        xwallpaper --zoom \"$wallk\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    exit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n    /usr/local/bin/waldl\n    if [ ! -d \"$WALL/Wallheaven\" ]; then\n        mkdir \"$WALL/Wallheaven\"\n    fi\n    WALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n    if [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n        mkdir $HOME/.cache/wallheaven\n    fi\n    /usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n    if [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n        $rof -e \"Directory is empty.\"\n        exit 1\n    fi\n    choice=$(echo -e \"Yes\\nNo\" | $rof -p \"Would you like to change wallpaper?\")\n    if [ \"$choice\" = \"No\" ]; then\n        $rof -e \"Program terminated.\"\n        exit 1\n    fi\n    wall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n    wall=\"$HOME/.cache/wallheaven/$wall\"\n    $rof -e \"Wallpaper set to $wall\"\n    if [ -n \"$wall\" ]; then\n        xwallpaper --zoom \"$wall\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    exit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n    $rof -e \"Program terminated.\"\n    exit 1\nfi\n\n# if the directory is empty, and its path should not be .cache/wallheaven then download some WALLPAPERS\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n    if [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n        $rof -e \"Directory is empty.\"\n        choice=$(echo -e \"Download\\nExit\" | $rof -p \"Would you like to Download Some?\")\n        if [ \"$choice\" = \"Download\" ]; then\n            /usr/local/bin/waldl\n        else\n            $rof -e \"Program terminated.\"\n            exit 1\n        fi\n    fi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n    $rof -e \"No wallpapers found.\"\n    exit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | $rof -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n    SELECTED_WALLPAPER=$(rofi -show filebrowser -dmenu -p \"Choose Wallpaper\" -dir \"$WALLPAPER_DIR\")\n    # Check if a wallpaper was selected\n    if [ -n \"$SELECTED_WALLPAPER\" ]; then\n        # Set the wallpaper\n        xwallpaper --zoom \"$SELECTED_WALLPAPER\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    ;;\n\n\"Random\")\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        RANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n        xwallpaper --zoom \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    ;;\n\n\"Exit\")\n    $rof -e \"Program terminated.\"\n    exit 1\n    ;;\n\n*)\n    $rof -e \"Invalid option.\"\n    ;;\nesac\n","recorded":"2025-01-09 23:09:26.528427461","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# rofi command variable\nrof=\"rofi -dmenu -theme ~/.config/rofi/launchers/type-1/style-5.rasi -i\"\n# swww transition settings\nsww=(\"fade\" \"slide\" \"zoom\" \"blur\")\n\ntransition=$(echo \"wipe center random\" | tr ' ' '\\n' | shuf -n 1)\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/hypr_wall/\"\ndir=$(ls $WALL)\nchoice=$(echo -e \"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\" | $rof -p \"Choose an Option: \")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\nif [ \"$choice\" = \"Random\" ]; then\n    wall_dir=$(ls $WALL)\n    wall=\"\"\n\n    for dir in $wall_dir; do\n        wall+=$(find $WALL/$dir -type f -name \"*.jpg\" -o -name \"*.png\")\n    done\n\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        wallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n        echo $wallk\n        swww img \"$wallk\" --transition \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    exit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n    /usr/local/bin/waldl\n    if [ ! -d \"$WALL/Wallheaven\" ]; then\n        mkdir \"$WALL/Wallheaven\"\n    fi\n    WALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n    if [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n        mkdir $HOME/.cache/wallheaven\n    fi\n    /usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n    if [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n        $rof -e \"Directory is empty.\"\n        exit 1\n    fi\n    choice=$(echo -e \"Yes\\nNo\" | $rof -p \"Would you like to change wallpaper?\")\n    if [ \"$choice\" = \"No\" ]; then\n        $rof -e \"Program terminated.\"\n        exit 1\n    fi\n    wall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n    wall=\"$HOME/.cache/wallheaven/$wall\"\n    $rof -e \"Wallpaper set to $wall\"\n    if [ -n \"$wall\" ]; then\n        swww img \"$wall\" --transition \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    exit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n    $rof -e \"Program terminated.\"\n    exit 1\nfi\n\n# if the directory is empty, and its path should not be .cache/wallheaven then download some WALLPAPERS\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n    if [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n        $rof -e \"Directory is empty.\"\n        choice=$(echo -e \"Download\\nExit\" | $rof -p \"Would you like to Download Some?\")\n        if [ \"$choice\" = \"Download\" ]; then\n            /usr/local/bin/waldl\n        else\n            $rof -e \"Program terminated.\"\n            exit 1\n        fi\n    fi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n    $rof -e \"No wallpapers found.\"\n    exit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | $rof -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n    SELECTED_WALLPAPER=$(rofi -show filebrowser -dmenu -p \"Choose Wallpaper\" -dir \"$WALLPAPER_DIR\")\n    # Check if a wallpaper was selected\n    if [ -n \"$SELECTED_WALLPAPER\" ]; then\n        # Set the wallpaper\n        swww img \"$SELECTED_WALLPAPER\" --transition \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    ;;\n\n\"Random\")\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        RANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n        swww img \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\" --transition \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    ;;\n\n\"Exit\")\n    $rof -e \"Program terminated.\"\n    exit 1\n    ;;\n\n*)\n    $rof -e \"Invalid option.\"\n    ;;\nesac\n","recorded":"2025-01-09 23:09:26.496289301","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# rofi command variable\nrof=\"rofi -dmenu -theme ~/.config/rofi/launchers/type-1/style-5.rasi -i\"\n# swww transition settings\nsww=(\"fade\" \"slide\" \"zoom\" \"blur\")\n\n# Choose a transition effect at the start\ntransition=$(echo -e \"${sww[*]}\" | tr ' ' '\\n' | $rof -p \"Choose a transition effect:\")\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/XFCEPic/Pictures/\"\ndir=$(ls $WALL)\nchoice=$(echo -e \"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\" | $rof -p \"Choose an Option: \")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\nif [ \"$choice\" = \"Random\" ]; then\n    wall_dir=$(ls $WALL)\n    wall=\"\"\n\n    for dir in $wall_dir; do\n        wall+=$(find $WALL/$dir -type f -name \"*.jpg\" -o -name \"*.png\")\n    done\n\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        wallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n        echo $wallk\n        swww img \"$wallk\" --transition \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    exit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n    /usr/local/bin/waldl\n    if [ ! -d \"$WALL/Wallheaven\" ]; then\n        mkdir \"$WALL/Wallheaven\"\n    fi\n    WALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n    if [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n        mkdir $HOME/.cache/wallheaven\n    fi\n    /usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n    if [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n        $rof -e \"Directory is empty.\"\n        exit 1\n    fi\n    choice=$(echo -e \"Yes\\nNo\" | $rof -p \"Would you like to change wallpaper?\")\n    if [ \"$choice\" = \"No\" ]; then\n        $rof -e \"Program terminated.\"\n        exit 1\n    fi\n    wall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n    wall=\"$HOME/.cache/wallheaven/$wall\"\n    $rof -e \"Wallpaper set to $wall\"\n    if [ -n \"$wall\" ]; then\n        swww img \"$wall\" --transition \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    exit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n    $rof -e \"Program terminated.\"\n    exit 1\nfi\n\n# if the directory is empty, and its path should not be .cache/wallheaven then download some WALLPAPERS\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n    if [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n        $rof -e \"Directory is empty.\"\n        choice=$(echo -e \"Download\\nExit\" | $rof -p \"Would you like to Download Some?\")\n        if [ \"$choice\" = \"Download\" ]; then\n            /usr/local/bin/waldl\n        else\n            $rof -e \"Program terminated.\"\n            exit 1\n        fi\n    fi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n    $rof -e \"No wallpapers found.\"\n    exit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | $rof -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n    SELECTED_WALLPAPER=$(sxiv -to \"$WALLPAPER_DIR\" | awk '{print $NF}')\n    # Check if a wallpaper was selected\n    if [ -n \"$SELECTED_WALLPAPER\" ]; then\n        # Set the wallpaper\n        swww img \"$SELECTED_WALLPAPER\" --transition \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    ;;\n\n\"Random\")\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        RANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n        swww img \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\" --transition \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    ;;\n\n\"Exit\")\n    $rof -e \"Program terminated.\"\n    exit 1\n    ;;\n\n*)\n    $rof -e \"Invalid option.\"\n    ;;\nesac\n","recorded":"2025-01-09 23:09:23.638411095","filePath":"null","pinned":false},{"value":"# Choose a transition effect at the start\n","recorded":"2025-01-09 23:06:50.114307280","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# rofi command variable\nrof=\"rofi -dmenu -theme ~/.config/rofi/launchers/type-1/style-5.rasi -i\"\n# swww transition settings\nsww=(\"fade\" \"slide\" \"zoom\" \"blur\")\n\n# Choose a transition effect at the start\ntransition=$(echo -e \"${sww[*]}\" | tr ' ' '\\n' | $rof -p \"Choose a transition effect:\")\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/XFCEPic/Pictures/\"\ndir=$(ls $WALL)\nchoice=$(echo -e \"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\" | $rof -p \"Choose an Option: \")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\nif [ \"$choice\" = \"Random\" ]; then\n    wall_dir=$(ls $WALL)\n    wall=\"\"\n\n    for dir in $wall_dir; do\n        wall+=$(find $WALL/$dir -type f -name \"*.jpg\" -o -name \"*.png\")\n    done\n\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        wallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n        echo $wallk\n        swww img \"$wallk\" --transition \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    exit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n    /usr/local/bin/waldl\n    if [ ! -d \"$WALL/Wallheaven\" ]; then\n        mkdir \"$WALL/Wallheaven\"\n    fi\n    WALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n    if [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n        mkdir $HOME/.cache/wallheaven\n    fi\n    /usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n    if [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n        $rof -e \"Directory is empty.\"\n        exit 1\n    fi\n    choice=$(echo -e \"Yes\\nNo\" | $rof -p \"Would you like to change wallpaper?\")\n    if [ \"$choice\" = \"No\" ]; then\n        $rof -e \"Program terminated.\"\n        exit 1\n    fi\n    wall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n    wall=\"$HOME/.cache/wallheaven/$wall\"\n    $rof -e \"Wallpaper set to $wall\"\n    if [ -n \"$wall\" ]; then\n        swww img \"$wall\" --transition \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    exit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n    $rof -e \"Program terminated.\"\n    exit 1\nfi\n\n# if the directory is empty, and its path should not be .cache/wallheaven then download some WALLPAPERS\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n    if [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n        $rof -e \"Directory is empty.\"\n        choice=$(echo -e \"Download\\nExit\" | $rof -p \"Would you like to Download Some?\")\n        if [ \"$choice\" = \"Download\" ]; then\n            /usr/local/bin/waldl\n        else\n            $rof -e \"Program terminated.\"\n            exit 1\n        fi\n    fi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n    $rof -e \"No wallpapers found.\"\n    exit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | $rof -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n    SELECTED_WALLPAPER=$(rofi -show filebrowser -dmenu -p \"Choose Wallpaper\" -dir \"$WALLPAPER_DIR\")\n    # Check if a wallpaper was selected\n    if [ -n \"$SELECTED_WALLPAPER\" ]; then\n        # Set the wallpaper\n        swww img \"$SELECTED_WALLPAPER\" --transition \"$transition\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    ;;\n\n\"Random\")\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        RANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n        swww img \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\" --transition \"$transition\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    ;;\n\n\"Exit\")\n    $rof -e \"Program terminated.\"\n    exit 1\n    ;;\n\n*)\n    $rof -e \"Invalid option.\"\n    ;;\nesac\n","recorded":"2025-01-09 23:06:35.350996386","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# rofi command variable\nrof=\"rofi -dmenu -theme ~/.config/rofi/launchers/type-1/style-5.rasi -i\"\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/XFCEPic/Pictures/\"\ndir=$(ls $WALL)\nchoice=$(echo -e \"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\" | $rof -p \"Choose an Option: \")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\nif [ \"$choice\" = \"Random\" ]; then\n    wall_dir=$(ls $WALL)\n    wall=\"\"\n\n    for dir in $wall_dir; do\n        wall+=$(find $WALL/$dir -type f -name \"*.jpg\" -o -name \"*.png\")\n    done\n\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        wallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n        echo $wallk\n        xwallpaper --zoom \"$wallk\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    exit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n    /usr/local/bin/waldl\n    if [ ! -d \"$WALL/Wallheaven\" ]; then\n        mkdir \"$WALL/Wallheaven\"\n    fi\n    WALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n    if [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n        mkdir $HOME/.cache/wallheaven\n    fi\n    /usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n    if [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n        $rof -e \"Directory is empty.\"\n        exit 1\n    fi\n    choice=$(echo -e \"Yes\\nNo\" | $rof -p \"Would you like to change wallpaper?\")\n    if [ \"$choice\" = \"No\" ]; then\n        $rof -e \"Program terminated.\"\n        exit 1\n    fi\n    wall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n    wall=\"$HOME/.cache/wallheaven/$wall\"\n    $rof -e \"Wallpaper set to $wall\"\n    if [ -n \"$wall\" ]; then\n        xwallpaper --zoom \"$wall\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    exit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n    $rof -e \"Program terminated.\"\n    exit 1\nfi\n\n# if the directory is empty, and its path should not be .cache/wallheaven then download some WALLPAPERS\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n    if [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n        $rof -e \"Directory is empty.\"\n        choice=$(echo -e \"Download\\nExit\" | $rof -p \"Would you like to Download Some?\")\n        if [ \"$choice\" = \"Download\" ]; then\n            /usr/local/bin/waldl\n        else\n            $rof -e \"Program terminated.\"\n            exit 1\n        fi\n    fi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n    $rof -e \"No wallpapers found.\"\n    exit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | $rof -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n    SELECTED_WALLPAPER=$(rofi -show filebrowser -dmenu -p \"Choose Wallpaper\" -dir \"$WALLPAPER_DIR\")\n    # Check if a wallpaper was selected\n    if [ -n \"$SELECTED_WALLPAPER\" ]; then\n        # Set the wallpaper\n        xwallpaper --zoom \"$SELECTED_WALLPAPER\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    ;;\n\n\"Random\")\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        RANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n        xwallpaper --zoom \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    ;;\n\n\"Exit\")\n    $rof -e \"Program terminated.\"\n    exit 1\n    ;;\n\n*)\n    $rof -e \"Invalid option.\"\n    ;;\nesac\n\n\n\nnow in this use swww","recorded":"2025-01-09 23:05:28.486571993","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# rofi command variable\nrof=\"rofi -dmenu -i\"\n\n# Directory containing wallpapers\nWALL=\"$HOME/dotfiles/XFCEPic/Pictures/\"\ndir=$(ls $WALL)\nchoice=$(echo -e \"Random\\n$dir\\nDownload to Collection\\nTemporary Wallpaper\\nQuit\" | $rof -p \"Choose an Option: \")\n\nWALLPAPER_DIR=\"$WALL/$choice\"\n\nif [ \"$choice\" = \"Random\" ]; then\n    wall_dir=$(ls $WALL)\n    wall=\"\"\n\n    for dir in $wall_dir; do\n        wall+=$(find $WALL/$dir -type f -name \"*.jpg\" -o -name \"*.png\")\n    done\n\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        wallk=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n        echo $wallk\n        xwallpaper --zoom \"$wallk\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    exit 1\nfi\n\nif [ \"$choice\" = \"Download to Collection\" ]; then\n    /usr/local/bin/waldl\n    if [ ! -d \"$WALL/Wallheaven\" ]; then\n        mkdir \"$WALL/Wallheaven\"\n    fi\n    WALLPAPER_DIR=\"$WALL/Wallheaven\"\nfi\n\nif [ \"$choice\" = \"Temporary Wallpaper\" ]; then\n    if [ ! -d \"$HOME/.cache/wallheaven\" ]; then\n        mkdir $HOME/.cache/wallheaven\n    fi\n    /usr/local/bin/waldl -d $HOME/.cache/wallheaven\n\n    if [ -z \"$(ls -A $HOME/.cache/wallheaven)\" ]; then\n        $rof -e \"Directory is empty.\"\n        exit 1\n    fi\n    choice=$(echo -e \"Yes\\nNo\" | $rof -p \"Would you like to change wallpaper?\")\n    if [ \"$choice\" = \"No\" ]; then\n        $rof -e \"Program terminated.\"\n        exit 1\n    fi\n    wall=$(ls -t $HOME/.cache/wallheaven | head -n 1)\n    wall=\"$HOME/.cache/wallheaven/$wall\"\n    $rof -e \"Wallpaper set to $wall\"\n    if [ -n \"$wall\" ]; then\n        xwallpaper --zoom \"$wall\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    exit 1\nfi\n\nif [ \"$choice\" = \"Quit\" ]; then\n    $rof -e \"Program terminated.\"\n    exit 1\nfi\n\n# if the directory is empty, and its path should not be .cache/wallheaven then download some WALLPAPERS\nif [ \"$WALLPAPER_DIR\" != \"$HOME/.cache/wallheaven\" ]; then\n    if [ -z \"$(ls -A $WALLPAPER_DIR)\" ]; then\n        $rof -e \"Directory is empty.\"\n        choice=$(echo -e \"Download\\nExit\" | $rof -p \"Would you like to Download Some?\")\n        if [ \"$choice\" = \"Download\" ]; then\n            /usr/local/bin/waldl\n        else\n            $rof -e \"Program terminated.\"\n            exit 1\n        fi\n    fi\nfi\n\n# List wallpapers in the directory\nWALLPAPERS=$(ls \"$WALLPAPER_DIR\")\n\nif [ -z \"$WALLPAPERS\" ]; then\n    $rof -e \"No wallpapers found.\"\n    exit 1\nfi\n\n# Prompt user to choose action\nACTION=$(echo -e \"Choose\\nRandom\\nExit\" | $rof -p \"What would you like to do?\")\n\ncase $ACTION in\n\"Choose\")\n    SELECTED_WALLPAPER=$(rofi -show filebrowser -dmenu -p \"Choose Wallpaper\" -dir \"$WALLPAPER_DIR\")\n    # Check if a wallpaper was selected\n    if [ -n \"$SELECTED_WALLPAPER\" ]; then\n        # Set the wallpaper\n        xwallpaper --zoom \"$SELECTED_WALLPAPER\"\n    else\n        $rof -e \"No wallpaper selected.\"\n    fi\n    ;;\n\n\"Random\")\n    valid_paper=\"No\"\n    until [ \"$valid_paper\" = \"Yes\" ]; do\n        RANDOM_WALLPAPER=$(ls \"$WALLPAPER_DIR\" | shuf -n 1)\n        xwallpaper --zoom \"$WALLPAPER_DIR/$RANDOM_WALLPAPER\"\n        valid_paper=\"$(echo -e \"Yes\\nNo\" | $rof -p \"Do you like the new wallpaper?\")\"\n    done\n    ;;\n\n\"Exit\")\n    $rof -e \"Program terminated.\"\n    exit 1\n    ;;\n\n*)\n    $rof -e \"Invalid option.\"\n    ;;\nesac\n","recorded":"2025-01-09 22:59:25.901785968","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/DWMScripts/.dwm/scripts/changelook","recorded":"2025-01-09 22:57:05.829215710","filePath":"null","pinned":false},{"value":"exec-once = ~/.config/hypr/scripts/wallpaper_random.sh \u0026\n","recorded":"2025-01-09 22:56:02.207909146","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/hypr/scripts/wallpaper_random.sh","recorded":"2025-01-09 22:55:24.419470115","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/XFCEPic/Pictures/Wall/Dark_Nature.png\n/home/karna/dotfiles/XFCEPic/Pictures/Wall/Fantasy-Lake3.png\n/home/karna/dotfiles/XFCEPic/Pictures/Wall/genshin-wallpaper-2.png\n/home/karna/dotfiles/XFCEPic/Pictures/Wall/genshin-wallpaper-3.png\n/home/karna/dotfiles/XFCEPic/Pictures/Wall/Linux-user-Room.png","recorded":"2025-01-09 22:54:58.911508502","filePath":"null","pinned":false},{"value":"(base) \u003e\u003e\u003e    ~  swww img ~/dotfiles/XFCEPic/Pictures/Wall/Fantasy-Lake2.png --transition-type wipe 2\u003e/dev/null","recorded":"2025-01-09 22:52:39.363203017","filePath":"null","pinned":false},{"value":"~/dotfiles/XFCEPic/Pictures/Wall/Fantasy-Lake2.png","recorded":"2025-01-09 22:52:38.895127947","filePath":"null","pinned":false},{"value":"tumbler","recorded":"2025-01-09 22:44:45.163298601","filePath":"null","pinned":false},{"value":"mbler \nresolving dependencies...\nlooking for conflicting packages...\n\nPackages (1) tumbler-4.20.0-2\n\nTotal Download Size:   0.16 MiB\nTotal Installed Size:  0.86 MiB\n\n:: Proceed with installation? [Y/n] \n:: Retrieving packages...","recorded":"2025-01-09 22:44:43.246249107","filePath":"null","pinned":false},{"value":"/home/karna/.config/waybar/wallpaper_random.sh","recorded":"2025-01-09 22:42:46.836038218","filePath":"null","pinned":false},{"value":"2\u003e/dev/null\n\n\n\n\n\n\n\n\n\n\n\n","recorded":"2025-01-09 22:42:08.377963184","filePath":"null","pinned":false},{"value":"2\u003e/dev/null","recorded":"2025-01-09 22:42:03.293653366","filePath":"null","pinned":false},{"value":"17:09:55 [WARN] (main) Received transform. We currently ignore those\n17:09:55 [WARN] (main) Received transform. We currently ignore those\n17:09:55 [WARN] (main) Received transform. We currently ignore those\n17:09:55 [WARN] (main) Received transform. We currently ignore those\n17:09:55 [WARN] (main) Received transform. We currently ignore those\n17:09:55 [WARN] (main) Received transform. We currently ignore those\n17:09:55 [WARN] (main) Received transform. We currently ignore those\n17:09:55 [WARN] (main) Received transform. We currently ignore those\n\n17:09:55 [WARN] (main) Received transform. We currently ignore those                       \n17:09:55 [WARN] (main) Received transform. We currently ignore those","recorded":"2025-01-09 22:39:59.635516208","filePath":"null","pinned":false},{"value":"exec-once = swww-daemon \u0026\nexec-once = dunst \u0026\n","recorded":"2025-01-09 22:36:49.267842164","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Set the wallpaper directory\nwall_dir=\"$HOME/dotfiles/XFCEPic/Pictures/\"\nwall=\"\"\n\n# Search recursively for image files (.jpg, .png) in the directory\nfor dir in $(ls \"$wall_dir\"); do \n  wall+=$(find \"$wall_dir$dir\" -type f \\( -name \"*.jpg\" -o -name \"*.png\" \\) -print0)\ndone\n\n# Select a random wallpaper from the list\nwall=$(echo \"$wall\" | tr '\\0' '\\n' | shuf -n 1)\n\n# Select a random transition effect for swww\ntransitions=(\"fade\" \"zoom\" \"slide\" \"dissolve\" \"slideleft\" \"slideright\" \"flip\")\ntransition=$(echo \"${transitions[@]}\" | tr ' ' '\\n' | shuf -n 1)\n\n# Apply the wallpaper with the selected transition\nswww img \"$wall\" --transition \"$transition\"\n\n# Print the selected wallpaper and transition for debugging\necho \"Wallpaper set: $wall\"\necho \"Transition applied: $transition\"\n","recorded":"2025-01-09 22:36:49.237410357","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Define the directory where your wallpapers are stored\nwallpaper_dir=\"$HOME/dotfiles/XFCEPic/Pictures\"\n\n# Get a list of all images in the directory (recursively)\nwallpapers=$(find \"$wallpaper_dir\" -type f \\( -iname \"*.jpg\" -o -iname \"*.png\" -o -iname \"*.gif\" -o -iname \"*.webp\" -o -iname \"*.bmp\" -o -iname \"*.tiff\" \\))\n\n# Check if the wallpaper list is empty\nif [ -z \"$wallpapers\" ]; then\n  echo \"No wallpapers found in the specified directory.\"\n  exit 1\nfi\n\n# Select a random wallpaper from the list\nrandom_wallpaper=$(echo \"$wallpapers\" | shuf -n 1)\n\n# Define a random transition type\ntransition_type=$(echo \"fade wipe left right top bottom center random\" | tr ' ' '\\n' | shuf -n 1)\n\n# Set the wallpaper with a random transition effect using swww\nswww img \"$random_wallpaper\" --transition-type \"$transition_type\" --transition-step 10 --transition-fps 30\n\n# Optional: You can adjust the transition parameters (step and fps) to control the smoothness and speed of the transition.\n","recorded":"2025-01-09 22:36:47.529057150","filePath":"null","pinned":false},{"value":"# A Solution to your Wayland Wallpaper Woes\n### Efficient animated wallpaper daemon for wayland, controlled at runtime\n\n![animated gif demonstration](https://i.imgur.com/Leuh6wm.gif)\n![image transition demonstration](../demos/assets/grow.gif)\n\n## Dependencies\n\n - a compositor that implements:\n   * wlr-layer-shell (typically wlroots based compositors)\n   * xdg-output\n - [lz4](https://github.com/lz4/lz4) (for compressing frames when animating)\n\n**Note that this means `swww` will not run on Gnome, because it does not implement the `wlr-layer-shell` protocol**.\n\n## Build\n\n\u003ca href=\"https://repology.org/project/swww/versions\"\u003e\n    \u003cimg src=\"https://repology.org/badge/vertical-allrepos/swww.svg\" alt=\"Packaging status\" align=\"right\"\u003e\n\u003c/a\u003e\n\n### Dependencies:\n\n  - Up to date stable rustc compiler and cargo (specifically, MSRV is 1.82.0)\n\nTo build, clone this repository and run:\n```\ncargo build --release\n```\nThen, put **both binaries** `target/release/swww` and\n`target/release/swww-daemon` in your  path. Optionally, autocompletion scripts\nfor bash, zsh, fish and elvish are offered in the `completions` directory.\n\n#### Man pages:\n\nIn order to generate the man pages, **you must have `scdoc` installed**. Run\n\n```\n./doc/gen.sh\n```\n\nThe man pages will be in `doc/generated`. To install them, you must move them to\nto the appropriate location in your system. You should be able to figure out\nwhere that is by running `manpath`.\n\n### Nix\n\nNixOS users can directly use this repository to get the latest swww for their system.\n\nAdd in your `flake.nix`:\n\n```nix\n  inputs.swww.url = \"github:LGFae/swww\";\n```\n\nPass inputs to your modules using `specialArgs` and\nThen in `configuration.nix`:\n\n```nix\n  environment.systemPackages = [\n    inputs.swww.packages.${pkgs.system}.swww\n  ];\n```\n\n## Features\n\n - Display animated gifs on your desktop\n - Display any image in the formats:\n   * jpeg\n   * png\n   * gif\n   * pnm\n   * tga\n   * tiff\n   * webp\n   * bmp\n   * farbfeld\n - Clear the screen with an arbitrary rrggbb color\n - Smooth transition effect when you switch images\n - Do all of that without having to shutdown and reinitialize the daemon\n\n## Why\n\nThere are two main reasons that compelled me to make this: the first is that\n[`oguri`](https://github.com/vilhalmer/oguri) is unmaintained and archived,\ndespite there being serious problems with excess of memory use while displaying\ncertain gifs (see [this](https://github.com/vilhalmer/oguri/issues/38), for\nexample). The best alternative I've found for `oguri` was\n[`mpvpaper`](https://github.com/GhostNaN/mpvpaper), but if felt overkill for my\npurposes.\n\nComparing to `oguri`, `swww` uses less cpu power to animate once it has cached\nall the frames in the animation. It should also be **significantly** more\nmemory efficient.\n\nThe second is that, to my knowledge, there is no wallpaper daemon for wayland\nthat allows you to change the wallpaper at runtime. That is, in order to, for\nexample, cycle through the images of a directory, you'd have to kill the daemon\nand restart it. Not only does it make simple shell scripts a pain to write, it\nmakes switching from one image to the next to happen very abruptly.\n\n## Usage\n\nStart by initializing the daemon:\n```\nswww-daemon\n```\nThen, in a different terminal, simply pass the image you want to display:\n```\nswww img \u003cpath/to/img\u003e\n\n# You can also specify outputs:\nswww img -o \u003coutputs\u003e \u003cpath/to/img\u003e\n\n# Control how smoothly the transition will happen and/or it's frame rate\n# For the step, smaller values = more smooth. Default = 20\n# For the frame rate, default is 30.\nswww img \u003cpath/to/img\u003e --transition-step \u003c1 to 255\u003e --transition-fps \u003c1 to 255\u003e\n\n# There are also many different transition effects:\nswww img \u003cpath/to/img\u003e --transition-type center\n\n# Note you may also control the above by setting up the SWWW_TRANSITION_FPS,\n# SWWW_TRANSITION_STEP, and SWWW_TRANSITION environment variables.\n\n# To see all options, run\nswww img --help\n```\nIf you would like to know the valid values for *\\\u003coutputs\\\u003e*, you can query the\ndaemon. This will also tell you what the current image being displayed is, as\nwell as the dimensions detected for the outputs. If you need more detailed\ninformation, I would recommend using\n[`wlr-randr`](https://sr.ht/~emersion/wlr-randr/).\n```\nswww query\n```\nFinally, to stop the daemon, kill it:\n```\nswww kill\n```\nFor a more complete description, run `swww --help` or `swww \u003csubcommand\u003e\n--help`.\n\nFinally, to get a feel for what you can do with some shell scripting, check out\nthe [example_scripts](/example_scripts/) folder. It can help you get started.\n\n## Transitions\n\n#### Example wipe transition:\n\n\u003e wipe transition with angle set to 30 deg\n\n![top transition demonstration](../demos/assets/wipe.gif)\n\nThe `left`, `right`, `top` and `bottom` transitions all work similarly.\n\n#### Example outer transition\n\n![outer transition demonstration](../demos/assets/outer.gif)\n\nThe `center` transition is the opposite: it starts from the center and goes \ntowards the edges.\n\nThere is also `simple`, which simply fades into the new image, `any`, which \nstarts at a random point with either `center` of `outer` transitions, and `random`,\nwhich selects a transition effect at random.\n\n## Troubleshooting\n\n### The image looks tilted and in grayscale on my laptop\n\nSee #233. Current workaround is to use `swww-daemon --format xrgb` when starting\nthe daemon.\n\n### High cpu usage during caching of a gif's frames\n\n`swww` will use a non-insignificant amount of cpu power while caching the\nimages. This will be specially noticeable if the images need to be resized\nbefore being displayed. So, if you have a very large gif, I would recommend\nresizing it **before** sending it to `swww`. That would make the caching phase\nmuch faster, and thus ultimately reduce power consumption. I can personally\nrecommend [`gifsicle`](https://github.com/kohler/gifsicle) for this purpose.\n\n### Wallpaper disappears when reconnecting monitor\n\n`swww` used to cache its images so that it could reload the current the last\ndisplayed image automatically. This lead to many problems and also proved to be\nvery annoying to keep working with when we updated to\n[`sctk 0.17`](https://github.com/Smithay/client-toolkit). So I decided to nuke\nit.\n\nIf you want a wallpaper to be set automatically when you reconnect to a monitor,\nyou should use a combination of scripts and a program that lets you run commands\nwhen a new output is connected, like [`kanshi`](https://sr.ht/~emersion/kanshi/).\n\n## About new features\n\nBroadly speaking, **NEW FEATURES WILL NOT BE ADDED, UNLESS THEY ARE EGREGIOUSLY\nSIMPLE**. I made `swww` with the specific usecase of making shell scripts in\nmind. So, for example, stuff like timed wallpapers, or a setup that loads a\ndifferent image at different times of the day, and so on, should all be done by\ncombining `swww` with other programs (see the [example_scripts](/example_scripts/) for some\nexamples).\n\nIf you really want some new feature within `swww` itself, I would recommend\nforking the repository.\n\n## Alternatives\n\n`swww` isn't really the simplest, mostest minimalest software you could find\nfor managing wallpapers. If you are looking for something simpler, have a look\nat the [awesome-wayland repository list of wallpaper programs\n](https://github.com/natpen/awesome-wayland#wallpaper). I can personally\nrecommend:\n\n - [`wbg`](https://codeberg.org/dnkl/wbg) - probably the simplest of them all.\n Strongly recommend if you just care about setting a single png as your\n permanent wallpaper on something like a laptop.\n - [`swaybg`](https://github.com/swaywm/swaybg) - made by the wlroots gods\n themselves.\n - [`mpvpaper`](https://github.com/GhostNaN/mpvpaper) - if you want to display\n videos as your wallpapers. This is also what I used for gifs before making\n `swww`.\n - [`kitty`](https://sw.kovidgoyal.net/kitty/) - you can use the kitty terminal emulator with its [panel](https://sw.kovidgoyal.net/kitty/kittens/panel/) kitten to have the output of an arbitrary TUI program such as htop or btop or similar as your desktop wallpaper.\n\n## Acknowledgments\n\nA huge thanks to everyone involved in the [smithay](https://github.com/Smithay)\nproject. Making this program would not have been possible without it. In fact,\nthe first versions of swww were quite literally copy pasted from the\n[layer shell example in the client-toolkit\n](https://github.com/Smithay/client-toolkit/blob/master/examples/layer_shell.rs).\n\nA big thank-you also to [HakierGrzonzo](https://github.com/HakierGrzonzo), for\nsetting up the AUR package.\n\n### Wallpapers used in this README\n\nPixel Art, by Waneella - https://www.patreon.com/waneella\n\nGradient - https://www.behance.net/gallery/86128681/Free-Unicorn-Vector-Gradients\n\nSilhouette of Skyway - https://unsplash.com/photos/silhouette-of-skyway-UUJzCuHUfYI","recorded":"2025-01-09 22:35:43.695539158","filePath":"null","pinned":false},{"value":"#!/bin/sh\nis_mpvpaper_ServerExist=`ps -ef|grep -m 1 mpvpaper|grep -v \"grep\"|wc -l`\nif [ \"$is_mpvpaper_ServerExist\" = \"0\" ]; then\n\techo \"mpvpaper_server not found\" \u003e /dev/null 2\u003e\u00261\n#\texit;\nelif [ \"$is_mpvpaper_ServerExist\" = \"1\" ]; then\n  killall mpvpaper\nfi\n\nis_swaybg_ServerExist=`ps -ef|grep -m 1 swaybg|grep -v \"grep\"|wc -l`\nif [ \"$is_swaybg_ServerExist\" = \"0\" ]; then\n\techo \"swaybg_server not found\" \u003e /dev/null 2\u003e\u00261\n#\texit;\nelif [ \"$is_swaybg_ServerExist\" = \"1\" ]; then\n  killall swaybg\nfi\n\nswaybg -i $(find ~/.config/sway/wallpaper/. -name \"*.png\" | shuf -n1) -m fill \u0026\n\n","recorded":"2025-01-09 22:34:39.049301403","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\nwall_dir=$(ls $HOME/dotfiles/XFCEPic/Pictures/)\nwall=\"\"\n\n# now search recursively in all the dirs in wall_dir \nfor dir in $wall_dir; do \n  wall+=$(find $HOME/dotfiles/XFCEPic/Pictures/$dir -type f -name \"*.jpg\" -o -name \"*.png\")\ndone\n\n# now select a random wallpaper from the list\nwall=$(echo $wall | tr \" \" \"\\n\" | shuf -n 1)\n\necho \"$wall\"\n\nxwallpaper --zoom $wall\n\nwal -c\nwal -i $wall\nxdotool key super+F5\nrm -rf ~/.walcache/\nmkdir ~/.walcache\ncp $wall ~/.walcache/1\n# betterlockscreen -u ~/.walcache/1\n","recorded":"2025-01-09 22:33:01.364449991","filePath":"null","pinned":false},{"value":"exec-once = hyprpaper \u0026 dunst\n","recorded":"2025-01-09 22:32:04.682156365","filePath":"null","pinned":false},{"value":"swww-daemon \u0026","recorded":"2025-01-09 22:31:29.311696297","filePath":"null","pinned":false},{"value":"sudo pacman -S --noconfirm kitty system-config-printer hyprpicker hyprlock chafa hypridle waybar wl-clipboard speech-dispatcher hyprpaper brightnessctl cmake meson cpio grim slurp wtype wf-recorder swaync\n","recorded":"2025-01-09 22:30:56.389745764","filePath":"null","pinned":false},{"value":"--transition-type center","recorded":"2025-01-09 22:30:02.738168493","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author : Aditya Shakya (adi1090x)\n## Github : @adi1090x\n#\n## Rofi   : Launcher (Modi Drun, Run, File Browser, Window)\n#\n## Available Styles\n#\n## style-1     style-2     style-3     style-4     style-5\n## style-6     style-7     style-8     style-9     style-10\n\ndir=\"$HOME/.config/rofi/launchers/type-7\"\ntheme='style-2'\n\n## Run\nrofi \\\n    -modi drun -show drun \\\n    -theme ${dir}/${theme}.rasi\n","recorded":"2025-01-09 22:14:03.369333650","filePath":"null","pinned":false},{"value":"😁","recorded":"2025-01-09 21:31:58.268270059","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/ranger_karna/.config/ranger/plugins\n/home/karna/dotfiles/ranger_karna/.config/ranger/commands.py\n/home/karna/dotfiles/ranger_karna/.config/ranger/commands_full.py\n/home/karna/dotfiles/ranger_karna/.config/ranger/rc.conf\n/home/karna/dotfiles/ranger_karna/.config/ranger/rifle.conf","recorded":"2025-01-09 21:22:55.991979476","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/ncmpcpp_karna/.ncmpcpp/ncmpcpp-ueberzug\n/home/karna/dotfiles/ncmpcpp_karna/.ncmpcpp/bindings\n/home/karna/dotfiles/ncmpcpp_karna/.ncmpcpp/config","recorded":"2025-01-09 21:22:16.971840664","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/ncmpcpp_karna/.ncmpcpp/ncmpcpp-ueberzug\n/home/karna/dotfiles/ncmpcpp_karna/.ncmpcpp/bindings\n/home/karna/dotfiles/ncmpcpp_karna/.ncmpcpp/config\n/home/karna/dotfiles/ncmpcpp_karna/.ncmpcpp/config_bak","recorded":"2025-01-09 21:22:14.588648000","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/mpv_karna/.config/mpv/script-opts\n/home/karna/dotfiles/mpv_karna/.config/mpv/scripts\n/home/karna/dotfiles/mpv_karna/.config/mpv/.gitignore\n/home/karna/dotfiles/mpv_karna/.config/mpv/encoding.rst\n/home/karna/dotfiles/mpv_karna/.config/mpv/input.conf\n/home/karna/dotfiles/mpv_karna/.config/mpv/mplayer-input.conf\n/home/karna/dotfiles/mpv_karna/.config/mpv/mpv.conf\n/home/karna/dotfiles/mpv_karna/.config/mpv/mpvHistory.log\n/home/karna/dotfiles/mpv_karna/.config/mpv/restore-old-bindings.conf\n/home/karna/dotfiles/mpv_karna/.config/mpv/tech-overview.txt","recorded":"2025-01-09 21:21:52.100861291","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/mpd_karna/.mpd/mpd.conf","recorded":"2025-01-09 21:21:13.690999878","filePath":"null","pinned":false},{"value":"# bind = $mainMod ALT SHIFT, w, exec, hyprshot -m window\n","recorded":"2025-01-09 21:20:24.813861815","filePath":"null","pinned":false},{"value":"# bind = $mainMod ALT SHIFT, S, exec, hyprshot -m output\n","recorded":"2025-01-09 21:20:24.208769788","filePath":"null","pinned":false},{"value":"# bind = $mainMod SHIFT, S, exec, hyprshot -m region   --clipboard-only\n","recorded":"2025-01-09 21:20:23.849641992","filePath":"null","pinned":false},{"value":"# bind = $mainMod SHIFT, C, exec, hyprshot -m region  \n","recorded":"2025-01-09 21:20:23.514932731","filePath":"null","pinned":false},{"value":"#\n","recorded":"2025-01-09 21:20:22.845026857","filePath":"null","pinned":false},{"value":"# bind = $mainMod ALT SHIFT, S, exec, $HOME/.config/hypr/scripts/screenshots/captureAll.sh\n","recorded":"2025-01-09 21:20:21.828639190","filePath":"null","pinned":false},{"value":"# bind = $mainMod ALT, S, exec, $HOME/.config/hypr/scripts/screenshots/ScreenRecord.sh\n","recorded":"2025-01-09 21:20:21.288754490","filePath":"null","pinned":false},{"value":"# bind = $mainMod SHIFT, S, exec, $HOME/.config/hypr/scripts/screenshots/captureArea.sh\n","recorded":"2025-01-09 21:20:20.925430725","filePath":"null","pinned":false},{"value":"# bind = $mainMod SHIFT, P, exec, wlogout \u0026\n","recorded":"2025-01-09 21:20:11.999194891","filePath":"null","pinned":false},{"value":"# bind = $mainMod ALT, F, exec, ferdium \u0026\n","recorded":"2025-01-09 21:20:09.175745746","filePath":"null","pinned":false},{"value":"bind = $mainMod ALT, W, exec, zen-browser --private-window\n","recorded":"2025-01-09 21:18:46.397743215","filePath":"null","pinned":false},{"value":"device {\n    name = razer-razer-deathadder-essential-1\n    sensitivity = -0.8\n}\n\ndevice {\n    name = razer-razer-deathadder-essential\n    sensitivity = -0.8\n}\n\ndevice {\n    name = razer-razer-deathadder-essential-keyboard-1\n    sensitivity = -0.8\n}\n\n","recorded":"2025-01-09 21:18:39.261642842","filePath":"null","pinned":false},{"value":"windowrulev2 = size 1100 700, class:(yterm)\n","recorded":"2025-01-09 21:18:21.157130952","filePath":"null","pinned":false},{"value":"windowrulev2 = float, class:(yterm)\n","recorded":"2025-01-09 21:18:20.678696491","filePath":"null","pinned":false},{"value":"bind = SUPER+SHIFT, M, exec, kitty --class yterm -e youtui\n","recorded":"2025-01-09 21:18:19.772154884","filePath":"null","pinned":false},{"value":"exec-once = fdm \u0026\n","recorded":"2025-01-09 21:18:12.607565543","filePath":"null","pinned":false},{"value":"neofetch\n","recorded":"2025-01-09 21:17:26.264752458","filePath":"null","pinned":false},{"value":"exec-once = /usr/lib/polkit-kde-authentication-agent-1 \u0026\n","recorded":"2025-01-09 21:16:56.485725192","filePath":"null","pinned":false},{"value":"exec-once = waybar -c ~/.config/hypr/waybar/config.jsonc -s ~/.config/hypr/waybar/style.css\n","recorded":"2025-01-09 21:16:42.972457392","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/hypr/hyprland.conf","recorded":"2025-01-09 21:15:57.741675844","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/kitty/frappe.conf\n/home/karna/dotfiles/Hyprland/.config/kitty/kitty.conf\n/home/karna/dotfiles/Hyprland/.config/kitty/kitty_old.conf\n/home/karna/dotfiles/Hyprland/.config/kitty/latte.conf\n/home/karna/dotfiles/Hyprland/.config/kitty/macchiato.conf\n/home/karna/dotfiles/Hyprland/.config/kitty/mocha.conf\n/home/karna/dotfiles/Hyprland/.config/kitty/nord.conf","recorded":"2025-01-09 21:13:26.159009239","filePath":"null","pinned":false},{"value":"\t\tshotarea_clipboard\n","recorded":"2025-01-09 21:07:59.194502715","filePath":"null","pinned":false},{"value":"-modi emoji -show emoji","recorded":"2025-01-09 21:07:59.182186196","filePath":"null","pinned":false},{"value":"-show calc -modi calc -no-show-match -no-sort","recorded":"2025-01-09 21:07:54.451645646","filePath":"null","pinned":false},{"value":"#! /usr/bin/env bash\n\ndir=\"$HOME/.config/rofi/launchers/type-1\"\ntheme='style-5'\n\n## Run\nrofi \\\n    -modi emoji -show emoji  \\\n    -theme ${dir}/${theme}.rasi\n","recorded":"2025-01-09 21:07:45.009240113","filePath":"null","pinned":false},{"value":"-window-title","recorded":"2025-01-09 21:05:49.531644636","filePath":"null","pinned":false},{"value":"󰞅 Emojis","recorded":"2025-01-09 21:04:51.898489920","filePath":"null","pinned":false},{"value":"typename=\"type-1\"\nthemename=\"style-5\"\n\ndir=\"$HOME/.config/rofi/launchers\"\n\nrofimoji \\\n  --selector-args=\"-theme ${dir}/${typename}/${themename}.rasi\"","recorded":"2025-01-09 21:04:10.800110220","filePath":"null","pinned":false},{"value":"dir=\"$HOME/.config/rofi/launchers/type-1\"\ntheme='style-5'\n\n## Run\nrofi \\\n    -show drun \\\n    -theme ${dir}/${theme}.rasi","recorded":"2025-01-09 21:04:07.630507577","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/rofi/files/launchers/type-1","recorded":"2025-01-09 21:02:43.967929897","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Emoji Picker\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt=\"Select Emoji\"\nmesg=\"Pick your favorite emoji\"\nif [[ \"$theme\" == *'type-1'* ]]; then\n    list_col='1'\n    list_row='5'\n    win_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n    list_col='1'\n    list_row='5'\n    win_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n    list_col='1'\n    list_row='5'\n    win_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n    list_col='5'\n    list_row='1'\n    win_width='670px'\nfi\n\n# Emoji Picker Command (using rofi-emoji)\nrofi_cmd() {\n    rofi -theme-str \"window {width: $win_width;}\" \\\n         -theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n         -theme-str 'textbox-prompt-colon {str: \"😊\";}' \\\n         -dmenu \\\n         -p \"$prompt\" \\\n         -mesg \"$mesg\" \\\n         -theme ${theme}\n}\n\n# Execute the Emoji Picker\nchosen_emoji=$(rofi_cmd)\n\n# If an emoji is chosen, copy it to the clipboard\nif [[ -n \"$chosen_emoji\" ]]; then\n    echo -n \"$chosen_emoji\" | xclip -selection clipboard\n    notify-send \"Emoji Copied\" \"$chosen_emoji\"\nelse\n    notify-send \"No Emoji Selected\" \"You didn't select any emoji.\"\nfi\n","recorded":"2025-01-09 20:59:41.787917361","filePath":"null","pinned":false},{"value":"#! /usr/bin/env bash\n\ntypename=\"type-1\"\nthemename=\"style-5\"\n\ndir=\"$HOME/.config/rofi/launchers\"\n\nrofimoji \\\n  --selector-args=\"-theme ${dir}/${typename}/${themename}.rasi\" \\\n  --prompt=\"󰞅 Emojis\"","recorded":"2025-01-09 20:59:39.888701402","filePath":"null","pinned":false},{"value":"rofi -modi emoji -show emoji ","recorded":"2025-01-09 20:59:29.899674058","filePath":"null","pinned":false},{"value":"enable_audio_bell no\n","recorded":"2025-01-09 20:58:30.724214935","filePath":"null","pinned":false},{"value":"#! /usr/bin/env bash\n\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\ndir=\"$HOME/.config/rofi/launchers\"\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\nrofimoji \\\n  --selector-args=\"-theme ${dir}/${typename}/${themename}.rasi\" \\\n  --prompt=\"󰞅 Emojis\"\n","recorded":"2025-01-09 20:57:33.489499107","filePath":"null","pinned":false},{"value":"# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}","recorded":"2025-01-09 20:56:30.677965831","filePath":"null","pinned":false},{"value":"typename=\"type-1\"\nthemename=\"style-5\"","recorded":"2025-01-09 20:56:17.406591523","filePath":"null","pinned":false},{"value":"source \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"","recorded":"2025-01-09 20:56:13.871630652","filePath":"null","pinned":false},{"value":"adi1090x","recorded":"2025-01-09 20:54:55.004723084","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Volume\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Volume Info\nmixer=\"`amixer info Master | grep 'Mixer name' | cut -d':' -f2 | tr -d \\',' '`\"\nspeaker=\"`amixer get Master | tail -n1 | awk -F ' ' '{print $5}' | tr -d '[]'`\"\nmic=\"`amixer get Capture | tail -n1 | awk -F ' ' '{print $5}' | tr -d '[]'`\"\n\nactive=\"\"\nurgent=\"\"\n\n# Speaker Info\namixer get Master | grep '\\[on\\]' \u0026\u003e/dev/null\nif [[ \"$?\" == 0 ]]; then\n\tactive=\"-a 1\"\n\tstext='Unmute'\n\tsicon=''\nelse\n\turgent=\"-u 1\"\n\tstext='Mute'\n\tsicon=''\nfi\n\n# Microphone Info\namixer get Capture | grep '\\[on\\]' \u0026\u003e/dev/null\nif [[ \"$?\" == 0 ]]; then\n    [ -n \"$active\" ] \u0026\u0026 active+=\",3\" || active=\"-a 3\"\n\tmtext='Unmute'\n\tmicon=''\nelse\n    [ -n \"$urgent\" ] \u0026\u0026 urgent+=\",3\" || urgent=\"-u 3\"\n\tmtext='Mute'\n\tmicon=''\nfi\n\n# Theme Elements\nprompt=\"S:$stext, M:$mtext\"\nmesg=\"$mixer - Speaker: $speaker, Mic: $mic\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n\tlist_col='5'\n\tlist_row='1'\n\twin_width='670px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Increase\"\n\toption_2=\"$sicon $stext\"\n\toption_3=\" Decrese\"\n\toption_4=\"$micon $mtext\"\n\toption_5=\" Settings\"\nelse\n\toption_1=\"\"\n\toption_2=\"$sicon\"\n\toption_3=\"\"\n\toption_4=\"$micon\"\n\toption_5=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t${active} ${urgent} \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\\n$option_5\" | rofi_cmd\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tamixer -Mq set Master,0 5%+ unmute\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tamixer set Master toggle\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tamixer -Mq set Master,0 5%- unmute\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tamixer set Capture toggle\n\telif [[ \"$1\" == '--opt5' ]]; then\n\t\tpavucontrol\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\n    $option_5)\n\t\trun_cmd --opt5\n        ;;\nesac\n\n","recorded":"2025-01-09 20:54:01.810638770","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Volume\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Volume Info (using wpctl for PipeWire)\nmixer=\"`wpctl status | grep -oP '(?\u003c=Sink ).*(?= \\[)'`\"\nspeaker=\"`wpctl status | grep -oP '(?\u003c=Sink ).*' | awk '{print $2}'`\"\nmic=\"`wpctl status | grep -oP '(?\u003c=Source ).*(?= \\[)'`\"\n\nactive=\"\"\nurgent=\"\"\n\n# Speaker Info\nwpctl status | grep 'Mute: no' \u0026\u003e/dev/null\nif [[ \"$?\" == 0 ]]; then\n\tactive=\"-a 1\"\n\tstext='Unmute'\n\tsicon=''\nelse\n\turgent=\"-u 1\"\n\tstext='Mute'\n\tsicon=''\nfi\n\n# Microphone Info\nwpctl status | grep 'Source mute: no' \u0026\u003e/dev/null\nif [[ \"$?\" == 0 ]]; then\n    [ -n \"$active\" ] \u0026\u0026 active+=\",3\" || active=\"-a 3\"\n\tmtext='Unmute'\n\tmicon=''\nelse\n    [ -n \"$urgent\" ] \u0026\u0026 urgent+=\",3\" || urgent=\"-u 3\"\n\tmtext='Mute'\n\tmicon=''\nfi\n\n# Theme Elements\nprompt=\"S:$stext, M:$mtext\"\nmesg=\"Mixer: $mixer, Speaker: $speaker, Mic: $mic\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n\tlist_col='5'\n\tlist_row='1'\n\twin_width='670px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Increase\"\n\toption_2=\"$sicon $stext\"\n\toption_3=\" Decrese\"\n\toption_4=\"$micon $mtext\"\n\toption_5=\" Settings\"\nelse\n\toption_1=\"\"\n\toption_2=\"$sicon\"\n\toption_3=\"\"\n\toption_4=\"$micon\"\n\toption_5=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t${active} ${urgent} \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\\n$option_5\" | rofi_cmd\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\twpctl set-volume @DEFAULT_SINK@ +5%\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\twpctl set-mute @DEFAULT_SINK@ toggle\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\twpctl set-volume @DEFAULT_SINK@ -5%\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\twpctl set-mute @DEFAULT_SOURCE@ toggle\n\telif [[ \"$1\" == '--opt5' ]]; then\n\t\tpavucontrol\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\n    $option_5)\n\t\trun_cmd --opt5\n        ;;\nesac\n","recorded":"2025-01-09 20:54:01.793100647","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Volume\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Volume Info (using wpctl for PipeWire)\nmixer=\"`wpctl status | grep -oP '(?\u003c=Sink ).*(?= \\[)'`\"\nspeaker=\"`wpctl status | grep -oP '(?\u003c=Sink ).*' | awk '{print $2}'`\"\nmic=\"`wpctl status | grep -oP '(?\u003c=Source ).*(?= \\[)'`\"\n\nactive=\"\"\nurgent=\"\"\n\n# Speaker Info\nwpctl status | grep 'Mute: no' \u0026\u003e/dev/null\nif [[ \"$?\" == 0 ]]; then\n\tactive=\"-a 1\"\n\tstext='Unmute'\n\tsicon=''\nelse\n\turgent=\"-u 1\"\n\tstext='Mute'\n\tsicon=''\nfi\n\n# Microphone Info\nwpctl status | grep 'Source mute: no' \u0026\u003e/dev/null\nif [[ \"$?\" == 0 ]]; then\n    [ -n \"$active\" ] \u0026\u0026 active+=\",3\" || active=\"-a 3\"\n\tmtext='Unmute'\n\tmicon=''\nelse\n    [ -n \"$urgent\" ] \u0026\u0026 urgent+=\",3\" || urgent=\"-u 3\"\n\tmtext='Mute'\n\tmicon=''\nfi\n\n# Theme Elements\nprompt=\"S:$stext, M:$mtext\"\nmesg=\"Mixer: $mixer, Speaker: $speaker, Mic: $mic\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n\tlist_col='5'\n\tlist_row='1'\n\twin_width='670px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Increase\"\n\toption_2=\"$sicon $stext\"\n\toption_3=\" Decrese\"\n\toption_4=\"$micon $mtext\"\n\toption_5=\" Settings\"\nelse\n\toption_1=\"\"\n\toption_2=\"$sicon\"\n\toption_3=\"\"\n\toption_4=\"$micon\"\n\toption_5=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t${active} ${urgent} \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\\n$option_5\" | rofi_cmd\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\twpctl set-volume @DEFAULT_AUDIO_SINK@ +5%\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\twpctl set-mute @DEFAULT_AUDIO_SINK@ toggle\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\twpctl set-volume @DEFAULT_AUDIO_SINK@ -5%\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\twpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle\n\telif [[ \"$1\" == '--opt5' ]]; then\n\t\tpavucontrol\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\n    $option_5)\n\t\trun_cmd --opt5\n        ;;\nesac\n","recorded":"2025-01-09 20:53:59.066084933","filePath":"null","pinned":false},{"value":"@DEFAULT_AUDIO_SOURCE@","recorded":"2025-01-09 20:53:34.478512527","filePath":"null","pinned":false},{"value":"@DEFAULT_AUDIO_SINK@","recorded":"2025-01-09 20:53:26.208133838","filePath":"null","pinned":false},{"value":"QP","recorded":"2025-01-09 20:50:23.369799152","filePath":"null","pinned":false},{"value":"","recorded":"2025-01-09 20:49:26.069406769","filePath":"null","pinned":false},{"value":"📋","recorded":"2025-01-09 20:49:19.364249730","filePath":"null","pinned":false},{"value":"📷 258693-840014339.png","recorded":"2025-01-09 20:48:35.978329556","filePath":"/home/karna/.config/clipse/tmp_files/258693-840014339.png","pinned":false},{"value":"\t\tshotnow\n","recorded":"2025-01-09 20:47:46.209094641","filePath":"null","pinned":false},{"value":"","recorded":"2025-01-09 20:47:27.193676434","filePath":"null","pinned":false},{"value":"📋\"","recorded":"2025-01-09 20:47:09.511028232","filePath":"null","pinned":false},{"value":"\toption_5=\"📋\"\n","recorded":"2025-01-09 20:47:01.191011638","filePath":"null","pinned":false},{"value":"option_5=\"📋 Capture Region to Clipboard\"","recorded":"2025-01-09 20:46:35.234882639","filePath":"null","pinned":false},{"value":"  win_height='720px'\n","recorded":"2025-01-09 20:45:14.791472721","filePath":"null","pinned":false},{"value":"dir=\"$HOME/Pictures/Screenshots\"\n","recorded":"2025-01-09 20:42:28.120320202","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + Hyprshot)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Region to Clipboard\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot directory\ndir=\"${HYPRSHOT_DIR:-${XDG_PICTURES_DIR:-$HOME/Pictures}}/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Take shots using hyprshot\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\thyprshot -m output -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotwin() {\n\tfile=\"$dir/window_${timestamp}.png\"\n\thyprshot -m window -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\thyprshot -m region -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea_clipboard() {\n\thyprshot -m region --clipboard-only\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshotarea_clipboard\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:42:19.089799445","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot + Screen Recording (Hyprland + grim + slurp + wf-recorder)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot/Recording'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Start Screen Recording (with Audio)\"\n\toption_4=\" Start Screen Recording (No Audio)\"\n\toption_5=\"📋 Capture Region to Clipboard\"\n\toption_6=\"❌ Exit Recording\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\n\toption_5=\"📋\"\n\toption_6=\"❌\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\\n$option_5\\n$option_6\" | rofi_cmd\n}\n\n# Screenshot/Recording directory (ensuring screenshots are saved in ~/Pictures/Screenshots)\ndir=\"$HOME/Pictures/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Take screenshots using grim and slurp\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\tgrim \"$file\"\n\tdunstify -u low --replace=699 \"Screenshot Saved: $file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\tgrim -g \"$(slurp)\" \"$file\"\n\tdunstify -u low --replace=699 \"Screenshot Saved: $file\"\n}\n\nshotarea_clipboard() {\n\tgrim -g \"$(slurp)\" - | wl-copy\n\tdunstify -u low --replace=699 \"Screenshot copied to clipboard.\"\n}\n\n# Start Screen Recording with Audio\nstart_recording_with_audio() {\n\tfile=\"$dir/screen_recording_${timestamp}.mp4\"\n\twf-recorder -f \"$file\" --audio \u0026\n\tdunstify -u low --replace=699 \"Recording Started (with Audio)\"\n}\n\n# Start Screen Recording without Audio\nstart_recording_no_audio() {\n\tfile=\"$dir/screen_recording_${timestamp}.mp4\"\n\twf-recorder -f \"$file\" \u0026\n\tdunstify -u low --replace=699 \"Recording Started (No Audio)\"\n}\n\n# Exit Screen Recording (kill the wf-recorder process)\nexit_recording() {\n\tkillall wf-recorder\n\tdunstify -u low --replace=699 \"Recording Stopped\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tstart_recording_with_audio\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tstart_recording_no_audio\n\telif [[ \"$1\" == '--opt5' ]]; then\n\t\tshotarea_clipboard\n\telif [[ \"$1\" == '--opt6' ]]; then\n\t\texit_recording\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\n    $option_5)\n\t\trun_cmd --opt5\n        ;;\n    $option_6)\n\t\trun_cmd --opt6\n        ;;\nesac\n","recorded":"2025-01-09 20:42:19.075204040","filePath":"null","pinned":false},{"value":"wlogout hyprshot-git","recorded":"2025-01-09 20:41:59.682966863","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot + Screen Recording (Hyprland + grim + slurp + wf-recorder)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot/Recording'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='720px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Start Screen Recording (with Audio)\"\n\toption_4=\" Start Screen Recording (No Audio)\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot/Recording directory (ensuring screenshots are saved in ~/Pictures/Screenshots)\ndir=\"$HOME/Pictures/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Take screenshots using grim and slurp\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\tgrim \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\tgrim -g \"$(slurp)\" \"$file\"\n}\n\nshotarea_clipboard() {\n\tgrim -g \"$(slurp)\" - | wl-copy\n}\n\n# Start Screen Recording with Audio\nstart_recording_with_audio() {\n\tfile=\"$dir/screen_recording_${timestamp}.mp4\"\n\twf-recorder -f \"$file\" --audio\n}\n\n# Start Screen Recording without Audio\nstart_recording_no_audio() {\n\tfile=\"$dir/screen_recording_${timestamp}.mp4\"\n\twf-recorder -f \"$file\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tstart_recording_with_audio\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tstart_recording_no_audio\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:40:46.502903051","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + grim + slurp)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Region to Clipboard\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot directory (ensuring screenshots are saved in ~/Pictures/Screenshots)\ndir=\"$HOME/Pictures/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Take shots using grim and slurp\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\tgrim \"$file\"\n}\n\nshotwin() {\n\t# We are not using any window selector in this case\n\t# We can either use slurp or simply use grim to capture the full screen\n\tfile=\"$dir/window_${timestamp}.png\"\n\tgrim -g \"$(slurp)\" \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\tgrim -g \"$(slurp)\" \"$file\"\n}\n\nshotarea_clipboard() {\n\tgrim -g \"$(slurp)\" - | wl-copy\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshotarea_clipboard\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:37:38.680115171","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot + Screen Recording (Hyprland + grim + slurp + wf-recorder)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot/Recording'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Start Screen Recording (with Audio)\"\n\toption_4=\" Start Screen Recording (No Audio)\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot/Recording directory (ensuring screenshots are saved in ~/Pictures/Screenshots)\ndir=\"$HOME/Pictures/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Take screenshots using grim and slurp\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\tgrim \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\tgrim -g \"$(slurp)\" \"$file\"\n}\n\nshotarea_clipboard() {\n\tgrim -g \"$(slurp)\" - | wl-copy\n}\n\n# Start Screen Recording with Audio\nstart_recording_with_audio() {\n\tfile=\"$dir/screen_recording_${timestamp}.mp4\"\n\twf-recorder -f \"$file\" --audio\n}\n\n# Start Screen Recording without Audio\nstart_recording_no_audio() {\n\tfile=\"$dir/screen_recording_${timestamp}.mp4\"\n\twf-recorder -f \"$file\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tstart_recording_with_audio\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tstart_recording_no_audio\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:37:37.004332659","filePath":"null","pinned":false},{"value":"📷 384921-185217656.png","recorded":"2025-01-09 20:37:20.380755814","filePath":"/home/karna/.config/clipse/tmp_files/384921-185217656.png","pinned":false},{"value":"📷 243127-641864022.png","recorded":"2025-01-09 20:37:12.773703462","filePath":"/home/karna/.config/clipse/tmp_files/243127-641864022.png","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + grim + slurp)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Region to Clipboard\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot directory (fixing trailing slash issue)\ndir=\"${HYPRSHOT_DIR:-${XDG_PICTURES_DIR:-$HOME/Pictures}}\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Take shots using grim and slurp\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\tgrim \"$file\"\n}\n\nshotwin() {\n\t# We are not using any window selector in this case\n\t# We can either use slurp or simply use grim to capture the full screen\n\tfile=\"$dir/window_${timestamp}.png\"\n\tgrim -g \"$(slurp)\" \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\tgrim -g \"$(slurp)\" \"$file\"\n}\n\nshotarea_clipboard() {\n\tgrim -g \"$(slurp)\" - | wl-copy\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshotarea_clipboard\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:36:04.552330037","filePath":"null","pinned":false},{"value":"📷 262910-087064613.png","recorded":"2025-01-09 20:35:26.217715610","filePath":"/home/karna/.config/clipse/tmp_files/262910-087064613.png","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + Hyprshot)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Region to Clipboard\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot directory (fixing trailing slash issue)\ndir=\"${HYPRSHOT_DIR:-${XDG_PICTURES_DIR:-$HOME/Pictures}}\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Take shots using hyprshot\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\thyprshot -m output -o \"$file\"\n}\n\nshotwin() {\n\tfile=\"$dir/window_${timestamp}.png\"\n\thyprshot -m window -o \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\thyprshot -m region -o \"$file\"\n}\n\nshotarea_clipboard() {\n\thyprshot -m region --clipboard-only\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshotarea_clipboard\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:34:53.390342699","filePath":"null","pinned":false},{"value":"📷 741525-440471723.png","recorded":"2025-01-09 20:33:41.790448541","filePath":"/home/karna/.config/clipse/tmp_files/741525-440471723.png","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + Hyprshot)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Region to Clipboard\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot directory (fixed path to avoid nesting issues)\ndir=\"${HYPRSHOT_DIR:-${XDG_PICTURES_DIR:-$HOME/Pictures}}\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Take shots using hyprshot\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\thyprshot -m output -o \"$file\"\n}\n\nshotwin() {\n\tfile=\"$dir/window_${timestamp}.png\"\n\thyprshot -m window -o \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\thyprshot -m region -o \"$file\"\n}\n\nshotarea_clipboard() {\n\thyprshot -m region --clipboard-only\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshotarea_clipboard\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:33:36.197767216","filePath":"null","pinned":false},{"value":"📷 197922-835880593.png","recorded":"2025-01-09 20:33:03.939544983","filePath":"/home/karna/.config/clipse/tmp_files/197922-835880593.png","pinned":false},{"value":"/home/karna/Pictures/desktop_2025-01-09-20-31-24.png/","recorded":"2025-01-09 20:31:49.428893474","filePath":"null","pinned":false},{"value":"📷 256085-504811519.png","recorded":"2025-01-09 20:31:37.627246775","filePath":"/home/karna/.config/clipse/tmp_files/256085-504811519.png","pinned":false},{"value":"📷 717886-099970901.png","recorded":"2025-01-09 20:31:27.440020132","filePath":"/home/karna/.config/clipse/tmp_files/717886-099970901.png","pinned":false},{"value":"/home/karna/Pictures/Screenshots/desktop_2025-01-09-20-29-25.png/","recorded":"2025-01-09 20:29:50.674570466","filePath":"null","pinned":false},{"value":"📷 708884-336252678.png","recorded":"2025-01-09 20:29:27.671446001","filePath":"/home/karna/.config/clipse/tmp_files/708884-336252678.png","pinned":false},{"value":"\tdunstify -u low --replace=699 \"Screenshot copied to clipboard.\"\n","recorded":"2025-01-09 20:29:21.631939660","filePath":"null","pinned":false},{"value":"# Notify about screenshot\nnotify_view() {\n\tif [[ -e \"$1\" ]]; then\n\t\tdunstify -u low --replace=699 \"Screenshot Saved: $1\"\n\telse\n\t\tdunstify -u low --replace=699 \"Screenshot Failed.\"\n\tfi\n}\n\n","recorded":"2025-01-09 20:29:18.534989030","filePath":"null","pinned":false},{"value":"elif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='120px'","recorded":"2025-01-09 20:28:57.140008713","filePath":"null","pinned":false},{"value":"dir=\"${HYPRSHOT_DIR:-${XDG_PICTURES_DIR:-$HOME/Pictures}}/Screenshots\"\n","recorded":"2025-01-09 20:28:20.889737623","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + Hyprshot)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Region to Clipboard\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot directory\ndir=\"${HYPRSHOT_DIR:-${XDG_PICTURES_DIR:-$HOME/Pictures}}/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Notify about screenshot\nnotify_view() {\n\tif [[ -e \"$1\" ]]; then\n\t\tdunstify -u low --replace=699 \"Screenshot Saved: $1\"\n\telse\n\t\tdunstify -u low --replace=699 \"Screenshot Failed.\"\n\tfi\n}\n\n# Take shots using hyprshot\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\thyprshot -m output -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotwin() {\n\tfile=\"$dir/window_${timestamp}.png\"\n\thyprshot -m window -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\thyprshot -m region -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea_clipboard() {\n\thyprshot -m region --clipboard-only\n\tdunstify -u low --replace=699 \"Screenshot copied to clipboard.\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshotarea_clipboard\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:28:09.047147681","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + Hyprshot)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Region to Clipboard\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot directory\ndir=\"$HOME/Pictures/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Notify about screenshot\nnotify_view() {\n\tif [[ -e \"$1\" ]]; then\n\t\techo \"Screenshot Saved: $1\"\n\telse\n\t\techo \"Screenshot Failed.\"\n\tfi\n}\n\n# Take shots using hyprshot\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\thyprshot -m output -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotwin() {\n\tfile=\"$dir/window_${timestamp}.png\"\n\thyprshot -m window -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\thyprshot -m region -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea_clipboard() {\n\thyprshot -m region --clipboard-only\n\techo \"Screenshot copied to clipboard.\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshotarea_clipboard\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:28:07.472091001","filePath":"null","pinned":false},{"value":"XDG_PICTURES_DIR","recorded":"2025-01-09 20:27:51.622064455","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + Hyprshot)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Region to Clipboard\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot directory\ndir=\"$HOME/Pictures/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Notify about screenshot\nnotify_view() {\n\tif [[ -e \"$1\" ]]; then\n\t\tdunstify -u low --replace=699 \"Screenshot Saved: $1\"\n\telse\n\t\tdunstify -u low --replace=699 \"Screenshot Failed.\"\n\tfi\n}\n\n# Take shots using hyprshot\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\thyprshot -m output -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotwin() {\n\tfile=\"$dir/window_${timestamp}.png\"\n\thyprshot -m window -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\thyprshot -m region -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea_clipboard() {\n\thyprshot -m region --clipboard-only\n\tdunstify -u low --replace=699 \"Screenshot copied to clipboard.\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshotarea_clipboard\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:26:08.816714119","filePath":"null","pinned":false},{"value":"📷 662475-777365518.png","recorded":"2025-01-09 20:25:54.093317589","filePath":"/home/karna/.config/clipse/tmp_files/662475-777365518.png","pinned":false},{"value":"📷 342557-230357549.png","recorded":"2025-01-09 20:24:33.409153771","filePath":"/home/karna/.config/clipse/tmp_files/342557-230357549.png","pinned":false},{"value":"📷 250917-822781865.png","recorded":"2025-01-09 20:24:23.969732758","filePath":"/home/karna/.config/clipse/tmp_files/250917-822781865.png","pinned":false},{"value":"📷 314700-460305210.png","recorded":"2025-01-09 20:24:04.620940119","filePath":"/home/karna/.config/clipse/tmp_files/314700-460305210.png","pinned":false},{"value":"📷 640411-232092509.png","recorded":"2025-01-09 20:23:57.561541696","filePath":"/home/karna/.config/clipse/tmp_files/640411-232092509.png","pinned":false},{"value":"\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ]]; then\n\tlist_col='4'\n\tlist_row='1'\n\twin_width='670px'","recorded":"2025-01-09 20:23:51.051633102","filePath":"null","pinned":false},{"value":"\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='120px'","recorded":"2025-01-09 20:23:40.182650260","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n\tlist_col='5'\n\tlist_row='1'\n\twin_width='670px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Area\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture in 5s\"\n\toption_5=\" Capture in 10s\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\n\toption_5=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\\n$option_5\" | rofi_cmd\n}\n\n# Screenshot\ntime=`date +%Y-%m-%d-%H-%M-%S`\ngeometry=`xrandr | grep 'current' | head -n1 | cut -d',' -f2 | tr -d '[:blank:],current'`\ndir=\"$HOME/Pictures/Screenshots\"\nfile=\"Screenshot_${time}_${geometry}.png\"\n\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# notify and view screenshot\nnotify_view() {\n\tnotify_cmd_shot='dunstify -u low --replace=699'\n\t${notify_cmd_shot} \"Copied to clipboard.\"\n\tviewnior ${dir}/\"$file\"\n\tif [[ -e \"$dir/$file\" ]]; then\n\t\t${notify_cmd_shot} \"Screenshot Saved.\"\n\telse\n\t\t${notify_cmd_shot} \"Screenshot Deleted.\"\n\tfi\n}\n\n# Copy screenshot to clipboard\ncopy_shot () {\n\ttee \"$file\" | xclip -selection clipboard -t image/png\n}\n\n# countdown\ncountdown () {\n\tfor sec in `seq $1 -1 1`; do\n\t\tdunstify -t 1000 --replace=699 \"Taking shot in : $sec\"\n\t\tsleep 1\n\tdone\n}\n\n# take shots\nshotnow () {\n\tcd ${dir} \u0026\u0026 sleep 0.5 \u0026\u0026 maim -u -f png | copy_shot\n\tnotify_view\n}\n\nshot5 () {\n\tcountdown '5'\n\tsleep 1 \u0026\u0026 cd ${dir} \u0026\u0026 maim -u -f png | copy_shot\n\tnotify_view\n}\n\nshot10 () {\n\tcountdown '10'\n\tsleep 1 \u0026\u0026 cd ${dir} \u0026\u0026 maim -u -f png | copy_shot\n\tnotify_view\n}\n\nshotwin () {\n\tcd ${dir} \u0026\u0026 maim -u -f png -i `xdotool getactivewindow` | copy_shot\n\tnotify_view\n}\n\nshotarea () {\n\tcd ${dir} \u0026\u0026 maim -u -f png -s -b 2 -c 0.35,0.55,0.85,0.25 -l | copy_shot\n\tnotify_view\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshot5\n\telif [[ \"$1\" == '--opt5' ]]; then\n\t\tshot10\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\n    $option_5)\n\t\trun_cmd --opt5\n        ;;\nesac\n\n\n","recorded":"2025-01-09 20:23:34.866166906","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + Hyprshot)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ]]; then\n\tlist_col='5'\n\tlist_row='1'\n\twin_width='670px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Desktop in 5s\"\n\toption_5=\" Capture Desktop in 10s\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\n\toption_5=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\\n$option_5\" | rofi_cmd\n}\n\n# Screenshot directory\ndir=\"${HYPRSHOT_DIR:-${XDG_PICTURES_DIR:-$HOME/Pictures}}/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Notify about screenshot\nnotify_view() {\n\tif [[ -e \"$1\" ]]; then\n\t\tdunstify -u low --replace=699 \"Screenshot Saved: $1\"\n\telse\n\t\tdunstify -u low --replace=699 \"Screenshot Failed.\"\n\tfi\n}\n\n# Take shots using hyprshot\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\thyprshot -m output -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshot5() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\tsleep 5 \u0026\u0026 hyprshot -m output -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshot10() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\tsleep 10 \u0026\u0026 hyprshot -m output -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotwin() {\n\tfile=\"$dir/window_${timestamp}.png\"\n\thyprshot -m window -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\thyprshot -m region -o \"$file\"\n\tnotify_view \"$file\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshot5\n\telif [[ \"$1\" == '--opt5' ]]; then\n\t\tshot10\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\n    $option_5)\n\t\trun_cmd --opt5\n        ;;\nesac\n","recorded":"2025-01-09 20:23:34.853476661","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + Hyprshot)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ]]; then\n\tlist_col='4'\n\tlist_row='1'\n\twin_width='670px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Region to Clipboard\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot directory\ndir=\"${HYPRSHOT_DIR:-${XDG_PICTURES_DIR:-$HOME/Pictures}}/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Notify about screenshot\nnotify_view() {\n\tif [[ -e \"$1\" ]]; then\n\t\tdunstify -u low --replace=699 \"Screenshot Saved: $1\"\n\telse\n\t\tdunstify -u low --replace=699 \"Screenshot Failed.\"\n\tfi\n}\n\n# Take shots using hyprshot\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\thyprshot -m output -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotwin() {\n\tfile=\"$dir/window_${timestamp}.png\"\n\thyprshot -m window -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\thyprshot -m region -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea_clipboard() {\n\thyprshot -m region --clipboard-only\n\tdunstify -u low --replace=699 \"Screenshot copied to clipboard.\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshotarea_clipboard\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:23:33.137335114","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + Hyprshot)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n\tlist_col='5'\n\tlist_row='1'\n\twin_width='670px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Desktop in 5s\"\n\toption_5=\" Capture Desktop in 10s\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\n\toption_5=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\\n$option_5\" | rofi_cmd\n}\n\n# Screenshot directory\ndir=\"${HYPRSHOT_DIR:-${XDG_PICTURES_DIR:-$HOME/Pictures}}/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Notify about screenshot\nnotify_view() {\n\tif [[ -e \"$1\" ]]; then\n\t\tdunstify -u low --replace=699 \"Screenshot Saved: $1\"\n\telse\n\t\tdunstify -u low --replace=699 \"Screenshot Failed.\"\n\tfi\n}\n\n# Take shots using hyprshot\nshotnow() {\n\thyprshot -m output -o \"$dir/desktop_$(date +%Y-%m-%d-%H-%M-%S).png\"\n\tnotify_view \"$dir/desktop_$(date +%Y-%m-%d-%H-%M-%S).png\"\n}\n\nshot5() {\n\tsleep 5 \u0026\u0026 hyprshot -m output -o \"$dir/desktop_$(date +%Y-%m-%d-%H-%M-%S).png\"\n\tnotify_view \"$dir/desktop_$(date +%Y-%m-%d-%H-%M-%S).png\"\n}\n\nshot10() {\n\tsleep 10 \u0026\u0026 hyprshot -m output -o \"$dir/desktop_$(date +%Y-%m-%d-%H-%M-%S).png\"\n\tnotify_view \"$dir/desktop_$(date +%Y-%m-%d-%H-%M-%S).png\"\n}\n\nshotwin() {\n\thyprshot -m window -o \"$dir/window_$(date +%Y-%m-%d-%H-%M-%S).png\"\n\tnotify_view \"$dir/window_$(date +%Y-%m-%d-%H-%M-%S).png\"\n}\n\nshotarea() {\n\thyprshot -m region -o \"$dir/region_$(date +%Y-%m-%d-%H-%M-%S).png\"\n\tnotify_view \"$dir/region_$(date +%Y-%m-%d-%H-%M-%S).png\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshot5\n\telif [[ \"$1\" == '--opt5' ]]; then\n\t\tshot10\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\n    $option_5)\n\t\trun_cmd --opt5\n        ;;\nesac\n","recorded":"2025-01-09 20:22:11.352018689","filePath":"null","pinned":false},{"value":"📷 671572-788470229.png","recorded":"2025-01-09 20:21:22.113543243","filePath":"/home/karna/.config/clipse/tmp_files/671572-788470229.png","pinned":false},{"value":"📷 250813-589098909.png","recorded":"2025-01-09 20:20:59.743571146","filePath":"/home/karna/.config/clipse/tmp_files/250813-589098909.png","pinned":false},{"value":"📷 253600-201513828.png","recorded":"2025-01-09 20:20:47.359887923","filePath":"/home/karna/.config/clipse/tmp_files/253600-201513828.png","pinned":false},{"value":"📷 287695-237662202.png","recorded":"2025-01-09 20:20:39.405842234","filePath":"/home/karna/.config/clipse/tmp_files/287695-237662202.png","pinned":false},{"value":"📷 305616-703301338.png","recorded":"2025-01-09 20:20:32.847254056","filePath":"/home/karna/.config/clipse/tmp_files/305616-703301338.png","pinned":false},{"value":"📷 645125-880093476.png","recorded":"2025-01-09 20:19:51.221113905","filePath":"/home/karna/.config/clipse/tmp_files/645125-880093476.png","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + Hyprshot)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n\tlist_col='5'\n\tlist_row='1'\n\twin_width='670px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Area\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture in 5s\"\n\toption_5=\" Capture in 10s\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\n\toption_5=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\\n$option_5\" | rofi_cmd\n}\n\n# Screenshot directory\ndir=\"$HOME/Pictures/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Notify about screenshot\nnotify_view() {\n\tif [[ -e \"$1\" ]]; then\n\t\tdunstify -u low --replace=699 \"Screenshot Saved: $1\"\n\telse\n\t\tdunstify -u low --replace=699 \"Screenshot Failed.\"\n\tfi\n}\n\n# Take shots using hyprshot\nshotnow() {\n\tfile=\"$dir/desktop_$(date +%Y-%m-%d-%H-%M-%S).png\"\n\thyprshot full -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshot5() {\n\tfile=\"$dir/desktop_$(date +%Y-%m-%d-%H-%M-%S).png\"\n\tsleep 5 \u0026\u0026 hyprshot full -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshot10() {\n\tfile=\"$dir/desktop_$(date +%Y-%m-%d-%H-%M-%S).png\"\n\tsleep 10 \u0026\u0026 hyprshot full -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotwin() {\n\tfile=\"$dir/window_$(date +%Y-%m-%d-%H-%M-%S).png\"\n\thyprshot window -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/area_$(date +%Y-%m-%d-%H-%M-%S).png\"\n\thyprshot select -o \"$file\"\n\tnotify_view \"$file\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshot5\n\telif [[ \"$1\" == '--opt5' ]]; then\n\t\tshot10\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\n    $option_5)\n\t\trun_cmd --opt5\n        ;;\nesac\n","recorded":"2025-01-09 20:19:43.314656106","filePath":"null","pinned":false},{"value":"# Hyprshot\n\n[![AUR version](https://img.shields.io/aur/version/hyprshot?label=hyprshot\u0026logo=arch+linux)](https://aur.archlinux.org/packages/hyprshot)\n[![AUR git version](https://img.shields.io/aur/version/hyprshot-git?label=hyprshot-git\u0026logo=arch+linux)](https://aur.archlinux.org/packages/hyprshot-git)\n[![GitHub release (latest by date)](https://img.shields.io/github/v/release/Gustash/hyprshot?color=green\u0026logo=github)](https://github.com/Gustash/hyprshot/releases/latest)\n\nHyprshot is an utility to easily take screenshot in Hyprland using your mouse.\n\nIt allows taking screenshots of windows, regions and monitors which are saved to a folder of your choosing and copied to your clipboard.\n\n## Installation\n\n### ALT Sisyphus\n\n```shell\n# apt-get install hyprshot\n```\n\n### Arch Linux\n\nYou can install the [hyprshot](https://aur.archlinux.org/packages/hyprshot) package in AUR.\n\n### Gentoo Linux\n\nActivate wayland overlay as described in [README](https://github.com/bsd-ac/wayland-desktop#activate-overlay-via-eselect-repository), allow **~amd64** keyword and then install it:\n\n```bash\n# emerge --ask gui-apps/hyprshot\n```\n\n### Dependencies\n\n- hyprland (this one should be obvious)\n- jq (to parse and manipulate json)\n- grim (to take the screenshot)\n- slurp (to select what to screenshot)\n- wl-clipboard (to copy screenshot to clipboard)\n- libnotify (to get notified when a screenshot is saved)\n\n### Optional Dependencies\n\n- hyprpicker (to freeze the screen contents with the `--freeze` flag)\n\n### Manual\n\nTo install manually, simply clone this repo and copy/symlink the `hyprshot` script to a folder in your `PATH`:\n\n```bash\n$ git clone https://github.com/Gustash/hyprshot.git Hyprshot\n$ ln -s $(pwd)/Hyprshot/hyprshot $HOME/.local/bin\n$ chmod +x Hyprshot/hyprshot\n```\n\n## Usage\n\nYou can get help on how to use hyprshot by executing:\n\n```bash\n$ hyprshot -h\n```\n\nThe simplest usage of Hyprshot is executing it with one of the available modes.\n\nFor example, to screenshot an open window:\n\n```bash\n$ hyprshot -m window\n```\n\nYou can also skip saving the screenshot to a file, copying it only to the clipboard:\n\n```bash\n$ hyprshot -m output --clipboard-only\n```\n\n## Configuration\n\nYou can add the various modes as keybindings in your Hyprland config like so:\n\n```\n# ~/.config/hypr/hyprland.conf\n\n...\n\n# Screenshot a window\nbind = $mainMod, PRINT, exec, hyprshot -m window\n# Screenshot a monitor\nbind = , PRINT, exec, hyprshot -m output\n# Screenshot a region\nbind = $shiftMod, PRINT, exec, hyprshot -m region\n```\n\nThis would allow you to:\n\nTake a screenshot of a window by using `MOD + PrintScr`\n\nTake a screenshot of a monitor by using `PrintScr`\n\nTake a screenshot of a region by using `MOD + Shift + PrintScr`\n\n## Save location\n\nYou can choose which directory Hyprshot will save screenshots in by setting an `HYPRSHOT_DIR` environment variable to your preferred location.\n\nIf `HYPRSHOT_DIR` is not set, Hyprshot will attempt to save to `XDG_PICTURES_DIR` and will further fallback to your home directory if this is also not available.","recorded":"2025-01-09 20:16:26.219035056","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n\tlist_col='5'\n\tlist_row='1'\n\twin_width='670px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Area\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture in 5s\"\n\toption_5=\" Capture in 10s\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\n\toption_5=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\\n$option_5\" | rofi_cmd\n}\n\n# Screenshot directory and file\ntime=`date +%Y-%m-%d-%H-%M-%S`\ndir=\"$HOME/Pictures/Screenshots\"\nfile=\"Screenshot_${time}.png\"\n\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Notify and view screenshot\nnotify_view() {\n\tif [[ -e \"$dir/$file\" ]]; then\n\t\tdunstify -u low --replace=699 \"Screenshot Saved: $dir/$file\"\n\telse\n\t\tdunstify -u low --replace=699 \"Screenshot Deleted.\"\n\tfi\n}\n\n# Copy screenshot to clipboard\ncopy_shot() {\n\tgrim - | wl-copy --type image/png\n}\n\n# Countdown\ncountdown() {\n\tfor sec in $(seq $1 -1 1); do\n\t\tdunstify -t 1000 --replace=699 \"Taking shot in : $sec\"\n\t\tsleep 1\n\tdone\n}\n\n# Take shots\nshotnow() {\n\tgrim \"$dir/$file\"\n\tcopy_shot\n\tnotify_view\n}\n\nshot5() {\n\tcountdown 5\n\tgrim \"$dir/$file\"\n\tcopy_shot\n\tnotify_view\n}\n\nshot10() {\n\tcountdown 10\n\tgrim \"$dir/$file\"\n\tcopy_shot\n\tnotify_view\n}\n\nshotwin() {\n\tgrim -g \"$(slurp)\" \"$dir/$file\"\n\tcopy_shot\n\tnotify_view\n}\n\nshotarea() {\n\tgrim -g \"$(slurp)\" \"$dir/$file\"\n\tcopy_shot\n\tnotify_view\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshot5\n\telif [[ \"$1\" == '--opt5' ]]; then\n\t\tshot10\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\n    $option_5)\n\t\trun_cmd --opt5\n        ;;\nesac\n","recorded":"2025-01-09 20:15:27.958504703","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# if not create the directory\nif [ ! -d \"$HOME/Pictures/Screenshots\" ]; then\n    mkdir -p \"$HOME/Pictures/Screenshots\"\nfi\n\n# Take the screenshot and save it\nname=$(date +'%m%d%S.png')\ngrim -g \"$(slurp)\" \"$HOME/Pictures/Screenshots/$name\"\n\n# Ask to save the file through rofi\nif [ -x \"$(command -v rofi)\" ]; then\n    save_confirmation=$(echo -e \"No\\nYes\" | rofi -dmenu -i -p \"Save the screenshot?\")\n    if [ \"$save_confirmation\" != \"Yes\" ]; then\n        rm \"$HOME/Pictures/Screenshots/$name\"  # Remove the screenshot if not saving\n        dunstify -u low -t 2000 \"Screenshot discarded.\"\n        exit 0  # Exit if not saving\n    fi\nfi\n\n# Ask to rename the file through rofi\nif [ -x \"$(command -v rofi)\" ]; then\n    new_name=$(echo -e \"No\\nYes\" | rofi -dmenu -i -p \"Rename the file?\")\n    if [ \"$new_name\" = \"Yes\" ]; then\n        new_name=$(echo -e \"\" | rofi -dmenu -i -p \"Enter new name\")\n        mv \"$HOME/Pictures/Screenshots/$name\" \"$HOME/Pictures/Screenshots/$new_name.png\"\n        name=$new_name.png\n    fi\nfi\n\n# Notify user\ndunstify -u low -t 2000 \"Screenshot saved to $HOME/Pictures/Screenshots/$name\"\n\n# Copy the screenshot to clipboard\nif [ -x \"$(command -v rofi)\" ]; then\n    if [ \"$(echo -e \"No\\nYes\" | rofi -dmenu -i -p \"Copy to clipboard?\")\" = \"Yes\" ]; then\n        clipse -a \"$HOME/Pictures/Screenshots/$name\"\n        dunstify -u low -t 2000 \"Screenshot copied to clipboard\"\n    fi\nfi\n\n# Give an option to open the screenshot in sxiv\nif [ -x \"$(command -v rofi)\" ]; then\n    if [ \"$(echo -e \"No\\nYes\" | rofi -dmenu -i -p \"Open with sxiv?\")\" = \"Yes\" ]; then\n        sxiv \"$HOME/Pictures/Screenshots/$name\"\n    fi\nfi\n","recorded":"2025-01-09 20:13:36.161339453","filePath":"null","pinned":false},{"value":"  \"pulseaudio\": {\n    \"scroll-step\": 1,\n    \"format\": \"{icon} {volume}%\", \n    \"format-muted\": \"婢 Muted\",\n    \"format-icons\": {\n      \"default\": [\"\", \"\", \"\"]\n    },\n    \"states\": {\n      \"warning\": 85,\n    },\n    \"scroll-step\": 1,\n    \"on-click\": \"pactl set-sink-mute @DEFAULT_SINK@ toggle\",\n    \"tooltip\": false,\n  },","recorded":"2025-01-09 20:13:36.149421622","filePath":"null","pinned":false},{"value":"    \"pulseaudio\": {\n        \"format\": \"{icon} {volume}%\",\n        \"format-muted\": \"婢 {volume}%\",\n        \"format-icons\": {\n            \"headphone\": \"󰋋\",\n            \"default\": [\"󰖀\", \"󰕾\"]\n        },\n        \"on-click\": \"~/.config/hypr/waybar/scripts/volumecontrol.sh -o m\",\n        \"on-click-right\": \"pavucontrol -t 3\",\n        \"on-scroll-up\": \"~/.config/hypr/waybar/scripts/volumecontrol.sh -o i\",\n        \"on-scroll-down\": \"~/.config/hypr/waybar/scripts/volumecontrol.sh -o d\",\n        \"scroll-step\": 10,\n        \"min-length\": 6,\n        \"max-length\": 6\n    },","recorded":"2025-01-09 20:13:32.989192241","filePath":"null","pinned":false},{"value":"  \"pulseaudio\": {\n    \"scroll-step\": 1,\n    \"format\": \"\u003cspan foreground='#d08770'\u003e{icon}\u003c/span\u003e {volume}%\", \n    \"format-muted\": \"婢 Muted\",\n    \"format-icons\": {\n      \"default\": [\"\", \"\", \"\"]\n    },\n    \"states\": {\n      \"warning\": 85,\n    },\n    \"scroll-step\": 1,\n    \"on-click\": \"pactl set-sink-mute @DEFAULT_SINK@ toggle\",\n    \"tooltip\": false,\n  },","recorded":"2025-01-09 20:11:51.608044574","filePath":"null","pinned":false},{"value":"📷 531649-733957396.png","recorded":"2025-01-09 20:07:07.981806533","filePath":"/home/karna/.config/clipse/tmp_files/531649-733957396.png","pinned":false},{"value":"📷 421024-681387992.png","recorded":"2025-01-09 20:06:55.856410897","filePath":"/home/karna/.config/clipse/tmp_files/421024-681387992.png","pinned":false},{"value":"📷 559240-976107505.png","recorded":"2025-01-09 20:06:43.241145400","filePath":"/home/karna/.config/clipse/tmp_files/559240-976107505.png","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt=\"Screenshot\"\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n\tlist_col='5'\n\tlist_row='1'\n\twin_width='670px'\nfi\n\n# Options\nlayout=$(grep 'USE_ICON' \"${theme}\" | cut -d'=' -f2)\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Area\"\n\toption_2=\" Save Screenshot\"\n\toption_3=\" Rename Screenshot\"\n\toption_4=\" Copy to Clipboard\"\n\toption_5=\" Open with sxiv\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\n\toption_5=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\\n$option_5\" | rofi_cmd\n}\n\n# Screenshot directory\ndir=\"$HOME/Pictures/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Functions\ntake_screenshot() {\n\tname=$(date +'%m%d%S.png')\n\tgrim -g \"$(slurp)\" \"$dir/$name\"\n\tdunstify -u low -t 2000 \"Screenshot saved: $name\"\n}\n\nrename_screenshot() {\n\tlatest=$(ls -Art \"$dir\" | tail -n 1)\n\tif [[ -z \"$latest\" ]]; then\n\t\tdunstify -u low -t 2000 \"No screenshot to rename!\"\n\t\treturn\n\tfi\n\tnew_name=$(rofi -dmenu -i -p \"Enter new name\" \u003c\u003c\u003c \"\")\n\tif [[ -n \"$new_name\" ]]; then\n\t\tmv \"$dir/$latest\" \"$dir/$new_name.png\"\n\t\tdunstify -u low -t 2000 \"Renamed to $new_name.png\"\n\tfi\n}\n\ncopy_to_clipboard() {\n\tlatest=$(ls -Art \"$dir\" | tail -n 1)\n\tif [[ -z \"$latest\" ]]; then\n\t\tdunstify -u low -t 2000 \"No screenshot to copy!\"\n\t\treturn\n\tfi\n\tclipse -a \"$dir/$latest\"\n\tdunstify -u low -t 2000 \"Screenshot copied to clipboard.\"\n}\n\nopen_with_sxiv() {\n\tlatest=$(ls -Art \"$dir\" | tail -n 1)\n\tif [[ -z \"$latest\" ]]; then\n\t\tdunstify -u low -t 2000 \"No screenshot to open!\"\n\t\treturn\n\tfi\n\tsxiv \"$dir/$latest\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\ttake_screenshot\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\ttake_screenshot\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\trename_screenshot\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tcopy_to_clipboard\n\telif [[ \"$1\" == '--opt5' ]]; then\n\t\topen_with_sxiv\n\tfi\n}\n\n# Actions\nchosen=$(run_rofi)\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\n    $option_5)\n\t\trun_cmd --opt5\n        ;;\nesac\n","recorded":"2025-01-09 20:00:50.489595213","filePath":"null","pinned":false},{"value":"polkit-kde-agent","recorded":"2025-01-09 19:54:54.665308614","filePath":"null","pinned":false},{"value":"s%                                                                                         (base) \u003e\u003e\u003e    ~  sudo pacman -S polkit-kde-agent","recorded":"2025-01-09 19:54:52.899814704","filePath":"null","pinned":false},{"value":"olki","recorded":"2025-01-09 19:54:51.949681647","filePath":"null","pinned":false},{"value":"/usr/lib/polkit-kde-authentication-agent-1","recorded":"2025-01-09 18:42:19.218303412","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Brightness\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Brightness Info\nbacklight=\"$(printf \"%.0f\\n\" `light -G`)\"\ncard=\"`light -L | grep 'backlight' | head -n1 | cut -d'/' -f3`\"\n\nif [[ $backlight -ge 0 ]] \u0026\u0026 [[ $backlight -le 29 ]]; then\n    level=\"Low\"\nelif [[ $backlight -ge 30 ]] \u0026\u0026 [[ $backlight -le 49 ]]; then\n    level=\"Optimal\"\nelif [[ $backlight -ge 50 ]] \u0026\u0026 [[ $backlight -le 69 ]]; then\n    level=\"High\"\nelif [[ $backlight -ge 70 ]] \u0026\u0026 [[ $backlight -le 100 ]]; then\n    level=\"Peak\"\nfi\n\n# Theme Elements\nprompt=\"${backlight}%\"\nmesg=\"Device: ${card}, Level: $level\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='425px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n\tlist_col='4'\n\tlist_row='1'\n\twin_width='550px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Increase\"\n\toption_2=\" Optimal\"\n\toption_3=\" Decrease\"\n\toption_4=\" Settings\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tbrightnessctl s 5%+\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tbrightnessctl s 50\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tbrightnessctl s 5%-\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\txfce4-power-manager-settings\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 18:41:07.607239934","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Brightness\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Brightness Info\nbacklight=$(brightnessctl g)  # Get current brightness\nmax_brightness=$(brightnessctl m)  # Get max brightness\npercentage=$((backlight * 100 / max_brightness))\n\nif [[ $percentage -ge 0 ]] \u0026\u0026 [[ $percentage -le 29 ]]; then\n    level=\"Low\"\nelif [[ $percentage -ge 30 ]] \u0026\u0026 [[ $percentage -le 49 ]]; then\n    level=\"Optimal\"\nelif [[ $percentage -ge 50 ]] \u0026\u0026 [[ $percentage -le 69 ]]; then\n    level=\"High\"\nelif [[ $percentage -ge 70 ]] \u0026\u0026 [[ $percentage -le 100 ]]; then\n    level=\"Peak\"\nfi\n\n# Theme Elements\nprompt=\"${percentage}%\"\nmesg=\"Brightness: ${percentage}%, Level: $level\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='425px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n\tlist_col='4'\n\tlist_row='1'\n\twin_width='550px'\nfi\n\n# Options\nlayout=$(grep 'USE_ICON' \"${theme}\" | cut -d'=' -f2)\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Increase\"\n\toption_2=\" Optimal\"\n\toption_3=\" Decrease\"\n\toption_4=\" Settings\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tbrightnessctl s 5%+\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tbrightnessctl s 50%\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tbrightnessctl s 5%-\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\txfce4-power-manager-settings\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 18:41:06.516837354","filePath":"null","pinned":false},{"value":"\n  specific value\t\tExample: 500\n  percentage value\t\tExample: 50%\n  specific delta\t\tExample: 50- or +10\n  percentage delta\t\tExample: 50%- or +10%\n\n(base) \u003e\u003e\u003e    ~  brightnessctl s 25","recorded":"2025-01-09 18:37:57.906069748","filePath":"null","pinned":false},{"value":"brightnessctl s 25","recorded":"2025-01-09 18:37:42.732635639","filePath":"null","pinned":false},{"value":"rightnessc","recorded":"2025-01-09 18:37:40.798786225","filePath":"null","pinned":false},{"value":"/usr/lib/polkit-kde-authentication-agent-1 \n\n\n\n\n\n\n","recorded":"2025-01-09 18:37:06.038755485","filePath":"null","pinned":false},{"value":"/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1","recorded":"2025-01-09 18:34:44.073344085","filePath":"null","pinned":false},{"value":"exec-once = systemctl --user start plasma-polkit-agent\n","recorded":"2025-01-09 18:34:38.503255175","filePath":"null","pinned":false},{"value":"powertop","recorded":"2025-01-09 18:30:26.890397898","filePath":"null","pinned":false},{"value":"xfce4-power-manager","recorded":"2025-01-09 18:27:51.543417845","filePath":"null","pinned":false},{"value":"powermenu_t4","recorded":"2025-01-09 18:25:24.847534321","filePath":"null","pinned":false},{"value":"acpi","recorded":"2025-01-09 18:23:25.711635696","filePath":"null","pinned":false},{"value":"Hyprland\n(base) \u003e\u003e\u003e    ~  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","recorded":"2025-01-09 18:20:41.157113030","filePath":"null","pinned":false},{"value":"paru -S --noconfirm wlrobs-hg hyprland-git xdg-desktop-portal-hyprland-git clipse-bin hyde-cli-git hyprshot-git hyprland-qtutils\n","recorded":"2025-01-09 18:20:38.722960029","filePath":"null","pinned":false},{"value":"if [[ -x '/usr/bin/betterlockscreen' ]]; then\n\t\t\tbetterlockscreen -l\n\t\telif [[ -x '/usr/bin/i3lock' ]]; then\n\t\t\ti3lock\n\t\tfi","recorded":"2025-01-09 18:17:59.577706243","filePath":"null","pinned":false},{"value":"\n\t\t\telif [[ \"$DESKTOP_SESSION\" == 'plasma' ]]; then\n\t\t\t\tqdbus org.kde.ksmserver /KSMServer logout 0 0 0","recorded":"2025-01-09 18:17:15.061990460","filePath":"null","pinned":false},{"value":"$logout)\n\t\trun_cmd --logout\n        ;;","recorded":"2025-01-09 18:10:19.079853864","filePath":"null","pinned":false},{"value":"\n\t\t\telif [[ \"$desktop_session\" == 'plasma' ]]; then\n\t\t\t\tqdbus org.kde.ksmserver /ksmserver logout 0 0 0","recorded":"2025-01-09 18:08:15.743819885","filePath":"null","pinned":false},{"value":"Hyprland","recorded":"2025-01-09 18:06:53.821478172","filePath":"null","pinned":false},{"value":"echo $XDG_CURRENT_DESKTOP","recorded":"2025-01-09 18:06:51.201906474","filePath":"null","pinned":false},{"value":"hyprctl dispatch exit","recorded":"2025-01-09 18:06:08.094179388","filePath":"null","pinned":false},{"value":"sh ~/.dwm/scripts/uptime reboot","recorded":"2025-01-09 18:03:19.935799063","filePath":"null","pinned":false},{"value":"sh ~/.dwm/scripts/uptime shutdown","recorded":"2025-01-09 18:02:57.744085496","filePath":"null","pinned":false},{"value":"# paru -S --noconfirm wlrobs-hg hyprland-git xdg-desktop-portal-hyprland-git clipse-bin hyde-cli-git wlogout hyprshot-git hyprland-qtutils\n","recorded":"2025-01-09 18:01:24.726688700","filePath":"null","pinned":false},{"value":"sh ~/.config/rofi/launchers/type-7/launcher.sh","recorded":"2025-01-09 17:58:50.103561706","filePath":"null","pinned":false},{"value":"    bindsym $mod+Shift+d exec kitty --class=\"danmufloat\" --hold sh -c \"cd /home/ruixi/Codelearning/go/src/bilibili_live_tui/  \u0026\u0026 export TERM=xterm-256color \u0026\u0026 ./main\" \n","recorded":"2025-01-09 17:56:35.053960383","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/waybar/Cava.sh\n/home/karna/Downloads/sway-dotfiles-main/waybar/Cava-internal.sh\n/home/karna/Downloads/sway-dotfiles-main/waybar/config1\n/home/karna/Downloads/sway-dotfiles-main/waybar/config2\n/home/karna/Downloads/sway-dotfiles-main/waybar/get_temp_path.sh\n/home/karna/Downloads/sway-dotfiles-main/waybar/launch_waybar.sh\n/home/karna/Downloads/sway-dotfiles-main/waybar/live_wallpaper.sh\n/home/karna/Downloads/sway-dotfiles-main/waybar/style1.css\n/home/karna/Downloads/sway-dotfiles-main/waybar/style2.css\n/home/karna/Downloads/sway-dotfiles-main/waybar/switch_style1.sh\n/home/karna/Downloads/sway-dotfiles-main/waybar/switch_style2.sh\n/home/karna/Downloads/sway-dotfiles-main/waybar/wallpaper_random.sh","recorded":"2025-01-09 17:54:27.115104941","filePath":"null","pinned":false},{"value":"swaymsg gaps outer all set 0 \u0026\u0026 swaymsg gaps inner all set 5","recorded":"2025-01-09 17:53:58.815152949","filePath":"null","pinned":false},{"value":"swaymsg gaps outer all set 0 \u0026\u0026 swaymsg gaps inner all set 0","recorded":"2025-01-09 17:52:35.292634616","filePath":"null","pinned":false},{"value":"swaymsg gaps outer all set 0 \u0026\u0026 swaymsg gaps inner all set 0\n","recorded":"2025-01-09 17:52:12.965221327","filePath":"null","pinned":false},{"value":"\nVotes           : 10","recorded":"2025-01-09 17:50:25.639055857","filePath":"null","pinned":false},{"value":"export PATH=$HOME/.config/rofi/scripts:$PATH","recorded":"2025-01-09 15:19:32.328221381","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/rofi/files/applets\n/home/karna/Downloads/rofi/files/colors\n/home/karna/Downloads/rofi/files/images\n/home/karna/Downloads/rofi/files/launchers\n/home/karna/Downloads/rofi/files/powermenu\n/home/karna/Downloads/rofi/files/scripts\n/home/karna/Downloads/rofi/files/config.rasi","recorded":"2025-01-09 15:19:11.828545974","filePath":"null","pinned":false},{"value":"/home/karna/.config/hypr/Assets/dp.png","recorded":"2025-01-09 15:18:01.830712772","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/rofi/fonts/GrapeNuts-Regular.ttf\n/home/karna/Downloads/rofi/fonts/Icomoon-Feather.ttf\n/home/karna/Downloads/rofi/fonts/Iosevka-Nerd-Font-Complete.ttf\n/home/karna/Downloads/rofi/fonts/JetBrains-Mono-Nerd-Font-Complete.ttf","recorded":"2025-01-09 15:11:19.940920547","filePath":"null","pinned":false},{"value":"/home/karna/.local/share/fonts/GrapeNuts-Regular.ttf\n/home/karna/.local/share/fonts/Icomoon-Feather.ttf\n/home/karna/.local/share/fonts/Iosevka-Nerd-Font-Complete.ttf\n/home/karna/.local/share/fonts/JetBrains-Mono-Nerd-Font-Complete.ttf","recorded":"2025-01-09 15:11:11.637465028","filePath":"null","pinned":false},{"value":"$ git clone --depth=1 https://github.com/adi1090x/rofi.git","recorded":"2025-01-09 15:10:13.386034182","filePath":"null","pinned":false},{"value":"rofi -no-lazy-grab -show drun -modi drun -theme $dir/\"$theme\"","recorded":"2025-01-09 15:06:20.484836881","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/rofi","recorded":"2025-01-09 15:03:59.765500356","filePath":"null","pinned":false},{"value":"Right     Increase number of bars","recorded":"2025-01-09 14:26:58.462370864","filePath":"null","pinned":false},{"value":"5e217a023bc2b3ca4ffd48ac6e03be1519ec2b504b13a')\n  17   │ ","recorded":"2025-01-09 14:26:10.243696757","filePath":"null","pinned":false},{"value":"cd \n","recorded":"2025-01-09 14:24:29.402911764","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/sway/.config/waybar","recorded":"2025-01-09 14:23:36.655231289","filePath":"null","pinned":false},{"value":"/home/karna/.config/waybar","recorded":"2025-01-09 14:22:55.876586472","filePath":"null","pinned":false},{"value":"brightnessctl s 5%+","recorded":"2025-01-09 14:17:14.241682662","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/waybar","recorded":"2025-01-09 14:13:44.986829223","filePath":"null","pinned":false},{"value":"papirus-folders-catppuccin-git","recorded":"2025-01-09 14:07:23.039095796","filePath":"null","pinned":false},{"value":"yay -S papirus-folders-catppuccin-git","recorded":"2025-01-09 14:06:37.462587539","filePath":"null","pinned":false},{"value":"./papirus-folders -C cat-mocha-blue --theme Papirus-Dark","recorded":"2025-01-09 14:05:50.672151953","filePath":"null","pinned":false},{"value":"cat-mocha-mauve","recorded":"2025-01-09 14:05:46.042462807","filePath":"null","pinned":false},{"value":"./papirus-folders -l","recorded":"2025-01-09 14:05:39.256480507","filePath":"null","pinned":false},{"value":"sudo cp -r src/* /usr/share/icons/Papirus  ","recorded":"2025-01-09 14:05:34.754956937","filePath":"null","pinned":false},{"value":"curl -LO https://raw.githubusercontent.com/PapirusDevelopmentTeam/papirus-folders/master/papirus-folders \u0026\u0026 chmod +x ./papirus-folders","recorded":"2025-01-09 14:05:14.914440011","filePath":"null","pinned":false},{"value":"git clone https://github.com/catppuccin/papirus-folders.git\ncd papirus-folders","recorded":"2025-01-09 14:04:55.118075913","filePath":"null","pinned":false},{"value":"papirus-icon-theme","recorded":"2025-01-09 14:04:08.790920553","filePath":"null","pinned":false},{"value":"maroon.zip with bsdtar\n  -\u003e Extracting catppuccin-gtk-theme-mocha-1.0.3-mauve.zip with bsdtar\n  -\u003e Extracting catppuccin-gtk-theme-mocha-1.0.3-peach.zip with bsdtar\n  -\u003e Extracting catppuccin-gtk-theme-mocha-1.0.3-pink.zip with bsdtar\n  -\u003e Extracting catppuccin-gtk-theme-mocha-1.0.3-red.zip with bsdtar\n  -\u003e Extracting catppuccin-gtk-theme-mocha-1.0.3-rosewater.zip with bsdtar\n  -\u003e Extracting catppuccin-gtk-theme-mocha-1.0.3-sapphire.zip with bsdtar\n(base) \u003e\u003e\u003e    ~  sudo pacman -S ","recorded":"2025-01-09 14:04:06.385572692","filePath":"null","pinned":false},{"value":"catppuccin-fcitx5-git","recorded":"2025-01-09 13:56:49.012915106","filePath":"null","pinned":false},{"value":"fcitx5 -r","recorded":"2025-01-09 13:55:41.858943981","filePath":"null","pinned":false},{"value":"Theme=catppuccin-mocha-mauve","recorded":"2025-01-09 13:55:36.207562999","filePath":"null","pinned":false},{"value":"Theme=catppuccin-{flavour}-{accent}","recorded":"2025-01-09 13:55:09.593049064","filePath":"null","pinned":false},{"value":"classicui.conf","recorded":"2025-01-09 13:55:05.297615315","filePath":"null","pinned":false},{"value":"catppuccin-cursors-mocha","recorded":"2025-01-09 13:48:04.424498806","filePath":"null","pinned":false},{"value":"kvantum-theme-catppuccin-git","recorded":"2025-01-09 13:47:22.721039615","filePath":"null","pinned":false},{"value":"themes","recorded":"2025-01-09 13:44:46.907643291","filePath":"null","pinned":false},{"value":"# -------------------------------------------------------------------------------------\n\necho \"Setting up dwm...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install dwm?\" \\\n  --yesno \"Would you like to install dwm (Dynamic Window Manager)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"dwm installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"dwm installation will begin now.\" 10 50\n\n  stow ~/dotfiles/suckless/\n\n  cd ~/.config/dwm \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/slstatus \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/st \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/.config/dmenu \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/dotfiles/Extras/Extras/waldl-master/ \u0026\u0026 sudo make install \u0026\u0026 cd ~/dotfiles\n\n  sudo mkdir /usr/share/xsessions/\n  sudo cp ~/dotfiles/Extras/Extras/usr/share/xsessions/dwm.desktop /usr/share/xsessions\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"dwm has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear","recorded":"2025-01-09 13:43:07.576204417","filePath":"null","pinned":false},{"value":"yay -S catppuccin-cursors-mocha","recorded":"2025-01-09 13:42:37.815679807","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/.themes","recorded":"2025-01-09 13:40:55.644073968","filePath":"null","pinned":false},{"value":"fcitx5 fcitx5-configtool","recorded":"2025-01-09 13:37:57.604889433","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/telegram","recorded":"2025-01-09 13:32:31.774306991","filePath":"null","pinned":false},{"value":"trash:///Ubuntu-i3-rice-main.2/ranger/scope.sh","recorded":"2025-01-09 13:17:37.120495481","filePath":"null","pinned":false},{"value":"trash:///ranger/scope.sh","recorded":"2025-01-09 13:17:04.492005237","filePath":"null","pinned":false},{"value":"trash:///ranger.3/scope.sh","recorded":"2025-01-09 13:16:49.068305286","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/ranger_karna/.config/ranger/bak/scope.sh","recorded":"2025-01-09 13:15:41.001510000","filePath":"null","pinned":false},{"value":"set font \"DaddyTimeMono Nerd Font 12\"\n","recorded":"2025-01-09 13:14:53.769846865","filePath":"null","pinned":false},{"value":"5. The roof of the mo","recorded":"2025-01-09 13:14:35.787784010","filePath":"null","pinned":false},{"value":"set font \"DaddyTimeMono Nerd Font 15\"\nset default-fg \t\t\t\"#96CDFB\"\nset default-bg \t\t\t\"#1A1823\"\n\nset completion-bg\t\t\"#1A1823\"\nset completion-fg\t\t\"#96cdfb\"\nset completion-highlight-bg\t\"#302D41\"\nset completion-highlight-fg\t\"#96cdfb\"\nset completion-group-bg\t\t\"#1a1823\"\nset completion-group-fg\t\t\"#89DCEB\"\n\nset statusbar-fg\t\t\"#C9CBFF\"\nset statusbar-bg\t\t\"#1A1823\"\nset statusbar-h-padding\t\t10\nset statusbar-v-padding\t\t10\n\nset notification-bg\t\t\"#1A1823\"\nset notification-fg\t\t\"#D9E0EE\"\nset notification-error-bg\t\"#d9e0ee\"\nset notification-error-fg\t\"#D9E0EE\"\nset notification-warning-bg\t\"#FAE3B0\"\nset notification-warning-fg\t\"#D9E0EE\"\nset selection-notification\t\"true\"\n\nset inputbar-fg\t\t\t\"#C9CBFF\"\nset inputbar-bg \t\t\"#1A1823\"\n\nset recolor\t\t\t\"true\"\nset recolor-lightcolor\t\t\"#D9E0EE\"\nset recolor-darkcolor\t\t\"#1A1823\"\n\nset index-fg\t\t\t\"#96cdfb\"\nset index-bg\t\t\t\"#1A1823\"\nset index-active-fg\t\t\"#96cdfb\"\nset index-active-bg\t\t\"#1A1823\"\n\nset render-loading-bg\t\t\"#1A1823\"\nset render-loading-fg\t\t\"#96cdfb\"\n\nset highlight-color\t\t\"#96cdfb\"\nset highlight-active-color\t\"#DDB6F2\"\n\n\nset render-loading \"false\"\nset scroll-step 50\n\nset selection-clipboard clipboard","recorded":"2025-01-09 13:14:15.025800368","filePath":"null","pinned":false},{"value":"set font \"DaddyTimeMono Nerd Font 15\"\nset default-fg \t\t\t\"#96CDFB\"\nset default-bg \t\t\t\"#1A1823\"","recorded":"2025-01-09 13:13:40.826307598","filePath":"null","pinned":false},{"value":"set scroll-step 100\n","recorded":"2025-01-09 13:13:06.205220818","filePath":"null","pinned":false},{"value":"    info \"${c5} STORAGE \\n \\n \\n \\n \" disk\n","recorded":"2025-01-09 13:05:47.312553027","filePath":"null","pinned":false},{"value":"    info \"${c5}  MODEL \\n \\n \\n \\n \\n \\n \\n\" model\n","recorded":"2025-01-09 13:00:58.156729720","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/neofetch/.config/neofetch/bak/config.conf\n/home/karna/dotfiles/neofetch/.config/neofetch/bak/tentaclecol.png","recorded":"2025-01-09 13:00:23.048072903","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/neofetch/config.conf","recorded":"2025-01-09 13:00:12.943616259","filePath":"null","pinned":false},{"value":"script-opts=ytdl_hook-ytdl_path=yt-dlp\n","recorded":"2025-01-09 12:58:32.323432444","filePath":"null","pinned":false},{"value":"CTRL+2 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Restore_CNN_VL.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode A (HQ)\"\nCTRL+3 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Restore_CNN_Soft_VL.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode B (HQ)\"\nCTRL+4 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode C (HQ)\"\nCTRL+5 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Restore_CNN_VL.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl:~~/shaders/Anime4K_Restore_CNN_M.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode A+A (HQ)\"\nCTRL+6 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Restore_CNN_Soft_VL.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Restore_CNN_Soft_M.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode B+B (HQ)\"\nCTRL+7 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Restore_CNN_M.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode C+A (HQ)\"\n\nCTRL+1 no-osd change-list glsl-shaders clr \"\"; show-text \"GLSL shaders cleared\"\n","recorded":"2025-01-09 12:58:05.655828387","filePath":"null","pinned":false},{"value":"CTRL+1 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Restore_CNN_VL.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode A (HQ)\"\nCTRL+2 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Restore_CNN_Soft_VL.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode B (HQ)\"\nCTRL+3 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode C (HQ)\"\nCTRL+4 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Restore_CNN_VL.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl:~~/shaders/Anime4K_Restore_CNN_M.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode A+A (HQ)\"\nCTRL+5 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Restore_CNN_Soft_VL.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Restore_CNN_Soft_M.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode B+B (HQ)\"\nCTRL+6 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Restore_CNN_M.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode C+A (HQ)\"\n\nCTRL+0 no-osd change-list glsl-shaders clr \"\"; show-text \"GLSL shaders cleared\"\n","recorded":"2025-01-09 12:58:01.583362232","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/mpv/scripts/file-browser.lua","recorded":"2025-01-09 12:57:30.966137946","filePath":"null","pinned":false},{"value":"map ctrl+v       paste_from_clipboard\n","recorded":"2025-01-09 12:53:54.330443292","filePath":"null","pinned":false},{"value":"map ctrl+c       copy_to_clipboard\n","recorded":"2025-01-09 12:53:42.268690916","filePath":"null","pinned":false},{"value":"confirm_os_window_close 0\n","recorded":"2025-01-09 12:52:56.732139305","filePath":"null","pinned":false},{"value":"hide_window_decorations yes\n","recorded":"2025-01-09 12:52:51.499617992","filePath":"null","pinned":false},{"value":"window_padding_width 10\n","recorded":"2025-01-09 12:52:45.603834715","filePath":"null","pinned":false},{"value":"copy_on_select yes\n","recorded":"2025-01-09 12:52:01.344151201","filePath":"null","pinned":false},{"value":"disable_ligatures never\n","recorded":"2025-01-09 12:51:38.825144652","filePath":"null","pinned":false},{"value":"file:///home/karna/dotfiles/homepage/homepage.html","recorded":"2025-01-09 12:41:10.020832826","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Extras/Extras/Zen Browser/User Default/chrome/homepage.html","recorded":"2025-01-08 23:33:59.763506583","filePath":"null","pinned":false},{"value":"file:///home/karna/homepage.html","recorded":"2025-01-08 23:30:18.857570952","filePath":"null","pinned":false},{"value":"file:///home/karna/dotfiles/Extras/Extras/Zen%20Browser/User%20Default/chrome/homepage.html","recorded":"2025-01-08 23:29:55.568702731","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/firefox_homepage/homepage.html","recorded":"2025-01-08 23:27:09.250642351","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/dunst/catppuccin.dunstrc","recorded":"2025-01-08 23:25:00.488132205","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/cava/config\n/home/karna/Downloads/sway-dotfiles-main/cava/config1","recorded":"2025-01-08 23:24:11.590801283","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/cava/config","recorded":"2025-01-08 23:24:05.120646290","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/BTOP/.config/btop/themes\n/home/karna/dotfiles/BTOP/.config/btop/btop.conf","recorded":"2025-01-08 23:23:49.016122414","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/btop/themes\n/home/karna/Downloads/sway-dotfiles-main/btop/btop.conf","recorded":"2025-01-08 23:23:40.319485058","filePath":"null","pinned":false},{"value":"https://github.com/Ruixi-rebirth/nixos-config","recorded":"2025-01-08 23:20:49.586378805","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n# Add this script to your wm startup file.\n\nDIR=\"$HOME/.config/i3/polybar/forest\"\n\n# Terminate already running bar instances\nkillall -q polybar\n\n# Wait until the processes have been shut down\nwhile pgrep -u $UID -x polybar \u003e/dev/null; do sleep 1; done\n\n# Launch the bar\npolybar -q main -c \"$DIR\"/config.ini \u0026\n","recorded":"2025-01-08 23:05:23.399966745","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nunpushed_changes=$(git log origin/\"$branch\"..HEAD --oneline)\n\nif [ -z \"$changes\" ] \u0026\u0026 [ -z \"$unpushed_changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# If there are committed but unpushed changes\nif [ -z \"$changes\" ] \u0026\u0026 [ -n \"$unpushed_changes\" ]; then\n  echo \"You have unpushed commits:\"\n  echo \"$unpushed_changes\"\n  read -p \"Do you want to push these commits to branch '$branch'? (y/n): \" confirm_push\n  if [[ \"$confirm_push\" == \"y\" || \"$confirm_push\" == \"Y\" ]]; then\n    echo \"Pushing changes to branch '$branch'...\"\n    git push origin \"$branch\" \u0026\u0026 echo \"Changes have been pushed to the remote repository.\" || echo \"Push failed. Check your connection or permissions.\"\n  else\n    echo \"Push cancelled. Changes remain committed locally.\"\n  fi\n  exit 0\nfi\n\n# Initialize commit counter\ncommit_counter=0\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: \\\"$file\\\" with status: $status\"\n\n  # Remove any unwanted quotes around the file name\n  file=$(echo \"$file\" | sed 's/^\"\\(.*\\)\"$/\\1/')\n\n  # Check if the file or directory exists\n  if [ ! -e \"$file\" ] \u0026\u0026 [ \"$status\" != \"D\" ]; then\n    echo \"Warning: File or directory $file does not exist.\"\n    continue\n  fi\n\n  # Determine commit message based on file status\n  case \"$status\" in\n  \"A\") # Added files (new files, untracked)\n    commit_message=\"create $file\"\n    git add -- \"$file\"\n    ;;\n  \"M\") # Modified files\n    commit_message=\"update $file\"\n    git add -- \"$file\"\n    ;;\n  \"D\") # Deleted files\n    commit_message=\"delete $file\"\n    git rm --ignore-unmatch \"$file\"\n    ;;\n  \"??\") # Untracked files (new files)\n    commit_message=\"create $file\"\n    git add -- \"$file\"\n    ;;\n  *) # Other statuses\n    echo \"Unknown status: $status for file: $file. Skipping.\"\n    continue\n    ;;\n  esac\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" \u0026\u0026 commit_counter=$((commit_counter + 1)) || {\n    echo \"Commit failed for file: $file\"\n    continue\n  }\n\ndone \u003c\u003c\u003c\"$(git status --porcelain)\"\n\n# Check if there were no commits\nif [ \"$commit_counter\" -eq 0 ]; then\n  echo \"No new changes to commit.\"\nelse\n  echo \"$commit_counter commit(s) have been successfully made.\"\nfi\n\n# Confirm pushing the changes\nread -p \"Do you want to push all changes to branch '$branch'? (y/n): \" confirm_push\nif [[ \"$confirm_push\" == \"y\" || \"$confirm_push\" == \"Y\" ]]; then\n  echo \"Pushing changes to branch '$branch'...\"\n  git push origin \"$branch\" \u0026\u0026 echo \"Changes have been pushed to the remote repository.\" || echo \"Push failed. Check your connection or permissions.\"\nelse\n  echo \"Push cancelled. Changes remain committed locally.\"\nfi\n","recorded":"2025-01-08 23:05:23.387097038","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nunpushed_changes=$(git log origin/\"$branch\"..HEAD --oneline)\n\nif [ -z \"$changes\" ] \u0026\u0026 [ -z \"$unpushed_changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# If there are committed but unpushed changes\nif [ -z \"$changes\" ] \u0026\u0026 [ -n \"$unpushed_changes\" ]; then\n  echo \"You have unpushed commits:\"\n  echo \"$unpushed_changes\"\n  read -p \"Do you want to push these commits to branch '$branch'? (Y/n): \" confirm_push\n  confirm_push=${confirm_push:-Y}  # Default to \"Y\" if input is blank\n  if [[ \"$confirm_push\" =~ ^[Yy]$ ]]; then\n    echo \"Pushing changes to branch '$branch'...\"\n    git push origin \"$branch\" \u0026\u0026 echo \"Changes have been pushed to the remote repository.\" || echo \"Push failed. Check your connection or permissions.\"\n  else\n    echo \"Push cancelled. Changes remain committed locally.\"\n  fi\n  exit 0\nfi\n\n# Initialize commit counter\ncommit_counter=0\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: \\\"$file\\\" with status: $status\"\n\n  # Remove any unwanted quotes around the file name\n  file=$(echo \"$file\" | sed 's/^\"\\(.*\\)\"$/\\1/')\n\n  # Check if the file or directory exists\n  if [ ! -e \"$file\" ] \u0026\u0026 [ \"$status\" != \"D\" ]; then\n    echo \"Warning: File or directory $file does not exist.\"\n    continue\n  fi\n\n  # Determine commit message based on file status\n  case \"$status\" in\n  \"A\") # Added files (new files, untracked)\n    commit_message=\"create $file\"\n    git add -- \"$file\"\n    ;;\n  \"M\") # Modified files\n    commit_message=\"update $file\"\n    git add -- \"$file\"\n    ;;\n  \"D\") # Deleted files\n    commit_message=\"delete $file\"\n\n    git rm --ignore-unmatch \"$file\"\n    ;;\n  \"??\") # Untracked files (new files)\n    commit_message=\"create $file\"\n    git add -- \"$file\"\n    ;;\n  *) # Other statuses\n    echo \"Unknown status: $status for file: $file. Skipping.\"\n    continue\n    ;;\n  esac\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" \u0026\u0026 commit_counter=$((commit_counter + 1)) || {\n    echo \"Commit failed for file: $file\"\n    continue\n  }\n\ndone \u003c\u003c\u003c\"$(git status --porcelain)\"\n\n# Check if there were no commits\nif [ \"$commit_counter\" -eq 0 ]; then\n  echo \"No new changes to commit.\"\nelse\n  echo \"$commit_counter commit(s) have been successfully made.\"\nfi\n\n# Confirm pushing the changes\nread -p \"Do you want to push all changes to branch '$branch'? (Y/n): \" confirm_push\nconfirm_push=${confirm_push:-Y}  # Default to \"Y\" if input is blank\nif [[ \"$confirm_push\" =~ ^[Yy]$ ]]; then\n  echo \"Pushing changes to branch '$branch'...\"\n  git push origin \"$branch\" \u0026\u0026 echo \"Changes have been pushed to the remote repository.\" || echo \"Push failed. Check your connection or permissions.\"\nelse\n  echo \"Push cancelled. Changes remain committed locally.\"\nfi\n","recorded":"2025-01-08 23:05:18.381582166","filePath":"null","pinned":false},{"value":"/home/karna/.zen/7gx52li9.Default (alpha)/chrome/zen-themes.css","recorded":"2025-01-08 23:03:10.294083918","filePath":"null","pinned":false},{"value":"waybar -c ~/.config/hypr/waybar/config.jsonc -s ~/.config/hypr/waybar/style.css","recorded":"2025-01-08 22:59:40.342736989","filePath":"null","pinned":false},{"value":"(base) \u003e\u003e\u003e    dotfiles [master] ⚡  git rm \"ranger_karna/.config/ranger/.gitignore\" \n\nfatal: pathspec 'ranger_karna/.config/ranger/.gitignore' did not match any files","recorded":"2025-01-08 22:59:29.160288202","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/hypr/waybar","recorded":"2025-01-08 22:53:50.574407164","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/waybar","recorded":"2025-01-08 22:53:19.518184367","filePath":"null","pinned":false},{"value":"// \"custom/timer\": {\n//     \"exec\": \"~/dotfiles/Hyprland/.config/waybar/waybar-timer.sh updateandprint\",\n//     \"exec-on-event\": true,\n//     \"return-type\": \"json\",\n//     \"interval\": 5,\n//     \"signal\": 4,\n//     \"format\": \"{icon} {0}\",\n//     \"format-icons\": {\n//         \"standby\": \"STANDBY\",\n//         \"running\": \"RUNNING\",\n//         \"paused\": \"PAUSE\"\n//     },\n//     \"on-click\": \"~/dotfiles/Hyprland/.config/waybar/waybar-timer.sh new 25 'notify-send \\\"Session finished\\\"'\",\n//     \"on-click-middle\": \"~/dotfiles/Hyprland/.config/waybar/waybar-timer.sh cancel\",\n//     \"on-click-right\": \"~/dotfiles/Hyprland/.config/waybar/waybar-timer.sh togglepause\",\n//     \"on-scroll-up\": \"~/dotfiles/Hyprland/.config/waybar/waybar-timer.sh increase 60 || ~/dotfiles/Hyprland/.config/waybar/waybar-timer.sh new 1 'notify-send -u critical \\\"Timer expired.\\\"'\",\n//     \"on-scroll-down\": \"~/dotfiles/Hyprland/.config/waybar/waybar-timer.sh increase -60\"\n// },","recorded":"2025-01-08 22:51:05.113589497","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Initialize commit counter\ncommit_counter=0\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: \\\"$file\\\" with status: $status\"\n\n  # Remove any unwanted quotes around the file name\n  file=$(echo \"$file\" | sed 's/^\"\\(.*\\)\"$/\\1/')\n\n  # Check if the file or directory exists\n  if [ ! -e \"$file\" ]; then\n    echo \"Warning: File or directory $file does not exist.\"\n    continue\n  fi\n\n  # Determine commit message based on file status\n  case \"$status\" in\n  \"A\") # Added files (new files, untracked)\n    commit_message=\"create $file\"\n    git add -- \"$file\"\n    ;;\n  \"M\") # Modified files\n    commit_message=\"update $file\"\n    git add -- \"$file\"\n    ;;\n  \"D\") # Deleted files\n    commit_message=\"delete $file\"\n\n    git rm \"$file\"\n    ;;\n  \"??\") # Untracked files (new files)\n    commit_message=\"create $file\"\n    git add -- \"$file\"\n    ;;\n  *) # Other statuses\n    commit_message=\"Unknown status: $status for file: $file\"\n    git add -- \"$file\"\n    ;;\n  esac\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" \u0026\u0026 commit_counter=$((commit_counter + 1)) || {\n    echo \"Commit failed for file: $file\"\n    continue\n  }\n\ndone \u003c\u003c\u003c\"$(git status --porcelain)\"\n\n# Check if there were no commits\nif [ \"$commit_counter\" -eq 0 ]; then\n  echo \"No changes to commit. Exiting.\"\n  exit 0\nfi\n\n# Show the number of commits before pushing\necho \"$commit_counter commit(s) have been successfully made.\"\n\n# Confirm pushing the changes\nread -p \"Do you want to push these changes to branch '$branch'? (y/n): \" confirm_push\nif [[ \"$confirm_push\" == \"y\" || \"$confirm_push\" == \"Y\" ]]; then\n  # Push all committed changes\n  echo \"Pushing changes to branch '$branch'...\"\n  git push origin \"$branch\"\n  echo \"Changes have been pushed to the remote repository.\"\nelse\n  echo \"Push cancelled. Changes are committed locally.\"\nfi\n","recorded":"2025-01-08 22:39:20.492939350","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Initialize commit counter\ncommit_counter=0\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: \\\"$file\\\" with status: $status\"\n\n  # Remove any unwanted quotes around the file name\n  file=$(echo \"$file\" | sed 's/^\"\\(.*\\)\"$/\\1/')\n\n  # Check if the file or directory exists\n  if [ ! -e \"$file\" ] \u0026\u0026 [ \"$status\" != \"D\" ]; then\n    echo \"Warning: File or directory $file does not exist.\"\n    continue\n  fi\n\n  # Determine commit message based on file status\n  case \"$status\" in\n  \"A\") # Added files (new files, untracked)\n    commit_message=\"create $file\"\n    git add -- \"$file\"\n    ;;\n  \"M\") # Modified files\n    commit_message=\"update $file\"\n    git add -- \"$file\"\n    ;;\n  \"D\") # Deleted files\n    commit_message=\"delete $file\"\n    git rm --ignore-unmatch \"$file\"\n    ;;\n  \"??\") # Untracked files (new files)\n    commit_message=\"create $file\"\n    git add -- \"$file\"\n    ;;\n  *) # Other statuses\n    echo \"Unknown status: $status for file: $file. Skipping.\"\n    continue\n    ;;\n  esac\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" \u0026\u0026 commit_counter=$((commit_counter + 1)) || {\n    echo \"Commit failed for file: $file\"\n    continue\n  }\n\ndone \u003c\u003c\u003c\"$(git status --porcelain)\"\n\n# Check if there were no commits\nif [ \"$commit_counter\" -eq 0 ]; then\n  echo \"No changes to commit. Exiting.\"\n  exit 0\nfi\n\n# Show the number of commits before pushing\necho \"$commit_counter commit(s) have been successfully made.\"\n\n# Confirm pushing the changes\nread -p \"Do you want to push these changes to branch '$branch'? (y/n): \" confirm_push\nif [[ \"$confirm_push\" == \"y\" || \"$confirm_push\" == \"Y\" ]]; then\n  # Push all committed changes\n  echo \"Pushing changes to branch '$branch'...\"\n  git push origin \"$branch\" \u0026\u0026 echo \"Changes have been pushed to the remote repository.\" || echo \"Push failed. Check your connection or permissions.\"\nelse\n  echo \"Push cancelled. Changes are committed locally.\"\nfi\n","recorded":"2025-01-08 22:39:20.473019480","filePath":"null","pinned":false},{"value":"(base) \u003e\u003e\u003e    dotfiles [master] ./gitAutoCommitter.sh \nEnter the Git repository path: .\nEnter branch to push changes (default: master): \nNo changes detected. Exiting.","recorded":"2025-01-08 22:37:33.685671934","filePath":"null","pinned":false},{"value":"git status | grep ranger_karna/.config/ranger/.gitignore\n","recorded":"2025-01-08 22:33:32.577799060","filePath":"null","pinned":false},{"value":"git rm --cached ranger_karna/.config/ranger/.gitignore\n","recorded":"2025-01-08 22:33:26.536900672","filePath":"null","pinned":false},{"value":"git ls-files ranger_karna/.config/ranger/.gitignore\n","recorded":"2025-01-08 22:33:06.835727179","filePath":"null","pinned":false},{"value":"Enter the Git repository path: .\nEnter branch to push changes (default: master): \nProcessing changes...\nProcessing file: \"Hyprland/.config/clipse/clipboard_history.json\" with status: M\nCommitting: \"update Hyprland/.config/clipse/clipboard_history.json\"\n[master 4ddc13ee] update Hyprland/.config/clipse/clipboard_history.json\n 2 files changed, 1 insertion(+), 161 deletions(-)\n delete mode 100644 ranger_karna/.config/ranger/.gitignore\nProcessing file: \"gitAutoCommitter.sh\" with status: M\nCommitting: \"update gitAutoCommitter.sh\"\n[master db58f525] update gitAutoCommitter.sh\n 1 file changed, 2 insertions(+), 1 deletion(-)\nProcessing file: \"picom/.stow-local-ignore\" with status: D\nWarning: File or directory picom/.stow-local-ignore does not exist.\nProcessing file: \"ranger_karna/.config/ranger/.gitignore\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/.gitignore does not exist.\nProcessing file: \"ranger_karna/.config/ranger/colorschemes/__init__.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/colorschemes/__init__.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/colorschemes/dracula.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/colorschemes/dracula.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/colorschemes/nord.py\" with status: D\n(base) \u003e\u003e\u003e    dotfiles [master] ⚡  ./gitAutoCommitter.sh \nEnter the Git repository path: .\nEnter branch to push changes (default: master): \nProcessing changes...\nProcessing file: \"picom/.stow-local-ignore\" with status: D\nWarning: File or directory picom/.stow-local-ignore does not exist.\nProcessing file: \"ranger_karna/.config/ranger/colorschemes/__init__.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/colorschemes/__init__.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/colorschemes/dracula.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/colorschemes/dracula.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/colorschemes/nord.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/colorschemes/nord.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/CONTRIBUTING.MD\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/CONTRIBUTING.MD does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/LICENSE\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/LICENSE does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/LICENSE_NERDFONT\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/LICENSE_NERDFONT does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/README.md\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/README.md does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/__init__.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/__init__.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/devicons.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/devicons.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/screenshot.png\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/screenshot.png does not exist.\nNo changes to commit. Exiting.","recorded":"2025-01-08 22:30:49.760630909","filePath":"null","pinned":false},{"value":"    git rm --ignore-unmatch \"$file\" # Handle deletion\n","recorded":"2025-01-08 22:30:13.855620123","filePath":"null","pinned":false},{"value":"git rm --ignore-unmatch -- \"$file\"\n","recorded":"2025-01-08 22:30:06.088970985","filePath":"null","pinned":false},{"value":"(base) \u003e\u003e\u003e    dotfiles [master] ⚡  git rm --ignore-unmatch \"ranger_karna/.config/ranger/.gitignore\"\n\nrm 'ranger_karna/.config/ranger/.gitignore'","recorded":"2025-01-08 22:29:25.344388658","filePath":"null","pinned":false},{"value":"git rm --ignore-unmatch \"ranger_karna/.config/ranger/.gitignore\"\n","recorded":"2025-01-08 22:29:07.440898170","filePath":"null","pinned":false},{"value":"Enter the Git repository path: .\nEnter branch to push changes (default: master): \nProcessing changes...\nProcessing file: \"picom/.stow-local-ignore\" with status: D\nWarning: File or directory picom/.stow-local-ignore does not exist.\nProcessing file: \"ranger_karna/.config/ranger/.gitignore\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/.gitignore does not exist.\nProcessing file: \"ranger_karna/.config/ranger/colorschemes/__init__.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/colorschemes/__init__.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/colorschemes/dracula.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/colorschemes/dracula.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/colorschemes/nord.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/colorschemes/nord.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/CONTRIBUTING.MD\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/CONTRIBUTING.MD does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/LICENSE\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/LICENSE does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/LICENSE_NERDFONT\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/LICENSE_NERDFONT does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/README.md\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/README.md does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/__init__.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/__init__.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/devicons.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/devicons.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/screenshot.png\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/screenshot.png does not exist.\nNo changes to commit. Exiting.","recorded":"2025-01-08 22:26:44.241796410","filePath":"null","pinned":false},{"value":"Unknown status: $status for file: $file","recorded":"2025-01-08 22:26:08.895168846","filePath":"null","pinned":false},{"value":"    git rm -- \"$file\"\n","recorded":"2025-01-08 22:25:56.694286310","filePath":"null","pinned":false},{"value":"git rm --cached --ignore-unmatch \"$file\"  # Handle deletion","recorded":"2025-01-08 22:25:38.006033888","filePath":"null","pinned":false},{"value":"case \"$status\" in\n    \"A\") # Added files (new files, untracked)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      git add -- \"$file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      git rm -- \"$file\"\n      ;;\n    \"??\") # Untracked files (new files)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      git add -- \"$file\"\n      ;;\n  esac","recorded":"2025-01-08 22:25:20.077441998","filePath":"null","pinned":false},{"value":"case \"$status\" in\n  \"A\") # Added files (new files, untracked)\n    commit_message=\"create $file\"\n    git add -- \"$file\"\n    ;;\n  \"M\") # Modified files\n    commit_message=\"update $file\"\n    git add -- \"$file\"\n    ;;\n  \"D\") # Deleted files\n    commit_message=\"delete $file\"\n    git rm --cached --ignore-unmatch \"$file\"  # Handle deletion\n    ;;\n  \"??\") # Untracked files (new files)\n    commit_message=\"create $file\"\n    git add -- \"$file\"\n    ;;\n  *) # Other statuses\n    echo \"Unknown status: $status for file: $file\"\n    ;;\nesac\n","recorded":"2025-01-08 22:25:14.413582924","filePath":"null","pinned":false},{"value":"  case \"$status\" in\n    \"A\") # Added files (new files, untracked)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      git add -- \"$file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      git rm -- \"$file\"\n      ;;\n    \"??\") # Untracked files (new files)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      git add -- \"$file\"\n      ;;\n  esac","recorded":"2025-01-08 22:25:03.277728931","filePath":"null","pinned":false},{"value":"rofi rofi-emoji rofi-calc","recorded":"2025-01-08 22:22:35.388359524","filePath":"null","pinned":false},{"value":"Ruixi-rebirth/sway-dotf","recorded":"2025-01-08 22:20:18.277791454","filePath":"null","pinned":false},{"value":"\n# -------------------------------------------------------------------------------------\n\necho \"Setting up dwm...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install i3?\" \\\n  --yesno \"Would you like to install i3 window manager?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"dwm installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"dwm installation will begin now.\" 10 50\n\n  sudo pacman -S i3-wm polybar kitty rofi dunst papirus-icon-theme picom feh neofetch w3m xfce4-power-manager\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"dwm has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear","recorded":"2025-01-08 22:05:34.333541552","filePath":"null","pinned":false},{"value":"Bugreports: https://github.com/davatorium/rofi/","recorded":"2025-01-08 22:03:48.326148031","filePath":"null","pinned":false},{"value":"\t• drun    enabled","recorded":"2025-01-08 22:03:33.922445105","filePath":"null","pinned":false},{"value":"rofi -show drun  -config ~/.config/hypr/rofi/config.rasi\n[1]    2685 segmentation fault (core dumped)  rofi -show drun -config ~/.config/hypr/rofi/config.rasi","recorded":"2025-01-08 22:02:10.711977875","filePath":"null","pinned":false},{"value":"feh --bg-fill 'path/to/image.jpg' ","recorded":"2025-01-08 21:48:42.718162115","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/i3/.config/i3/rofi/Wifimenu","recorded":"2025-01-08 21:41:14.211597013","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/i3/.config/i3/rofi/powermenu/powermenu.sh\n/home/karna/dotfiles/i3/.config/i3/rofi/powermenu/style-3.rasi","recorded":"2025-01-08 21:41:00.418471126","filePath":"null","pinned":false},{"value":"sudo pacman -S i3-wm polybar kitty rofi dunst papirus-icon-theme picom feh neofetch","recorded":"2025-01-08 21:31:37.155236172","filePath":"null","pinned":false},{"value":"  stow ~/dotfiles/suckless/\n\n  cd ~/.config/dwm \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/slstatus \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/st \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/.config/dmenu \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/dotfiles/Extras/Extras/waldl-master/ \u0026\u0026 sudo make install \u0026\u0026 cd ~/dotfiles\n\n  sudo mkdir /usr/share/xsessions/\n  sudo cp ~/dotfiles/Extras/Extras/usr/share/xsessions/dwm.desktop /usr/share/xsessions","recorded":"2025-01-08 21:31:29.448382903","filePath":"null","pinned":false},{"value":"# map dD console delete\nmap \u003cF8\u003e shell -w echo \"Use Delete or DD to delete files. It uses trash-cli.\"\nmap \u003cDELETE\u003e shell -p trash -v %s 2\u003e\u00261\nmap DD shell -p trash -v %s 2\u003e\u00261","recorded":"2025-01-08 21:27:54.078840265","filePath":"null","pinned":false},{"value":"map dD console delete\n","recorded":"2025-01-08 21:27:47.204775977","filePath":"null","pinned":false},{"value":"class code(Command):\n  \"\"\"\n  :code\n\n  Opens current directory in VSCode\n  \"\"\"\n\n  def execute(self):\n    dirname = self.fm.thisdir.path\n    codecmd = [\"code\", dirname]\n    self.fm.execute_command(codecmd)","recorded":"2025-01-08 21:24:04.147663308","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Dotfiles_i3-master/ncmpcpp/config","recorded":"2025-01-08 21:18:08.871861392","filePath":"null","pinned":false},{"value":"selected_item_prefix = \"$0\"\nselected_item_suffix = \"$9\"\nuser_interface = \"alternative\"","recorded":"2025-01-08 21:17:40.975833313","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Dotfiles_i3-master/ncmpcpp/ncmpcpp-ueberzug","recorded":"2025-01-08 21:10:35.348524412","filePath":"null","pinned":false},{"value":"## name: Catppuccin\n## author: Pocco81 (https://github.com/Pocco81)\n## license: MIT\n## upstream: https://github.com/catppuccin/kitty/blob/main/catppuccin.conf\n## blurb: Soothing pastel theme for the high-spirited!\n\n# The basic colors\nforeground              #D9E0EE\nbackground              #1E1E2E\nselection_foreground    #D9E0EE\nselection_background    #575268\n\n# Cursor colors\ncursor                  #F5E0DC\ncursor_text_color       #1E1E2E\n\n# URL underline color when hovering with mouse\nurl_color               #F5E0DC\n\n# kitty window border colors\nactive_border_color     #C9CBFF\ninactive_border_color   #575268\nbell_border_color       #FAE3B0\n\n# OS Window titlebar colors\nwayland_titlebar_color system\nmacos_titlebar_color system\n\n#: Tab bar colors\nactive_tab_foreground   #F5C2E7\nactive_tab_background   #575268\ninactive_tab_foreground #D9E0EE\ninactive_tab_background #1E1e2E\ntab_bar_background      #161320\n\n# Colors for marks (marked text in the terminal)\n\nmark1_foreground #1E1E2E\nmark1_background #96CDFB\nmark2_foreground #1E1E2E\nmark2_background #F5C2E7\nmark3_foreground #1E1E2E\nmark3_background #B5E8E0\n\n#: The 16 terminal colors\n\n#: black\ncolor0 #6E6C7E\ncolor8 #988BA2\n\n#: red\ncolor1 #F28FAD\ncolor9 #F28FAD\n\n#: green\ncolor2  #ABE9B3\ncolor10 #ABE9B3\n\n#: yellow\ncolor3  #FAE3B0\ncolor11 #FAE3B0\n\n#: blue\ncolor4  #96CDFB\ncolor12 #96CDFB\n\n#: magenta\ncolor5  #F5C2E7\ncolor13 #F5C2E7\n\n#: cyan\ncolor6  #89DCEB\ncolor14 #89DCEB\n\n#: white\ncolor7  #D9E0EE\ncolor15 #D9E0EE\n","recorded":"2025-01-08 20:58:41.151507182","filePath":"null","pinned":false},{"value":"toggle_visualizer","recorded":"2025-01-08 20:43:34.753470224","filePath":"null","pinned":false},{"value":"CaskaydiaCove Nerd Font","recorded":"2025-01-08 20:43:34.728399673","filePath":"null","pinned":false},{"value":"Jet Brains Mono Nerd Font","recorded":"2025-01-08 20:43:30.992846575","filePath":"null","pinned":false},{"value":"Algorithm79's i3 dotfiles","recorded":"2025-01-08 20:41:02.662598269","filePath":"null","pinned":false},{"value":"unzip Hack.zip","recorded":"2025-01-08 20:39:31.357365067","filePath":"null","pinned":false},{"value":"wget https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/Hack.zip","recorded":"2025-01-08 20:39:27.176417346","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/i3","recorded":"2025-01-08 20:32:19.523442280","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Ubuntu-i3-rice-main/polybar","recorded":"2025-01-08 20:32:11.546588314","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Ubuntu-i3-rice-main/rofi","recorded":"2025-01-08 20:31:40.421422943","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Ubuntu-i3-rice-main/picom/picom.conf","recorded":"2025-01-08 20:26:41.182039701","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Ubuntu-i3-rice-main/neofetch/animeascii\n/home/karna/Downloads/Ubuntu-i3-rice-main/neofetch/config.conf\n/home/karna/Downloads/Ubuntu-i3-rice-main/neofetch/random_ascii.sh","recorded":"2025-01-08 20:25:55.045628880","filePath":"null","pinned":false},{"value":"sticker_file       \"~/.config/mpd/sticker.sql\"\n","recorded":"2025-01-08 20:22:25.215499079","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Ubuntu-i3-rice-main/dunst/critical.png\n/home/karna/Downloads/Ubuntu-i3-rice-main/dunst/normal.png\n/home/karna/Downloads/Ubuntu-i3-rice-main/dunst/notify-send.sh\n/home/karna/Downloads/Ubuntu-i3-rice-main/dunst/volume.sh","recorded":"2025-01-08 20:21:25.351481955","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Ubuntu-i3-rice-main/dunst/critical.png\n/home/karna/Downloads/Ubuntu-i3-rice-main/dunst/normal.png\n/home/karna/Downloads/Ubuntu-i3-rice-main/dunst/notify-send.sh","recorded":"2025-01-08 20:21:22.862142138","filePath":"null","pinned":false},{"value":"[shortcuts]\n\n    # Shortcuts are specified as [modifier+][modifier+]...key\n    # Available modifiers are \"ctrl\", \"mod1\" (the alt-key), \"mod2\",\n    # \"mod3\" and \"mod4\" (windows-key).\n    # Xev might be helpful to find names for keys.\n\n    # Close notification.\n    close = ctrl+space\n\n    # Close all notifications.\n    close_all = ctrl+shift+space\n\n    # Redisplay last message(s).\n    # On the US keyboard layout \"grave\" is normally above TAB and left\n    # of \"1\". Make sure this key actually exists on your keyboard layout,\n    # e.g. check output of 'xmodmap -pke'\n    history = ctrl+grave\n\n    # Context menu.\n    context = ctrl+shift+period\n\n","recorded":"2025-01-08 20:19:00.216240011","filePath":"null","pinned":false},{"value":"[shortcuts]\n\n    # Shortcuts are specified as [modifier+][modifier+]...key\n    # Available modifiers are \"ctrl\", \"mod1\" (the alt-key), \"mod2\",\n    # \"mod3\" and \"mod4\" (windows-key).\n    # Xev might be helpful to find names for keys.\n\n    # Close notification.\n    close = ctrl+space\n\n    # Close all notifications.\n    close_all = ctrl+shift+space\n\n    # Redisplay last message(s).\n    # On the US keyboard layout \"grave\" is normally above TAB and left\n    # of \"1\". Make sure this key actually exists on your keyboard layout,\n    # e.g. check output of 'xmodmap -pke'\n    history = ctrl+grave\n\n    # Context menu.\n    context = ctrl+shift+period","recorded":"2025-01-08 20:16:02.022667797","filePath":"null","pinned":false},{"value":"dialog --msgbox","recorded":"2025-01-08 18:45:09.934834309","filePath":"null","pinned":false},{"value":" gradient_color_6 = '#E894E1'\n gradient_color_5 = '#DA97E9'\n gradient_color_4 = '#C49AEB'\n gradient_color_3 = '#B49CEB'\n gradient_color_2 = '#A19FEC'\n gradient_color_1 = '#A2B5ED'","recorded":"2025-01-08 18:45:09.921136876","filePath":"null","pinned":false},{"value":"gradient_color_1 = '#B5E8E0'\ngradient_color_2 = '#89DCEB'\ngradient_color_3 = '#96CDFB'\ngradient_color_4 = '#DDB6F2'\ngradient_color_5 = '#F5C2E7'\ngradient_color_6 = '#E8A2AF'\ngradient_color_7 = '#F2CDCD'\ngradient_color_8 = '#F5E0DC'","recorded":"2025-01-08 18:45:06.203444363","filePath":"null","pinned":false},{"value":"/mnt/Karna/Git/Project-K/","recorded":"2025-01-08 18:11:58.235938284","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Initialize commit counter\ncommit_counter=0\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Check if the file is a directory (based on the status code)\n  if [ -d \"$file\" ]; then\n    continue\n  fi\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: $file with status: $status\"\n\n  # Remove any unwanted quotes around the file name\n  file=$(echo \"$file\" | sed 's/^\"\\(.*\\)\"$/\\1/')\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files (new files, untracked)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      git add -- \"$file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      git rm -- \"$file\"\n      ;;\n    \"??\") # Untracked files (new files)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      git add -- \"$file\"\n      ;;\n  esac\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" \u0026\u0026 commit_counter=$((commit_counter + 1)) || { echo \"Commit failed for file: $file\"; continue; }\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Check if there were no commits\nif [ \"$commit_counter\" -eq 0 ]; then\n  echo \"No changes to commit. Exiting.\"\n  exit 0\nfi\n\n# Show the number of commits before pushing\necho \"$commit_counter commit(s) have been successfully made.\"\n\n# Confirm pushing the changes\nread -p \"Do you want to push these changes to branch '$branch'? (y/n): \" confirm_push\nif [[ \"$confirm_push\" == \"y\" || \"$confirm_push\" == \"Y\" ]]; then\n  # Push all committed changes\n  echo \"Pushing changes to branch '$branch'...\"\n  git push origin \"$branch\"\n  echo \"Changes have been pushed to the remote repository.\"\nelse\n  echo \"Push cancelled. Changes are committed locally.\"\nfi\n","recorded":"2025-01-08 18:10:07.405896098","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Initialize commit counter\ncommit_counter=0\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: \\\"$file\\\" with status: $status\"\n\n  # Remove any unwanted quotes around the file name\n  file=$(echo \"$file\" | sed 's/^\"\\(.*\\)\"$/\\1/')\n\n  # Check if the file or directory exists\n  if [ ! -e \"$file\" ]; then\n    echo \"Warning: File or directory $file does not exist.\"\n    continue\n  fi\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files (new files, untracked)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      git add -- \"$file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      git rm -- \"$file\"\n      ;;\n    \"??\") # Untracked files (new files)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      git add -- \"$file\"\n      ;;\n  esac\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" \u0026\u0026 commit_counter=$((commit_counter + 1)) || { echo \"Commit failed for file: $file\"; continue; }\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Check if there were no commits\nif [ \"$commit_counter\" -eq 0 ]; then\n  echo \"No changes to commit. Exiting.\"\n  exit 0\nfi\n\n# Show the number of commits before pushing\necho \"$commit_counter commit(s) have been successfully made.\"\n\n# Confirm pushing the changes\nread -p \"Do you want to push these changes to branch '$branch'? (y/n): \" confirm_push\nif [[ \"$confirm_push\" == \"y\" || \"$confirm_push\" == \"Y\" ]]; then\n  # Push all committed changes\n  echo \"Pushing changes to branch '$branch'...\"\n  git push origin \"$branch\"\n  echo \"Changes have been pushed to the remote repository.\"\nelse\n  echo \"Push cancelled. Changes are committed locally.\"\nfi\n","recorded":"2025-01-08 18:10:02.983992215","filePath":"null","pinned":false},{"value":"ranger_karna/.config/ranger/commands.py","recorded":"2025-01-08 18:09:29.416537116","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Initialize commit counter\ncommit_counter=0\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Check if the file is a directory (based on the status code)\n  if [ -d \"$file\" ]; then\n    continue\n  fi\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: $file with status: $status\"\n\n  # Remove any unwanted quotes around the file name\n  file=$(echo \"$file\" | sed 's/^\"\\(.*\\)\"$/\\1/')\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files (new files, untracked)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      git add -- \"$file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      git rm -- \"$file\"\n      ;;\n    \"??\") # Untracked files (new files)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      git add -- \"$file\"\n      ;;\n  esac\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" \u0026\u0026 commit_counter=$((commit_counter + 1)) || { echo \"Commit failed for file: $file\"; continue; }\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Show the number of commits before pushing\necho \"$commit_counter commit(s) have been successfully made.\"\n\n# Confirm pushing the changes\nread -p \"Do you want to push these changes to branch '$branch'? (y/n): \" confirm_push\nif [[ \"$confirm_push\" == \"y\" || \"$confirm_push\" == \"Y\" ]]; then\n  # Push all committed changes\n  echo \"Pushing changes to branch '$branch'...\"\n  git push origin \"$branch\"\n  echo \"Changes have been pushed to the remote repository.\"\nelse\n  echo \"Push cancelled. Changes are committed locally.\"\nfi\n","recorded":"2025-01-08 18:09:03.840996535","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/gitAutoCommitter.sh","recorded":"2025-01-08 18:07:29.561903760","filePath":"null","pinned":false},{"value":"/mnt/Karna/Git/Books/","recorded":"2025-01-08 18:04:44.705621287","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Initialize commit counter\ncommit_counter=0\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Check if the file is a directory (based on the status code)\n  if [ -d \"$file\" ]; then\n    continue\n  fi\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: $file with status: $status\"\n\n  # Remove any unwanted quotes around the file name\n  file=$(echo \"$file\" | sed 's/^\"\\(.*\\)\"$/\\1/')\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files (new files, untracked)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      git add -- \"$file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      git rm -- \"$file\"\n      ;;\n    \"??\") # Untracked files (new files)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      git add -- \"$file\"\n      ;;\n  esac\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" \u0026\u0026 commit_counter=$((commit_counter + 1)) || { echo \"Commit failed for file: $file\"; continue; }\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to branch '$branch'...\"\ngit push origin \"$branch\"\n\n# Output the total number of commits made\necho \"$commit_counter commit(s) have been successfully made.\"\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 18:04:18.775920447","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Check if the file is a directory (based on the status code)\n  if [ -d \"$file\" ]; then\n    continue\n  fi\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: $file with status: $status\"\n\n  # Remove any unwanted quotes around the file name\n  file=$(echo \"$file\" | sed 's/^\"\\(.*\\)\"$/\\1/')\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files (new files, untracked)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      git add -- \"$file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      git rm -- \"$file\"\n      ;;\n    \"??\") # Untracked files (new files)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      git add -- \"$file\"\n      ;;\n  esac\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" || { echo \"Commit failed for file: $file\"; continue; }\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to branch '$branch'...\"\ngit push origin \"$branch\"\n\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 18:03:11.833681022","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Check if the file is a directory (based on the status code)\n  if [ -d \"$file\" ]; then\n    continue\n  fi\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: $file with status: $status\"\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files (new files, untracked)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      git add -- \"$file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      git rm -- \"$file\"\n      ;;\n    \"??\") # Untracked files (new files)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      git add -- \"$file\"\n      ;;\n  esac\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" || { echo \"Commit failed for file: \\\"$file\\\"\"; continue; }\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to branch '$branch'...\"\ngit push origin \"$branch\"\n\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 18:01:26.470373415","filePath":"null","pinned":false},{"value":"Enter the Git repository path: .\nEnter branch to push changes (default: main): \nProcessing changes...\nProcessing file: \"Deep Learning/1722433328418.pdf\" with status: D\nfatal: pathspec '\"Deep Learning/1722433328418.pdf\"' did not match any files\nCommitting: \"delete \"Deep Learning/1722433328418.pdf\"\"\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add/rm \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tdeleted:    Deep Learning/1722433328418.pdf\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nUntracked files:\n  (use \"git add \u003cfile\u003e...\" to include in what will be committed)\n\tDeep Learning/172243332841.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/1722433328418.pdf\"\"\nProcessing file: \"Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\" with status: M\nfatal: pathspec '\"Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\"' did not match any files\nCommitting: \"update \"Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\"\"\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add/rm \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tdeleted:    Deep Learning/1722433328418.pdf\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nUntracked files:\n  (use \"git add \u003cfile\u003e...\" to include in what will be committed)\n\tDeep Learning/172243332841.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\"\"\nProcessing file: \"Deep Learning/EAAI-24-9693.pdf\" with status: M\nfatal: pathspec '\"Deep Learning/EAAI-24-9693.pdf\"' did not match any files\nCommitting: \"update \"Deep Learning/EAAI-24-9693.pdf\"\"\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add/rm \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tdeleted:    Deep Learning/1722433328418.pdf\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nUntracked files:\n  (use \"git add \u003cfile\u003e...\" to include in what will be committed)\n\tDeep Learning/172243332841.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/EAAI-24-9693.pdf\"\"\nProcessing file: \"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\" with status: M\nfatal: pathspec '\"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"' did not match any files\nCommitting: \"update \"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"\"\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add/rm \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tdeleted:    Deep Learning/1722433328418.pdf\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nUntracked files:\n  (use \"git add \u003cfile\u003e...\" to include in what will be committed)\n\tDeep Learning/172243332841.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"\"\nProcessing file: \"Deep Learning/172243332841.pdf\" with status: ??\nfatal: pathspec '\"Deep Learning/172243332841.pdf\"' did not match any files\nCommitting: \"create \"Deep Learning/172243332841.pdf\"\"\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add/rm \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tdeleted:    Deep Learning/1722433328418.pdf\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nUntracked files:\n  (use \"git add \u003cfile\u003e...\" to include in what will be committed)\n\tDeep Learning/172243332841.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/172243332841.pdf\"\"\nPushing changes to branch 'main'...\nEverything up-to-date\nAll changes have been committed and pushed.","recorded":"2025-01-08 17:59:32.891861436","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Check if the file is a directory (based on the status code)\n  if [ -d \"$file\" ]; then\n    continue\n  fi\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: $file with status: $status\"\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files\n      commit_message=\"create $file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      ;;\n    \"R\") # Renamed files\n      old_file=$(echo \"$line\" | awk '{print $2}')\n      new_file=$(echo \"$line\" | awk '{print $3}')\n      commit_message=\"rename $old_file to $new_file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      ;;\n  esac\n\n  # Stage the change\n  if [ \"$status\" = \"D\" ]; then\n    git rm -- \"$file\" \u0026\u003e/dev/null\n  else\n    git add -- \"$file\" \u0026\u003e/dev/null\n  fi\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" || { echo \"Commit failed for file: \\\"$file\\\"\"; continue; }\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to branch '$branch'...\"\ngit push origin \"$branch\"\n\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 17:59:13.872696444","filePath":"null","pinned":false},{"value":"git status --porcelain\n D \"Deep Learning/1722433328418.pdf\"\n M \"Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\"\n M \"Deep Learning/EAAI-24-9693.pdf\"\n M \"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"\n?? \"Deep Learning/172243332841.pdf\"","recorded":"2025-01-08 17:58:45.106979519","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  if [ -z \"$file\" ]; then\n    continue\n  fi\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: $file with status: $status\"\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files\n      commit_message=\"create $file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      ;;\n    \"R\") # Renamed files\n      old_file=$(echo \"$line\" | awk '{print $2}')\n      new_file=$(echo \"$line\" | awk '{print $3}')\n      commit_message=\"rename $old_file to $new_file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      ;;\n  esac\n\n  # Stage the change\n  if [ \"$status\" = \"D\" ]; then\n    git rm -- \"$file\" \u0026\u003e/dev/null\n  else\n    git add -- \"$file\" \u0026\u003e/dev/null\n  fi\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" || { echo \"Commit failed for file: \\\"$file\\\"\"; continue; }\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to branch '$branch'...\"\ngit push origin \"$branch\"\n\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 17:57:17.710972966","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  if [ -z \"$file\" ]; then\n    continue\n  fi\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: \\\"$file\\\" with status: $status\"\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files\n      commit_message=\"create $file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      ;;\n    \"R\") # Renamed files\n      old_file=$(echo \"$line\" | awk '{print $2}')\n      new_file=$(echo \"$line\" | awk '{print $3}')\n      commit_message=\"rename $old_file to $new_file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      ;;\n  esac\n\n  # Stage the change\n  if [ \"$status\" = \"D\" ]; then\n    git rm -- \"$file\" \u0026\u003e/dev/null\n  else\n    git add -- \"$file\" \u0026\u003e/dev/null\n  fi\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" || { echo \"Commit failed for file: \\\"$file\\\"\"; continue; }\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to branch '$branch'...\"\ngit push origin \"$branch\"\n\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 17:55:50.182905962","filePath":"null","pinned":false},{"value":"Enter the Git repository path: .\nEnter branch to push changes (default: main): \nProcessing changes...\nProcessing file: \"\"Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\"\" with status: M\nCommitting: \"update \"Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\"\"\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\"\"\nProcessing file: \"\"Deep Learning/EAAI-24-9693.pdf\"\" with status: M\nCommitting: \"update \"Deep Learning/EAAI-24-9693.pdf\"\"\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/EAAI-24-9693.pdf\"\"\nProcessing file: \"\"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"\" with status: M\nCommitting: \"update \"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"\"\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"\"\nPushing changes to branch 'main'...\nEverything up-to-date\nAll changes have been committed and pushed.","recorded":"2025-01-08 17:55:24.102999023","filePath":"null","pinned":false},{"value":"ate with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\"\"\nProcessing file: \"\"Deep Learning/EAAI-24-9693.pdf\"\" with status: M\nCommitting: \"update \"Deep Learning/EAAI-24-9693.pdf\"\"\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/EAAI-24-9693.pdf\"\"\nProcessing file: \"\"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"\" with status: M\nCommitting: \"update \"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"\"\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"\"\nPushing changes to branch 'main'...\nEverything up-to-date\nAll changes have been committed and pushed.","recorded":"2025-01-08 17:55:08.343065177","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  if [ -z \"$file\" ]; then\n    continue\n  fi\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files\n      commit_message=\"create $file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      ;;\n    \"R\") # Renamed files\n      old_file=$(echo \"$line\" | awk '{print $2}')\n      new_file=$(echo \"$line\" | awk '{print $3}')\n      commit_message=\"rename $old_file to $new_file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      ;;\n  esac\n\n  # Stage the change\n  if [ \"$status\" = \"D\" ]; then\n    git rm -- \"$file\" \u0026\u003e/dev/null\n  else\n    git add -- \"$file\" \u0026\u003e/dev/null\n  fi\n\n  # Commit the change\n  git commit -m \"$commit_message\"\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to branch '$branch'...\"\ngit push origin \"$branch\"\n\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 17:54:48.662666929","filePath":"null","pinned":false},{"value":"git status --porcelain\n M \"Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\"\n M \"Deep Learning/EAAI-24-9693.pdf\"\n M \"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"","recorded":"2025-01-08 17:53:24.210458974","filePath":"null","pinned":false},{"value":"git status --porcelain","recorded":"2025-01-08 17:53:14.943114233","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  if [ -z \"$file\" ]; then\n    continue\n  fi\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files\n      commit_message=\"create $file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      ;;\n    \"R\") # Renamed files\n      old_file=$(echo \"$line\" | awk '{print $2}')\n      new_file=$(echo \"$line\" | awk '{print $3}')\n      commit_message=\"rename $old_file to $new_file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      ;;\n  esac\n\n  # Stage the change\n  git add \"$file\" \u0026\u003e/dev/null || git rm \"$file\" \u0026\u003e/dev/null\n  \n  # Commit the change\n  git commit -m \"$commit_message\"\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to branch '$branch'...\"\ngit push origin \"$branch\"\n\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 17:52:14.451000508","filePath":"null","pinned":false},{"value":"Enter the Git repository path: /mnt/Karna/Git/Books/\nEnter branch to push changes (default: main): \nProcessing changes...\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nPushing changes to branch 'main'...\nEverything up-to-date\nAll changes have been committed and pushed.","recorded":"2025-01-08 17:51:21.331479657","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print $2}')\n\n  if [ -z \"$file\" ]; then\n    continue\n  fi\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files\n      commit_message=\"create $file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      ;;\n    \"R\") # Renamed files\n      old_file=$(echo \"$line\" | awk '{print $3}')\n      commit_message=\"rename $old_file to $file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      ;;\n  esac\n\n  # Stage the change\n  git add \"$file\"\n  \n  # Commit the change\n  git commit -m \"$commit_message\"\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to branch '$branch'...\"\ngit push origin \"$branch\"\n\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 17:50:40.781238444","filePath":"null","pinned":false},{"value":"Enter the Git repository path: /mnt/Karna/Git/Books/\nEnter branch to push changes (default: main): main\nProcessing changes...\nfatal: pathspec '\"Deep' did not match any files\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add/rm \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\tdeleted:    Internships/ISRO/Isro.pdf\n\tdeleted:    Internships/ISRO/application_ISRO.pdf\n\tmodified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nfatal: pathspec '\"Deep' did not match any files\nOn branch main\nYour branch is up to date with 'origin/main'.","recorded":"2025-01-08 17:49:48.601628409","filePath":"null","pinned":false},{"value":"\n#!/bin/bash\n\n# Check if the script is being run in a Git repository\nif [ ! -d \".git\" ]; then\n  echo \"This is not a Git repository. Please run this script inside a Git repo.\"\n  exit 1\nfi\n\n# Prompt for a branch to push changes to\nbranch=$(git rev-parse --abbrev-ref HEAD)\nread -p \"Enter branch to push changes (default: $branch): \" input_branch\nbranch=${input_branch:-$branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print $2}')\n\n  if [ -z \"$file\" ]; then\n    continue\n  fi\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files\n      commit_message=\"create $file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      ;;\n    \"R\") # Renamed files\n      old_file=$(echo \"$line\" | awk '{print $3}')\n      commit_message=\"rename $old_file to $file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      ;;\n  esac\n\n  # Stage the change\n  git add \"$file\"\n  \n  # Commit the change\n  git commit -m \"$commit_message\"\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to $branch...\"\ngit push origin \"$branch\"\n\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 17:47:26.050269367","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Check if the script is being run in a Git repository\nif [ ! -d \".git\" ]; then\n  echo \"This is not a Git repository. Please run this script inside a Git repo.\"\n  exit 1\nfi\n\n# Prompt for a branch to push changes to\nbranch=$(git rev-parse --abbrev-ref HEAD)\nread -p \"Enter branch to push changes (default: $branch): \" input_branch\nbranch=${input_branch:-$branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print $2}')\n\n  if [ -z \"$file\" ]; then\n    continue\n  fi\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files\n      commit_message=\"create $file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      ;;\n    \"R\") # Renamed files\n      old_file=$(echo \"$line\" | awk '{print $3}')\n      commit_message=\"rename $old_file to $file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      ;;\n  esac\n\n  # Stage the change\n  git add \"$file\"\n  \n  # Commit the change\n  git commit -m \"$commit_message\"\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to $branch...\"\ngit push origin \"$branch\"\n\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 17:45:28.711281005","filePath":"null","pinned":false},{"value":"git-sizer","recorded":"2025-01-08 17:40:55.115008638","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/install.sh","recorded":"2025-01-08 17:36:04.106441008","filePath":"null","pinned":false},{"value":"# Stow configuration based on username\n    if [ \"$(whoami)\" == \"karna\" ]; then\n      stow_folder=\"ytfzf_karna\"\n    else\n      stow_folder=\"ytfzf\"\n    fi\n\n    # Apply the stow configuration\n    cd ~/dotfiles\n    stow \"$stow_folder\"","recorded":"2025-01-08 17:33:25.958012967","filePath":"null","pinned":false},{"value":"    ;;\n","recorded":"2025-01-08 17:33:12.276477782","filePath":"null","pinned":false},{"value":"    dialog --msgbox \"ytfzf configuration ($stow_folder) has been set up.\" 10 50\n","recorded":"2025-01-08 17:33:11.824314283","filePath":"null","pinned":false},{"value":"  \"ytfzf\")\n    echo \"Installing ytfzf...\"\n    paru -S --noconfirm --needed ytfzf-git","recorded":"2025-01-08 17:33:05.731563246","filePath":"null","pinned":false},{"value":"  \"ytfzf\")\n    echo \"Installing ytfzf...\"\n    paru -S --noconfirm --needed ytfzf-git\n\n    # Stow configuration based on username\n    if [ \"$(whoami)\" == \"karna\" ]; then\n      stow_folder=\"ytfzf_karna\"\n    else\n      stow_folder=\"ytfzf\"\n    fi\n\n    # Apply the stow configuration\n    cd ~/dotfiles\n    stow \"$stow_folder\"\n    dialog --msgbox \"ytfzf configuration ($stow_folder) has been set up.\" 10 50\n    ;;\n","recorded":"2025-01-08 17:33:00.816667086","filePath":"null","pinned":false},{"value":"#!/bin/bash\n","recorded":"2025-01-08 17:30:35.587065522","filePath":"null","pinned":false},{"value":"echo \"Setting up Hyprland...\"\n\n# Ask the user if they want to install Hyprland\ndialog --title \"Install Hyprland?\" \\\n  --yesno \"Would you like to install Hyprland (a dynamic Wayland compositor)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Hyprland installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Hyprland installation will begin now.\" 10 50\nfi\n\nsudo pacman -S kitty system-config-printer hyprpicker hyprlock chafa hypridle waybar wl-clipboard speech-dispatcher hyprpaper brightnessctl cmake meson cpio grim slurp wtype wf-recorder swaync\n\nparu -S wlrobs-hg hyprland-git xdg-desktop-portal-hyprland-git clipse-bin hyde-cli-git wlogout hyprshot-git hyprland-qtutils\n\nsudo cp ~/dotfiles/Extras/Extras/nvim.desktop /usr/share/applications/\n\n# Set up Hyprland configuration\necho \"Configuring Hyprland...\"\n\n# Create the configuration file if it doesn't exist\nif [ ! -f \"$HOME/.config/hypr/hyprland.conf\" ]; then\n  cd ~/dotfiles\n  stow Hyprland\n  dialog --msgbox \"Hyprland configuration has been set up.\" 10 50\nelse\n  dialog --msgbox \"Hyprland configuration file already exists.\" 10 50\nfi\n\n# Inform the user that installation is complete\ndialog --msgbox \"Hyprland has been installed and configured. Please restart your system to start using Hyprland.\" 10 50\n\nclear","recorded":"2025-01-08 17:30:34.355450950","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Hyprland...\"\n\n# Ask the user if they want to install Hyprland\ndialog --title \"Install Hyprland?\" \\\n  --yesno \"Would you like to install Hyprland (a dynamic Wayland compositor)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Hyprland installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Hyprland installation will begin now.\" 10 50\nfi\n\n# Install Hyprland and related packages\nsudo pacman -S --noconfirm kitty system-config-printer hyprpicker hyprlock chafa hypridle waybar wl-clipboard speech-dispatcher hyprpaper brightnessctl cmake meson cpio grim slurp wtype wf-recorder swaync\n\nparu -S --noconfirm wlrobs-hg hyprland-git xdg-desktop-portal-hyprland-git clipse-bin hyde-cli-git wlogout hyprshot-git hyprland-qtutils\n\nsudo cp ~/dotfiles/Extras/Extras/nvim.desktop /usr/share/applications/\n\n# Set up Hyprland configuration\necho \"Configuring Hyprland...\"\n\n# Check if the username is \"karna\"\nif [ \"$(whoami)\" == \"karna\" ]; then\n  stow_folder=\"Hyprland\"\nelse\n  stow_folder=\"Hypr_ALL\"\nfi\n\n# Create the configuration file if it doesn't exist\nif [ ! -f \"$HOME/.config/hypr/hyprland.conf\" ]; then\n  cd ~/dotfiles\n  stow \"$stow_folder\"\n  dialog --msgbox \"Hyprland configuration ($stow_folder) has been set up.\" 10 50\nelse\n  dialog --msgbox \"Hyprland configuration file already exists.\" 10 50\nfi\n\n# Inform the user that installation is complete\ndialog --msgbox \"Hyprland has been installed and configured. Please restart your system to start using Hyprland.\" 10 50\n\nclear\n","recorded":"2025-01-08 17:30:29.277518688","filePath":"null","pinned":false},{"value":"dialog --title \"Install Extras?\" \\\n  --yesno \"Choose to Install my configs?\" 10 60\n\n","recorded":"2025-01-08 17:25:22.417366903","filePath":"null","pinned":false},{"value":"  echo \"User is karna. No files were stowed.\"\n","recorded":"2025-01-08 17:24:53.345836183","filePath":"null","pinned":false},{"value":"dialog --msgbox \"Extras have been installed.\" 10 50","recorded":"2025-01-08 17:24:39.964791193","filePath":"null","pinned":false},{"value":"echo \"Setting Extra Packages for System...\" \u0026\u0026 sleep 1\n\nsudo npm i -g bash-language-server\n\ncd ~/dotfiles/\n\nrm ~/.bashrc ~/.zshrc\n\ndialog --title \"Install Extras?\" \\\n  --yesno \"Choose to Install my configs?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Copy all configs from dots but before using change username from mine to yours...\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Extras installation will begin now.\" 10 50\nfi\n\nstow bashrc BTOP cava dunst DWMScripts fastfetch flameshot gtk-2 gtk-3 Hypr_ALL Kvantum mpd mpv ncmpcpp newsboat NWG pandoc pavucontrol qt6ct qutebrowser ranger redyt screensaver sxiv Templates Thunar XFCEPic xsettingsd ytfzf zathura zsh  \n\n# Show confirmation message\ndialog --msgbox \"Extras have been installed.\" 10 50\n\nclear","recorded":"2025-01-08 17:24:21.451585956","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting Extra Packages for System...\" \u0026\u0026 sleep 1\n\nsudo npm i -g bash-language-server\n\ncd ~/dotfiles/\n\nrm ~/.bashrc ~/.zshrc\n\ndialog --title \"Install Extras?\" \\\n  --yesno \"Choose to Install my configs?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Copy all configs from dots but before using change username from mine to yours...\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Extras installation will begin now.\" 10 50\nfi\n\n# Check if the username is \"karna\"\nif [ \"$(whoami)\" != \"karna\" ]; then\n  stow bashrc BTOP cava dunst DWMScripts fastfetch flameshot gtk-2 gtk-3 Hypr_ALL Kvantum mpd mpv ncmpcpp newsboat NWG pandoc pavucontrol qt6ct qutebrowser ranger redyt screensaver sxiv Templates Thunar XFCEPic xsettingsd ytfzf zathura zsh\n  \n  # Show confirmation message\n  dialog --msgbox \"Extras have been installed.\" 10 50\nelse\n  echo \"User is karna. No files were stowed.\"\nfi\n\nclear\n","recorded":"2025-01-08 17:24:16.974466607","filePath":"null","pinned":false},{"value":"  dialog --msgbox \"user not.\" 10 50\n","recorded":"2025-01-08 17:23:37.853116330","filePath":"null","pinned":false},{"value":"MB-Plum-Suru-GLOW_1.9.3.zip","recorded":"2025-01-08 17:18:56.811243002","filePath":"null","pinned":false},{"value":"MB-Cherry-Suru-GLOW_1.9.3.zip","recorded":"2025-01-08 17:18:48.788169747","filePath":"null","pinned":false},{"value":"    cd ~/dotfiles/\n","recorded":"2025-01-08 17:10:55.931167185","filePath":"null","pinned":false},{"value":"    stow ytfzf\n","recorded":"2025-01-08 17:10:55.335069931","filePath":"null","pinned":false},{"value":"# --------------------------------------------------------------------------------------\n\ncd ~/dotfiles/Extras/Extras/\n\nsudo cp etc/nanorc /etc/nanorc\nsudo cp etc/bash.bashrc /etc/bash.bashrc\nsudo cp etc/DIR_COLORS /etc/DIR_COLORS\nsudo cp etc/environment /etc/environment\nsudo cp etc/mpd.conf /etc/mpd.conf\n\ncp archcraft-dwm.zsh-theme ~/.oh-my-zsh/themes/archcraft-dwm.zsh-theme\n\n# Setup kaggle JSON and wakatime files using ccrypt\n\n# --------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 17:07:48.108032081","filePath":"null","pinned":false},{"value":"echo \"All done! Please reboot your system.\"\n","recorded":"2025-01-08 17:07:32.295358982","filePath":"null","pinned":false},{"value":"# -------------------------------------------------------------------------------------\n\necho \"Setting Extra Packages for System...\" \u0026\u0026 sleep 1\n\nsudo npm i -g bash-language-server\n\ncd ~/dotfiles/\n\nrm ~/.bashrc ~/.zshrc\n\ndialog --title \"Install Extras?\" \\\n  --yesno \"Please Press No since these are my installs(You can copy configs from dots)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Copy all configs from dots but before using change username from mine to yours...\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Extras installation will begin now.\" 10 50\nfi\n\nstow anipy-cli bashrc BTOP cava dunst face fastfetch DWMScripts flameshot gtk-3 Kvantum latexmkrc libreoffice mpd mpv ncmpcpp newsboat nvim NWG octave pandoc pavucontrol picom Profile qt6ct qutebrowser ranger redyt rofi screenlayout screensaver starship XFCEPic xsettingsd zathura zsh\n\n# Show confirmation message\ndialog --msgbox \"Extras have been installed.\" 10 50\n\nclear","recorded":"2025-01-08 17:06:44.363661597","filePath":"null","pinned":false},{"value":"echo \"Setting up Zsh...\"\n\n# Ask the user if they want to install Zsh\ndialog --title \"Install and Set Up Zsh?\" \\\n  --yesno \"Would you like to install Zsh and set it as your default shell?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Zsh installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Zsh installation will begin now.\" 10 50\n\n  # Install Zsh if not already installed\n  sudo pacman -S --noconfirm zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting\n\n  # Change the default shell to Zsh\n  chsh -s /bin/zsh\n\n  sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n\n  # Check if the installation was successful and prompt to restart the terminal\n  dialog --msgbox \"Zsh has been installed and set as your default shell. Please restart your terminal to apply the changes.\" 10 50\nfi\n\nclear","recorded":"2025-01-08 17:05:33.445841924","filePath":"null","pinned":false},{"value":"# choice yes or no\n","recorded":"2025-01-08 17:05:22.428515107","filePath":"null","pinned":false},{"value":"echo \"Setting up SDDM (Simple Desktop Display Manager)...\"\n\n# Install SDDM\necho \"Installing SDDM...\"\n\nsudo pacman -S --noconfirm sddm qt6-5compat qt6-declarative qt6-svg\n\necho \"Enabling SDDM to start at boot...\"\nsudo systemctl enable sddm.service --now\n\nsudo cp ~/dotfiles/Extras/Extras/usr/share/sddm/themes/simple-sddm/ /usr/share/sddm/themes\n\nsudo cp etc/sddm.conf /etc/sddm.conf\n\ncd ~/dotfiles/\n\n# Show confirmation message\ndialog --msgbox \"SDDM has been installed and enabled to start at boot.\" 10 50\n\nclear\n\n# --------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 16:47:27.634376443","filePath":"null","pinned":false},{"value":"echo \"Setting up GRUB theme...\"\n\n# Ask if the user wants to set up a GRUB theme\ndialog --title \"Install GRUB theme?\" \\\n  --yesno \"Would you like to install a GRUB theme?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"GRUB theme setup skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"GRUB theme setup will begin now.\" 10 50\nfi\n\nsudo cp ~/dotfiles/Extras/Extras/boot/grub/themes/SekiroShadow/ /boot/grub/themes/\n\n# Enable the GRUB theme\necho \"Setting GRUB theme...\"\necho 'GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"' | sudo tee -a /etc/default/grub\n\necho \"Enabling os-prober in GRUB configuration...\"\necho 'GRUB_DISABLE_OS_PROBER=\"false\"' | sudo tee -a /etc/default/grub\n\n# Regenerate GRUB config\necho \"Regenerating GRUB configuration...\"\nsudo grub-mkconfig -o /boot/grub/grub.cfg\n\ndialog --msgbox \"GRUB theme setup is complete and GRUB config has been updated.\" 10 50\nclear\n\n# --------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 16:46:55.327647897","filePath":"null","pinned":false},{"value":"echo \"Installing PIP Packages...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install my PIP packages?\" \\\n  --yesno \"Would you like to install my PIP Packages?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"PIP packages installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"PIP packages installation will begin now.\" 10 50\n\n  bash\n\n  pip install pynvim numpy pandas matplotlib seaborn scikit-learn jupyterlab ipykernel ipywidgets tensorflow python-prctl inotify-simple psutil opencv-python keras mov-cli-youtube mov-cli mov-cli-test otaku-watcher film-central daemon jupyterlab_wakatime\n\n  pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu # pytorch cpu version\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"PIP Packages has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear\n\n# --------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 16:31:42.961515724","filePath":"null","pinned":false},{"value":"  zsh\n","recorded":"2025-01-08 16:29:43.699471624","filePath":"null","pinned":false},{"value":"echo \"Setting up Ollama...\"\n\n# Ask the user if they want to install Ollama\ndialog --title \"Install Ollama?\" \\\n  --yesno \"Would you like to install Ollama (a tool to run large language models locally)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Ollama installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Ollama installation will begin now.\" 10 50\nfi\n\n# Check if Ollama is available through the AUR or if manual installation is needed\n# You can install Ollama from their official site or via AUR\n# We will use AUR (Arch User Repository) to install it using an AUR helper like paru.\n\n# Install Ollama using paru (or an AUR helper of your choice)\nif ! command -v ollama \u0026\u003e/dev/null; then\n  echo \"Ollama not found, installing Ollama from AUR...\"\n\n  # Install Ollama from the AUR using paru (if not already installed)\n  paru -S --noconfirm ollama\n\n  ollama serve\n  ollama pull mistral\n  ollama pull gemma:7b\n\n  # Inform the user that Ollama has been installed\n  dialog --msgbox \"Ollama has been installed. You can now use it to run local large language models.\" 10 50\nelse\n  dialog --msgbox \"Ollama is already installed on your system.\" 10 50\nfi\n\nclear\n\n# --------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 16:26:08.890051913","filePath":"null","pinned":false},{"value":"echo \"Setting up dwm...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install dwm?\" \\\n  --yesno \"Would you like to install dwm (Dynamic Window Manager)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"dwm installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"dwm installation will begin now.\" 10 50\n\n  stow ~/dotfiles/suckless/\n\n  cd ~/.config/dwm \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/slstatus \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/st \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/.config/dmenu \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/dotfiles/Extras/Extras/waldl-master/ \u0026\u0026 sudo make install \u0026\u0026 cd ~/dotfiles\n\n  sudo mkdir /usr/share/xsessions/\n  sudo cp ~/dotfiles/Extras/Extras/usr/share/xsessions/dwm.desktop /usr/share/xsessions\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"dwm has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear\n\n# --------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 16:25:54.161495877","filePath":"null","pinned":false},{"value":"echo \"Setting up Hyprland...\"\n\n# Ask the user if they want to install Hyprland\ndialog --title \"Install Hyprland?\" \\\n  --yesno \"Would you like to install Hyprland (a dynamic Wayland compositor)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Hyprland installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Hyprland installation will begin now.\" 10 50\nfi\n\nsudo pacman -S kitty system-config-printer hyprpicker hyprlock chafa hypridle waybar wl-clipboard speech-dispatcher hyprpaper brightnessctl cmake meson cpio grim slurp wtype wf-recorder swaync\n\nparu -S wlrobs-hg hyprland-git xdg-desktop-portal-hyprland-git clipse-bin hyde-cli-git wlogout hyprshot-git hyprland-qtutils\n\nsudo cp ~/dotfiles/Extras/Extras/nvim.desktop /usr/share/applications/\n\n# Set up Hyprland configuration\necho \"Configuring Hyprland...\"\n\n# Create the configuration file if it doesn't exist\nif [ ! -f \"$HOME/.config/hypr/hyprland.conf\" ]; then\n  cd ~/dotfiles\n  stow Hyprland\n  dialog --msgbox \"Hyprland configuration has been set up.\" 10 50\nelse\n  dialog --msgbox \"Hyprland configuration file already exists.\" 10 50\nfi\n\n# Inform the user that installation is complete\ndialog --msgbox \"Hyprland has been installed and configured. Please restart your system to start using Hyprland.\" 10 50\n\nclear\n\n# -------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 16:25:38.697057829","filePath":"null","pinned":false},{"value":"echo \"Setting up Fonts...\" \u0026\u0026 sleep 1\n\nmkdir -p ~/.local/share/fonts\ncd ~/.local/share/fonts\n\ngit clone https://github.com/Chaganti-Reddy/my-fonts.git\n\ncd my-fonts\n\nrm -rf .git/\n\ncd ~/dotfiles/\n\necho \"Fonts have been installed...\"\n\n# --------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 16:24:18.602345901","filePath":"null","pinned":false},{"value":"echo \"Setting up additional tools and packages...\"\n\n# Display checklist with a single column (scrollable) for additional tools using dialog\nextra_tools_choices=$(dialog --title \"Select Extra Tools to Install\" \\\n  --checklist \"Choose the extra tools and packages you want to install:\" 20 60 20 \\\n  \"Ani-Cli\" \"\" OFF \\\n  \"Ani-Cli-PY\" \"\" OFF \\\n  \"ytfzf\" \"\" OFF \\\n  \"Zathura\" \"\" OFF \\\n  \"Evince\" \"\" OFF \\\n  \"Okular\" \"\" OFF \\\n  \"Foxit-Reader\" \"\" OFF \\\n  \"Master-PDF-Editor\" \"\" OFF \\\n  \"MuPDF\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$extra_tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $extra_tools_choices; do\n  case $app in\n  \"Ani-Cli\")\n    echo \"Installing ani-cli...\"\n    paru -S --noconfirm --needed ani-cli-git\n    ;;\n  \"Ani-Cli-PY\")\n    echo \"Installing ani-cli python version...\"\n    pip install anipy-cli\n    ;;\n  \"ytfzf\")\n    echo \"Installing ytfzf...\"\n    paru -S --noconfirm --needed ytfzf-git\n    ;;\n  \"Zathura\")\n    echo \"Installing Zathura...\"\n    sudo pacman -S zathura zathura-pdf-mupdf zathura-djvu zathura-ps zathura-cb --noconfirm\n    ;;\n  \"Evince\")\n    echo \"Installing Evince...\"\n    sudo pacman -S --noconfirm evince\n    ;;\n  \"Okular\")\n    echo \"Installing Okular...\"\n    sudo pacman -S --noconfirm okular\n    ;;\n  \"Foxit-Reader\")\n    echo \"Installing Foxit Reader...\"\n    paru -S --noconfirm foxitreader\n    ;;\n  \"Master-PDF-Editor\")\n    echo \"Installing Master PDF Editor...\"\n    paru -S --noconfirm masterpdfeditor\n    ;;\n  \"MuPDF\")\n    echo \"Installing MuPDF...\"\n    sudo pacman -S --noconfirm mupdf\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected extra tools and packages have been installed.\" 10 50\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up MariaDB...\"\n\n# Ask the user if they want to install MariaDB\ndialog --title \"Install MariaDB?\" \\\n  --yesno \"Would you like to install MariaDB (a relational database management system)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"MariaDB installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"MariaDB installation will begin now.\" 10 50\n\n  sudo pacman -S mariadb --noconfirm\n  sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql\n  sudo systemctl enable --now mariadb\n  sudo mariadb-secure-installation\n\n  # Inform the user that MariaDB has been installed and configured\n  dialog --msgbox \"MariaDB has been installed and secured. You can now use it for your database needs.\" 10 50\nfi\n\nclear\n\n# -------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 16:22:37.620072861","filePath":"null","pinned":false},{"value":"# -------------------------------------------------------------------------------------\n\necho \"Setting up KVM...\"\n\n# Ask the user if they want to install Miniconda\ndialog --title \"Install KVM QEMU?\" \\\n  --yesno \"Would you like to install KVM QEMU Virtual Machine\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"KVM installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"KVM installation will begin now.\" 10 50\n\n  sudo pacman -S qemu-full qemu-img libvirt virt-install virt-manager virt-viewer spice-vdagent edk2-ovmf dnsmasq swtpm guestfs-tools libosinfo tuned\n  sudo systemctl enable --now libvirtd.service\n  sudo usermod -aG libvirt \"$USER\"\n  sudo virsh net-autostart default\n\n  sudo modprobe -r kvm_intel\n  sudo modprobe kvm_intel nested=1\n\n  dialog --msgbox \"QEMU installation completed.\" 10 50\nfi\n\nclear","recorded":"2025-01-08 16:18:54.103822322","filePath":"null","pinned":false},{"value":"# -------------------------------------------------------------------------------------\n\necho \"Setting up torrent and remote working applications...\"\n\n# Display checklist for torrent and remote working applications\napps=$(whiptail --title \"Select Applications to Install\" \\\n  --checklist \"Choose the applications you want to install:\" 20 60 8 \\\n  \"torrent-cli\" \"\" OFF \\\n  \"qBittorrent\" \"\" OFF \\\n  \"Transmission\" \"\" OFF \\\n  \"Remmina\" \"\" OFF \\\n  \"VNC\" \"\" OFF \\\n  \"TeamViewer\" \"\" OFF \\\n  \"AnyDesk\" \"\" OFF \\\n  \"xrdp\" \"\" OFF \\\n  \"openvpn\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$apps\" ]; then\n  whiptail --msgbox \"No applications selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected applications and install them\nfor app in $apps; do\n  case $app in\n  \"torrent-cli\")\n    echo \"Installing torrent-cli...\"\n    paru -S --noconfirm --needed webtorrent-cli webtorrent-mpv-hook peerflix\n    ;;\n  \"qBittorrent\")\n    echo \"Installing qBittorrent...\"\n    sudo pacman -S --noconfirm qbittorrent\n    ;;\n  \"Transmission\")\n    echo \"Installing Transmission...\"\n    sudo pacman -S --noconfirm transmission-qt\n    ;;\n  \"Remmina\")\n    echo \"Installing Remmina (Remote Desktop Client)...\"\n    sudo pacman -S --noconfirm remmina\n    ;;\n  \"VNC\")\n    echo \"Installing VNC Server...\"\n    sudo pacman -S --noconfirm tigervnc\n    ;;\n  \"TeamViewer\")\n    echo \"Installing TeamViewer...\"\n    sudo pacman -S --noconfirm teamviewer\n    ;;\n  \"AnyDesk\")\n    echo \"Installing AnyDesk...\"\n    sudo pacman -S --noconfirm anydesk\n    ;;\n  \"xrdp\")\n    echo \"Installing xrdp (Remote Desktop Protocol)...\"\n    sudo pacman -S --noconfirm xrdp\n    ;;\n  \"openvpn\")\n    echo \"Installing OpenVPN...\"\n    sudo pacman -S --noconfirm openvpn\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected torrents have been installed.\" 10 50\n\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up development tools, office tools, communication tools, and multimedia tools...\"\n\n# Display checklist with a single column (scrollable) for all tools using dialog\ntools_choices=$(dialog --title \"Select Tools to Install\" \\\n  --checklist \"Choose the tools you want to install:\" 20 60 18 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Telegram\" \"\" OFF \\\n  \"LibreOffice\" \"\" OFF \\\n  \"OnlyOffice\" \"\" OFF \\\n  \"Skype\" \"\" OFF \\\n  \"Slack\" \"\" OFF \\\n  \"Zoom\" \"\" OFF \\\n  \"Blender\" \"\" OFF \\\n  \"Octave\" \"\" OFF \\\n  \"OBS-Studio\" \"\" OFF \\\n  \"Inkscape\" \"\" OFF \\\n  \"GIMP\" \"\" OFF \\\n  \"VLC\" \"\" OFF \\\n  \"Audacity\" \"\" OFF \\\n  \"Krita\" \"\" OFF \\\n  \"Shotcut\" \"\" OFF \\\n  \"Steam\" \"\" OFF \\\n  \"Minecraft\" \"\" OFF \\\n  \"YouTUI\" \"TUI YT Music(Preferred)\" OFF \\\n  \"YTerMusic\" \"TUI YT Music\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $tools_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker \"$USER\"\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    paru -S kind-bin\n    curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Telegram\")\n    echo \"Installing Telegram...\"\n    paru -S --noconfirm telegram-desktop-bin\n    ;;\n  \"LibreOffice\")\n    echo \"Installing LibreOffice...\"\n    sudo pacman -S --noconfirm libreoffice-fresh\n    ;;\n  \"OnlyOffice\")\n    echo \"Installing OnlyOffice...\"\n    paru -S --noconfirm onlyoffice-bin\n    ;;\n  \"Skype\")\n    echo \"Installing Skype...\"\n    paru -S --noconfirm skypeforlinux-bin\n    ;;\n  \"Slack\")\n    echo \"Installing Slack...\"\n    paru -S --noconfirm slack-desktop\n    ;;\n  \"Zoom\")\n    echo \"Installing Zoom...\"\n    paru -S --noconfirm zoom\n    ;;\n  \"Blender\")\n    echo \"Installing Blender...\"\n    sudo pacman -S --noconfirm blender\n    ;;\n  \"Octave\")\n    echo \"Installing Octave...\"\n    sudo pacman -S --noconfirm octave\n    ;;\n  \"OBS-Studio\")\n    echo \"Installing OBS Studio...\"\n    sudo pacman -S --noconfirm obs-studio\n    ;;\n  \"Inkscape\")\n    echo \"Installing Inkscape...\"\n    sudo pacman -S --noconfirm inkscape\n    ;;\n  \"GIMP\")\n    echo \"Installing GIMP...\"\n    sudo pacman -S --noconfirm gimp\n    ;;\n  \"VLC\")\n    echo \"Installing VLC...\"\n    sudo pacman -S --noconfirm vlc\n    ;;\n  \"Audacity\")\n    echo \"Installing Audacity...\"\n    sudo pacman -S --noconfirm audacity\n    ;;\n  \"Krita\")\n    echo \"Installing Krita...\"\n    sudo pacman -S --noconfirm krita\n    ;;\n  \"Shotcut\")\n    echo \"Installing Shotcut...\"\n    sudo pacman -S --noconfirm shotcut\n    ;;\n  \"Steam\")\n    echo \"Installing Steam...\"\n    paru -S --noconfirm steam\n    ;;\n  \"Minecraft\")\n    echo \"Installing Minecraft...\"\n    paru -S --noconfirm minecraft-launcher\n    ;;\n  \"YouTUI\")\n    echo \"Installing YouTUI...\"\n    cargo install youtui\n    ;;\n  \"YTerMusic\")\n    echo \"Installing YTerMusic...\"\n    cargo install ytermusic\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected tools have been installed.\" 10 50\n\nclear\n\n# -------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 16:17:54.456563953","filePath":"null","pinned":false},{"value":"# -------------------------------------------------------------------------------------\n\necho \"Setting up Miniconda...\"\n\n# Ask the user if they want to install Miniconda\ndialog --title \"Install Miniconda?\" \\\n  --yesno \"Would you like to install Miniconda? (Recommended for Python and Data Science)\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Miniconda installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Miniconda installation will begin now.\" 10 50\n\n  # Download Miniconda installer\n  wget https://repo.anaconda.com/miniconda/Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Run the installer\n  bash Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Remove the installer after installation\n  rm Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  dialog --msgbox \"Miniconda installation completed.\" 10 50\nfi\n\nclear","recorded":"2025-01-08 16:16:50.718866757","filePath":"null","pinned":false},{"value":"echo \"Installing main packages and applications that I personally use the most...\" \u0026\u0026 sleep 1\n\n# Function to display the browser selection menu using dialog\ninstall_browser() {\n  # Display the checklist menu\n  choices=$(dialog --title \"Browser Selection\" \\\n    --checklist \"Select the browsers you want to install:\" 15 50 6 \\\n    \"Zen-Browser\" \"\" OFF \\\n    \"Firefox\" \"\" OFF \\\n    \"Chromium\" \"\" OFF \\\n    \"Vivaldi\" \"\" OFF \\\n    \"qutebrowser\" \"\" OFF \\\n    \"Brave\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\n  # Check if the user pressed Cancel\n  if [ $? -ne 0 ]; then\n    echo \"No selection made. Exiting.\"\n    exit 1\n  fi\n\n  # Process the selected options\n  for choice in $choices; do\n    case $choice in\n    \"Zen-Browser\")\n      echo \"Installing Zen-Browser...\"\n      paru -S --noconfirm --needed zen-browser-bin\n      # Video Download Helper\n      curl -sSLf https://github.com/aclap-dev/vdhcoapp/releases/latest/download/install.sh | bash\n      ;;\n    \"Firefox\")\n      echo \"Installing Firefox...\"\n      sudo pacman -S --noconfirm firefox\n      ;;\n    \"Chromium\")\n      echo \"Installing Chromium...\"\n      sudo pacman -S --noconfirm chromium\n      ;;\n    \"Vivaldi\")\n      echo \"Installing Vivaldi...\"\n      paru -S --noconfirm vivaldi\n      ;;\n    \"qutebrowser\")\n      echo \"Installing qutebrowser...\"\n      sudo pacman -S --noconfirm qutebrowser\n      ;;\n    \"Brave\")\n      echo \"Installing Brave...\"\n      paru -S --noconfirm brave-bin\n      ;;\n    *)\n      echo \"Invalid choice: $choice\"\n      ;;\n    esac\n  done\n}\n\n# Call the browser installation function\ninstall_browser\n\ndialog --msgbox \"Selected browsers have been installed.\" 10 50\n\nclear","recorded":"2025-01-08 16:16:27.286255893","filePath":"null","pinned":false},{"value":"# --------------------------------------------------------------------------------------\n\necho \"Setting up Git configuration...\"\n\n# Ask user whether to proceed with Git setup\nif ! whiptail --title \"Git Configuration Setup\" --yesno \"Do you want to proceed with setting up Git configuration?\" 10 60; then\n  echo \"Git setup canceled. Exiting.\"\n  exit 1\nfi\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n  whiptail --msgbox \"Git username setup canceled or empty. Exiting.\" 10 50\n  exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n  whiptail --msgbox \"Git email setup canceled or empty. Exiting.\" 10 50\n  exit 1\nfi\n\n# Display confirmation dialog\nif whiptail --yesno \"Please confirm the Git configuration:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60; then\n  # Set Git configuration if confirmed\n  git config --global user.name \"$git_username\"\n  git config --global user.email \"$git_email\"\n  whiptail --msgbox \"Git has been successfully configured:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\nelse\n  whiptail --msgbox \"Git configuration canceled. No changes were made.\" 10 50\n  exit 1\nfi\n\n# -------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 16:15:46.506227928","filePath":"null","pinned":false},{"value":"# Install base-devel and required packages\necho \"Installing dependencies..\" \u0026\u0026 sleep 2\n\nsudo pacman -S --noconfirm --needed base-devel intel-ucode vim zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting bash-completion openssh wget curl btop fastfetch bat exa fd ripgrep fzf stow stylua tar tree time acpilight aria2 unrar unzip bluez bluez-utils brightnessctl xfsprogs ntfs-3g clang gcc clipmenu clipnotify inotify-tools psutils dunst e2fsprogs gvfs gvfs-afc gvfs-google gvfs-goa gvfs-gphoto2 gvfs-mtp gvfs-nfs gvfs-onedrive gvfs-smb efibootmgr zoxide gc git-lfs gnome-keyring polkit-gnome pass udiskie gstreamer jq xdotool screenkey xorg-xprop xorg-xinit xf86-video-intel lazygit lolcat sxiv shellcheck net-tools numlockx prettier progress zip rsync trash-cli tlp tlp-rdw neovim feh xorg-xinput xclip xcompmgr xorg-xrandr xorg-xsetroot xsel xwallpaper pandoc starship python-pywal glow xarchiver xfce4-clipman-plugin libguestfs bc xorg-xman man-db man-pages ncdu python-adblock dnsmasq python-pip nwg-look python-prctl vscode-css-languageserver ffmpegthumbnailer lua-language-server pass pinentry gnupg pass-otp zbar xorg-xlsclients xscreensaver os-prober qt5ct pamixer qt5-wayland qt6-wayland parallel shfmt tesseract html-xml-utils cava thunar thunar-archive-plugin thunar-media-tags-plugin thunar-volman thunar-vcs-plugin flameshot playerctl ncmpcpp mpd mpv mpc poppler poppler-glib adobe-source-code-pro-fonts noto-fonts noto-fonts-cjk noto-fonts-emoji ttf-hack ttf-jetbrains-mono ttf-ubuntu-font-family ttf-ubuntu-mono-nerd ttf-ubuntu-nerd ttf-opensans gnu-free-fonts libnewt baobab gnome-disk-utility gparted pavucontrol ranger yad timeshift go hugo hunspell hunspell-en_us imagemagick ueberzug luacheck yt-dlp mlocate nodejs npm translate-shell jdk-openjdk openjdk-doc openjdk-src blueman zenity rofi rofi-emoji rofi-calc newsboat\n\nparu -S --noconfirm --needed base-devel python-psutil preload git-remote-gcrypt ttf-ms-fonts qt6ct-kde ccrypt didyoumean-git arch-wiki-docs material-black-colors-theme apple_cursor kvantum-theme-materia kvantum --noconfirm\n\necho \"Dependencies installed... executing services \u0026 permissions...\" \u0026\u0026 sleep 1\n\nsudo updatedb\nsudo mandb\nsudo systemctl enable --now tlp\nsudo systemctl enable --now bluetooth.service\n\nsudo usermod -aG video \"$USER\"\n\necho \"For VM sharing details https://docs.getutm.app/guest-support/linux/\"\n\n# paru -S material-black-colors-theme apple_cursor kvantum-theme-materia kvantum --noconfirm\n\nclear","recorded":"2025-01-08 16:15:19.330226366","filePath":"null","pinned":false},{"value":"echo \"Checking and removing packages: dolphin, htop, and wofi...\"\n\n# Array of packages to check and remove\npackages=(\"dolphin\" \"htop\" \"wofi\")\n\nfor pkg in \"${packages[@]}\"; do\n  if pacman -Qi \"$pkg\" \u0026\u003e/dev/null; then\n    echo \"$pkg is installed. Removing...\"\n    sudo pacman -Rns --noconfirm \"$pkg\"\n    dialog --msgbox \"$pkg has been removed successfully.\" 10 50\n  else\n    echo \"$pkg is not installed.\"\n  fi\ndone\n\ndialog --msgbox \"Package check and removal process is complete.\" 10 50\n\nclear","recorded":"2025-01-08 16:13:28.023842709","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/crypts","recorded":"2025-01-08 16:10:58.840115647","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/.wakatime.cfg.cpt","recorded":"2025-01-08 16:10:40.200582649","filePath":"null","pinned":false},{"value":"## ML \u0026 DL \nhttps://www.youtube.com/channel/UCXUPKJO5MZQN11PqgIvyuvQ\nhttps://www.youtube.com/channel/UCfzlCWGWYyIQ0aLC5w48gBQ\n\n## GK\nhttps://www.youtube.com/channel/UCHnyfMqiRRG1u-2MsSQLbXA\n\n## Masters\nhttps://www.youtube.com/channel/UCtMsK12pzp5tO4NX1H8E8HQ\n\n## Linux\nhttps://www.youtube.com/channel/UCVls1GmFKf6WlTraIb_IaJg\nhttps://www.youtube.com/channel/UCngn7SVujlvskHRvRKc1cTw\nhttps://www.youtube.com/channel/UCg6gPGh8HU2U01vaFCAsvmQ\n\n## Entertainment \nhttps://www.youtube.com/channel/UCR1I8lG-fhpVuS7s20iTSgA\n\n##Options\nhttps://www.youtube.com/channel/UCqyrm14zcbZw6pdQeHXPF8w\n","recorded":"2025-01-08 16:09:20.213914974","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/ytfzf","recorded":"2025-01-08 16:09:10.124633130","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/BTOP_karna/themes\n/home/karna/dotfiles/BTOP_karna/btop.conf\n/home/karna/dotfiles/BTOP_karna/btop.log","recorded":"2025-01-08 16:05:55.198089945","filePath":"null","pinned":false},{"value":"assets\n","recorded":"2025-01-08 16:05:22.999959998","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/assets/.stow-local-ignore","recorded":"2025-01-08 16:05:18.454504591","filePath":"null","pinned":false},{"value":"\\.screenlayout\n","recorded":"2025-01-08 16:04:46.992214661","filePath":"null","pinned":false},{"value":"-config ~/.config/hypr/rofi/config.rasi","recorded":"2025-01-08 16:02:35.876761323","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/hypr/rofi","recorded":"2025-01-08 16:02:17.403114396","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/rofi","recorded":"2025-01-08 15:57:30.366489090","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/rofi/.config/rofi/bin\n/home/karna/dotfiles/Hyprland/.config/rofi/.config/rofi/themes\n/home/karna/dotfiles/Hyprland/.config/rofi/.config/rofi/config.rasi\n/home/karna/dotfiles/Hyprland/.config/rofi/.config/rofi/powermenu.rasi\n/home/karna/dotfiles/Hyprland/.config/rofi/.config/rofi/powermenu.sh\n/home/karna/dotfiles/Hyprland/.config/rofi/.config/rofi/theme.rasi\n/home/karna/dotfiles/Hyprland/.config/rofi/.config/rofi/wifi-bluetooth-menu.rasi","recorded":"2025-01-08 15:57:20.398111490","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/rofi","recorded":"2025-01-08 15:56:40.501271914","filePath":"null","pinned":false},{"value":"map gk cd /mnt/Karna/\n","recorded":"2025-01-08 15:55:20.016578657","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/ranger","recorded":"2025-01-08 15:54:43.360808508","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/newsboat","recorded":"2025-01-08 15:52:18.792306729","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/myemojis","recorded":"2025-01-08 15:51:28.923764465","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/mpv","recorded":"2025-01-08 15:50:24.483008576","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/ncmpcpp","recorded":"2025-01-08 15:49:36.527373466","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/mpd/.mpd","recorded":"2025-01-08 15:48:44.874731234","filePath":"null","pinned":false},{"value":"    \"action\" : \"sh ~/.dwm/scripts/uptime shutdown \u0026\u0026 systemctl poweroff\",\n","recorded":"2025-01-08 15:45:23.595972174","filePath":"null","pinned":false},{"value":"bind = $mainMod ALT, F, exec, ferdium \u0026\n","recorded":"2025-01-08 15:42:03.225369912","filePath":"null","pinned":false},{"value":"bind = $mainMod SHIFT, W, exec, qutebrowser\n","recorded":"2025-01-08 15:42:00.858396441","filePath":"null","pinned":false},{"value":"bind = $mainMod, O, exec, obsidian\n","recorded":"2025-01-08 15:41:57.731284222","filePath":"null","pinned":false},{"value":"device {\n    name = razer-razer-deathadder-essential-1\n    sensitivity = -0.8\n}\n\ndevice {\n    name = razer-razer-deathadder-essential\n    sensitivity = -0.8\n}\n\ndevice {\n    name = razer-razer-deathadder-essential-keyboard-1\n    sensitivity = -0.8\n}","recorded":"2025-01-08 15:41:45.819639817","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland","recorded":"2025-01-08 15:38:59.534533223","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/gtk-3","recorded":"2025-01-08 15:37:40.442696293","filePath":"null","pinned":false},{"value":"# Migrate GPG Keys from One Workstation to Another #\n\nReplace **[your key]** with your key ID\n\nTo obtain your key ID\n```bash\ngpg --list-secret-keys --keyid-format LONG\n```\n\nWhich returns something like\n```bash\n/home/angela/.gnupg/pubring.kbx\n-------------------------------\nsec   rsa4096/[your key] 2018-03-30 [SC]\n      ABCDEFGHIJKLMNOPQRSTUVWXYZ\nuid                 [ unknown] angela (KEY NAME) \u003cuser@domain\u003e\nssb   rsa4096/ABCDEFGHIJKL 2018-03-30 [E]\n\n```\n\nAfter the key size `rsa4096/` is your key ID.\n\n***\n\nExport the key in preparation to move it\n```bash\ngpg --export -a [your key] \u003e gpg-pub.asc\n```\n\nPrepare the secret key for migration (if password protected, you'll be prompted to enter it)\n```bash\ngpg --export-secret-keys -a [your key] \u003e gpg-sc.asc\n```\n\nFind them\n```bash\nls -l gpg*.asc\n```\n\nDrag the key pair from the current directory to your USB stick or however else you move them.\n\n\nOnce on the new machine, import them\n```bash\ngpg --import gpg-pub.asc\n```\n\nIf password protected, you'll be prompted to enter it\n```bash\ngpg --import gpg-sc.asc\n```\n\nIf you need to adjust the trust level\n```bash\ngpg --edit-key [your key]\n```\n","recorded":"2025-01-08 15:26:50.882568650","filePath":"null","pinned":false},{"value":"gpg-key-migration","recorded":"2025-01-08 15:26:00.603128916","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/DWMScripts/.dwm/bin/gpg-key-migration/gpg-key-migration.md","recorded":"2025-01-08 15:25:12.916607317","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/BTOP/.config/btop/themes\n/home/karna/dotfiles/BTOP/.config/btop/btop.conf\n/home/karna/dotfiles/BTOP/.config/btop/btop.log","recorded":"2025-01-08 15:23:17.393818368","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/alacritty/.stow-local-ignore","recorded":"2025-01-08 15:22:05.650590299","filePath":"null","pinned":false},{"value":"\n\n# \u003e\u003e\u003e conda initialize \u003e\u003e\u003e\n# !! Contents within this block are managed by 'conda init' !!\n__conda_setup=\"$('/home/karna/miniconda3/bin/conda' 'shell.zsh' 'hook' 2\u003e /dev/null)\"\nif [ $? -eq 0 ]; then\n    eval \"$__conda_setup\"\nelse\n    if [ -f \"/home/karna/miniconda3/etc/profile.d/conda.sh\" ]; then\n        . \"/home/karna/miniconda3/etc/profile.d/conda.sh\"\n    else\n        export PATH=\"/home/karna/miniconda3/bin:$PATH\"\n    fi\nfi\nunset __conda_setup\n# \u003c\u003c\u003c conda initialize \u003c\u003c\u003c\n\n\n# Generated for envman. Do not edit.\n[ -s \"$HOME/.config/envman/load.sh\" ] \u0026\u0026 source \"$HOME/.config/envman/load.sh\"","recorded":"2025-01-08 15:20:41.327737178","filePath":"null","pinned":false},{"value":"[[ $commands[kubectl] ]] \u0026\u0026 source \u003c(kubectl completion zsh)\n","recorded":"2025-01-08 15:20:37.310311381","filePath":"null","pinned":false},{"value":"function rmfzf() {\n    local target\n    target=$(\n        (find . -maxdepth 1 -type f 2\u003e/dev/null; \\\n        find . -maxdepth 1 -type d 2\u003e/dev/null) \\\n        | fzf --preview 'ls -al {}' --tac\n    ) \u0026\u0026 trash \"$target\" \u0026\u0026 zle clear-screen  \n}\n\nzle -N rmfzf\nbindkey '^X^A' rmfzf","recorded":"2025-01-08 15:20:34.469381496","filePath":"null","pinned":false},{"value":"function fd() {\n    local dir\n    dir=$(\n        (zoxide query -l; find / -maxdepth 8 -type d -not -path \"/proc/*\" -not -path \"/sys/*\" -not -path \"/run/*\" 2\u003e/dev/null) \\\n        | fzf --preview 'ls -al {}' --tac\n    ) \u0026\u0026 cd \"$dir\" \u0026\u0026 zle clear-screen\n}\n\n\nzle -N fd\nbindkey '^O' fd ","recorded":"2025-01-08 15:20:30.071238665","filePath":"null","pinned":false},{"value":"}\n","recorded":"2025-01-08 15:20:22.086313722","filePath":"null","pinned":false},{"value":"    curl cht.sh/$1\n","recorded":"2025-01-08 15:20:21.728707734","filePath":"null","pinned":false},{"value":"function cheat() {\n","recorded":"2025-01-08 15:20:21.365197621","filePath":"null","pinned":false},{"value":"alias blog=\"cd /mnt/Karna/Git/My-Blog/\"\n","recorded":"2025-01-08 15:20:17.994509937","filePath":"null","pinned":false},{"value":"alias dsa=\"cd /mnt/Karna/Git/Project-K/DSA/\"\n","recorded":"2025-01-08 15:20:17.606417629","filePath":"null","pinned":false},{"value":"alias nvimleetcode=\"cd /mnt/Karna/Git/Project-K/DSA/Leetcode/ \u0026\u0026 nvim leetcode.nvim\"\n","recorded":"2025-01-08 15:20:17.201477451","filePath":"null","pinned":false},{"value":"alias download=\"aria2c\"\n","recorded":"2025-01-08 15:20:13.233026692","filePath":"null","pinned":false},{"value":"alias anime2=\"anipy-cli\"\n","recorded":"2025-01-08 15:20:12.388125804","filePath":"null","pinned":false},{"value":"alias anime1=\"ani-cli\"\n","recorded":"2025-01-08 15:20:11.669089066","filePath":"null","pinned":false},{"value":"alias torrentdownload=\"webtorrent download\"\n","recorded":"2025-01-08 15:20:06.392950016","filePath":"null","pinned":false},{"value":"alias torrentwatch2=\"webtorrent --mpv\"\n","recorded":"2025-01-08 15:20:05.806198477","filePath":"null","pinned":false},{"value":"alias torrentwatch1=\"peerflix -k -a -q\"\n","recorded":"2025-01-08 15:20:04.999480125","filePath":"null","pinned":false},{"value":"alias mangaread=\"curl -sSL mangal.metafates.one/run | sh\"\n","recorded":"2025-01-08 15:20:04.333420731","filePath":"null","pinned":false},{"value":"alias karna='cd /mnt/Karna'\n","recorded":"2025-01-08 15:19:59.204370915","filePath":"null","pinned":false},{"value":"# DWM \nalias makedwm=\"cd ~/.config/dwm \u0026\u0026 rm config.h --f \u0026\u0026 sudo make clean install\"\nalias makeslstatus=\"cd ~/.config/slstatus/ \u0026\u0026 rm config.h --f \u0026\u0026 make \u0026\u0026 sudo make install\"\nalias dwmcon=\"nvim ~/.config/dwm/config.def.h\"\nalias slstatuscon=\"nvim ~/.config/slstatus/config.def.h\"\nalias dotfiles=\"cd $HOME/dotfiles/\"\nalias n=\"nvim\"","recorded":"2025-01-08 15:19:51.966395102","filePath":"null","pinned":false},{"value":"alias zathura=\"$HOME/.local/bin/zathura\"\n","recorded":"2025-01-08 15:18:34.511219753","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Zathura-Pywal-master.zip","recorded":"2025-01-08 15:17:23.950054916","filePath":"null","pinned":false},{"value":"export PATH=\"$HOME/.cargo/bin:$PATH\"\n","recorded":"2025-01-08 15:16:42.903066347","filePath":"null","pinned":false},{"value":"export PATH=\"$HOME/.config/emacs/bin:$PATH\"\n","recorded":"2025-01-08 15:16:42.501118740","filePath":"null","pinned":false},{"value":"export PATH=\"$HOME/dotfiles/DWMScripts/.dwm/bin/:$PATH\"\n","recorded":"2025-01-08 15:16:40.041823094","filePath":"null","pinned":false},{"value":"\nfunction ctime() {\n    g++ -std=c++17 $1\".cpp\" -o $1\n    time ./$1\n}\n\nfunction mosscc() {\n    perl -i moss.pl -l cc $1 $2\n}\n\nfunction mosspy() {\n    perl -i moss.pl -l python $1 $2\n}\n\nfunction Restart() {\n  sh ~/.dwm/scripts/uptime reboot\n  systemctl reboot\n}\n\nfunction Shutdown() {\n  sh ~/.dwm/scripts/uptime shutdown\n  systemctl poweroff\n}","recorded":"2025-01-08 15:16:28.437303750","filePath":"null","pinned":false},{"value":"ZSH_THEME=\"archcraft-dwm\"\n","recorded":"2025-01-08 15:15:22.612320546","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/zsh/.zshrc","recorded":"2025-01-08 15:14:22.049196707","filePath":"null","pinned":false},{"value":"function ctime() {\n    g++ -std=c++17 $1\".cpp\" -o $1\n    time ./$1\n}\n\nfunction mosscc() {\n    perl -i moss.pl -l cc $1 $2\n}\n\nfunction mosspy() {\n    perl -i moss.pl -l python $1 $2\n}\n\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] \u0026\u0026 \\. \"$NVM_DIR/nvm.sh\"                   # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] \u0026\u0026 \\. \"$NVM_DIR/bash_completion\" # This loads nvm bash_completion\n\ncdnvm() {\n    command cd \"$@\"\n    nvm_path=$(nvm_find_up .nvmrc | tr -d '\\n')\n\n    # If there are no .nvmrc file, use the default nvm version\n    if [[ ! $nvm_path = *[^[:space:]]* ]]; then\n\n        declare default_version\n        default_version=$(nvm version default)\n\n        # If there is no default version, set it to `node`\n        # This will use the latest version on your machine\n        if [[ $default_version == \"N/A\" ]]; then\n            nvm alias default node\n            default_version=$(nvm version default)\n        fi\n\n        # If the current version is not the default version, set it to use the default version\n        if [[ $(nvm current) != \"$default_version\" ]]; then\n            nvm use default\n        fi\n\n    elif [[ -s $nvm_path/.nvmrc \u0026\u0026 -r $nvm_path/.nvmrc ]]; then\n        declare nvm_version\n        nvm_version=$(\u003c\"$nvm_path\"/.nvmrc)\n\n        declare locally_resolved_nvm_version\n        # `nvm ls` will check all locally-available versions\n        # If there are multiple matching versions, take the latest one\n        # Remove the `-\u003e` and `*` characters and spaces\n        # `locally_resolved_nvm_version` will be `N/A` if no local versions are found\n        locally_resolved_nvm_version=$(nvm ls --no-colors \"$nvm_version\" | tail -1 | tr -d '\\-\u003e*' | tr -d '[:space:]')\n\n        # If it is not already installed, install it\n        # `nvm install` will implicitly use the newly-installed version\n        if [[ \"$locally_resolved_nvm_version\" == \"N/A\" ]]; then\n            nvm install \"$nvm_version\"\n        elif [[ $(nvm current) != \"$locally_resolved_nvm_version\" ]]; then\n            nvm use \"$nvm_version\"\n        fi\n    fi\n}\n\n# \u003e\u003e\u003e conda initialize \u003e\u003e\u003e\n# !! Contents within this block are managed by 'conda init' !!\n__conda_setup=\"$('/home/karna/miniconda3/bin/conda' 'shell.bash' 'hook' 2\u003e /dev/null)\"\nif [ $? -eq 0 ]; then\n    eval \"$__conda_setup\"\nelse\n    if [ -f \"/home/karna/miniconda3/etc/profile.d/conda.sh\" ]; then\n        . \"/home/karna/miniconda3/etc/profile.d/conda.sh\"\n    else\n        export PATH=\"/home/karna/miniconda3/bin:$PATH\"\n    fi\nfi\nunset __conda_setup\n# \u003c\u003c\u003c conda initialize \u003c\u003c\u003c\n\n\n# Generated for envman. Do not edit.\n[ -s \"$HOME/.config/envman/load.sh\" ] \u0026\u0026 source \"$HOME/.config/envman/load.sh\"","recorded":"2025-01-08 15:14:06.006011266","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/bashrc/.bashrc","recorded":"2025-01-08 15:08:45.784416491","filePath":"null","pinned":false},{"value":"# Clone and install Paru if not installed\necho \"This script requires an AUR helper to install the dependencies. Installing paru...\" \u0026\nsleep 2\nif ! command -v paru \u0026\u003e/dev/null; then\n  echo \"Installing Paru, an AUR helper...\"\n  cd Downloads\n  git clone https://aur.archlinux.org/paru.git\n  cd paru\n  makepkg -si\n  cd ..\n  echo \"Paru installed\"\n  rm -rf paru\n  cd ~/dotfiles\nfi\nclear","recorded":"2025-01-08 14:58:29.929767243","filePath":"null","pinned":false},{"value":"#!/bin/env bash\nset -e\n\n# Introduction \u0026 Warning\necho \"Welcome to my Arch Setup!\" \u0026\u0026 sleep 2\necho \"Some parts of the script require sudo, so if you're planning on leaving the desktop while the installation script does its thing, better drop it already!.\" \u0026\u0026 sleep 4\n\n# Creating all required home directories if not present\nmkdir ~/Downloads ~/Documents ~/Music ~/Pictures ~/Videos ~/Templates\n\necho \"Setting up pacman.conf...\"\n\n# Use sed to find the #UseSyslog line and append the settings under it\nsudo sed -i '/#UseSyslog/a\\\nILoveCandy\\nParallelDownloads=10\\nColor' /etc/pacman.conf\n\n# System update\necho \"Performing a full system update...\"\nsudo pacman --noconfirm -Syu\nclear\necho \"System update done\" \u0026\u0026 sleep 2\nclear\n\n# Install Git if not present\necho \"Installing git...\" \u0026\u0026 sleep 1\nsudo pacman -S --noconfirm --needed git\nclear","recorded":"2025-01-08 14:51:00.336304968","filePath":"null","pinned":false},{"value":"echo \"Configuration added under #UseSyslog.\"\n","recorded":"2025-01-08 14:50:51.499293131","filePath":"null","pinned":false},{"value":"\"\n","recorded":"2025-01-08 14:50:48.123955288","filePath":"null","pinned":false},{"value":"#!/bin/env bash\nset -e\n\nif ! grep -q -E 'ILoveCandy|ParallelDownloads=10|Color' /etc/pacman.conf; then\n  sudo sed -i '/#UseSyslog/a\\\nILoveCandy\\nParallelDownloads=10\\nColor' /etc/pacman.conf\nfi\n\n","recorded":"2025-01-08 14:50:05.552637022","filePath":"null","pinned":false},{"value":"#!/bin/env bash\nset -e","recorded":"2025-01-08 14:49:08.594010525","filePath":"null","pinned":false},{"value":"if ! grep -q -E 'ILoveCandy|ParallelDownloads=10|Color' /etc/pacman.conf; then\n  sudo sed -i '/#UseSyslog/a\\\nILoveCandy\\nParallelDownloads=10\\nColor' /etc/pacman.conf\nfi\n","recorded":"2025-01-08 14:48:59.930906017","filePath":"null","pinned":false},{"value":"# Use sed to find the #UseSyslog line and append the settings under it\nsudo sed -i '/#UseSyslog/a\\\nILoveCandy\\nParallelDownloads=10\\nColor' /etc/pacman.conf","recorded":"2025-01-08 14:48:32.324170338","filePath":"null","pinned":false},{"value":"/home/karna/.gtkrc-2.0","recorded":"2025-01-08 14:46:02.118771330","filePath":"null","pinned":false},{"value":"Remini App","recorded":"2025-01-07 21:47:55.983850835","filePath":"null","pinned":false},{"value":"/mnt/Karna/Git/chaganti-reddy.github.io/content/authors/admin/avatar_main.jpg","recorded":"2025-01-07 21:37:15.742761254","filePath":"null","pinned":false},{"value":"cat ~/.cache/wal/sequences\n","recorded":"2025-01-07 15:15:26.988143411","filePath":"null","pinned":false},{"value":"  wal -b 282738 -i ~/Wallpaper/Aesthetic2.png \u003e/dev/null 2\u003e\u00261\n","recorded":"2025-01-07 15:14:11.733788360","filePath":"null","pinned":false},{"value":"\n# -------------------------------------------------------------------------------------\n\necho \"Setting up Qtile...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install Qtile?\" \\\n  --yesno \"Would you like to install Qtile (Python based Window Manager)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Qtile installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Qtile installation will begin now.\" 10 50\n\n  paru -Syu qtile feh picom-git alacritty --noconfirm --needed\n\n  cd ~/dotfiles\n\n  stow qtile picom qtile_themes qtile_wallpaper cava alacritty\n\n  echo \"Pre-generating pywal colors...\"\n  echo \"Might take some time, hang on tight!\"\n  wal -b 282738 -i ~/Wallpaper/Aesthetic2.png \u003e/dev/null 2\u003e\u00261\n  echo \"Theme 1 ../done\"\n  wal -b 282738 -i ~/Wallpaper/120_-_KnFPX73.jpg \u003e/dev/null 2\u003e\u00261\n  echo \"Theme 2 ../done\"\n  wal -i ~/Wallpaper/claudio-testa-FrlCwXwbwkk-unsplash.jpg \u003e/dev/null 2\u003e\u00261\n  echo \"Theme 3 ../done\"\n  wal -b 232A2E -i ~/Wallpaper/fog_forest_2.png \u003e/dev/null 2\u003e\u00261\n  echo \"Theme 4 ../done\"\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"Qtile has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear","recorded":"2025-01-07 15:12:09.339487636","filePath":"null","pinned":false},{"value":"fc-cache -f","recorded":"2025-01-07 14:38:38.566716896","filePath":"null","pinned":false},{"value":"  wal -b 232A2E -i ~/Wallpaper/fog_forest_2.png \u003e/dev/null 2\u003e\u00261\n","recorded":"2025-01-07 14:33:27.408520401","filePath":"null","pinned":false},{"value":"  wal -i ~/Wallpaper/claudio-testa-FrlCwXwbwkk-unsplash.jpg \u003e/dev/null 2\u003e\u00261\n","recorded":"2025-01-07 14:33:22.028080864","filePath":"null","pinned":false},{"value":"  wal -b 282738 -i ~/Wallpaper/120_-_KnFPX73.jpg \u003e/dev/null 2\u003e\u00261\n","recorded":"2025-01-07 14:33:16.843871056","filePath":"null","pinned":false},{"value":"  paru -Syu qtile feh picom-git alacritty --noconfirm --needed\n","recorded":"2025-01-07 14:32:42.188315298","filePath":"null","pinned":false},{"value":"paru -Syu qtile pywal-git feh picom-git alacritty --noconfirm --needed\n","recorded":"2025-01-07 14:29:16.726797687","filePath":"null","pinned":false},{"value":"echo \"Pre-generating pywal colors...\"\n  echo \"Might take some time, hang on tight!\"\n  wal -b 282738 -i ~/Wallpaper/Aesthetic2.png \u003e/dev/null 2\u003e\u00261\n  echo \"Theme 1 ../done\"\n  wal -b 282738 -i ~/Wallpaper/120_-_KnFPX73.jpg \u003e/dev/null 2\u003e\u00261\n  echo \"Theme 2 ../done\"\n  wal -i ~/Wallpaper/claudio-testa-FrlCwXwbwkk-unsplash.jpg \u003e/dev/null 2\u003e\u00261\n  echo \"Theme 3 ../done\"\n  wal -b 232A2E -i ~/Wallpaper/fog_forest_2.png \u003e/dev/null 2\u003e\u00261\n  echo \"Theme 4 ../done\"","recorded":"2025-01-07 14:28:53.659053365","filePath":"null","pinned":false},{"value":"qtile_themes qtile_wallpaper","recorded":"2025-01-07 14:26:58.338422572","filePath":"null","pinned":false},{"value":"echo \"Pre-generating pywal colors...\"\necho \"Might take some time, hang on tight!\"\nwal -b 282738 -i ~/Wallpaper/Aesthetic2.png \u003e /dev/null 2\u003e\u00261\necho \"Theme 1 ../done\"\nwal -b 282738 -i ~/Wallpaper/120_-_KnFPX73.jpg \u003e /dev/null 2\u003e\u00261\necho \"Theme 2 ../done\"\nwal -i ~/Wallpaper/claudio-testa-FrlCwXwbwkk-unsplash.jpg \u003e /dev/null 2\u003e\u00261\necho \"Theme 3 ../done\"\nwal -b 232A2E -i ~/Wallpaper/fog_forest_2.png \u003e /dev/null 2\u003e\u00261 \necho \"Theme 4 ../done\"","recorded":"2025-01-07 14:25:58.275120885","filePath":"null","pinned":false},{"value":"xf86-video-intel","recorded":"2025-01-07 14:25:21.923589250","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Cozytile-main/Wallpaper","recorded":"2025-01-07 14:23:52.196297226","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Cozytile-main/Themes","recorded":"2025-01-07 14:23:42.186168117","filePath":"null","pinned":false},{"value":"\\.config\n","recorded":"2025-01-07 14:22:20.500653568","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Cozytile-main/.config/picom/picom.conf","recorded":"2025-01-07 14:22:08.434829069","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Cozytile-main/.config/nvim/lua/themes","recorded":"2025-01-07 14:20:15.321690854","filePath":"null","pinned":false},{"value":"https://www.usief.org.in/fulbright-nehru-fellowships.aspx","recorded":"2025-01-07 14:15:02.981567837","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Cozytile-main/.config/alacritty/alacritty.toml\n/home/karna/Downloads/Cozytile-main/.config/alacritty/colors.toml\n/home/karna/Downloads/Cozytile-main/.config/alacritty/fonts.toml","recorded":"2025-01-07 14:13:18.875735172","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Cozytile-main/.config/qtile","recorded":"2025-01-07 14:11:45.336374300","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/rofi/.config/rofi/bak/bin\n/home/karna/dotfiles/rofi/.config/rofi/bak/themes\n/home/karna/dotfiles/rofi/.config/rofi/bak/config.rasi\n/home/karna/dotfiles/rofi/.config/rofi/bak/powermenu.rasi\n/home/karna/dotfiles/rofi/.config/rofi/bak/powermenu.sh\n/home/karna/dotfiles/rofi/.config/rofi/bak/theme.rasi\n/home/karna/dotfiles/rofi/.config/rofi/bak/wifi-bluetooth-menu.rasi","recorded":"2025-01-07 14:10:31.305270278","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Cozytile-main/.config/rofi/images\n/home/karna/Downloads/Cozytile-main/.config/rofi/scripts\n/home/karna/Downloads/Cozytile-main/.config/rofi/settings\n/home/karna/Downloads/Cozytile-main/.config/rofi/theme_scripts","recorded":"2025-01-07 14:09:35.483124367","filePath":"null","pinned":false},{"value":"# On-demand rehash\nzshcache_time=\"$(date +%s%N)\"\n\nautoload -Uz add-zsh-hook\n\nrehash_precmd() {\n  if [[ -a /var/cache/zsh/pacman ]]; then\n    local paccache_time=\"$(date -r /var/cache/zsh/pacman +%s%N)\"\n    if (( zshcache_time \u003c paccache_time )); then\n      rehash\n      zshcache_time=\"$paccache_time\"\n    fi\n  fi\n}\n\nadd-zsh-hook -Uz precmd rehash_precmd","recorded":"2025-01-07 13:58:21.436661454","filePath":"null","pinned":false},{"value":"export STARSHIP_LOG=\"error\"\n","recorded":"2025-01-07 13:56:44.668536695","filePath":"null","pinned":false},{"value":"/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-Bold.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-BoldItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-ExtraBold.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-ExtraBoldItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-ExtraLight.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-ExtraLightItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-Italic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-Light.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-LightItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-Medium.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-MediumItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-Bold.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-BoldItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-ExtraBold.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-ExtraBoldItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-ExtraLight.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-ExtraLightItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-Italic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-Light.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-LightItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-Medium.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-MediumItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-Regular.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-SemiBold.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-SemiBoldItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-Thin.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-ThinItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-Regular.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-SemiBold.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-SemiBoldItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-Thin.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-ThinItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/OFL.txt","recorded":"2025-01-07 13:49:08.484710623","filePath":"null","pinned":false},{"value":"/mnt/Karna/Git/my-fonts/Brains/JetBrainsMono-1.0.3/ttf/JetBrainsMono-Bold.ttf\n/mnt/Karna/Git/my-fonts/Brains/JetBrainsMono-1.0.3/ttf/JetBrainsMono-Bold-Italic.ttf\n/mnt/Karna/Git/my-fonts/Brains/JetBrainsMono-1.0.3/ttf/JetBrainsMono-ExtraBold.ttf\n/mnt/Karna/Git/my-fonts/Brains/JetBrainsMono-1.0.3/ttf/JetBrainsMono-ExtraBold-Italic.ttf\n/mnt/Karna/Git/my-fonts/Brains/JetBrainsMono-1.0.3/ttf/JetBrainsMono-Italic.ttf\n/mnt/Karna/Git/my-fonts/Brains/JetBrainsMono-1.0.3/ttf/JetBrainsMono-Medium.ttf\n/mnt/Karna/Git/my-fonts/Brains/JetBrainsMono-1.0.3/ttf/JetBrainsMono-Medium-Italic.ttf\n/mnt/Karna/Git/my-fonts/Brains/JetBrainsMono-1.0.3/ttf/JetBrainsMono-Regular.ttf","recorded":"2025-01-07 13:48:46.375339976","filePath":"null","pinned":false},{"value":"/home/karna/.local/share/fonts/my-fonts/awesome\n/home/karna/.local/share/fonts/my-fonts/Brains\n/home/karna/.local/share/fonts/my-fonts/jet\n/home/karna/.local/share/fonts/my-fonts/Anonymice Nerd Font Complete.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-Bold.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-BoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-ExtraLight.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-ExtraLightItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-Italic.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-Light.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-LightItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-Medium.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-MediumItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-SemiBold.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-SemiBoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Bold.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Bold Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete ExtraLight.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete ExtraLight Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Light.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Light Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Bold.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Bold Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono ExtraLight.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono ExtraLight Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Light.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Light Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Regular.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono SemiBold.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono SemiBold Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono SemiLight.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono SemiLight Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible Bold.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible Bold Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible ExtraLight.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible ExtraLight Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible Light.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible Light Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible Regular.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible SemiBold.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible SemiBold Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible SemiLight.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible SemiLight Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Regular.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete SemiBold.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete SemiBold Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete SemiLight.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete SemiLight Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible Bold.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible Bold Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible ExtraLight.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible ExtraLight Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible Light.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible Light Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible Regular.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible SemiBold.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible SemiBold Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible SemiLight.otf\n/home/karna/.local/share/fonts/my-fonts/Consolas.ttf\n/home/karna/.local/share/fonts/my-fonts/DejaVu Sans Mono Nerd Font Complete Mono.ttf\n/home/karna/.local/share/fonts/my-fonts/DejaVu Sans Mono Nerd Font Complete Mono Windows Compatible.ttf\n/home/karna/.local/share/fonts/my-fonts/DejaVu Sans Mono Nerd Font Complete Windows Compatible.ttf\n/home/karna/.local/share/fonts/my-fonts/DejaVu Sans Mono Oblique Nerd Font Complete.ttf\n/home/karna/.local/share/fonts/my-fonts/DejaVu Sans Mono Oblique Nerd Font Complete Mono.ttf\n/home/karna/.local/share/fonts/my-fonts/DejaVu Sans Mono Oblique Nerd Font Complete Mono Windows Compatible.ttf\n/home/karna/.local/share/fonts/my-fonts/DejaVu Sans Mono Oblique Nerd Font Complete Windows Compatible.ttf\n/home/karna/.local/share/fonts/my-fonts/Droid Sans Mono Nerd Font Complete.otf\n/home/karna/.local/share/fonts/my-fonts/Droid Sans Mono Nerd Font Complete Mono.otf\n/home/karna/.local/share/fonts/my-fonts/Droid Sans Mono Nerd Font Complete Mono Windows Compatible.otf\n/home/karna/.local/share/fonts/my-fonts/Droid Sans Mono Nerd Font Complete Windows Compatible.otf\n/home/karna/.local/share/fonts/my-fonts/feather.ttf\n/home/karna/.local/share/fonts/my-fonts/FiraCode-Bold.ttf\n/home/karna/.local/share/fonts/my-fonts/FiraCode-Light.ttf\n/home/karna/.local/share/fonts/my-fonts/FiraCode-Medium.ttf\n/home/karna/.local/share/fonts/my-fonts/FiraCode-Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/FiraCode-Retina.ttf\n/home/karna/.local/share/fonts/my-fonts/FiraCode-SemiBold.ttf\n/home/karna/.local/share/fonts/my-fonts/Fixedsys.ttf\n/home/karna/.local/share/fonts/my-fonts/FontsFree-Net-SFProDisplay-Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/Icomoon-Feather.ttf\n/home/karna/.local/share/fonts/my-fonts/iosevka-nerd-font.ttf\n/home/karna/.local/share/fonts/my-fonts/Iosevka Term Nerd Font Complete.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Bold.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Bold.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-BoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-BoldItalic.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-ExtraBold.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-ExtraBold.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-ExtraBoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-ExtraBoldItalic.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-ExtraLight.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-ExtraLight.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-ExtraLightItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-ExtraLightItalic.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Italic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Italic.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Italic[wght].ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Light.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Light.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-LightItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-LightItalic.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Medium.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Medium.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-MediumItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-MediumItalic.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-Bold.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-BoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-ExtraBold.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-ExtraBoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-ExtraLight.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-ExtraLightItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-Italic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-Light.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-LightItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-Medium.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-MediumItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrains Mono NL Regular Nerd Font Complete.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-SemiBold.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-SemiBoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-Thin.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-ThinItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Regular.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrains Mono Regular Nerd Font Complete.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-SemiBold.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-SemiBold.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-SemiBoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-SemiBoldItalic.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Thin.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Thin.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-ThinItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-ThinItalic.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono[wght].ttf\n/home/karna/.local/share/fonts/my-fonts/jpn_boot.ttf\n/home/karna/.local/share/fonts/my-fonts/kor_boot.ttf\n/home/karna/.local/share/fonts/my-fonts/LEMONMILK-Light.otf\n/home/karna/.local/share/fonts/my-fonts/LEMONMILK-Medium.otf\n/home/karna/.local/share/fonts/my-fonts/LEMONMILK-Regular.otf\n/home/karna/.local/share/fonts/my-fonts/LibreBaskerville-Bold.ttf\n/home/karna/.local/share/fonts/my-fonts/LibreBaskerville-Italic.ttf\n/home/karna/.local/share/fonts/my-fonts/LibreBaskerville-Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/Literation Mono Nerd Font Complete Mono.ttf\n/home/karna/.local/share/fonts/my-fonts/MaterialIcons.ttf\n/home/karna/.local/share/fonts/my-fonts/MaterialIcons.woff\n/home/karna/.local/share/fonts/my-fonts/MaterialIcons-Outlined.ttf\n/home/karna/.local/share/fonts/my-fonts/MaterialIcons-Round.ttf\n/home/karna/.local/share/fonts/my-fonts/MaterialIcons-Sharp.ttf\n/home/karna/.local/share/fonts/my-fonts/MaterialIcons-TwoTone.ttf\n/home/karna/.local/share/fonts/my-fonts/MesloLGS NF Bold.ttf\n/home/karna/.local/share/fonts/my-fonts/MesloLGS NF Bold Italic.ttf\n/home/karna/.local/share/fonts/my-fonts/MesloLGS NF Italic.ttf\n/home/karna/.local/share/fonts/my-fonts/MesloLGS NF Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/Minecraft.ttf\n/home/karna/.local/share/fonts/my-fonts/Minecrafter.Alt.ttf\n/home/karna/.local/share/fonts/my-fonts/Minecrafter.Reg.ttf\n/home/karna/.local/share/fonts/my-fonts/Minecraftia-Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/Minercraftory.ttf\n/home/karna/.local/share/fonts/my-fonts/Monaco.ttf\n/home/karna/.local/share/fonts/my-fonts/msjhn_boot.ttf\n/home/karna/.local/share/fonts/my-fonts/NotoColorEmoji.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-Black.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-BlackItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-Bold.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-BoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-Italic.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-Light.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-LightItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-Medium.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-MediumItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-Bold.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-BoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-ExtraLight.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-ExtraLightItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-Italic.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-Light.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-LightItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-Medium.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-MediumItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-SemiBold.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-SemiBoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-Thin.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-ThinItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-Thin.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-ThinItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/runescape_uf.ttf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoDisplay-Black.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoDisplay-Bold.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoDisplay-Heavy.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoDisplay-Light.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoDisplay-Medium.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoDisplay-Regular.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoDisplay-Semibold.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoDisplay-Thin.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoDisplay-Ultralight.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-Bold.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-BoldItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-Heavy.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-HeavyItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-Light.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-LightItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-Medium.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-MediumItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-Regular.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-RegularItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-Semibold.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-SemiboldItalic.otf\n/home/karna/.local/share/fonts/my-fonts/segmono_boot.ttf\n/home/karna/.local/share/fonts/my-fonts/segoen_slboot.ttf\n/home/karna/.local/share/fonts/my-fonts/segoe_slboot.ttf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro.ttf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-Black.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-BlackItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-Bold.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-BoldItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-Heavy.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-HeavyItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-Light.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-LightItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-Medium.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-MediumItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-Regular.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-RegularItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-Semibold.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-SemiboldItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-Thin.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-ThinItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-Ultralight.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-UltralightItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Italic.ttf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Rounded-Black.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Rounded-Bold.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Rounded-Heavy.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Rounded-Light.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Rounded-Medium.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Rounded-Regular.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Rounded-Semibold.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Rounded-Thin.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Rounded-Ultralight.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-Black.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-BlackItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-Bold.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-BoldItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-Heavy.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-HeavyItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-Light.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-LightItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-Medium.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-MediumItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-Regular.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-RegularItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-Semibold.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-SemiboldItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-Thin.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-ThinItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-Ultralight.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-UltralightItalic.otf\n/home/karna/.local/share/fonts/my-fonts/Ubuntu-Bold.ttf\n/home/karna/.local/share/fonts/my-fonts/Ubuntu-BoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/Ubuntu-Italic.ttf\n/home/karna/.local/share/fonts/my-fonts/Ubuntu-Light.ttf\n/home/karna/.local/share/fonts/my-fonts/Ubuntu-LightItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/Ubuntu-Medium.ttf\n/home/karna/.local/share/fonts/my-fonts/Ubuntu-MediumItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/Ubuntu-Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/verdana.ttf\n/home/karna/.local/share/fonts/my-fonts/Verdana Bold.ttf","recorded":"2025-01-07 13:40:06.315426931","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Cozytile-main/fonts/awesome\n/home/karna/Downloads/Cozytile-main/fonts/Brains\n/home/karna/Downloads/Cozytile-main/fonts/jet\n/home/karna/Downloads/Cozytile-main/fonts/Icomoon-Feather.ttf","recorded":"2025-01-07 13:33:44.851415220","filePath":"null","pinned":false},{"value":"echo \"Setting up Fonts...\"\n\u0026\u0026 sleep 1\n\nmkdir -p ~/.local/share/fonts\ncd ~/.local/share/fonts\n\ngit clone https://github.com/Chaganti-Reddy/my-fonts.git\n\ncd my-fonts\n\nrm -rf .git/\n\ncd ~/dotfiles/\n\necho \"Fonts have been installed...\"","recorded":"2025-01-07 12:41:17.602416291","filePath":"null","pinned":false},{"value":"  sudo pacman -S alacritty\n","recorded":"2025-01-07 12:38:44.753477036","filePath":"null","pinned":false},{"value":"paru -Syu base-devel qtile python-psutil pywal-git feh picom-git dunst zsh starship playerctl brightnessctl alacritty pfetch thunar rofi ranger cava pulseaudio alsa-utils neovim vim git sddm --noconfirm --needed\n","recorded":"2025-01-07 12:38:41.465439305","filePath":"null","pinned":false},{"value":"  sudo cp ~/dotfiles/Extras/Extras/usr/share/xsessions/dwm.desktop /usr/share/xsessions\n","recorded":"2025-01-07 12:38:20.383304162","filePath":"null","pinned":false},{"value":"  sudo mkdir /usr/share/xsessions/\n","recorded":"2025-01-07 12:38:19.962353096","filePath":"null","pinned":false},{"value":"  cd ~/.config/dmenu \u0026\u0026 sudo make install \u0026\u0026 cd\n","recorded":"2025-01-07 12:38:18.954392606","filePath":"null","pinned":false},{"value":"  cd ~/.config/st \u0026\u0026 sudo make install \u0026\u0026 cd\n","recorded":"2025-01-07 12:38:18.645177249","filePath":"null","pinned":false},{"value":"  cd ~/.config/slstatus \u0026\u0026 sudo make clean install \u0026\u0026 cd\n","recorded":"2025-01-07 12:38:18.315142650","filePath":"null","pinned":false},{"value":"  cd ~/.config/dwm \u0026\u0026 sudo make clean install \u0026\u0026 cd\n","recorded":"2025-01-07 12:38:18.003228388","filePath":"null","pinned":false},{"value":"  stow ~/dotfiles/suckless/\n","recorded":"2025-01-07 12:38:17.376579957","filePath":"null","pinned":false},{"value":"https://cryptpdf.streamlit.app/","recorded":"2025-01-07 12:31:18.628980666","filePath":"null","pinned":false},{"value":"/mnt/Karna/Git/PDF Password Remover/app.py\n/mnt/Karna/Git/PDF Password Remover/requirements.txt","recorded":"2025-01-07 12:23:51.440910706","filePath":"null","pinned":false},{"value":"git@github.com:Chaganti-Reddy/CryptPDF.git","recorded":"2025-01-07 12:23:29.593407791","filePath":"null","pinned":false},{"value":"sudo pacman -S qemu-full qemu-img libvirt virt-install virt-manager virt-viewer spice-vdagent edk2-ovmf dnsmasq swtpm guestfs-tools libosinfo tuned\n","recorded":"2025-01-07 12:18:04.485296009","filePath":"null","pinned":false},{"value":"import json\nimport requests\nimport streamlit as st\nfrom streamlit_lottie import st_lottie\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\n# Lottie animation code\ndef load_lottie_url(url: str):\n    \"\"\"Fetches Lottie animation from URL.\"\"\"\n    r = requests.get(url)\n    if r.status_code != 200:\n        return None\n    return r.json()\n\n# Fetch Lottie animation\nlottie_url = \"https://assets2.lottiefiles.com/packages/lf20_mDnmhAgZkb.json\"\nlottie_json = load_lottie_url(lottie_url)\n\n# Streamlit App Configuration\nst.set_page_config(page_title=\"CryptPDF\", layout=\"centered\")\n\n# Add Gradient Background CSS\nst.markdown(\n    \"\"\"\n    \u003cstyle\u003e\n    /* Remove footer */\n    footer {visibility: hidden;}\n\n    /* Gradient background animation */\n    body {\n        background: linear-gradient(-45deg, #ff9a9e, #fad0c4, #fbc2eb, #a18cd1);\n        background-size: 400% 400%;\n        animation: gradient 10s ease infinite;\n    }\n    @keyframes gradient {\n        0% { background-position: 0% 50%; }\n        50% { background-position: 100% 50%; }\n        100% { background-position: 0% 50%; }\n    }\n\n    /* Center content */\n    .stApp {\n        background: transparent;\n    }\n    \u003c/style\u003e\n    \"\"\",\n    unsafe_allow_html=True,\n)\n\n# App Title\nst.title(\"🔐 CryptPDF - Gradient Edition\")\n\n# Display Lottie animation\nif lottie_json:\n    st_lottie(lottie_json, speed=1, width=600, height=400, key=\"cryptpdf-lottie\")\n\nst.markdown(\"\"\"\nUpload a PDF file, and **CryptPDF** will automatically detect if it's encrypted or not. \nYou can then either remove the password or add a new password.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload a PDF\", type=[\"pdf\"])\n\ndef check_encryption_status(uploaded_file):\n    \"\"\"Check if the PDF file is encrypted.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        return reader.is_encrypted\n    except Exception as e:\n        return str(e)\n\ndef remove_pdf_password(uploaded_file, password):\n    \"\"\"Remove the password from a PDF file.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\ndef add_pdf_password(uploaded_file, password):\n    \"\"\"Encrypt a PDF file with a password.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        writer = PdfWriter()\n        \n        for page in reader.pages:\n            writer.add_page(page)\n        \n        writer.encrypt(password)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\nif uploaded_file:\n    with st.spinner(\"Checking file...\"):\n        encryption_status = check_encryption_status(uploaded_file)\n        \n    if isinstance(encryption_status, str):\n        st.error(f\"Error: {encryption_status}\")\n    else:\n        if encryption_status:\n            st.info(\"This file is encrypted. Decrypt it to proceed.\")\n            action = \"Remove Password (Decrypt)\"\n        else:\n            st.info(\"This file is not encrypted. Encrypt it to add protection.\")\n            action = \"Add Password (Encrypt)\"\n        \n        password = st.text_input(\n            f\"Enter Password to {'Decrypt' if encryption_status else 'Encrypt'} the PDF\",\n            type=\"password\"\n        )\n\n        if st.button(f\"Process: {action}\"):\n            with st.spinner(\"Processing...\"):\n                if encryption_status:  # Decrypt\n                    result = remove_pdf_password(uploaded_file, password)\n                else:  # Encrypt\n                    result = add_pdf_password(uploaded_file, password)\n                \n                if isinstance(result, BytesIO):\n                    st.success(f\"{action} successful!\")\n                    st.download_button(\n                        label=f\"Download {'Decrypted' if encryption_status else 'Encrypted'} PDF\",\n                        data=result,\n                        file_name=\"processed.pdf\",\n                        mime=\"application/pdf\"\n                    )\n                else:\n                    st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF file to begin.\")\n","recorded":"2025-01-07 12:18:04.463235446","filePath":"null","pinned":false},{"value":"import json\nimport requests\nimport streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\n# Streamlit App Configuration\nst.set_page_config(page_title=\"CryptPDF\", layout=\"centered\")\n\n# Add Snowflake Animation CSS\nst.markdown(\n    \"\"\"\n    \u003cstyle\u003e\n    /* Remove footer */\n    footer {visibility: hidden;}\n\n    /* Snowflake background animation */\n    body {\n        margin: 0;\n        height: 100%;\n        background: #1a1a1a;\n        overflow: hidden;\n    }\n\n    .snowflakes {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        pointer-events: none;\n    }\n\n    .snowflake {\n        position: absolute;\n        color: #ffffff;\n        font-size: 1rem;\n        opacity: 0.8;\n        user-select: none;\n        animation: fall linear infinite;\n    }\n\n    @keyframes fall {\n        0% {\n            top: -10%;\n            transform: translateX(0);\n        }\n        100% {\n            top: 100%;\n            transform: translateX(calc(100vw - 100%));\n        }\n    }\n\n    \u003c/style\u003e\n\n    \u003cscript\u003e\n    // JavaScript to generate snowflakes\n    const snowflakesContainer = document.createElement(\"div\");\n    snowflakesContainer.classList.add(\"snowflakes\");\n    document.body.appendChild(snowflakesContainer);\n\n    // Function to generate a snowflake\n    function createSnowflake() {\n        const snowflake = document.createElement(\"div\");\n        snowflake.classList.add(\"snowflake\");\n        snowflake.innerText = \"❄️\"; // Snowflake character\n        snowflake.style.left = `${Math.random() * 100}vw`;\n        snowflake.style.animationDuration = `${Math.random() * 5 + 5}s`; // Snowfall duration\n        snowflake.style.fontSize = `${Math.random() * 1.5 + 0.5}rem`;\n        snowflakesContainer.appendChild(snowflake);\n\n        // Remove snowflake after it finishes falling\n        setTimeout(() =\u003e {\n            snowflake.remove();\n        }, 10000); // Matches the max animation duration\n    }\n\n    // Generate snowflakes at intervals\n    setInterval(createSnowflake, 100);\n    \u003c/script\u003e\n    \"\"\",\n    unsafe_allow_html=True,\n)\n\n# App Title\nst.title(\"❄️ CryptPDF - Snowflake Edition\")\n\nst.markdown(\"\"\"\nUpload a PDF file, and **CryptPDF** will automatically detect if it's encrypted or not. \nYou can then either remove the password or add a new password.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload a PDF\", type=[\"pdf\"])\n\ndef check_encryption_status(uploaded_file):\n    \"\"\"Check if the PDF file is encrypted.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        return reader.is_encrypted\n    except Exception as e:\n        return str(e)\n\ndef remove_pdf_password(uploaded_file, password):\n    \"\"\"Remove the password from a PDF file.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\ndef add_pdf_password(uploaded_file, password):\n    \"\"\"Encrypt a PDF file with a password.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        writer = PdfWriter()\n        \n        for page in reader.pages:\n            writer.add_page(page)\n        \n        writer.encrypt(password)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\nif uploaded_file:\n    with st.spinner(\"Checking file...\"):\n        encryption_status = check_encryption_status(uploaded_file)\n        \n    if isinstance(encryption_status, str):\n        st.error(f\"Error: {encryption_status}\")\n    else:\n        if encryption_status:\n            st.info(\"This file is encrypted. Decrypt it to proceed.\")\n            action = \"Remove Password (Decrypt)\"\n        else:\n            st.info(\"This file is not encrypted. Encrypt it to add protection.\")\n            action = \"Add Password (Encrypt)\"\n        \n        password = st.text_input(\n            f\"Enter Password to {'Decrypt' if encryption_status else 'Encrypt'} the PDF\",\n            type=\"password\"\n        )\n\n        if st.button(f\"Process: {action}\"):\n            with st.spinner(\"Processing...\"):\n                if encryption_status:  # Decrypt\n                    result = remove_pdf_password(uploaded_file, password)\n                else:  # Encrypt\n                    result = add_pdf_password(uploaded_file, password)\n                \n                if isinstance(result, BytesIO):\n                    st.success(f\"{action} successful!\")\n                    st.download_button(\n                        label=f\"Download {'Decrypted' if encryption_status else 'Encrypted'} PDF\",\n                        data=result,\n                        file_name=\"processed.pdf\",\n                        mime=\"application/pdf\"\n                    )\n                else:\n                    st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF file to begin.\")\n","recorded":"2025-01-07 12:18:01.859577003","filePath":"null","pinned":false},{"value":"import streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\ndef check_encryption_status(uploaded_file):\n    \"\"\"Check if the PDF file is encrypted.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        return reader.is_encrypted\n    except Exception as e:\n        return str(e)\n\ndef remove_pdf_password(uploaded_file, password):\n    \"\"\"Remove the password from a PDF file.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\ndef add_pdf_password(uploaded_file, password):\n    \"\"\"Encrypt a PDF file with a password.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        writer = PdfWriter()\n        \n        for page in reader.pages:\n            writer.add_page(page)\n        \n        writer.encrypt(password)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\n# Streamlit App Configuration\nst.set_page_config(page_title=\"CryptPDF\", layout=\"centered\")\n\n# Inject Hacker-style Animation\nst.markdown(\n    \"\"\"\n    \u003cstyle\u003e\n    /* Remove footer */\n    footer {visibility: hidden;}\n\n    /* Hacker-style matrix background */\n    body {\n        margin: 0;\n        overflow: hidden;\n    }\n    canvas#matrix {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        z-index: -1;\n        background: black;\n    }\n    \u003c/style\u003e\n    \u003cscript\u003e\n    const canvas = document.createElement('canvas');\n    canvas.id = 'matrix';\n    document.body.appendChild(canvas);\n\n    const ctx = canvas.getContext('2d');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    const cols = Math.floor(canvas.width / 20) + 1;\n    const ypos = Array(cols).fill(0);\n\n    function matrixRain() {\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        ctx.fillStyle = '#0F0';\n        ctx.font = '15pt monospace';\n\n        ypos.forEach((y, ind) =\u003e {\n            const text = String.fromCharCode(65 + Math.random() * 58);\n            const x = ind * 20;\n            ctx.fillText(text, x, y);\n\n            if (y \u003e canvas.height + Math.random() * 10000) ypos[ind] = 0;\n            else ypos[ind] = y + 20;\n        });\n    }\n\n    setInterval(matrixRain, 50);\n    \u003c/script\u003e\n    \"\"\",\n    unsafe_allow_html=True,\n)\n\n# App Title\nst.title(\"🖥️ CryptPDF - Hacker Edition\")\n\nst.markdown(\"\"\"\nUpload a PDF file, and **CryptPDF** will automatically detect if it's encrypted or not. \nYou can then either remove the password or add a new password.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload a PDF\", type=[\"pdf\"])\n\nif uploaded_file:\n    with st.spinner(\"Checking file...\"):\n        encryption_status = check_encryption_status(uploaded_file)\n        \n    if isinstance(encryption_status, str):\n        st.error(f\"Error: {encryption_status}\")\n    else:\n        if encryption_status:\n            st.info(\"This file is encrypted. Decrypt it to proceed.\")\n            action = \"Remove Password (Decrypt)\"\n        else:\n            st.info(\"This file is not encrypted. Encrypt it to add protection.\")\n            action = \"Add Password (Encrypt)\"\n        \n        password = st.text_input(\n            f\"Enter Password to {'Decrypt' if encryption_status else 'Encrypt'} the PDF\",\n            type=\"password\"\n        )\n\n        if st.button(f\"Process: {action}\"):\n            with st.spinner(\"Processing...\"):\n                if encryption_status:  # Decrypt\n                    result = remove_pdf_password(uploaded_file, password)\n                else:  # Encrypt\n                    result = add_pdf_password(uploaded_file, password)\n                \n                if isinstance(result, BytesIO):\n                    st.success(f\"{action} successful!\")\n                    st.download_button(\n                        label=f\"Download {'Decrypted' if encryption_status else 'Encrypted'} PDF\",\n                        data=result,\n                        file_name=\"processed.pdf\",\n                        mime=\"application/pdf\"\n                    )\n                else:\n                    st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF file to begin.\")\n","recorded":"2025-01-07 12:17:13.839516868","filePath":"null","pinned":false},{"value":"streamlit-lottie PyPDF2 requests","recorded":"2025-01-07 12:16:41.959076508","filePath":"null","pinned":false},{"value":"treamlit-lottie PyPDF2 requests\n","recorded":"2025-01-07 12:16:38.640319608","filePath":"null","pinned":false},{"value":"pip install streamlit streamlit-lottie PyPDF2 requests\n","recorded":"2025-01-07 12:16:27.607653775","filePath":"null","pinned":false},{"value":"import json \nimport requests \n\nimport streamlit as st \nfrom streamlit_lottie import st_lottie \n\nurl = requests.get( \n\t\"https://assets2.lottiefiles.com/packages/lf20_mDnmhAgZkb.json\") \n# Creating a blank dictionary to store JSON file, \n# as their structure is similar to Python Dictionary \nurl_json = dict() \n\nif url.status_code == 200: \n\turl_json = url.json() \nelse: \n\tprint(\"Error in the URL\") \n\n\nst.title(\"Adding Lottie Animation in Streamlit WebApp\") \n\nst_lottie(url_json) \n","recorded":"2025-01-07 12:14:09.319461358","filePath":"null","pinned":false},{"value":"import streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\ndef check_encryption_status(uploaded_file):\n    \"\"\"Check if the PDF file is encrypted.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        return reader.is_encrypted\n    except Exception as e:\n        return str(e)\n\ndef remove_pdf_password(uploaded_file, password):\n    \"\"\"Remove the password from a PDF file.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\ndef add_pdf_password(uploaded_file, password):\n    \"\"\"Encrypt a PDF file with a password.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        writer = PdfWriter()\n        \n        for page in reader.pages:\n            writer.add_page(page)\n        \n        writer.encrypt(password)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\n# Streamlit App Configuration\nst.set_page_config(page_title=\"CryptPDF\", layout=\"centered\")\n\n# Add Gradient Background CSS\nst.markdown(\n    \"\"\"\n    \u003cstyle\u003e\n    /* Remove footer */\n    footer {visibility: hidden;}\n\n    /* Gradient background animation */\n    body {\n        background: linear-gradient(-45deg, #ff9a9e, #fad0c4, #fbc2eb, #a18cd1);\n        background-size: 400% 400%;\n        animation: gradient 10s ease infinite;\n    }\n    @keyframes gradient {\n        0% { background-position: 0% 50%; }\n        50% { background-position: 100% 50%; }\n        100% { background-position: 0% 50%; }\n    }\n\n    /* Center content */\n    .stApp {\n        background: transparent;\n    }\n    \u003c/style\u003e\n    \"\"\",\n    unsafe_allow_html=True,\n)\n\n# App Title\nst.title(\"🔐 CryptPDF - Gradient Edition\")\n\nst.markdown(\"\"\"\nUpload a PDF file, and **CryptPDF** will automatically detect if it's encrypted or not. \nYou can then either remove the password or add a new password.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload a PDF\", type=[\"pdf\"])\n\nif uploaded_file:\n    with st.spinner(\"Checking file...\"):\n        encryption_status = check_encryption_status(uploaded_file)\n        \n    if isinstance(encryption_status, str):\n        st.error(f\"Error: {encryption_status}\")\n    else:\n        if encryption_status:\n            st.info(\"This file is encrypted. Decrypt it to proceed.\")\n            action = \"Remove Password (Decrypt)\"\n        else:\n            st.info(\"This file is not encrypted. Encrypt it to add protection.\")\n            action = \"Add Password (Encrypt)\"\n        \n        password = st.text_input(\n            f\"Enter Password to {'Decrypt' if encryption_status else 'Encrypt'} the PDF\",\n            type=\"password\"\n        )\n\n        if st.button(f\"Process: {action}\"):\n            with st.spinner(\"Processing...\"):\n                if encryption_status:  # Decrypt\n                    result = remove_pdf_password(uploaded_file, password)\n                else:  # Encrypt\n                    result = add_pdf_password(uploaded_file, password)\n                \n                if isinstance(result, BytesIO):\n                    st.success(f\"{action} successful!\")\n                    st.download_button(\n                        label=f\"Download {'Decrypted' if encryption_status else 'Encrypted'} PDF\",\n                        data=result,\n                        file_name=\"processed.pdf\",\n                        mime=\"application/pdf\"\n                    )\n                else:\n                    st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF file to begin.\")\n","recorded":"2025-01-07 12:12:52.522318374","filePath":"null","pinned":false},{"value":"import streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\ndef check_encryption_status(uploaded_file):\n    \"\"\"Check if the PDF file is encrypted.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        return reader.is_encrypted\n    except Exception as e:\n        return str(e)\n\ndef remove_pdf_password(uploaded_file, password):\n    \"\"\"Remove the password from a PDF file.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\ndef add_pdf_password(uploaded_file, password):\n    \"\"\"Encrypt a PDF file with a password.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        writer = PdfWriter()\n        \n        for page in reader.pages:\n            writer.add_page(page)\n        \n        writer.encrypt(password)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\n# Streamlit App Configuration\nst.set_page_config(page_title=\"CryptPDF\", layout=\"centered\")\nst.markdown(\n    \"\"\"\n    \u003cstyle\u003e\n    /* Remove footer */\n    footer {visibility: hidden;}\n\n    /* Hacker-style matrix background */\n    body {\n        background-color: black;\n        color: #00FF00;\n    }\n    canvas {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        z-index: -1;\n    }\n    \u003c/style\u003e\n\n    \u003cscript\u003e\n    const canvas = document.createElement('canvas');\n    document.body.appendChild(canvas);\n    const ctx = canvas.getContext('2d');\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    const cols = Math.floor(canvas.width / 20) + 1;\n    const ypos = Array(cols).fill(0);\n\n    function matrixRain() {\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        ctx.fillStyle = '#0F0';\n        ctx.font = '15pt monospace';\n\n        ypos.forEach((y, ind) =\u003e {\n            const text = String.fromCharCode(65 + Math.random() * 58);\n            const x = ind * 20;\n            ctx.fillText(text, x, y);\n\n            if (y \u003e canvas.height + Math.random() * 10000) ypos[ind] = 0;\n            else ypos[ind] = y + 20;\n        });\n    }\n\n    setInterval(matrixRain, 50);\n    \u003c/script\u003e\n    \"\"\",\n    unsafe_allow_html=True,\n)\n\n# App Title\nst.title(\"🖥️ CryptPDF - Hacker Edition\")\n\nst.markdown(\"\"\"\nUpload a PDF file, and **CryptPDF** will automatically detect if it's encrypted or not. \nYou can then either remove the password or add a new password.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload a PDF\", type=[\"pdf\"])\n\nif uploaded_file:\n    with st.spinner(\"Checking file...\"):\n        encryption_status = check_encryption_status(uploaded_file)\n        \n    if isinstance(encryption_status, str):\n        st.error(f\"Error: {encryption_status}\")\n    else:\n        if encryption_status:\n            st.info(\"This file is encrypted. Decrypt it to proceed.\")\n            action = \"Remove Password (Decrypt)\"\n        else:\n            st.info(\"This file is not encrypted. Encrypt it to add protection.\")\n            action = \"Add Password (Encrypt)\"\n        \n        password = st.text_input(\n            f\"Enter Password to {'Decrypt' if encryption_status else 'Encrypt'} the PDF\",\n            type=\"password\"\n        )\n\n        if st.button(f\"Process: {action}\"):\n            with st.spinner(\"Processing...\"):\n                if encryption_status:  # Decrypt\n                    result = remove_pdf_password(uploaded_file, password)\n                else:  # Encrypt\n                    result = add_pdf_password(uploaded_file, password)\n                \n                if isinstance(result, BytesIO):\n                    st.success(f\"{action} successful!\")\n                    st.download_button(\n                        label=f\"Download {'Decrypted' if encryption_status else 'Encrypted'} PDF\",\n                        data=result,\n                        file_name=\"processed.pdf\",\n                        mime=\"application/pdf\"\n                    )\n                else:\n                    st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF file to begin.\")\n","recorded":"2025-01-07 12:11:12.409828280","filePath":"null","pinned":false},{"value":"sudo pacman -S qemu-full qemu-img libvirt virt-install virt-manager virt-viewer spice-vdagent edk3-ovmf dnsmasq swtpm guestfs-tools libosinfo tuned\nimport streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\ndef check_encryption_status(uploaded_file):\n    \"\"\"Check if the PDF file is encrypted.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        return reader.is_encrypted\n    except Exception as e:\n        return str(e)\n\ndef remove_pdf_password(uploaded_file, password):\n    \"\"\"Remove the password from a PDF file.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\ndef add_pdf_password(uploaded_file, password):\n    \"\"\"Encrypt a PDF file with a password.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        writer = PdfWriter()\n        \n        for page in reader.pages:\n            writer.add_page(page)\n        \n        writer.encrypt(password)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\n# Streamlit App Configuration\nst.set_page_config(page_title=\"CryptPDF\", layout=\"centered\")\nst.markdown(\n    \"\"\"\n    \u003cstyle\u003e\n    /* Remove footer */\n    footer {visibility: hidden;}\n\n    /* Hacker-style matrix background */\n    body {\n        background-color: black;\n        color: #00FF00;\n    }\n    canvas {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        z-index: -1;\n    }\n    \u003c/style\u003e\n\n    \u003cscript\u003e\n    const canvas = document.createElement('canvas');\n    document.body.appendChild(canvas);\n    const ctx = canvas.getContext('2d');\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    const cols = Math.floor(canvas.width / 20) + 1;\n    const ypos = Array(cols).fill(0);\n\n    function matrixRain() {\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        ctx.fillStyle = '#0F0';\n        ctx.font = '15pt monospace';\n\n        ypos.forEach((y, ind) =\u003e {\n            const text = String.fromCharCode(65 + Math.random() * 58);\n            const x = ind * 20;\n            ctx.fillText(text, x, y);\n\n            if (y \u003e canvas.height + Math.random() * 10000) ypos[ind] = 0;\n            else ypos[ind] = y + 20;\n        });\n    }\n\n    setInterval(matrixRain, 50);\n    \u003c/script\u003e\n    \"\"\",\n    unsafe_allow_html=True,\n)\n\n# App Title\nst.title(\"🖥️ CryptPDF - Hacker Edition\")\n\nst.markdown(\"\"\"\nUpload a PDF file, and **CryptPDF** will automatically detect if it's encrypted or not. \nYou can then either remove the password or add a new password.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload a PDF\", type=[\"pdf\"])\n\nif uploaded_file:\n    with st.spinner(\"Checking file...\"):\n        encryption_status = check_encryption_status(uploaded_file)\n        \n    if isinstance(encryption_status, str):\n        st.error(f\"Error: {encryption_status}\")\n    else:\n        if encryption_status:\n            st.info(\"This file is encrypted. Decrypt it to proceed.\")\n            action = \"Remove Password (Decrypt)\"\n        else:\n            st.info(\"This file is not encrypted. Encrypt it to add protection.\")\n            action = \"Add Password (Encrypt)\"\n        \n        password = st.text_input(\n            f\"Enter Password to {'Decrypt' if encryption_status else 'Encrypt'} the PDF\",\n            type=\"password\"\n        )\n\n        if st.button(f\"Process: {action}\"):\n            with st.spinner(\"Processing...\"):\n                if encryption_status:  # Decrypt\n                    result = remove_pdf_password(uploaded_file, password)\n                else:  # Encrypt\n                    result = add_pdf_password(uploaded_file, password)\n                \n                if isinstance(result, BytesIO):\n                    st.success(f\"{action} successful!\")\n                    st.download_button(\n                        label=f\"Download {'Decrypted' if encryption_status else 'Encrypted'} PDF\",\n                        data=result,\n                        file_name=\"processed.pdf\",\n                        mime=\"application/pdf\"\n                    )\n                else:\n                    st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF file to begin.\")\n","recorded":"2025-01-07 12:08:01.078066419","filePath":"null","pinned":false},{"value":"import streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\ndef check_encryption_status(uploaded_file):\n    \"\"\"Check if the PDF file is encrypted.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        return reader.is_encrypted\n    except Exception as e:\n        return str(e)\n\ndef remove_pdf_password(uploaded_file, password):\n    \"\"\"Remove the password from a PDF file.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\ndef add_pdf_password(uploaded_file, password):\n    \"\"\"Encrypt a PDF file with a password.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        writer = PdfWriter()\n        \n        for page in reader.pages:\n            writer.add_page(page)\n        \n        writer.encrypt(password)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\n# Streamlit App Configuration\nst.set_page_config(page_title=\"CryptPDF\", layout=\"centered\")\nst.markdown(\n    \"\"\"\n    \u003cstyle\u003e\n    /* Remove footer */\n    footer {visibility: hidden;}\n\n    /* Background animation */\n    body {\n        background: linear-gradient(-45deg, #ff9a9e, #fad0c4, #fbc2eb, #a18cd1);\n        background-size: 400% 400%;\n        animation: gradient 15s ease infinite;\n    }\n    @keyframes gradient {\n        0% { background-position: 0% 50%; }\n        50% { background-position: 100% 50%; }\n        100% { background-position: 0% 50%; }\n    }\n    \u003c/style\u003e\n    \"\"\",\n    unsafe_allow_html=True,\n)\n\n# App Title\nst.title(\"🔐 CryptPDF\")\n\nst.markdown(\"\"\"\nUpload a PDF file, and **CryptPDF** will automatically detect if it's encrypted or not. \nYou can then either remove the password or add a new password.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload a PDF\", type=[\"pdf\"])\n\nif uploaded_file:\n    with st.spinner(\"Checking file...\"):\n        encryption_status = check_encryption_status(uploaded_file)\n        \n    if isinstance(encryption_status, str):\n        st.error(f\"Error: {encryption_status}\")\n    else:\n        if encryption_status:\n            st.info(\"This file is encrypted. Decrypt it to proceed.\")\n            action = \"Remove Password (Decrypt)\"\n        else:\n            st.info(\"This file is not encrypted. Encrypt it to add protection.\")\n            action = \"Add Password (Encrypt)\"\n        \n        password = st.text_input(\n            f\"Enter Password to {'Decrypt' if encryption_status else 'Encrypt'} the PDF\",\n            type=\"password\"\n        )\n\n        if st.button(f\"Process: {action}\"):\n            with st.spinner(\"Processing...\"):\n                if encryption_status:  # Decrypt\n                    result = remove_pdf_password(uploaded_file, password)\n                else:  # Encrypt\n                    result = add_pdf_password(uploaded_file, password)\n                \n                if isinstance(result, BytesIO):\n                    st.success(f\"{action} successful!\")\n                    st.download_button(\n                        label=f\"Download {'Decrypted' if encryption_status else 'Encrypted'} PDF\",\n                        data=result,\n                        file_name=\"processed.pdf\",\n                        mime=\"application/pdf\"\n                    )\n                else:\n                    st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF file to begin.\")\n","recorded":"2025-01-07 12:07:50.247184053","filePath":"null","pinned":false},{"value":"import streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\ndef check_encryption_status(uploaded_file):\n    \"\"\"Check if the PDF file is encrypted.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        return reader.is_encrypted\n    except Exception as e:\n        return str(e)\n\ndef remove_pdf_password(uploaded_file, password):\n    \"\"\"Remove the password from a PDF file.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\ndef add_pdf_password(uploaded_file, password):\n    \"\"\"Encrypt a PDF file with a password.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        writer = PdfWriter()\n        \n        for page in reader.pages:\n            writer.add_page(page)\n        \n        writer.encrypt(password)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\n# Streamlit App\nst.set_page_config(page_title=\"CryptPDF\", layout=\"centered\")\nst.title(\"🔐 CryptPDF\")\n\nst.markdown(\"\"\"\nUpload a PDF file, and the app will automatically detect if it's encrypted or not. \nBased on the detection, you can either remove the password or add a password.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload a PDF\", type=[\"pdf\"])\n\nif uploaded_file:\n    with st.spinner(\"Checking file...\"):\n        encryption_status = check_encryption_status(uploaded_file)\n        \n    if isinstance(encryption_status, str):\n        st.error(f\"Error: {encryption_status}\")\n    else:\n        if encryption_status:\n            st.info(\"This file is encrypted. Decrypt it to proceed.\")\n            action = \"Remove Password (Decrypt)\"\n        else:\n            st.info(\"This file is not encrypted. Encrypt it to add protection.\")\n            action = \"Add Password (Encrypt)\"\n        \n        password = st.text_input(\n            f\"Enter Password to {'Decrypt' if encryption_status else 'Encrypt'} the PDF\",\n            type=\"password\"\n        )\n\n        if st.button(f\"Process: {action}\"):\n            with st.spinner(\"Processing...\"):\n                if encryption_status:  # Decrypt\n                    result = remove_pdf_password(uploaded_file, password)\n                else:  # Encrypt\n                    result = add_pdf_password(uploaded_file, password)\n                \n                if isinstance(result, BytesIO):\n                    st.success(f\"{action} successful!\")\n                    st.download_button(\n                        label=f\"Download {'Decrypted' if encryption_status else 'Encrypted'} PDF\",\n                        data=result,\n                        file_name=\"processed.pdf\",\n                        mime=\"application/pdf\"\n                    )\n                else:\n                    st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF file to begin.\")\n\nst.markdown(\"---\")\n","recorded":"2025-01-07 12:06:31.031652540","filePath":"null","pinned":false},{"value":"st.markdown(\"Made with ❤️ using Streamlit.\")\n","recorded":"2025-01-07 12:04:39.277834241","filePath":"null","pinned":false},{"value":"import streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\ndef remove_pdf_password(uploaded_file, password):\n    \"\"\"Remove the password from a PDF file.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\ndef add_pdf_password(uploaded_file, password):\n    \"\"\"Encrypt a PDF file with a password.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        writer = PdfWriter()\n        \n        for page in reader.pages:\n            writer.add_page(page)\n        \n        writer.encrypt(password)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\n# Streamlit App\nst.set_page_config(page_title=\"PDF Encrypt/Decrypt\", layout=\"centered\")\nst.title(\"🔐 PDF Encrypt and Decrypt\")\n\nst.markdown(\"\"\"\nUpload a PDF file to either encrypt (add password) or decrypt (remove password). This tool does not store your files.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload a PDF\", type=[\"pdf\"])\n\nif uploaded_file:\n    # Choose Action\n    action = st.radio(\n        \"Select an Action:\",\n        (\"Remove Password (Decrypt)\", \"Add Password (Encrypt)\")\n    )\n    \n    password = st.text_input(\"Enter Password\", type=\"password\")\n\n    if action == \"Add Password (Encrypt)\" and not password:\n        st.warning(\"Please provide a password to encrypt the file.\")\n\n    if action == \"Remove Password (Decrypt)\" and not password:\n        st.warning(\"Please provide the password to decrypt the file.\")\n    \n    if st.button(\"Process\"):\n        with st.spinner(\"Processing...\"):\n            if action == \"Remove Password (Decrypt)\":\n                result = remove_pdf_password(uploaded_file, password)\n            else:  # Add Password (Encrypt)\n                result = add_pdf_password(uploaded_file, password)\n            \n            if isinstance(result, BytesIO):\n                st.success(f\"{action} successful!\")\n                st.download_button(\n                    label=f\"Download {'Decrypted' if action == 'Remove Password (Decrypt)' else 'Encrypted'} PDF\",\n                    data=result,\n                    file_name=\"processed.pdf\",\n                    mime=\"application/pdf\"\n                )\n            else:\n                st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF file to begin.\")\n\nst.markdown(\"---\")\nst.markdown(\"Made with ❤️ using Streamlit.\")\n","recorded":"2025-01-07 12:01:53.584061894","filePath":"null","pinned":false},{"value":"import streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\ndef check_encryption_status(uploaded_file):\n    \"\"\"Check if the PDF file is encrypted.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        return reader.is_encrypted\n    except Exception as e:\n        return str(e)\n\ndef remove_pdf_password(uploaded_file, password):\n    \"\"\"Remove the password from a PDF file.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\ndef add_pdf_password(uploaded_file, password):\n    \"\"\"Encrypt a PDF file with a password.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        writer = PdfWriter()\n        \n        for page in reader.pages:\n            writer.add_page(page)\n        \n        writer.encrypt(password)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\n# Streamlit App\nst.set_page_config(page_title=\"PDF Encrypt/Decrypt\", layout=\"centered\")\nst.title(\"🔐 PDF Encrypt and Decrypt\")\n\nst.markdown(\"\"\"\nUpload a PDF file, and the app will automatically detect if it's encrypted or not. \nBased on the detection, you can either remove the password or add a password.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload a PDF\", type=[\"pdf\"])\n\nif uploaded_file:\n    with st.spinner(\"Checking file...\"):\n        encryption_status = check_encryption_status(uploaded_file)\n        \n    if isinstance(encryption_status, str):\n        st.error(f\"Error: {encryption_status}\")\n    else:\n        if encryption_status:\n            st.info(\"This file is encrypted. Decrypt it to proceed.\")\n            action = \"Remove Password (Decrypt)\"\n        else:\n            st.info(\"This file is not encrypted. Encrypt it to add protection.\")\n            action = \"Add Password (Encrypt)\"\n        \n        password = st.text_input(\n            f\"Enter Password to {'Decrypt' if encryption_status else 'Encrypt'} the PDF\",\n            type=\"password\"\n        )\n\n        if st.button(f\"Process: {action}\"):\n            with st.spinner(\"Processing...\"):\n                if encryption_status:  # Decrypt\n                    result = remove_pdf_password(uploaded_file, password)\n                else:  # Encrypt\n                    result = add_pdf_password(uploaded_file, password)\n                \n                if isinstance(result, BytesIO):\n                    st.success(f\"{action} successful!\")\n                    st.download_button(\n                        label=f\"Download {'Decrypted' if encryption_status else 'Encrypted'} PDF\",\n                        data=result,\n                        file_name=\"processed.pdf\",\n                        mime=\"application/pdf\"\n                    )\n                else:\n                    st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF file to begin.\")\n\nst.markdown(\"---\")\nst.markdown(\"Made with ❤️ using Streamlit.\")\n","recorded":"2025-01-07 12:01:48.064706649","filePath":"null","pinned":false},{"value":"import streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\ndef remove_pdf_password(uploaded_file, password):\n    try:\n        # Read the encrypted PDF\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        # Create a writer to save the unprotected PDF\n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        # Save the unprotected PDF to a BytesIO stream\n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\n# Streamlit App\nst.set_page_config(page_title=\"PDF Password Remover\", layout=\"centered\")\nst.title(\"🔒 PDF Password Remover\")\n\nst.markdown(\"\"\"\nUpload an encrypted PDF, provide its password, and download the unlocked version. This tool does not store your files.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload Encrypted PDF\", type=[\"pdf\"])\npassword = st.text_input(\"Enter Password\", type=\"password\")\n\nif uploaded_file and password:\n    if st.button(\"Remove Password\"):\n        with st.spinner(\"Processing...\"):\n            result = remove_pdf_password(uploaded_file, password)\n            if isinstance(result, BytesIO):\n                st.success(\"Password removed successfully!\")\n                st.download_button(\n                    label=\"Download Unlocked PDF\",\n                    data=result,\n                    file_name=\"unlocked.pdf\",\n                    mime=\"application/pdf\"\n                )\n            else:\n                st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF and enter the password to proceed.\")\n\nst.markdown(\"---\")\n# st.markdown(\"Made with ❤️ using Streamlit.\")\n","recorded":"2025-01-07 11:59:57.265874622","filePath":"null","pinned":false},{"value":"from PyPDF2 import PdfFileReader,PdfFileWriter\n### open the current pdf\nfile_pdf=PdfFileReader('file.pdf')\n### Object for pdf writer\nout_pdf=PdfFileWriter()\n\nfor i in range(file_pdf.numPages):\n    page_details=file_pdf.getPage(i)\n    ### Add to the output page\n    out_pdf.addPage(page_details)\n\npassword=\"password\"\n\nout_pdf.encrypt(password)\n\nwith open(\"encryptedtickets.pdf\",\"wb\") as filename:\n    out_pdf.write(filename)","recorded":"2025-01-07 11:58:57.982670163","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/PDF Password Remover","recorded":"2025-01-07 11:58:08.424937945","filePath":"null","pinned":false},{"value":"pycryptodome","recorded":"2025-01-07 11:55:28.534193563","filePath":"null","pinned":false},{"value":"streamlit PyPDF2","recorded":"2025-01-07 11:54:58.436268660","filePath":"null","pinned":false},{"value":"import streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\ndef remove_pdf_password(uploaded_file, password):\n    try:\n        # Read the encrypted PDF\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        # Create a writer to save the unprotected PDF\n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        # Save the unprotected PDF to a BytesIO stream\n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\n# Streamlit App\nst.set_page_config(page_title=\"PDF Password Remover\", layout=\"centered\")\nst.title(\"🔒 PDF Password Remover\")\n\nst.markdown(\"\"\"\nUpload an encrypted PDF, provide its password, and download the unlocked version. This tool does not store your files.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload Encrypted PDF\", type=[\"pdf\"])\npassword = st.text_input(\"Enter Password\", type=\"password\")\n\nif uploaded_file and password:\n    if st.button(\"Remove Password\"):\n        with st.spinner(\"Processing...\"):\n            result = remove_pdf_password(uploaded_file, password)\n            if isinstance(result, BytesIO):\n                st.success(\"Password removed successfully!\")\n                st.download_button(\n                    label=\"Download Unlocked PDF\",\n                    data=result,\n                    file_name=\"unlocked.pdf\",\n                    mime=\"application/pdf\"\n                )\n            else:\n                st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF and enter the password to proceed.\")\n\nst.markdown(\"---\")\nst.markdown(\"Made with ❤️ using Streamlit.\")\n","recorded":"2025-01-07 11:54:44.428194819","filePath":"null","pinned":false},{"value":"pip install pycryptodome","recorded":"2025-01-07 11:52:37.764238521","filePath":"null","pinned":false},{"value":"pip install --upgrade PyPDF2\n","recorded":"2025-01-07 11:52:22.245537637","filePath":"null","pinned":false},{"value":"python -m pip show pycryptodome\n","recorded":"2025-01-07 11:52:13.178523084","filePath":"null","pinned":false},{"value":"(base) \u003e\u003e\u003e    Downloads  python 1.py\nAn error occurred: PyCryptodome is required for AES algorithm","recorded":"2025-01-07 11:50:06.922648254","filePath":"null","pinned":false},{"value":"68,427","recorded":"2025-01-07 11:21:28.505640565","filePath":"null","pinned":false},{"value":"from PyPDF2 import PdfReader, PdfWriter\n\ndef remove_pdf_password(input_file, output_file, password):\n    try:\n        # Read the encrypted PDF\n        reader = PdfReader(input_file)\n        \n        # Check if the file is encrypted\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Failed to decrypt the PDF. Incorrect password.\")\n        \n        # Create a writer to save the unprotected PDF\n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        # Write the decrypted content to a new file\n        with open(output_file, \"wb\") as out_file:\n            writer.write(out_file)\n        \n        print(f\"Password removed successfully. File saved as '{output_file}'.\")\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n\n# Example usage\nif __name__ == \"__main__\":\n    input_pdf = \"protected.pdf\"  # Path to the encrypted PDF\n    output_pdf = \"unprotected.pdf\"  # Path to the output PDF\n    pdf_password = \"your_password\"  # The password for the PDF\n\n    remove_pdf_password(input_pdf, output_pdf, pdf_password)\n","recorded":"2025-01-07 11:16:13.019444985","filePath":"null","pinned":false},{"value":"pip install PyPDF2\n","recorded":"2025-01-07 11:16:03.310344145","filePath":"null","pinned":false},{"value":"venkataramireddychaganti41@gmail.com","recorded":"2025-01-07 10:21:46.006391571","filePath":"null","pinned":false},{"value":"sudo usermod -aG libvirt \"$USER\"\nsudo virsh net-start default\n\n","recorded":"2025-01-06 18:54:04.029802155","filePath":"null","pinned":false},{"value":"sudo systemctl enable --now libvirtd.service\n","recorded":"2025-01-06 18:53:50.652213315","filePath":"null","pinned":false},{"value":"virt-manager spice-vdagent ","recorded":"2025-01-06 18:53:39.294140998","filePath":"null","pinned":false},{"value":"  rm Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n","recorded":"2025-01-06 18:53:11.385347366","filePath":"null","pinned":false},{"value":"  # Remove the installer after installation\n","recorded":"2025-01-06 18:53:11.033764750","filePath":"null","pinned":false},{"value":"  bash Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n","recorded":"2025-01-06 18:53:10.374817458","filePath":"null","pinned":false},{"value":"  # Run the installer\n","recorded":"2025-01-06 18:53:10.010376002","filePath":"null","pinned":false},{"value":"  wget https://repo.anaconda.com/miniconda/Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n","recorded":"2025-01-06 18:53:09.300034035","filePath":"null","pinned":false},{"value":"  # Download Miniconda installer\n","recorded":"2025-01-06 18:53:08.968888802","filePath":"null","pinned":false},{"value":"echo \"Setting up Miniconda...\"\n\n# Ask the user if they want to install Miniconda\ndialog --title \"Install Miniconda?\" \\\n  --yesno \"Would you like to install Miniconda? (Recommended for Python and Data Science)\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Miniconda installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Miniconda installation will begin now.\" 10 50\n\n  # Download Miniconda installer\n  wget https://repo.anaconda.com/miniconda/Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Run the installer\n  bash Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Remove the installer after installation\n  rm Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  dialog --msgbox \"Miniconda installation completed.\" 10 50\nfi\n\nclear","recorded":"2025-01-06 18:52:01.244569683","filePath":"null","pinned":false},{"value":"Unable to complete install: 'internal error: QEMU unexpectedly closed the monitor (vm='archlinux'): 2025-01-06T13:18:53.376577Z qemu-system-x86_64: -device {\"driver\":\"virtio-vga-gl\",\"id\":\"video0\",\"max_outputs\":1,\"bus\":\"pcie.0\",\"addr\":\"0x1\"}: The display backend does not have OpenGL support enabled\nIt can be enabled with '-display BACKEND,gl=on' where BACKEND is the name of the display backend to use.'\n\nTraceback (most recent call last):\n  File \"/usr/share/virt-manager/virtManager/asyncjob.py\", line 71, in cb_wrapper\n    callback(asyncjob, *args, **kwargs)\n    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/share/virt-manager/virtManager/createvm.py\", line 2008, in _do_async_install\n    installer.start_install(guest, meter=meter)\n    ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/share/virt-manager/virtinst/install/installer.py\", line 726, in start_install\n    domain = self._create_guest(\n            guest, meter, initial_xml, final_xml,\n            doboot, transient)\n  File \"/usr/share/virt-manager/virtinst/install/installer.py\", line 667, in _create_guest\n    domain = self.conn.createXML(initial_xml or final_xml, 0)\n  File \"/usr/lib/python3.13/site-packages/libvirt.py\", line 4545, in createXML\n    raise libvirtError('virDomainCreateXML() failed')\nlibvirt.libvirtError: internal error: QEMU unexpectedly closed the monitor (vm='archlinux'): 2025-01-06T13:18:53.376577Z qemu-system-x86_64: -device {\"driver\":\"virtio-vga-gl\",\"id\":\"video0\",\"max_outputs\":1,\"bus\":\"pcie.0\",\"addr\":\"0x1\"}: The display backend does not have OpenGL support enabled\nIt can be enabled with '-display BACKEND,gl=on' where BACKEND is the name of the display backend to use.\n","recorded":"2025-01-06 18:49:09.785408470","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/archlinux-2025.01.01-x86_64.iso","recorded":"2025-01-06 18:13:05.660501922","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/GST_STATEMENT_ASSESMENT_YEAR_24_25.pdf","recorded":"2025-01-06 18:12:18.956334444","filePath":"null","pinned":false},{"value":"https://archlinux.org/releng/releases/2025.01.01/torrent/","recorded":"2025-01-06 17:59:40.959270786","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up SDDM (Simple Desktop Display Manager)...\"\n\n# Install SDDM\necho \"Installing SDDM...\"\n\nsudo pacman -S --noconfirm sddm qt6-5compat qt6-declarative qt6-svg\n\necho \"Enabling SDDM to start at boot...\"\nsudo systemctl enable sddm.service --now\n\nsudo cp ~/dotfiles/Extras/Extras/usr/share/sddm/themes/simple-sddm/ /usr/share/sddm/themes\n\nsudo cp etc/sddm.conf /etc/sddm.conf\n\ncd ~/dotfiles/\n\n# Show confirmation message\ndialog --msgbox \"SDDM has been installed and enabled to start at boot.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:48:09.768796522","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up SDDM (Simple Desktop Display Manager)...\"\n\n# Install SDDM\necho \"Installing SDDM...\"\n\nsudo pacman -S --noconfirm sddm qt6-5compat qt6-declarative qt6-svg\n\necho \"Enabling SDDM to start at boot...\"\nsudo systemctl enable sddm.service --now\n\nsudo cp ~/dotfiles/Extras/Extras/usr/share/sddm/themes/simple-sddm/ /usr/share/sddm/themes\n\nsudo cp etc/sddm.conf /etc/sddm.conf\n\n# Show confirmation message\ndialog --msgbox \"SDDM has been installed and enabled to start at boot.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:47:51.973976993","filePath":"null","pinned":false},{"value":"# Enable SDDM to start at boot\n","recorded":"2025-01-06 17:47:30.858755979","filePath":"null","pinned":false},{"value":"sudo pacman -S --noconfirm sddm\n","recorded":"2025-01-06 17:47:27.877237339","filePath":"null","pinned":false},{"value":"sddm qt6-5compat qt6-declarative qt6-svg","recorded":"2025-01-06 17:47:15.300308545","filePath":"null","pinned":false},{"value":"sudo cp etc/sddm.conf /etc/sddm.conf\n","recorded":"2025-01-06 17:47:01.708325293","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up pacman.conf...\"\n\n# Use sed to find the #UseSyslog line and append the settings under it\nsudo sed -i '/#UseSyslog/a\\\nILoveCandy\\nParallelDownloads=10\\nColor' /etc/pacman.conf\n\necho \"Configuration added under #UseSyslog.\"\n","recorded":"2025-01-06 17:46:48.658538245","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up SDDM (Simple Desktop Display Manager)...\"\n\n# Ask user to install SDDM\ninstall_sddm=$(dialog --title \"Install SDDM\" \\\n  --yesno \"Do you want to install SDDM (Simple Desktop Display Manager)?\" 10 50)\n\n# Check user's choice\nif [ $? -eq 0 ]; then\n  echo \"Installing SDDM...\"\n  sudo pacman -S --noconfirm sddm\n\n  # Ask user if they want to enable SDDM at boot\n  enable_sddm=$(dialog --title \"Enable SDDM\" \\\n    --yesno \"Do you want to enable SDDM to start at boot?\" 10 50)\n\n  # Enable SDDM if user wants\n  if [ $? -eq 0 ]; then\n    echo \"Enabling SDDM to start at boot...\"\n    sudo systemctl enable sddm.service --now\n    dialog --msgbox \"SDDM has been installed and enabled to start at boot.\" 10 50\n  else\n    dialog --msgbox \"SDDM has been installed but not enabled to start at boot.\" 10 50\n  fi\nelse\n  dialog --msgbox \"SDDM installation canceled. Exiting.\" 10 50\n  exit 1\nfi\n\nclear\n","recorded":"2025-01-06 17:46:48.649793915","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up SDDM (Simple Desktop Display Manager)...\"\n\n# Install SDDM\necho \"Installing SDDM...\"\nsudo pacman -S --noconfirm sddm\n\n# Enable SDDM to start at boot\necho \"Enabling SDDM to start at boot...\"\nsudo systemctl enable sddm.service --now\n\n# Show confirmation message\ndialog --msgbox \"SDDM has been installed and enabled to start at boot.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:46:46.585077759","filePath":"null","pinned":false},{"value":"echo \"Installing main packages and application that I personally use the most...\" \u0026\u0026 sleep 1\n\n# Function to display the browser selection menu\ninstall_browser() {\n  # Display the checkbox menu\n  choices=$(whiptail --title \"Browser Selection\" \\\n    --checklist \"Select the browsers you want to install:\" 15 50 6 \\\n    \"   Zen-Browser   \" \"\" OFF \\\n    \"     Firefox     \" \"\" OFF \\\n    \"    Chromium     \" \"\" OFF \\\n    \"     Vivaldi     \" \"\" OFF \\\n    \"   qutebrowser   \" \"\" OFF \\\n    \"     Brave       \" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\n  # Check if the user pressed Cancel\n  if [ $? -ne 0 ]; then\n    echo \"No selection made. Exiting.\"\n    exit 1\n  fi\n\n  # Process the selected options\n  for choice in $choices; do\n    case $choice in\n    \"\\\"   Zen-Browser   \\\"\")\n      echo \"Installing Zen-Browser...\"\n      paru -S --noconfirm --needed zen-broswer-bin\n      # Video Download Helper\n      curl -sSLf https://github.com/aclap-dev/vdhcoapp/releases/latest/download/install.sh | bash\n      ;;\n    \"\\\"     Firefox     \\\"\")\n      echo \"Installing Firefox...\"\n      sudo pacman -S --noconfirm firefox\n      ;;\n    \"\\\"    Chromium     \\\"\")\n      echo \"Installing Chromium...\"\n      sudo pacman -S --noconfirm chromium\n      ;;\n    \"\\\"     Vivaldi     \\\"\")\n      echo \"Installing Vivaldi...\"\n      paru -S --noconfirm vivaldi\n      ;;\n    \"\\\"   qutebrowser   \\\"\")\n      echo \"Installing qutebrowser...\"\n      sudo pacman -S --noconfirm qutebrowser\n      ;;\n    \"\\\"     Brave       \\\"\")\n      echo \"Installing Brave...\"\n      paru -S --noconfirm brave-bin\n      ;;\n    *)\n      echo \"Invalid choice: $choice\"\n      ;;\n    esac\n  done\n}\n\n# Call the browser installation function\ninstall_browser\n\ndialog --msgbox \"Selected browsers have been installed.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:44:50.249348397","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Installing main packages and applications that I personally use the most...\" \u0026\u0026 sleep 1\n\n# Function to display the browser selection menu using dialog\ninstall_browser() {\n  # Display the checklist menu\n  choices=$(dialog --title \"Browser Selection\" \\\n    --checklist \"Select the browsers you want to install:\" 15 50 6 \\\n    \"Zen-Browser\" \"\" OFF \\\n    \"Firefox\" \"\" OFF \\\n    \"Chromium\" \"\" OFF \\\n    \"Vivaldi\" \"\" OFF \\\n    \"qutebrowser\" \"\" OFF \\\n    \"Brave\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\n  # Check if the user pressed Cancel\n  if [ $? -ne 0 ]; then\n    echo \"No selection made. Exiting.\"\n    exit 1\n  fi\n\n  # Process the selected options\n  for choice in $choices; do\n    case $choice in\n    \"Zen-Browser\")\n      echo \"Installing Zen-Browser...\"\n      paru -S --noconfirm --needed zen-browser-bin\n      # Video Download Helper\n      curl -sSLf https://github.com/aclap-dev/vdhcoapp/releases/latest/download/install.sh | bash\n      ;;\n    \"Firefox\")\n      echo \"Installing Firefox...\"\n      sudo pacman -S --noconfirm firefox\n      ;;\n    \"Chromium\")\n      echo \"Installing Chromium...\"\n      sudo pacman -S --noconfirm chromium\n      ;;\n    \"Vivaldi\")\n      echo \"Installing Vivaldi...\"\n      paru -S --noconfirm vivaldi\n      ;;\n    \"qutebrowser\")\n      echo \"Installing qutebrowser...\"\n      sudo pacman -S --noconfirm qutebrowser\n      ;;\n    \"Brave\")\n      echo \"Installing Brave...\"\n      paru -S --noconfirm brave-bin\n      ;;\n    *)\n      echo \"Invalid choice: $choice\"\n      ;;\n    esac\n  done\n}\n\n# Call the browser installation function\ninstall_browser\n\ndialog --msgbox \"Selected browsers have been installed.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:44:40.980684946","filePath":"null","pinned":false},{"value":"# sudo sed -i '/^\\[options\\]/a '\"$lines_to_append\" /etc/pacman.conf\n","recorded":"2025-01-06 17:43:55.087795692","filePath":"null","pinned":false},{"value":"# lines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n","recorded":"2025-01-06 17:43:54.848357191","filePath":"null","pinned":false},{"value":"# Setting up pacman.conf\n","recorded":"2025-01-06 17:43:54.570168460","filePath":"null","pinned":false},{"value":"echo \"Setting up pacman.conf...\"\n\n# Define the lines to append\nlines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n\n# Check if the [options] section exists\nif grep -q '^\\[options\\]' /etc/pacman.conf; then\n  # Use sed to find the #UseSyslog line and append the settings under it\n  sudo sed -i '/#UseSyslog/a\\\nILoveCandy\\nParallelDownloads=10\\nColor' /etc/pacman.conf\n  echo \"Configuration added under #UseSyslog.\"\nelse\n  echo \"[options] section not found. Skipping...\"\nfi","recorded":"2025-01-06 17:43:34.270384585","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up pacman.conf...\"\n\n# Define the lines to append\nlines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n\n# Check if the [options] section exists\nif grep -q '^\\[options\\]' /etc/pacman.conf; then\n  # Use sed to find the #UseSyslog line and append the settings under it\n  sudo sed -i '/#UseSyslog/a\\\nILoveCandy\\nParallelDownloads=10\\nColor' /etc/pacman.conf\n  echo \"Configuration added under #UseSyslog.\"\nelse\n  echo \"[options] section not found. Skipping...\"\nfi\n","recorded":"2025-01-06 17:43:34.260842813","filePath":"null","pinned":false},{"value":"# Setting up pacman.conf\n# lines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n# sudo sed -i '/^\\[options\\]/a '\"$lines_to_append\" /etc/pacman.conf","recorded":"2025-01-06 17:42:58.003664259","filePath":"null","pinned":false},{"value":"#GRUB_THEME=\"\"","recorded":"2025-01-06 17:42:30.291879868","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up pacman.conf...\"\n\n# Define the lines to append\nlines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n\n# Check if the [options] section exists\nif grep -q '^\\[options\\]' /etc/pacman.conf; then\n  # Check if the lines already exist to avoid duplicates\n  for line in $lines_to_append; do\n    if ! grep -q \"$line\" /etc/pacman.conf; then\n      echo -e \"$line\" | sudo tee -a /etc/pacman.conf \u003e /dev/null\n      echo \"Added: $line\"\n    else\n      echo \"Already present: $line\"\n    fi\n  done\nelse\n  echo \"[options] section not found. Skipping...\"\nfi\n","recorded":"2025-01-06 17:42:30.283396932","filePath":"null","pinned":false},{"value":"#UseSyslog","recorded":"2025-01-06 17:42:08.365909021","filePath":"null","pinned":false},{"value":"ILoveCandy\nParallelDownloads=10\nColor","recorded":"2025-01-06 17:41:27.980899597","filePath":"null","pinned":false},{"value":"!/bin/bash\n\necho \"Setting up pacman.conf...\"\n\n# Define the lines to append\nlines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n\n# Check if the [options] section exists\nif grep -q '^\\[options\\]' /etc/pacman.conf; then\n  # Append lines to the [options] section\n  echo -e \"$lines_to_append\" | sudo tee -a /etc/pacman.conf \u003e /dev/null\n  echo \"Configuration added successfully.\"\nelse\n  echo \"[options] section not found. Skipping...\"\nfi\n","recorded":"2025-01-06 17:41:09.764557617","filePath":"null","pinned":false},{"value":"[options]\n# The following paths are commented out with their default values listed.\n# If you wish to use different paths, uncomment and update the paths.\n#RootDir     = /\n#DBPath      = /var/lib/pacman/\n#CacheDir    = /var/cache/pacman/pkg/\n#LogFile     = /var/log/pacman.log\n#GPGDir      = /etc/pacman.d/gnupg/\n#HookDir     = /etc/pacman.d/hooks/\nHoldPkg     = pacman glibc\n#XferCommand = /usr/bin/curl -L -C - -f -o %o %u\n#XferCommand = /usr/bin/wget --passive-ftp -c -O %o %u\n#CleanMethod = KeepInstalled\nArchitecture = auto\n\n# Pacman won't upgrade packages listed in IgnorePkg and members of IgnoreGroup\n#IgnorePkg   =\n#IgnoreGroup =\n\n#NoUpgrade   =\n#NoExtract   =\n\n# Misc options\n#UseSyslog\nColor\nILoveCandy\n#NoProgressBar\nCheckSpace\n#VerbosePkgLists\nParallelDownloads = 10\nDownloadUser = alpm\n#DisableSandbox","recorded":"2025-01-06 17:40:23.923798021","filePath":"null","pinned":false},{"value":"#","recorded":"2025-01-06 17:39:36.793151292","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up GRUB theme...\"\n\n# Ask if the user wants to set up a GRUB theme\ndialog --title \"Install GRUB theme?\" \\\n  --yesno \"Would you like to install a GRUB theme?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"GRUB theme setup skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"GRUB theme setup will begin now.\" 10 50\nfi\n\n# sudo cp ~/dotfiles/Extras/Extras/boot/grub/themes/SekiroShadow/ /boot/grub/themes/\n\n# Enable the GRUB theme\necho \"Setting GRUB theme...\"\nsudo sed -i 's/#GRUB_THEME=\"\"/GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"/g' /etc/default/grub\n\n# Regenerate GRUB config\necho \"Regenerating GRUB configuration...\"\n# sudo grub-mkconfig -o /boot/grub/grub.cfg\n\ndialog --msgbox \"GRUB theme setup is complete and GRUB config has been updated.\" 10 50\nclear\n","recorded":"2025-01-06 17:39:05.421482893","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up pacman.conf...\"\n\n# Define the lines to append\nlines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n\n# Check if the [options] section exists\nif grep -q '^\\[options\\]' /etc/pacman.conf; then\n  # Append lines to the [options] section\n  echo -e \"$lines_to_append\" | sudo tee -a /etc/pacman.conf \u003e /dev/null\n  echo \"Configuration added successfully.\"\nelse\n  echo \"[options] section not found. Skipping...\"\nfi\n","recorded":"2025-01-06 17:39:02.517760859","filePath":"null","pinned":false},{"value":"Aa2005233711@@","recorded":"2025-01-06 17:38:27.541853132","filePath":"null","pinned":false},{"value":"This my installation script now you remove bugs, modify and optimize \n\nand also use dialog instead of whiptail wherever is required","recorded":"2025-01-06 17:35:58.024679590","filePath":"null","pinned":false},{"value":"KYH9KFWA5K:FS5f","recorded":"2025-01-06 17:34:26.746221125","filePath":"null","pinned":false},{"value":"#!/bin/env bash\nset -e\n\n# Introduction \u0026 Warning\necho \"Welcome to my Arch Setup!\" \u0026\u0026 sleep 2\necho \"Some parts of the script require sudo, so if you're planning on leaving the desktop while the installation script does its thing, better drop it already!.\" \u0026\u0026 sleep 4\n\n# Creating all required home directories if not present\nmkdir ~/Downloads ~/Documents ~/Music ~/Pictures ~/Videos ~/Templates\n\n# Setting up pacman.conf\n# lines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n# sudo sed -i '/^\\[options\\]/a '\"$lines_to_append\" /etc/pacman.conf\n\n# System update\necho \"Performing a full system update...\"\nsudo pacman --noconfirm -Syu\nclear\necho \"System update done\" \u0026\u0026 sleep 2\nclear\n\n# Install Git if not present\necho \"Installing git...\" \u0026\u0026 sleep 1\nsudo pacman -S --noconfirm --needed git\nclear\n\n# Clone and install Paru if not installed\necho \"This script requires an AUR helper to install the dependencies. Installing paru...\" \u0026\nsleep 2\nif ! command -v paru \u0026\u003e/dev/null; then\n  echo \"Installing Paru, an AUR helper...\"\n  cd Downloads\n  git clone https://aur.archlinux.org/paru.git\n  cd paru\n  makepkg -si\n  cd ..\n  echo \"Paru installed\"\n  rm -rf paru\n  cd ~/dotfiles\nfi\nclear\n\n# Install base-devel and required packages\necho \"Installing dependencies..\" \u0026\u0026 sleep 2\n\nsudo pacman -S --noconfirm --needed base-devel intel-ucode vim zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting bash-completion openssh wget curl btop fastfetch bat exa fd ripgrep fzf stow stylua tar tree time acpilight aria2 unrar unzip bluez bluez-utils brightnessctl xfsprogs ntfs-3g clang gcc clipmenu clipnotify inotify-tools psutils dunst e2fsprogs gvfs gvfs-afc gvfs-google gvfs-goa gvfs-gphoto2 gvfs-mtp gvfs-nfs gvfs-onedrive gvfs-smb efibootmgr zoxide gc git-lfs gnome-keyring polkit-gnome pass udiskie gstreamer jq xdotool screenkey xorg-xprop lazygit lolcat sxiv shellcheck net-tools numlockx prettier progress zip rsync trash-cli tlp tlp-rdw neovim feh xorg-xinput xclip xcompmgr xorg-xrandr xorg-xsetroot xsel xwallpaper pandoc starship python-pywal glow xarchiver xfce4-clipman-plugin qemu-full libguestfs bc xorg-xman man-db man-pages ncdu python-adblock dnsmasq python-pip nwg-look python-prctl vscode-css-languageserver ffmpegthumbnailer virt-manager spice-vdagent lua-language-server pass pinentry gnupg pass-otp zbar xorg-xlsclients xscreensaver os-prober qt5ct pamixer qt5-wayland qt6-wayland parallel shfmt tesseract html-xml-utils sddm qt6-5compat qt6-declarative qt6-svg cava thunar thunar-archive-plugin thunar-media-tags-plugin thunar-volman thunar-vcs-plugin flameshot alacritty playerctl ncmpcpp mpd mpv mpc poppler poppler-glib adobe-source-code-pro-fonts noto-fonts noto-fonts-cjk noto-fonts-emoji ttf-hack ttf-jetbrains-mono ttf-ubuntu-font-family ttf-ubuntu-mono-nerd ttf-ubuntu-nerd ttf-opensans gnu-free-fonts libnewt baobab gnome-disk-utility gparted pavucontrol ranger yad timeshift go hugo hunspell hunspell-en_us imagemagick ueberzug luacheck yt-dlp mlocate nodejs npm translate-shell jdk-openjdk openjdk-doc openjdk-src blueman zenity rofi rofi-emoji rofi-calc newsboat\n\nparu -S --noconfirm --needed base-devel python-psutil preload git-remote-gcrypt pywal-git picom ttf-ms-fonts qt6ct-kde ccrypt didyoumean-git arch-wiki-docs material-black-colors-theme apple_cursor kvantum-theme-materia kvantum --noconfirm\n\necho \"Dependencies installed... executing services \u0026 permissions...\" \u0026\u0026 sleep 1\n\nsudo updatedb\nsudo mandb\nsudo systemctl enable --now tlp\nsudo systemctl enable --now bluetooth.service\nsudo systemctl enable --now libvirtd.service\n\nsudo usermod -aG video $USER\nsudo usermod -aG libvirt $USER\nsudo virsh net-start default\n\necho \"For VM sharing details https://docs.getutm.app/guest-support/linux/\"\n\n\n# paru -S material-black-colors-theme apple_cursor kvantum-theme-materia kvantum --noconfirm\n\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Setting up Git configuration...\"\n\n# Ask user whether to proceed with Git setup\nif ! whiptail --title \"Git Configuration Setup\" --yesno \"Do you want to proceed with setting up Git configuration?\" 10 60; then\n  echo \"Git setup canceled. Exiting.\"\n  exit 1\nfi\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n  whiptail --msgbox \"Git username setup canceled or empty. Exiting.\" 10 50\n  exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n  whiptail --msgbox \"Git email setup canceled or empty. Exiting.\" 10 50\n  exit 1\nfi\n\n# Display confirmation dialog\nif whiptail --yesno \"Please confirm the Git configuration:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60; then\n  # Set Git configuration if confirmed\n  git config --global user.name \"$git_username\"\n  git config --global user.email \"$git_email\"\n  whiptail --msgbox \"Git has been successfully configured:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\nelse\n  whiptail --msgbox \"Git configuration canceled. No changes were made.\" 10 50\n  exit 1\nfi\n\n# -------------------------------------------------------------------------------------\n\necho \"Installing main packages and application that I personally use the most...\" \u0026\u0026 sleep 1\n\n# Function to display the browser selection menu\ninstall_browser() {\n  # Display the checkbox menu\n  choices=$(whiptail --title \"Browser Selection\" \\\n    --checklist \"Select the browsers you want to install:\" 15 50 6 \\\n    \"   Zen-Browser   \" \"\" OFF \\\n    \"     Firefox     \" \"\" OFF \\\n    \"    Chromium     \" \"\" OFF \\\n    \"     Vivaldi     \" \"\" OFF \\\n    \"   qutebrowser   \" \"\" OFF \\\n    \"     Brave       \" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\n  # Check if the user pressed Cancel\n  if [ $? -ne 0 ]; then\n    echo \"No selection made. Exiting.\"\n    exit 1\n  fi\n\n  # Process the selected options\n  for choice in $choices; do\n    case $choice in\n    \"\\\"   Zen-Browser   \\\"\")\n      echo \"Installing Zen-Browser...\"\n      paru -S --noconfirm --needed zen-broswer-bin\n      # Video Download Helper\n      curl -sSLf https://github.com/aclap-dev/vdhcoapp/releases/latest/download/install.sh | bash\n      ;;\n    \"\\\"     Firefox     \\\"\")\n      echo \"Installing Firefox...\"\n      sudo pacman -S --noconfirm firefox\n      ;;\n    \"\\\"    Chromium     \\\"\")\n      echo \"Installing Chromium...\"\n      sudo pacman -S --noconfirm chromium\n      ;;\n    \"\\\"     Vivaldi     \\\"\")\n      echo \"Installing Vivaldi...\"\n      paru -S --noconfirm vivaldi\n      ;;\n    \"\\\"   qutebrowser   \\\"\")\n      echo \"Installing qutebrowser...\"\n      sudo pacman -S --noconfirm qutebrowser\n      ;;\n    \"\\\"     Brave       \\\"\")\n      echo \"Installing Brave...\"\n      paru -S --noconfirm brave-bin\n      ;;\n    *)\n      echo \"Invalid choice: $choice\"\n      ;;\n    esac\n  done\n}\n\n# Call the browser installation function\ninstall_browser\n\ndialog --msgbox \"Selected browsers have been installed.\" 10 50\n\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up Miniconda...\"\n\n# Ask the user if they want to install Miniconda\ndialog --title \"Install Miniconda?\" \\\n  --yesno \"Would you like to install Miniconda? (Recommended for Python and Data Science)\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Miniconda installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Miniconda installation will begin now.\" 10 50\n\n  # Download Miniconda installer\n  wget https://repo.anaconda.com/miniconda/Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Run the installer\n  bash Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Remove the installer after installation\n  rm Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  dialog --msgbox \"Miniconda installation completed.\" 10 50\nfi\n\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up torrent and remote working applications...\"\n\n# Display checklist for torrent and remote working applications\napps=$(whiptail --title \"Select Applications to Install\" \\\n  --checklist \"Choose the applications you want to install:\" 20 60 8 \\\n  \"torrent-cli\" \"\" OFF \\\n  \"qBittorrent\" \"\" OFF \\\n  \"Transmission\" \"\" OFF \\\n  \"Remmina\" \"\" OFF \\\n  \"VNC\" \"\" OFF \\\n  \"TeamViewer\" \"\" OFF \\\n  \"AnyDesk\" \"\" OFF \\\n  \"xrdp\" \"\" OFF \\\n  \"openvpn\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 /] || [ -z \"$apps\" ]; then\n  whiptail --msgbox \"No applications selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected applications and install them\nfor app in $apps; do\n  case $app in\n  \"torrent-cli\")\n    echo \"Installing torrent-cli...\"\n    paru -S --noconfirm --needed webtorrent-cli webtorrent-mpv-hook peerflix\n    ;;\n  \"qBittorrent\")\n    echo \"Installing qBittorrent...\"\n    sudo pacman -S --noconfirm qbittorrent\n    ;;\n  \"Transmission\")\n    echo \"Installing Transmission...\"\n    sudo pacman -S --noconfirm transmission-qt\n    ;;\n  \"Remmina\")\n    echo \"Installing Remmina (Remote Desktop Client)...\"\n    sudo pacman -S --noconfirm remmina\n    ;;\n  \"VNC\")\n    echo \"Installing VNC Server...\"\n    sudo pacman -S --noconfirm tigervnc\n    ;;\n  \"TeamViewer\")\n    echo \"Installing TeamViewer...\"\n    sudo pacman -S --noconfirm teamviewer\n    ;;\n  \"AnyDesk\")\n    echo \"Installing AnyDesk...\"\n    sudo pacman -S --noconfirm anydesk\n    ;;\n  \"xrdp\")\n    echo \"Installing xrdp (Remote Desktop Protocol)...\"\n    sudo pacman -S --noconfirm xrdp\n    ;;\n  \"openvpn\")\n    echo \"Installing OpenVPN...\"\n    sudo pacman -S --noconfirm openvpn\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected torrents have been installed.\" 10 50\n\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up development tools, office tools, communication tools, and multimedia tools...\"\n\n# Display checklist with a single column (scrollable) for all tools using dialog\ntools_choices=$(dialog --title \"Select Tools to Install\" \\\n  --checklist \"Choose the tools you want to install:\" 20 60 18 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Telegram\" \"\" OFF \\\n  \"LibreOffice\" \"\" OFF \\\n  \"OnlyOffice\" \"\" OFF \\\n  \"Skype\" \"\" OFF \\\n  \"Slack\" \"\" OFF \\\n  \"Zoom\" \"\" OFF \\\n  \"Blender\" \"\" OFF \\\n  \"Octave\" \"\" OFF \\\n  \"OBS-Studio\" \"\" OFF \\\n  \"Inkscape\" \"\" OFF \\\n  \"GIMP\" \"\" OFF \\\n  \"VLC\" \"\" OFF \\\n  \"Audacity\" \"\" OFF \\\n  \"Krita\" \"\" OFF \\\n  \"Shotcut\" \"\" OFF \\\n  \"Steam\" \"\" OFF \\\n  \"Minecraft\" \"\" OFF \\\n  \"YouTUI\" \"TUI YT Music(Preferred)\" OFF \\\n  \"YTerMusic\" \"TUI YT Music\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $tools_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    paru -S kind-bin\n    curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Telegram\")\n    echo \"Installing Telegram...\"\n    paru -S --noconfirm telegram-desktop-bin\n    ;;\n  \"LibreOffice\")\n    echo \"Installing LibreOffice...\"\n    sudo pacman -S --noconfirm libreoffice-fresh\n    ;;\n  \"OnlyOffice\")\n    echo \"Installing OnlyOffice...\"\n    paru -S --noconfirm onlyoffice-bin\n    ;;\n  \"Skype\")\n    echo \"Installing Skype...\"\n    paru -S --noconfirm skypeforlinux-bin\n    ;;\n  \"Slack\")\n    echo \"Installing Slack...\"\n    paru -S --noconfirm slack-desktop\n    ;;\n  \"Zoom\")\n    echo \"Installing Zoom...\"\n    paru -S --noconfirm zoom\n    ;;\n  \"Blender\")\n    echo \"Installing Blender...\"\n    sudo pacman -S --noconfirm blender\n    ;;\n  \"Octave\")\n    echo \"Installing Octave...\"\n    sudo pacman -S --noconfirm octave\n    ;;\n  \"OBS-Studio\")\n    echo \"Installing OBS Studio...\"\n    sudo pacman -S --noconfirm obs-studio\n    ;;\n  \"Inkscape\")\n    echo \"Installing Inkscape...\"\n    sudo pacman -S --noconfirm inkscape\n    ;;\n  \"GIMP\")\n    echo \"Installing GIMP...\"\n    sudo pacman -S --noconfirm gimp\n    ;;\n  \"VLC\")\n    echo \"Installing VLC...\"\n    sudo pacman -S --noconfirm vlc\n    ;;\n  \"Audacity\")\n    echo \"Installing Audacity...\"\n    sudo pacman -S --noconfirm audacity\n    ;;\n  \"Krita\")\n    echo \"Installing Krita...\"\n    sudo pacman -S --noconfirm krita\n    ;;\n  \"Shotcut\")\n    echo \"Installing Shotcut...\"\n    sudo pacman -S --noconfirm shotcut\n    ;;\n  \"Steam\")\n    echo \"Installing Steam...\"\n    paru -S --noconfirm steam\n    ;;\n  \"Minecraft\")\n    echo \"Installing Minecraft...\"\n    paru -S --noconfirm minecraft-launcher\n    ;;\n  \"YouTUI\")\n    echo \"Installing YouTUI...\"\n    cargo install youtui\n    ;;\n  \"YTerMusic\")\n    echo \"Installing YTerMusic...\"\n    cargo install ytermusic\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected tools have been installed.\" 10 50\n\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up additional tools and packages...\"\n\n# Display checklist with a single column (scrollable) for additional tools using dialog\nextra_tools_choices=$(dialog --title \"Select Extra Tools to Install\" \\\n  --checklist \"Choose the extra tools and packages you want to install:\" 20 60 20 \\\n  \"Ani-Cli\" \"\" OFF \\\n  \"Ani-Cli-PY\" \"Python Version\" OFF \\\n  \"ytfzf\" \"\" OFF \\\n  \"Zathura\" \"\" OFF \\\n  \"Evince\" \"\" OFF \\\n  \"Okular\" \"\" OFF \\\n  \"Foxit-Reader\" \"\" OFF \\\n  \"Master-PDF-Editor\" \"\" OFF \\\n  \"MuPDF\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$extra_tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $extra_tools_choices; do\n  case $app in\n  \"Ani-Cli\")\n    echo \"Installing ani-cli...\"\n    paru -S --noconfirm --needed ani-cli-git\n    ;;\n  \"Ani-Cli-PY\")\n    echo \"Installing ani-cli python version...\"\n    pip install anipy-cli\n    ;;\n  \"ytfzf\")\n    echo \"Installing ytfzf...\"\n    paru -S --noconfirm --needed ytfzf-git\n    ;;\n  \"Zathura\")\n    echo \"Installing Zathura...\"\n    sudo pacman -S zathura zathura-pdf-mupdf zathura-djvu zathura-ps zathura-cb --noconfirm\n    ;;\n  \"Evince\")\n    echo \"Installing Evince...\"\n    sudo pacman -S --noconfirm evince\n    ;;\n  \"Okular\")\n    echo \"Installing Okular...\"\n    sudo pacman -S --noconfirm okular\n    ;;\n  \"Foxit-Reader\")\n    echo \"Installing Foxit Reader...\"\n    paru -S --noconfirm foxitreader\n    ;;\n  \"Master-PDF-Editor\")\n    echo \"Installing Master PDF Editor...\"\n    paru -S --noconfirm masterpdfeditor\n    ;;\n  \"MuPDF\")\n    echo \"Installing MuPDF...\"\n    sudo pacman -S --noconfirm mupdf\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected extra tools and packages have been installed.\" 10 50\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up MariaDB...\"\n\n# Ask the user if they want to install MariaDB\ndialog --title \"Install MariaDB?\" \\\n  --yesno \"Would you like to install MariaDB (a relational database management system)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"MariaDB installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"MariaDB installation will begin now.\" 10 50\n\n  sudo pacman -S mariadb --noconfirm\n  sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql\n  sudo systemctl enable --now mariadb\n  sudo mariadb-secure-installation\n\n  # Inform the user that MariaDB has been installed and configured\n  dialog --msgbox \"MariaDB has been installed and secured. You can now use it for your database needs.\" 10 50\nfi\n\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up Zsh...\"\n\n# Ask the user if they want to install Zsh\ndialog --title \"Install and Set Up Zsh?\" \\\n  --yesno \"Would you like to install Zsh and set it as your default shell?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Zsh installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Zsh installation will begin now.\" 10 50\n\n  # Install Zsh if not already installed\n  sudo pacman -S --noconfirm zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting\n\n  # Change the default shell to Zsh\n  chsh -s /bin/zsh\n\n  sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n\n  # Check if the installation was successful and prompt to restart the terminal\n  dialog --msgbox \"Zsh has been installed and set as your default shell. Please restart your terminal to apply the changes.\" 10 50\nfi\n\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Setting up Hyprland...\"\n\n# Ask the user if they want to install Hyprland\ndialog --title \"Install Hyprland?\" \\\n  --yesno \"Would you like to install Hyprland (a dynamic Wayland compositor)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Hyprland installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Hyprland installation will begin now.\" 10 50\nfi\n\nsudo pacman -S kitty system-config-printer hyprpicker hyprlock chafa hypridle waybar wl-clipboard speech-dispatcher hyprpaper brightnessctl cmake meson cpio grim slurp wtype wf-recorder swaync\n\nparu -S wlrobs-hg hyprland-git xdg-desktop-portal-hyprland-git clipse-bin hyde-cli-git wlogout hyprshot-git hyprland-qtutils\n\nsudo cp ~/dotfiles/Extras/Extras/nvim.desktop /usr/share/applications/\n\n# Set up Hyprland configuration\necho \"Configuring Hyprland...\"\n\n# Create the configuration file if it doesn't exist\nif [ ! -f \"$HOME/.config/hypr/hyprland.conf\" ]; then\n  cd ~/dotfiles\n  stow Hyprland\n  dialog --msgbox \"Hyprland configuration has been set up.\" 10 50\nelse\n  dialog --msgbox \"Hyprland configuration file already exists.\" 10 50\nfi\n\n# Inform the user that installation is complete\ndialog --msgbox \"Hyprland has been installed and configured. Please restart your system to start using Hyprland.\" 10 50\n\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up dwm...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install dwm?\" \\\n  --yesno \"Would you like to install dwm (Dynamic Window Manager)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"dwm installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"dwm installation will begin now.\" 10 50\n\n  stow ~/dotfiles/suckless/\n\n  cd ~/.config/dwm \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/slstatus \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/st \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/.config/dmenu \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/dotfiles/Extras/Extras/waldl-master/ \u0026\u0026 sudo make install \u0026\u0026 cd ~/dotfiles\n\n  sudo mkdir /usr/share/xsessions/\n  sudo cp ~/dotfiles/Extras/Extras/usr/share/xsessions/dwm.desktop /usr/share/xsessions\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"dwm has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Setting up Ollama...\"\n\n# Ask the user if they want to install Ollama\ndialog --title \"Install Ollama?\" \\\n  --yesno \"Would you like to install Ollama (a tool to run large language models locally)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Ollama installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Ollama installation will begin now.\" 10 50\nfi\n\n# Check if Ollama is available through the AUR or if manual installation is needed\n# You can install Ollama from their official site or via AUR\n# We will use AUR (Arch User Repository) to install it using an AUR helper like paru.\n\n# Install Ollama using paru (or an AUR helper of your choice)\nif ! command -v ollama \u0026\u003e/dev/null; then\n  echo \"Ollama not found, installing Ollama from AUR...\"\n\n  # Install Ollama from the AUR using paru (if not already installed)\n  paru -S --noconfirm ollama\n\n  ollama serve\n  ollama pull mistral\n  ollama pull gemma:7b\n\n  # Inform the user that Ollama has been installed\n  dialog --msgbox \"Ollama has been installed. You can now use it to run local large language models.\" 10 50\nelse\n  dialog --msgbox \"Ollama is already installed on your system.\" 10 50\nfi\n\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Installing PIP Packages...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install my PIP packages?\" \\\n  --yesno \"Would you like to install my PIP Packages?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"PIP packages installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"PIP packages installation will begin now.\" 10 50\n\n  bash\n\n  pip install pynvim numpy pandas matplotlib seaborn scikit-learn jupyterlab ipykernel ipywidgets tensorflow python-prctl inotify-simple psutil opencv-python keras mov-cli-youtube mov-cli mov-cli-test otaku-watcher film-central daemon jupyterlab_wakatime\n\n  pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu # pytorch cpu version\n\n  zsh\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"PIP Packages has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Setting up GRUB theme...\"\n\n# Ask if the user wants to set up a GRUB theme\ndialog --title \"Install GRUB theme?\" \\\n  --yesno \"Would you like to install a GRUB theme?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"GRUB theme setup skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"GRUB theme setup will begin now.\" 10 50\nfi\n\nsudo cp ~/dotfiles/Extras/Extras/boot/grub/themes/SekiroShadow/ /boot/grub/themes/\n\n# Enable the GRUB theme\necho \"Setting GRUB theme...\"\necho 'GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"' | sudo tee -a /etc/default/grub\n\necho \"Enabling os-prober in GRUB configuration...\"\necho 'GRUB_DISABLE_OS_PROBER=\"false\"' | sudo tee -a /etc/default/grub\n\n# Regenerate GRUB config\necho \"Regenerating GRUB configuration...\"\nsudo grub-mkconfig -o /boot/grub/grub.cfg\n\ndialog --msgbox \"GRUB theme setup is complete and GRUB config has been updated.\" 10 50\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Setting Extra Packages for System...\" \u0026\u0026 sleep 1\n\nsudo npm i -g bash-language-server\n\ncd ~/dotfiles/\n\nrm ~/.bashrc ~/.zshrc\n\nstow anipy-cli bashrc BTOP cava dunst face fastfetch DWMScripts flameshot gtk-3 Kvantum latexmkrc libreoffice mpd mpv ncmpcpp newsboat nvim NWG octave pandoc pavucontrol picom Profile qt6ct qutebrowser ranger redyt rofi screenlayout screensaver starship XFCEPic xsettingsd zathura zsh\n\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Setting up Fonts...\" \u0026\u0026 sleep 1\n\nmkdir -p ~/.local/share/fonts\ncd ~/.local/share/fonts\n\ngit clone https://github.com/Chaganti-Reddy/my-fonts.git\n\ncd my-fonts\n\nrm -rf .git/\n\ncd ~/dotfiles/\n\necho \"Fonts have been installed, moving some root files...\"\n\ncd ~/dotfiles/Extras/Extras/\n\nsudo cp etc/nanorc /etc/nanorc\nsudo cp etc/bash.bashrc /etc/bash.bashrc\nsudo cp etc/DIR_COLORS /etc/DIR_COLORS\nsudo cp etc/environment /etc/environment\nsudo cp etc/mpd.conf /etc/mpd.conf\nsudo cp etc/sddm.conf /etc/sddm.conf\n\ncp archcraft-dwm.zsh-theme ~/.oh-my-zsh/themes/archcraft-dwm.zsh-theme\n\n# Setup kaggle JSON and wakatime files using ccrypt\n\n\n# --------------------------------------------------------------------------------------\n\necho \"All done! Please reboot your system.\"\n","recorded":"2025-01-06 17:30:43.952942737","filePath":"null","pinned":false},{"value":"# # 8. Install GTK theme and QT theme\n","recorded":"2025-01-06 17:29:27.451168009","filePath":"null","pinned":false},{"value":"# paru -S material-black-colors-theme apple_cursor kvantum-theme-materia kvantum --noconfirm\n","recorded":"2025-01-06 17:29:02.137544191","filePath":"null","pinned":false},{"value":"# 13. Move Respective files to root directory\n","recorded":"2025-01-06 17:28:24.819185766","filePath":"null","pinned":false},{"value":"# sudo mkdir /usr/share/xsessions/\n","recorded":"2025-01-06 17:28:24.219115342","filePath":"null","pinned":false},{"value":"# sudo cp ~/dotfiles/Extras/Extras/usr/share/xsessions/dwm.desktop /usr/share/xsessions\n","recorded":"2025-01-06 17:28:23.893296684","filePath":"null","pinned":false},{"value":"sudo cp ~/dotfiles/Extras/Extras/usr/share/xsessions/dwm.desktop /usr/share/xsessions","recorded":"2025-01-06 17:28:15.307146871","filePath":"null","pinned":false},{"value":"sudo mkdir /usr/share/xsessions/\n","recorded":"2025-01-06 17:28:07.966081270","filePath":"null","pinned":false},{"value":"# # sudo cp -r ~/dotfiles/Extras/Extras/boot/grub/themes/mocha /boot/grub/themes/\n","recorded":"2025-01-06 17:27:49.953606557","filePath":"null","pinned":false},{"value":"# sudo cp -r ~/dotfiles/Extras/Extras/boot/grub/themes/tartarus/ /boot/grub/themes/\n","recorded":"2025-01-06 17:27:48.532628962","filePath":"null","pinned":false},{"value":"# Now edit the grub config file\n","recorded":"2025-01-06 17:27:47.026333077","filePath":"null","pinned":false},{"value":"# Remove the quiet option from the GRUB_CMDLINE_LINUX_DEFAULT line if you want to check all the log \n","recorded":"2025-01-06 17:27:46.507667878","filePath":"null","pinned":false},{"value":"echo 'GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"' | sudo tee -a /etc/default/grub\n","recorded":"2025-01-06 17:26:41.112464454","filePath":"null","pinned":false},{"value":"sudo sed -i 's/#GRUB_THEME=\"\"/GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"/g' /etc/default/grub\n","recorded":"2025-01-06 17:26:39.604186101","filePath":"null","pinned":false},{"value":"echo 'GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"' | sudo tee -a /etc/default/grub","recorded":"2025-01-06 17:26:33.612124091","filePath":"null","pinned":false},{"value":"sudo sed -i 's/#GRUB_DISABLE_OS_PROBER=\"true\"/GRUB_DISABLE_OS_PROBER=\"false\"/' /etc/default/grub\n","recorded":"2025-01-06 17:26:29.020247517","filePath":"null","pinned":false},{"value":"echo 'GRUB_DISABLE_OS_PROBER=\"false\"' | sudo tee -a /etc/default/grub","recorded":"2025-01-06 17:26:24.253857778","filePath":"null","pinned":false},{"value":"sudo sed -i 's#^#GRUB_THEME=\"\"/#GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"#' /etc/default/grub\n","recorded":"2025-01-06 17:25:46.990396067","filePath":"null","pinned":false}]}