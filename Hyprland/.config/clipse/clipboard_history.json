{"clipboardHistory":[{"value":"venkataramireddychaganti41@gmail.com","recorded":"2025-01-07 10:21:46.006391571","filePath":"null","pinned":false},{"value":"\n","recorded":"2025-01-06 18:54:13.139279164","filePath":"null","pinned":false},{"value":"sudo usermod -aG libvirt \"$USER\"\nsudo virsh net-start default\n\n","recorded":"2025-01-06 18:54:04.029802155","filePath":"null","pinned":false},{"value":"sudo systemctl enable --now libvirtd.service\n","recorded":"2025-01-06 18:53:50.652213315","filePath":"null","pinned":false},{"value":"virt-manager spice-vdagent ","recorded":"2025-01-06 18:53:39.294140998","filePath":"null","pinned":false},{"value":"  rm Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n","recorded":"2025-01-06 18:53:11.385347366","filePath":"null","pinned":false},{"value":"  # Remove the installer after installation\n","recorded":"2025-01-06 18:53:11.033764750","filePath":"null","pinned":false},{"value":"  bash Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n","recorded":"2025-01-06 18:53:10.374817458","filePath":"null","pinned":false},{"value":"  # Run the installer\n","recorded":"2025-01-06 18:53:10.010376002","filePath":"null","pinned":false},{"value":"  wget https://repo.anaconda.com/miniconda/Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n","recorded":"2025-01-06 18:53:09.300034035","filePath":"null","pinned":false},{"value":"  # Download Miniconda installer\n","recorded":"2025-01-06 18:53:08.968888802","filePath":"null","pinned":false},{"value":"echo \"Setting up Miniconda...\"\n\n# Ask the user if they want to install Miniconda\ndialog --title \"Install Miniconda?\" \\\n  --yesno \"Would you like to install Miniconda? (Recommended for Python and Data Science)\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Miniconda installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Miniconda installation will begin now.\" 10 50\n\n  # Download Miniconda installer\n  wget https://repo.anaconda.com/miniconda/Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Run the installer\n  bash Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Remove the installer after installation\n  rm Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  dialog --msgbox \"Miniconda installation completed.\" 10 50\nfi\n\nclear","recorded":"2025-01-06 18:52:01.244569683","filePath":"null","pinned":false},{"value":"Unable to complete install: 'internal error: QEMU unexpectedly closed the monitor (vm='archlinux'): 2025-01-06T13:18:53.376577Z qemu-system-x86_64: -device {\"driver\":\"virtio-vga-gl\",\"id\":\"video0\",\"max_outputs\":1,\"bus\":\"pcie.0\",\"addr\":\"0x1\"}: The display backend does not have OpenGL support enabled\nIt can be enabled with '-display BACKEND,gl=on' where BACKEND is the name of the display backend to use.'\n\nTraceback (most recent call last):\n  File \"/usr/share/virt-manager/virtManager/asyncjob.py\", line 71, in cb_wrapper\n    callback(asyncjob, *args, **kwargs)\n    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/share/virt-manager/virtManager/createvm.py\", line 2008, in _do_async_install\n    installer.start_install(guest, meter=meter)\n    ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/share/virt-manager/virtinst/install/installer.py\", line 726, in start_install\n    domain = self._create_guest(\n            guest, meter, initial_xml, final_xml,\n            doboot, transient)\n  File \"/usr/share/virt-manager/virtinst/install/installer.py\", line 667, in _create_guest\n    domain = self.conn.createXML(initial_xml or final_xml, 0)\n  File \"/usr/lib/python3.13/site-packages/libvirt.py\", line 4545, in createXML\n    raise libvirtError('virDomainCreateXML() failed')\nlibvirt.libvirtError: internal error: QEMU unexpectedly closed the monitor (vm='archlinux'): 2025-01-06T13:18:53.376577Z qemu-system-x86_64: -device {\"driver\":\"virtio-vga-gl\",\"id\":\"video0\",\"max_outputs\":1,\"bus\":\"pcie.0\",\"addr\":\"0x1\"}: The display backend does not have OpenGL support enabled\nIt can be enabled with '-display BACKEND,gl=on' where BACKEND is the name of the display backend to use.\n","recorded":"2025-01-06 18:49:09.785408470","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/archlinux-2025.01.01-x86_64.iso","recorded":"2025-01-06 18:13:05.660501922","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/GST_STATEMENT_ASSESMENT_YEAR_24_25.pdf","recorded":"2025-01-06 18:12:18.956334444","filePath":"null","pinned":false},{"value":"https://archlinux.org/releng/releases/2025.01.01/torrent/","recorded":"2025-01-06 17:59:40.959270786","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/install.sh","recorded":"2025-01-06 17:48:48.478536296","filePath":"null","pinned":false},{"value":"#!/bin/bash\n","recorded":"2025-01-06 17:48:25.939161128","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up SDDM (Simple Desktop Display Manager)...\"\n\n# Install SDDM\necho \"Installing SDDM...\"\n\nsudo pacman -S --noconfirm sddm qt6-5compat qt6-declarative qt6-svg\n\necho \"Enabling SDDM to start at boot...\"\nsudo systemctl enable sddm.service --now\n\nsudo cp ~/dotfiles/Extras/Extras/usr/share/sddm/themes/simple-sddm/ /usr/share/sddm/themes\n\nsudo cp etc/sddm.conf /etc/sddm.conf\n\ncd ~/dotfiles/\n\n# Show confirmation message\ndialog --msgbox \"SDDM has been installed and enabled to start at boot.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:48:09.768796522","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up SDDM (Simple Desktop Display Manager)...\"\n\n# Install SDDM\necho \"Installing SDDM...\"\n\nsudo pacman -S --noconfirm sddm qt6-5compat qt6-declarative qt6-svg\n\necho \"Enabling SDDM to start at boot...\"\nsudo systemctl enable sddm.service --now\n\nsudo cp ~/dotfiles/Extras/Extras/usr/share/sddm/themes/simple-sddm/ /usr/share/sddm/themes\n\nsudo cp etc/sddm.conf /etc/sddm.conf\n\n# Show confirmation message\ndialog --msgbox \"SDDM has been installed and enabled to start at boot.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:47:51.973976993","filePath":"null","pinned":false},{"value":"# Enable SDDM to start at boot\n","recorded":"2025-01-06 17:47:30.858755979","filePath":"null","pinned":false},{"value":"sudo pacman -S --noconfirm sddm\n","recorded":"2025-01-06 17:47:27.877237339","filePath":"null","pinned":false},{"value":"sddm qt6-5compat qt6-declarative qt6-svg","recorded":"2025-01-06 17:47:15.300308545","filePath":"null","pinned":false},{"value":"sudo cp etc/sddm.conf /etc/sddm.conf\n","recorded":"2025-01-06 17:47:01.708325293","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up pacman.conf...\"\n\n# Use sed to find the #UseSyslog line and append the settings under it\nsudo sed -i '/#UseSyslog/a\\\nILoveCandy\\nParallelDownloads=10\\nColor' /etc/pacman.conf\n\necho \"Configuration added under #UseSyslog.\"\n","recorded":"2025-01-06 17:46:48.658538245","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up SDDM (Simple Desktop Display Manager)...\"\n\n# Ask user to install SDDM\ninstall_sddm=$(dialog --title \"Install SDDM\" \\\n  --yesno \"Do you want to install SDDM (Simple Desktop Display Manager)?\" 10 50)\n\n# Check user's choice\nif [ $? -eq 0 ]; then\n  echo \"Installing SDDM...\"\n  sudo pacman -S --noconfirm sddm\n\n  # Ask user if they want to enable SDDM at boot\n  enable_sddm=$(dialog --title \"Enable SDDM\" \\\n    --yesno \"Do you want to enable SDDM to start at boot?\" 10 50)\n\n  # Enable SDDM if user wants\n  if [ $? -eq 0 ]; then\n    echo \"Enabling SDDM to start at boot...\"\n    sudo systemctl enable sddm.service --now\n    dialog --msgbox \"SDDM has been installed and enabled to start at boot.\" 10 50\n  else\n    dialog --msgbox \"SDDM has been installed but not enabled to start at boot.\" 10 50\n  fi\nelse\n  dialog --msgbox \"SDDM installation canceled. Exiting.\" 10 50\n  exit 1\nfi\n\nclear\n","recorded":"2025-01-06 17:46:48.649793915","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up SDDM (Simple Desktop Display Manager)...\"\n\n# Install SDDM\necho \"Installing SDDM...\"\nsudo pacman -S --noconfirm sddm\n\n# Enable SDDM to start at boot\necho \"Enabling SDDM to start at boot...\"\nsudo systemctl enable sddm.service --now\n\n# Show confirmation message\ndialog --msgbox \"SDDM has been installed and enabled to start at boot.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:46:46.585077759","filePath":"null","pinned":false},{"value":"echo \"Installing main packages and application that I personally use the most...\" \u0026\u0026 sleep 1\n\n# Function to display the browser selection menu\ninstall_browser() {\n  # Display the checkbox menu\n  choices=$(whiptail --title \"Browser Selection\" \\\n    --checklist \"Select the browsers you want to install:\" 15 50 6 \\\n    \"   Zen-Browser   \" \"\" OFF \\\n    \"     Firefox     \" \"\" OFF \\\n    \"    Chromium     \" \"\" OFF \\\n    \"     Vivaldi     \" \"\" OFF \\\n    \"   qutebrowser   \" \"\" OFF \\\n    \"     Brave       \" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\n  # Check if the user pressed Cancel\n  if [ $? -ne 0 ]; then\n    echo \"No selection made. Exiting.\"\n    exit 1\n  fi\n\n  # Process the selected options\n  for choice in $choices; do\n    case $choice in\n    \"\\\"   Zen-Browser   \\\"\")\n      echo \"Installing Zen-Browser...\"\n      paru -S --noconfirm --needed zen-broswer-bin\n      # Video Download Helper\n      curl -sSLf https://github.com/aclap-dev/vdhcoapp/releases/latest/download/install.sh | bash\n      ;;\n    \"\\\"     Firefox     \\\"\")\n      echo \"Installing Firefox...\"\n      sudo pacman -S --noconfirm firefox\n      ;;\n    \"\\\"    Chromium     \\\"\")\n      echo \"Installing Chromium...\"\n      sudo pacman -S --noconfirm chromium\n      ;;\n    \"\\\"     Vivaldi     \\\"\")\n      echo \"Installing Vivaldi...\"\n      paru -S --noconfirm vivaldi\n      ;;\n    \"\\\"   qutebrowser   \\\"\")\n      echo \"Installing qutebrowser...\"\n      sudo pacman -S --noconfirm qutebrowser\n      ;;\n    \"\\\"     Brave       \\\"\")\n      echo \"Installing Brave...\"\n      paru -S --noconfirm brave-bin\n      ;;\n    *)\n      echo \"Invalid choice: $choice\"\n      ;;\n    esac\n  done\n}\n\n# Call the browser installation function\ninstall_browser\n\ndialog --msgbox \"Selected browsers have been installed.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:44:50.249348397","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Installing main packages and applications that I personally use the most...\" \u0026\u0026 sleep 1\n\n# Function to display the browser selection menu using dialog\ninstall_browser() {\n  # Display the checklist menu\n  choices=$(dialog --title \"Browser Selection\" \\\n    --checklist \"Select the browsers you want to install:\" 15 50 6 \\\n    \"Zen-Browser\" \"\" OFF \\\n    \"Firefox\" \"\" OFF \\\n    \"Chromium\" \"\" OFF \\\n    \"Vivaldi\" \"\" OFF \\\n    \"qutebrowser\" \"\" OFF \\\n    \"Brave\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\n  # Check if the user pressed Cancel\n  if [ $? -ne 0 ]; then\n    echo \"No selection made. Exiting.\"\n    exit 1\n  fi\n\n  # Process the selected options\n  for choice in $choices; do\n    case $choice in\n    \"Zen-Browser\")\n      echo \"Installing Zen-Browser...\"\n      paru -S --noconfirm --needed zen-browser-bin\n      # Video Download Helper\n      curl -sSLf https://github.com/aclap-dev/vdhcoapp/releases/latest/download/install.sh | bash\n      ;;\n    \"Firefox\")\n      echo \"Installing Firefox...\"\n      sudo pacman -S --noconfirm firefox\n      ;;\n    \"Chromium\")\n      echo \"Installing Chromium...\"\n      sudo pacman -S --noconfirm chromium\n      ;;\n    \"Vivaldi\")\n      echo \"Installing Vivaldi...\"\n      paru -S --noconfirm vivaldi\n      ;;\n    \"qutebrowser\")\n      echo \"Installing qutebrowser...\"\n      sudo pacman -S --noconfirm qutebrowser\n      ;;\n    \"Brave\")\n      echo \"Installing Brave...\"\n      paru -S --noconfirm brave-bin\n      ;;\n    *)\n      echo \"Invalid choice: $choice\"\n      ;;\n    esac\n  done\n}\n\n# Call the browser installation function\ninstall_browser\n\ndialog --msgbox \"Selected browsers have been installed.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:44:40.980684946","filePath":"null","pinned":false},{"value":"# sudo sed -i '/^\\[options\\]/a '\"$lines_to_append\" /etc/pacman.conf\n","recorded":"2025-01-06 17:43:55.087795692","filePath":"null","pinned":false},{"value":"# lines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n","recorded":"2025-01-06 17:43:54.848357191","filePath":"null","pinned":false},{"value":"# Setting up pacman.conf\n","recorded":"2025-01-06 17:43:54.570168460","filePath":"null","pinned":false},{"value":"echo \"Setting up pacman.conf...\"\n\n# Define the lines to append\nlines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n\n# Check if the [options] section exists\nif grep -q '^\\[options\\]' /etc/pacman.conf; then\n  # Use sed to find the #UseSyslog line and append the settings under it\n  sudo sed -i '/#UseSyslog/a\\\nILoveCandy\\nParallelDownloads=10\\nColor' /etc/pacman.conf\n  echo \"Configuration added under #UseSyslog.\"\nelse\n  echo \"[options] section not found. Skipping...\"\nfi","recorded":"2025-01-06 17:43:34.270384585","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up pacman.conf...\"\n\n# Define the lines to append\nlines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n\n# Check if the [options] section exists\nif grep -q '^\\[options\\]' /etc/pacman.conf; then\n  # Use sed to find the #UseSyslog line and append the settings under it\n  sudo sed -i '/#UseSyslog/a\\\nILoveCandy\\nParallelDownloads=10\\nColor' /etc/pacman.conf\n  echo \"Configuration added under #UseSyslog.\"\nelse\n  echo \"[options] section not found. Skipping...\"\nfi\n","recorded":"2025-01-06 17:43:34.260842813","filePath":"null","pinned":false},{"value":"# Setting up pacman.conf\n# lines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n# sudo sed -i '/^\\[options\\]/a '\"$lines_to_append\" /etc/pacman.conf","recorded":"2025-01-06 17:42:58.003664259","filePath":"null","pinned":false},{"value":"#GRUB_THEME=\"\"","recorded":"2025-01-06 17:42:30.291879868","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up pacman.conf...\"\n\n# Define the lines to append\nlines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n\n# Check if the [options] section exists\nif grep -q '^\\[options\\]' /etc/pacman.conf; then\n  # Check if the lines already exist to avoid duplicates\n  for line in $lines_to_append; do\n    if ! grep -q \"$line\" /etc/pacman.conf; then\n      echo -e \"$line\" | sudo tee -a /etc/pacman.conf \u003e /dev/null\n      echo \"Added: $line\"\n    else\n      echo \"Already present: $line\"\n    fi\n  done\nelse\n  echo \"[options] section not found. Skipping...\"\nfi\n","recorded":"2025-01-06 17:42:30.283396932","filePath":"null","pinned":false},{"value":"#UseSyslog","recorded":"2025-01-06 17:42:08.365909021","filePath":"null","pinned":false},{"value":"ILoveCandy\nParallelDownloads=10\nColor","recorded":"2025-01-06 17:41:27.980899597","filePath":"null","pinned":false},{"value":"!/bin/bash\n\necho \"Setting up pacman.conf...\"\n\n# Define the lines to append\nlines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n\n# Check if the [options] section exists\nif grep -q '^\\[options\\]' /etc/pacman.conf; then\n  # Append lines to the [options] section\n  echo -e \"$lines_to_append\" | sudo tee -a /etc/pacman.conf \u003e /dev/null\n  echo \"Configuration added successfully.\"\nelse\n  echo \"[options] section not found. Skipping...\"\nfi\n","recorded":"2025-01-06 17:41:09.764557617","filePath":"null","pinned":false},{"value":"[options]\n# The following paths are commented out with their default values listed.\n# If you wish to use different paths, uncomment and update the paths.\n#RootDir     = /\n#DBPath      = /var/lib/pacman/\n#CacheDir    = /var/cache/pacman/pkg/\n#LogFile     = /var/log/pacman.log\n#GPGDir      = /etc/pacman.d/gnupg/\n#HookDir     = /etc/pacman.d/hooks/\nHoldPkg     = pacman glibc\n#XferCommand = /usr/bin/curl -L -C - -f -o %o %u\n#XferCommand = /usr/bin/wget --passive-ftp -c -O %o %u\n#CleanMethod = KeepInstalled\nArchitecture = auto\n\n# Pacman won't upgrade packages listed in IgnorePkg and members of IgnoreGroup\n#IgnorePkg   =\n#IgnoreGroup =\n\n#NoUpgrade   =\n#NoExtract   =\n\n# Misc options\n#UseSyslog\nColor\nILoveCandy\n#NoProgressBar\nCheckSpace\n#VerbosePkgLists\nParallelDownloads = 10\nDownloadUser = alpm\n#DisableSandbox","recorded":"2025-01-06 17:40:23.923798021","filePath":"null","pinned":false},{"value":"#","recorded":"2025-01-06 17:39:36.793151292","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up GRUB theme...\"\n\n# Ask if the user wants to set up a GRUB theme\ndialog --title \"Install GRUB theme?\" \\\n  --yesno \"Would you like to install a GRUB theme?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"GRUB theme setup skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"GRUB theme setup will begin now.\" 10 50\nfi\n\n# sudo cp ~/dotfiles/Extras/Extras/boot/grub/themes/SekiroShadow/ /boot/grub/themes/\n\n# Enable the GRUB theme\necho \"Setting GRUB theme...\"\nsudo sed -i 's/#GRUB_THEME=\"\"/GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"/g' /etc/default/grub\n\n# Regenerate GRUB config\necho \"Regenerating GRUB configuration...\"\n# sudo grub-mkconfig -o /boot/grub/grub.cfg\n\ndialog --msgbox \"GRUB theme setup is complete and GRUB config has been updated.\" 10 50\nclear\n","recorded":"2025-01-06 17:39:05.421482893","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up pacman.conf...\"\n\n# Define the lines to append\nlines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n\n# Check if the [options] section exists\nif grep -q '^\\[options\\]' /etc/pacman.conf; then\n  # Append lines to the [options] section\n  echo -e \"$lines_to_append\" | sudo tee -a /etc/pacman.conf \u003e /dev/null\n  echo \"Configuration added successfully.\"\nelse\n  echo \"[options] section not found. Skipping...\"\nfi\n","recorded":"2025-01-06 17:39:02.517760859","filePath":"null","pinned":false},{"value":"Aa2005233711@@","recorded":"2025-01-06 17:38:27.541853132","filePath":"null","pinned":false},{"value":"This my installation script now you remove bugs, modify and optimize \n\nand also use dialog instead of whiptail wherever is required","recorded":"2025-01-06 17:35:58.024679590","filePath":"null","pinned":false},{"value":"KYH9KFWA5K:FS5f","recorded":"2025-01-06 17:34:26.746221125","filePath":"null","pinned":false},{"value":"#!/bin/env bash\nset -e\n\n# Introduction \u0026 Warning\necho \"Welcome to my Arch Setup!\" \u0026\u0026 sleep 2\necho \"Some parts of the script require sudo, so if you're planning on leaving the desktop while the installation script does its thing, better drop it already!.\" \u0026\u0026 sleep 4\n\n# Creating all required home directories if not present\nmkdir ~/Downloads ~/Documents ~/Music ~/Pictures ~/Videos ~/Templates\n\n# Setting up pacman.conf\n# lines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n# sudo sed -i '/^\\[options\\]/a '\"$lines_to_append\" /etc/pacman.conf\n\n# System update\necho \"Performing a full system update...\"\nsudo pacman --noconfirm -Syu\nclear\necho \"System update done\" \u0026\u0026 sleep 2\nclear\n\n# Install Git if not present\necho \"Installing git...\" \u0026\u0026 sleep 1\nsudo pacman -S --noconfirm --needed git\nclear\n\n# Clone and install Paru if not installed\necho \"This script requires an AUR helper to install the dependencies. Installing paru...\" \u0026\nsleep 2\nif ! command -v paru \u0026\u003e/dev/null; then\n  echo \"Installing Paru, an AUR helper...\"\n  cd Downloads\n  git clone https://aur.archlinux.org/paru.git\n  cd paru\n  makepkg -si\n  cd ..\n  echo \"Paru installed\"\n  rm -rf paru\n  cd ~/dotfiles\nfi\nclear\n\n# Install base-devel and required packages\necho \"Installing dependencies..\" \u0026\u0026 sleep 2\n\nsudo pacman -S --noconfirm --needed base-devel intel-ucode vim zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting bash-completion openssh wget curl btop fastfetch bat exa fd ripgrep fzf stow stylua tar tree time acpilight aria2 unrar unzip bluez bluez-utils brightnessctl xfsprogs ntfs-3g clang gcc clipmenu clipnotify inotify-tools psutils dunst e2fsprogs gvfs gvfs-afc gvfs-google gvfs-goa gvfs-gphoto2 gvfs-mtp gvfs-nfs gvfs-onedrive gvfs-smb efibootmgr zoxide gc git-lfs gnome-keyring polkit-gnome pass udiskie gstreamer jq xdotool screenkey xorg-xprop lazygit lolcat sxiv shellcheck net-tools numlockx prettier progress zip rsync trash-cli tlp tlp-rdw neovim feh xorg-xinput xclip xcompmgr xorg-xrandr xorg-xsetroot xsel xwallpaper pandoc starship python-pywal glow xarchiver xfce4-clipman-plugin qemu-full libguestfs bc xorg-xman man-db man-pages ncdu python-adblock dnsmasq python-pip nwg-look python-prctl vscode-css-languageserver ffmpegthumbnailer virt-manager spice-vdagent lua-language-server pass pinentry gnupg pass-otp zbar xorg-xlsclients xscreensaver os-prober qt5ct pamixer qt5-wayland qt6-wayland parallel shfmt tesseract html-xml-utils sddm qt6-5compat qt6-declarative qt6-svg cava thunar thunar-archive-plugin thunar-media-tags-plugin thunar-volman thunar-vcs-plugin flameshot alacritty playerctl ncmpcpp mpd mpv mpc poppler poppler-glib adobe-source-code-pro-fonts noto-fonts noto-fonts-cjk noto-fonts-emoji ttf-hack ttf-jetbrains-mono ttf-ubuntu-font-family ttf-ubuntu-mono-nerd ttf-ubuntu-nerd ttf-opensans gnu-free-fonts libnewt baobab gnome-disk-utility gparted pavucontrol ranger yad timeshift go hugo hunspell hunspell-en_us imagemagick ueberzug luacheck yt-dlp mlocate nodejs npm translate-shell jdk-openjdk openjdk-doc openjdk-src blueman zenity rofi rofi-emoji rofi-calc newsboat\n\nparu -S --noconfirm --needed base-devel python-psutil preload git-remote-gcrypt pywal-git picom ttf-ms-fonts qt6ct-kde ccrypt didyoumean-git arch-wiki-docs material-black-colors-theme apple_cursor kvantum-theme-materia kvantum --noconfirm\n\necho \"Dependencies installed... executing services \u0026 permissions...\" \u0026\u0026 sleep 1\n\nsudo updatedb\nsudo mandb\nsudo systemctl enable --now tlp\nsudo systemctl enable --now bluetooth.service\nsudo systemctl enable --now libvirtd.service\n\nsudo usermod -aG video $USER\nsudo usermod -aG libvirt $USER\nsudo virsh net-start default\n\necho \"For VM sharing details https://docs.getutm.app/guest-support/linux/\"\n\n\n# paru -S material-black-colors-theme apple_cursor kvantum-theme-materia kvantum --noconfirm\n\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Setting up Git configuration...\"\n\n# Ask user whether to proceed with Git setup\nif ! whiptail --title \"Git Configuration Setup\" --yesno \"Do you want to proceed with setting up Git configuration?\" 10 60; then\n  echo \"Git setup canceled. Exiting.\"\n  exit 1\nfi\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n  whiptail --msgbox \"Git username setup canceled or empty. Exiting.\" 10 50\n  exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n  whiptail --msgbox \"Git email setup canceled or empty. Exiting.\" 10 50\n  exit 1\nfi\n\n# Display confirmation dialog\nif whiptail --yesno \"Please confirm the Git configuration:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60; then\n  # Set Git configuration if confirmed\n  git config --global user.name \"$git_username\"\n  git config --global user.email \"$git_email\"\n  whiptail --msgbox \"Git has been successfully configured:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\nelse\n  whiptail --msgbox \"Git configuration canceled. No changes were made.\" 10 50\n  exit 1\nfi\n\n# -------------------------------------------------------------------------------------\n\necho \"Installing main packages and application that I personally use the most...\" \u0026\u0026 sleep 1\n\n# Function to display the browser selection menu\ninstall_browser() {\n  # Display the checkbox menu\n  choices=$(whiptail --title \"Browser Selection\" \\\n    --checklist \"Select the browsers you want to install:\" 15 50 6 \\\n    \"   Zen-Browser   \" \"\" OFF \\\n    \"     Firefox     \" \"\" OFF \\\n    \"    Chromium     \" \"\" OFF \\\n    \"     Vivaldi     \" \"\" OFF \\\n    \"   qutebrowser   \" \"\" OFF \\\n    \"     Brave       \" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\n  # Check if the user pressed Cancel\n  if [ $? -ne 0 ]; then\n    echo \"No selection made. Exiting.\"\n    exit 1\n  fi\n\n  # Process the selected options\n  for choice in $choices; do\n    case $choice in\n    \"\\\"   Zen-Browser   \\\"\")\n      echo \"Installing Zen-Browser...\"\n      paru -S --noconfirm --needed zen-broswer-bin\n      # Video Download Helper\n      curl -sSLf https://github.com/aclap-dev/vdhcoapp/releases/latest/download/install.sh | bash\n      ;;\n    \"\\\"     Firefox     \\\"\")\n      echo \"Installing Firefox...\"\n      sudo pacman -S --noconfirm firefox\n      ;;\n    \"\\\"    Chromium     \\\"\")\n      echo \"Installing Chromium...\"\n      sudo pacman -S --noconfirm chromium\n      ;;\n    \"\\\"     Vivaldi     \\\"\")\n      echo \"Installing Vivaldi...\"\n      paru -S --noconfirm vivaldi\n      ;;\n    \"\\\"   qutebrowser   \\\"\")\n      echo \"Installing qutebrowser...\"\n      sudo pacman -S --noconfirm qutebrowser\n      ;;\n    \"\\\"     Brave       \\\"\")\n      echo \"Installing Brave...\"\n      paru -S --noconfirm brave-bin\n      ;;\n    *)\n      echo \"Invalid choice: $choice\"\n      ;;\n    esac\n  done\n}\n\n# Call the browser installation function\ninstall_browser\n\ndialog --msgbox \"Selected browsers have been installed.\" 10 50\n\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up Miniconda...\"\n\n# Ask the user if they want to install Miniconda\ndialog --title \"Install Miniconda?\" \\\n  --yesno \"Would you like to install Miniconda? (Recommended for Python and Data Science)\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Miniconda installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Miniconda installation will begin now.\" 10 50\n\n  # Download Miniconda installer\n  wget https://repo.anaconda.com/miniconda/Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Run the installer\n  bash Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Remove the installer after installation\n  rm Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  dialog --msgbox \"Miniconda installation completed.\" 10 50\nfi\n\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up torrent and remote working applications...\"\n\n# Display checklist for torrent and remote working applications\napps=$(whiptail --title \"Select Applications to Install\" \\\n  --checklist \"Choose the applications you want to install:\" 20 60 8 \\\n  \"torrent-cli\" \"\" OFF \\\n  \"qBittorrent\" \"\" OFF \\\n  \"Transmission\" \"\" OFF \\\n  \"Remmina\" \"\" OFF \\\n  \"VNC\" \"\" OFF \\\n  \"TeamViewer\" \"\" OFF \\\n  \"AnyDesk\" \"\" OFF \\\n  \"xrdp\" \"\" OFF \\\n  \"openvpn\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 /] || [ -z \"$apps\" ]; then\n  whiptail --msgbox \"No applications selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected applications and install them\nfor app in $apps; do\n  case $app in\n  \"torrent-cli\")\n    echo \"Installing torrent-cli...\"\n    paru -S --noconfirm --needed webtorrent-cli webtorrent-mpv-hook peerflix\n    ;;\n  \"qBittorrent\")\n    echo \"Installing qBittorrent...\"\n    sudo pacman -S --noconfirm qbittorrent\n    ;;\n  \"Transmission\")\n    echo \"Installing Transmission...\"\n    sudo pacman -S --noconfirm transmission-qt\n    ;;\n  \"Remmina\")\n    echo \"Installing Remmina (Remote Desktop Client)...\"\n    sudo pacman -S --noconfirm remmina\n    ;;\n  \"VNC\")\n    echo \"Installing VNC Server...\"\n    sudo pacman -S --noconfirm tigervnc\n    ;;\n  \"TeamViewer\")\n    echo \"Installing TeamViewer...\"\n    sudo pacman -S --noconfirm teamviewer\n    ;;\n  \"AnyDesk\")\n    echo \"Installing AnyDesk...\"\n    sudo pacman -S --noconfirm anydesk\n    ;;\n  \"xrdp\")\n    echo \"Installing xrdp (Remote Desktop Protocol)...\"\n    sudo pacman -S --noconfirm xrdp\n    ;;\n  \"openvpn\")\n    echo \"Installing OpenVPN...\"\n    sudo pacman -S --noconfirm openvpn\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected torrents have been installed.\" 10 50\n\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up development tools, office tools, communication tools, and multimedia tools...\"\n\n# Display checklist with a single column (scrollable) for all tools using dialog\ntools_choices=$(dialog --title \"Select Tools to Install\" \\\n  --checklist \"Choose the tools you want to install:\" 20 60 18 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Telegram\" \"\" OFF \\\n  \"LibreOffice\" \"\" OFF \\\n  \"OnlyOffice\" \"\" OFF \\\n  \"Skype\" \"\" OFF \\\n  \"Slack\" \"\" OFF \\\n  \"Zoom\" \"\" OFF \\\n  \"Blender\" \"\" OFF \\\n  \"Octave\" \"\" OFF \\\n  \"OBS-Studio\" \"\" OFF \\\n  \"Inkscape\" \"\" OFF \\\n  \"GIMP\" \"\" OFF \\\n  \"VLC\" \"\" OFF \\\n  \"Audacity\" \"\" OFF \\\n  \"Krita\" \"\" OFF \\\n  \"Shotcut\" \"\" OFF \\\n  \"Steam\" \"\" OFF \\\n  \"Minecraft\" \"\" OFF \\\n  \"YouTUI\" \"TUI YT Music(Preferred)\" OFF \\\n  \"YTerMusic\" \"TUI YT Music\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $tools_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    paru -S kind-bin\n    curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Telegram\")\n    echo \"Installing Telegram...\"\n    paru -S --noconfirm telegram-desktop-bin\n    ;;\n  \"LibreOffice\")\n    echo \"Installing LibreOffice...\"\n    sudo pacman -S --noconfirm libreoffice-fresh\n    ;;\n  \"OnlyOffice\")\n    echo \"Installing OnlyOffice...\"\n    paru -S --noconfirm onlyoffice-bin\n    ;;\n  \"Skype\")\n    echo \"Installing Skype...\"\n    paru -S --noconfirm skypeforlinux-bin\n    ;;\n  \"Slack\")\n    echo \"Installing Slack...\"\n    paru -S --noconfirm slack-desktop\n    ;;\n  \"Zoom\")\n    echo \"Installing Zoom...\"\n    paru -S --noconfirm zoom\n    ;;\n  \"Blender\")\n    echo \"Installing Blender...\"\n    sudo pacman -S --noconfirm blender\n    ;;\n  \"Octave\")\n    echo \"Installing Octave...\"\n    sudo pacman -S --noconfirm octave\n    ;;\n  \"OBS-Studio\")\n    echo \"Installing OBS Studio...\"\n    sudo pacman -S --noconfirm obs-studio\n    ;;\n  \"Inkscape\")\n    echo \"Installing Inkscape...\"\n    sudo pacman -S --noconfirm inkscape\n    ;;\n  \"GIMP\")\n    echo \"Installing GIMP...\"\n    sudo pacman -S --noconfirm gimp\n    ;;\n  \"VLC\")\n    echo \"Installing VLC...\"\n    sudo pacman -S --noconfirm vlc\n    ;;\n  \"Audacity\")\n    echo \"Installing Audacity...\"\n    sudo pacman -S --noconfirm audacity\n    ;;\n  \"Krita\")\n    echo \"Installing Krita...\"\n    sudo pacman -S --noconfirm krita\n    ;;\n  \"Shotcut\")\n    echo \"Installing Shotcut...\"\n    sudo pacman -S --noconfirm shotcut\n    ;;\n  \"Steam\")\n    echo \"Installing Steam...\"\n    paru -S --noconfirm steam\n    ;;\n  \"Minecraft\")\n    echo \"Installing Minecraft...\"\n    paru -S --noconfirm minecraft-launcher\n    ;;\n  \"YouTUI\")\n    echo \"Installing YouTUI...\"\n    cargo install youtui\n    ;;\n  \"YTerMusic\")\n    echo \"Installing YTerMusic...\"\n    cargo install ytermusic\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected tools have been installed.\" 10 50\n\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up additional tools and packages...\"\n\n# Display checklist with a single column (scrollable) for additional tools using dialog\nextra_tools_choices=$(dialog --title \"Select Extra Tools to Install\" \\\n  --checklist \"Choose the extra tools and packages you want to install:\" 20 60 20 \\\n  \"Ani-Cli\" \"\" OFF \\\n  \"Ani-Cli-PY\" \"Python Version\" OFF \\\n  \"ytfzf\" \"\" OFF \\\n  \"Zathura\" \"\" OFF \\\n  \"Evince\" \"\" OFF \\\n  \"Okular\" \"\" OFF \\\n  \"Foxit-Reader\" \"\" OFF \\\n  \"Master-PDF-Editor\" \"\" OFF \\\n  \"MuPDF\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$extra_tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $extra_tools_choices; do\n  case $app in\n  \"Ani-Cli\")\n    echo \"Installing ani-cli...\"\n    paru -S --noconfirm --needed ani-cli-git\n    ;;\n  \"Ani-Cli-PY\")\n    echo \"Installing ani-cli python version...\"\n    pip install anipy-cli\n    ;;\n  \"ytfzf\")\n    echo \"Installing ytfzf...\"\n    paru -S --noconfirm --needed ytfzf-git\n    ;;\n  \"Zathura\")\n    echo \"Installing Zathura...\"\n    sudo pacman -S zathura zathura-pdf-mupdf zathura-djvu zathura-ps zathura-cb --noconfirm\n    ;;\n  \"Evince\")\n    echo \"Installing Evince...\"\n    sudo pacman -S --noconfirm evince\n    ;;\n  \"Okular\")\n    echo \"Installing Okular...\"\n    sudo pacman -S --noconfirm okular\n    ;;\n  \"Foxit-Reader\")\n    echo \"Installing Foxit Reader...\"\n    paru -S --noconfirm foxitreader\n    ;;\n  \"Master-PDF-Editor\")\n    echo \"Installing Master PDF Editor...\"\n    paru -S --noconfirm masterpdfeditor\n    ;;\n  \"MuPDF\")\n    echo \"Installing MuPDF...\"\n    sudo pacman -S --noconfirm mupdf\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected extra tools and packages have been installed.\" 10 50\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up MariaDB...\"\n\n# Ask the user if they want to install MariaDB\ndialog --title \"Install MariaDB?\" \\\n  --yesno \"Would you like to install MariaDB (a relational database management system)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"MariaDB installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"MariaDB installation will begin now.\" 10 50\n\n  sudo pacman -S mariadb --noconfirm\n  sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql\n  sudo systemctl enable --now mariadb\n  sudo mariadb-secure-installation\n\n  # Inform the user that MariaDB has been installed and configured\n  dialog --msgbox \"MariaDB has been installed and secured. You can now use it for your database needs.\" 10 50\nfi\n\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up Zsh...\"\n\n# Ask the user if they want to install Zsh\ndialog --title \"Install and Set Up Zsh?\" \\\n  --yesno \"Would you like to install Zsh and set it as your default shell?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Zsh installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Zsh installation will begin now.\" 10 50\n\n  # Install Zsh if not already installed\n  sudo pacman -S --noconfirm zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting\n\n  # Change the default shell to Zsh\n  chsh -s /bin/zsh\n\n  sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n\n  # Check if the installation was successful and prompt to restart the terminal\n  dialog --msgbox \"Zsh has been installed and set as your default shell. Please restart your terminal to apply the changes.\" 10 50\nfi\n\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Setting up Hyprland...\"\n\n# Ask the user if they want to install Hyprland\ndialog --title \"Install Hyprland?\" \\\n  --yesno \"Would you like to install Hyprland (a dynamic Wayland compositor)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Hyprland installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Hyprland installation will begin now.\" 10 50\nfi\n\nsudo pacman -S kitty system-config-printer hyprpicker hyprlock chafa hypridle waybar wl-clipboard speech-dispatcher hyprpaper brightnessctl cmake meson cpio grim slurp wtype wf-recorder swaync\n\nparu -S wlrobs-hg hyprland-git xdg-desktop-portal-hyprland-git clipse-bin hyde-cli-git wlogout hyprshot-git hyprland-qtutils\n\nsudo cp ~/dotfiles/Extras/Extras/nvim.desktop /usr/share/applications/\n\n# Set up Hyprland configuration\necho \"Configuring Hyprland...\"\n\n# Create the configuration file if it doesn't exist\nif [ ! -f \"$HOME/.config/hypr/hyprland.conf\" ]; then\n  cd ~/dotfiles\n  stow Hyprland\n  dialog --msgbox \"Hyprland configuration has been set up.\" 10 50\nelse\n  dialog --msgbox \"Hyprland configuration file already exists.\" 10 50\nfi\n\n# Inform the user that installation is complete\ndialog --msgbox \"Hyprland has been installed and configured. Please restart your system to start using Hyprland.\" 10 50\n\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up dwm...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install dwm?\" \\\n  --yesno \"Would you like to install dwm (Dynamic Window Manager)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"dwm installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"dwm installation will begin now.\" 10 50\n\n  stow ~/dotfiles/suckless/\n\n  cd ~/.config/dwm \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/slstatus \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/st \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/.config/dmenu \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/dotfiles/Extras/Extras/waldl-master/ \u0026\u0026 sudo make install \u0026\u0026 cd ~/dotfiles\n\n  sudo mkdir /usr/share/xsessions/\n  sudo cp ~/dotfiles/Extras/Extras/usr/share/xsessions/dwm.desktop /usr/share/xsessions\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"dwm has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Setting up Ollama...\"\n\n# Ask the user if they want to install Ollama\ndialog --title \"Install Ollama?\" \\\n  --yesno \"Would you like to install Ollama (a tool to run large language models locally)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Ollama installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Ollama installation will begin now.\" 10 50\nfi\n\n# Check if Ollama is available through the AUR or if manual installation is needed\n# You can install Ollama from their official site or via AUR\n# We will use AUR (Arch User Repository) to install it using an AUR helper like paru.\n\n# Install Ollama using paru (or an AUR helper of your choice)\nif ! command -v ollama \u0026\u003e/dev/null; then\n  echo \"Ollama not found, installing Ollama from AUR...\"\n\n  # Install Ollama from the AUR using paru (if not already installed)\n  paru -S --noconfirm ollama\n\n  ollama serve\n  ollama pull mistral\n  ollama pull gemma:7b\n\n  # Inform the user that Ollama has been installed\n  dialog --msgbox \"Ollama has been installed. You can now use it to run local large language models.\" 10 50\nelse\n  dialog --msgbox \"Ollama is already installed on your system.\" 10 50\nfi\n\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Installing PIP Packages...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install my PIP packages?\" \\\n  --yesno \"Would you like to install my PIP Packages?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"PIP packages installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"PIP packages installation will begin now.\" 10 50\n\n  bash\n\n  pip install pynvim numpy pandas matplotlib seaborn scikit-learn jupyterlab ipykernel ipywidgets tensorflow python-prctl inotify-simple psutil opencv-python keras mov-cli-youtube mov-cli mov-cli-test otaku-watcher film-central daemon jupyterlab_wakatime\n\n  pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu # pytorch cpu version\n\n  zsh\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"PIP Packages has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Setting up GRUB theme...\"\n\n# Ask if the user wants to set up a GRUB theme\ndialog --title \"Install GRUB theme?\" \\\n  --yesno \"Would you like to install a GRUB theme?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"GRUB theme setup skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"GRUB theme setup will begin now.\" 10 50\nfi\n\nsudo cp ~/dotfiles/Extras/Extras/boot/grub/themes/SekiroShadow/ /boot/grub/themes/\n\n# Enable the GRUB theme\necho \"Setting GRUB theme...\"\necho 'GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"' | sudo tee -a /etc/default/grub\n\necho \"Enabling os-prober in GRUB configuration...\"\necho 'GRUB_DISABLE_OS_PROBER=\"false\"' | sudo tee -a /etc/default/grub\n\n# Regenerate GRUB config\necho \"Regenerating GRUB configuration...\"\nsudo grub-mkconfig -o /boot/grub/grub.cfg\n\ndialog --msgbox \"GRUB theme setup is complete and GRUB config has been updated.\" 10 50\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Setting Extra Packages for System...\" \u0026\u0026 sleep 1\n\nsudo npm i -g bash-language-server\n\ncd ~/dotfiles/\n\nrm ~/.bashrc ~/.zshrc\n\nstow anipy-cli bashrc BTOP cava dunst face fastfetch DWMScripts flameshot gtk-3 Kvantum latexmkrc libreoffice mpd mpv ncmpcpp newsboat nvim NWG octave pandoc pavucontrol picom Profile qt6ct qutebrowser ranger redyt rofi screenlayout screensaver starship XFCEPic xsettingsd zathura zsh\n\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Setting up Fonts...\" \u0026\u0026 sleep 1\n\nmkdir -p ~/.local/share/fonts\ncd ~/.local/share/fonts\n\ngit clone https://github.com/Chaganti-Reddy/my-fonts.git\n\ncd my-fonts\n\nrm -rf .git/\n\ncd ~/dotfiles/\n\necho \"Fonts have been installed, moving some root files...\"\n\ncd ~/dotfiles/Extras/Extras/\n\nsudo cp etc/nanorc /etc/nanorc\nsudo cp etc/bash.bashrc /etc/bash.bashrc\nsudo cp etc/DIR_COLORS /etc/DIR_COLORS\nsudo cp etc/environment /etc/environment\nsudo cp etc/mpd.conf /etc/mpd.conf\nsudo cp etc/sddm.conf /etc/sddm.conf\n\ncp archcraft-dwm.zsh-theme ~/.oh-my-zsh/themes/archcraft-dwm.zsh-theme\n\n# Setup kaggle JSON and wakatime files using ccrypt\n\n\n# --------------------------------------------------------------------------------------\n\necho \"All done! Please reboot your system.\"\n","recorded":"2025-01-06 17:30:43.952942737","filePath":"null","pinned":false},{"value":"# # 8. Install GTK theme and QT theme\n","recorded":"2025-01-06 17:29:27.451168009","filePath":"null","pinned":false},{"value":"# paru -S material-black-colors-theme apple_cursor kvantum-theme-materia kvantum --noconfirm\n","recorded":"2025-01-06 17:29:02.137544191","filePath":"null","pinned":false},{"value":"# 13. Move Respective files to root directory\n","recorded":"2025-01-06 17:28:24.819185766","filePath":"null","pinned":false},{"value":"# sudo mkdir /usr/share/xsessions/\n","recorded":"2025-01-06 17:28:24.219115342","filePath":"null","pinned":false},{"value":"# sudo cp ~/dotfiles/Extras/Extras/usr/share/xsessions/dwm.desktop /usr/share/xsessions\n","recorded":"2025-01-06 17:28:23.893296684","filePath":"null","pinned":false},{"value":"sudo cp ~/dotfiles/Extras/Extras/usr/share/xsessions/dwm.desktop /usr/share/xsessions","recorded":"2025-01-06 17:28:15.307146871","filePath":"null","pinned":false},{"value":"sudo mkdir /usr/share/xsessions/\n","recorded":"2025-01-06 17:28:07.966081270","filePath":"null","pinned":false},{"value":"# # sudo cp -r ~/dotfiles/Extras/Extras/boot/grub/themes/mocha /boot/grub/themes/\n","recorded":"2025-01-06 17:27:49.953606557","filePath":"null","pinned":false},{"value":"# sudo cp -r ~/dotfiles/Extras/Extras/boot/grub/themes/tartarus/ /boot/grub/themes/\n","recorded":"2025-01-06 17:27:48.532628962","filePath":"null","pinned":false},{"value":"# Now edit the grub config file\n","recorded":"2025-01-06 17:27:47.026333077","filePath":"null","pinned":false},{"value":"# Remove the quiet option from the GRUB_CMDLINE_LINUX_DEFAULT line if you want to check all the log \n","recorded":"2025-01-06 17:27:46.507667878","filePath":"null","pinned":false},{"value":"echo 'GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"' | sudo tee -a /etc/default/grub\n","recorded":"2025-01-06 17:26:41.112464454","filePath":"null","pinned":false},{"value":"sudo sed -i 's/#GRUB_THEME=\"\"/GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"/g' /etc/default/grub\n","recorded":"2025-01-06 17:26:39.604186101","filePath":"null","pinned":false},{"value":"echo 'GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"' | sudo tee -a /etc/default/grub","recorded":"2025-01-06 17:26:33.612124091","filePath":"null","pinned":false},{"value":"sudo sed -i 's/#GRUB_DISABLE_OS_PROBER=\"true\"/GRUB_DISABLE_OS_PROBER=\"false\"/' /etc/default/grub\n","recorded":"2025-01-06 17:26:29.020247517","filePath":"null","pinned":false},{"value":"echo 'GRUB_DISABLE_OS_PROBER=\"false\"' | sudo tee -a /etc/default/grub","recorded":"2025-01-06 17:26:24.253857778","filePath":"null","pinned":false},{"value":"sudo sed -i 's#^#GRUB_THEME=\"\"/#GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"#' /etc/default/grub\n","recorded":"2025-01-06 17:25:46.990396067","filePath":"null","pinned":false},{"value":"sudo sed -i 's/#GRUB_THEME=\"\"/GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"/g' /etc/default/grub\n\nsed: -e expression #1, char 31: unknown option to `s'","recorded":"2025-01-06 17:25:31.599130227","filePath":"null","pinned":false},{"value":"sudo sed -i 's#^#GRUB_THEME=\"\"#GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"#' /etc/default/grub\n","recorded":"2025-01-06 17:23:20.154875193","filePath":"null","pinned":false},{"value":" sudo sed -i 's/#GRUB_THEME=\"\"/GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"/g' /etc/default/grub\n\nsed: -e expression #1, char 31: unknown option to `s'","recorded":"2025-01-06 17:23:10.254203997","filePath":"null","pinned":false},{"value":"echo \"Enabling os-prober in GRUB configuration...\"\nsudo sed -i 's/#GRUB_DISABLE_OS_PROBER=\"true\"/GRUB_DISABLE_OS_PROBER=\"false\"/' /etc/default/grub\n","recorded":"2025-01-06 17:21:46.814262553","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up GRUB theme...\"\n\n# Ask if the user wants to set up a GRUB theme\ndialog --title \"Install GRUB theme?\" \\\n  --yesno \"Would you like to install a GRUB theme?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"GRUB theme setup skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"GRUB theme setup will begin now.\" 10 50\nfi\n\nsudo cp ~/dotfiles/Extras/Extras/boot/grub/themes/SekiroShadow/ /boot/grub/themes/\n\n# Enable the GRUB theme\necho \"Setting GRUB theme...\"\nsudo sed -i 's/#GRUB_THEME=\"\"/GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"/g' /etc/default/grub\n\n# Regenerate GRUB config\necho \"Regenerating GRUB configuration...\"\nsudo grub-mkconfig -o /boot/grub/grub.cfg\n\ndialog --msgbox \"GRUB theme setup is complete and GRUB config has been updated.\" 10 50\nclear\n","recorded":"2025-01-06 17:20:35.067036153","filePath":"null","pinned":false},{"value":"\n# Check if the GRUB theme was installed correctly\nif [ $? -eq 0 ]; then\n  echo \"GRUB theme installed successfully.\"\nelse\n  echo \"Failed to install GRUB theme.\"\n  exit 1\nfi","recorded":"2025-01-06 17:20:04.779100107","filePath":"null","pinned":false},{"value":"sudo pacman -S --noconfirm grub-theme-arch\n","recorded":"2025-01-06 17:19:36.807083544","filePath":"null","pinned":false},{"value":"# Install GRUB theme (Arch Linux default theme or any custom theme)\n","recorded":"2025-01-06 17:19:36.422727034","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Hyprland...\"\n\n# Ask the user if they want to install Hyprland\ndialog --title \"Install Hyprland?\" \\\n  --yesno \"Would you like to install Hyprland (a dynamic Wayland compositor)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Hyprland installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Hyprland installation will begin now.\" 10 50\nfi\n\nsudo pacman -S kitty system-config-printer hyprpicker hyprlock chafa hypridle waybar wl-clipboard speech-dispatcher hyprpaper brightnessctl cmake meson cpio grim slurp wtype wf-recorder swaync\n\nparu -S wlrobs-hg hyprland-git xdg-desktop-portal-hyprland-git clipse-bin hyde-cli-git wlogout hyprshot-git hyprland-qtutils\n\nsudo cp ~/dotfiles/Extras/Extras/nvim.desktop /usr/share/applications/\n\n# Set up Hyprland configuration\necho \"Configuring Hyprland...\"\n\n# Create the configuration file if it doesn't exist\nif [ ! -f \"$HOME/.config/hypr/hyprland.conf\" ]; then\n  mkdir -p \"$HOME/.config/hypr\"\n  cp /etc/xdg/hyprland/hyprland.conf \"$HOME/.config/hypr/hyprland.conf\"\n  dialog --msgbox \"Hyprland configuration file copied to $HOME/.config/hypr/hyprland.conf\" 10 50\nelse\n  dialog --msgbox \"Hyprland configuration file already exists.\" 10 50\nfi\n\n# Inform the user that installation is complete\ndialog --msgbox \"Hyprland has been installed and configured. Please restart your system to start using Hyprland.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:19:31.002282630","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Hyprland...\"\n\n# Ask the user if they want to install Hyprland\ndialog --title \"Install Hyprland?\" \\\n  --yesno \"Would you like to install Hyprland (a dynamic Wayland compositor)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Hyprland installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Hyprland installation will begin now.\" 10 50\nfi\n\n# sudo pacman -S kitty system-config-printer hyprpicker hyprlock chafa hypridle waybar wl-clipboard speech-dispatcher hyprpaper brightnessctl cmake meson cpio grim slurp wtype wf-recorder swaync\n#\n# paru -S wlrobs-hg hyprland-git xdg-desktop-portal-hyprland-git clipse-bin hyde-cli-git wlogout hyprshot-git hyprland-qtutils\n#\n# sudo cp ~/dotfiles/Extras/Extras/nvim.desktop /usr/share/applications/\n\n# Set up Hyprland configuration\necho \"Configuring Hyprland...\"\n\n# Create the configuration file if it doesn't exist\n# if [ ! -f \"$HOME/.config/hypr/hyprland.conf\" ]; then\n#   mkdir -p \"$HOME/.config/hypr\"\n#   cp /etc/xdg/hyprland/hyprland.conf \"$HOME/.config/hypr/hyprland.conf\"\n#   dialog --msgbox \"Hyprland configuration file copied to $HOME/.config/hypr/hyprland.conf\" 10 50\n# else\n#   dialog --msgbox \"Hyprland configuration file already exists.\" 10 50\n# fi\n\n# Inform the user that installation is complete\ndialog --msgbox \"Hyprland has been installed and configured. Please restart your system to start using Hyprland.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:19:30.989427963","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up GRUB theme...\"\n\n# Ask if the user wants to set up a GRUB theme\ndialog --title \"Install GRUB theme?\" \\\n  --yesno \"Would you like to install a GRUB theme?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"GRUB theme setup skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"GRUB theme setup will begin now.\" 10 50\nfi\n\n# Install GRUB theme (Arch Linux default theme or any custom theme)\nsudo pacman -S --noconfirm grub-theme-arch\n\n# Check if the GRUB theme was installed correctly\nif [ $? -eq 0 ]; then\n  echo \"GRUB theme installed successfully.\"\nelse\n  echo \"Failed to install GRUB theme.\"\n  exit 1\nfi\n\n# Enable the GRUB theme\necho \"Setting GRUB theme...\"\nsudo sed -i 's/#GRUB_THEME=\"\"/GRUB_THEME=\"/usr/share/grub/themes/arch/grub.cfg\"/g' /etc/default/grub\n\n# Regenerate GRUB config\necho \"Regenerating GRUB configuration...\"\nsudo grub-mkconfig -o /boot/grub/grub.cfg\n\ndialog --msgbox \"GRUB theme setup is complete and GRUB config has been updated.\" 10 50\nclear\n","recorded":"2025-01-06 17:19:28.734970818","filePath":"null","pinned":false},{"value":"# sudo cp ~/dotfiles/Extras/Extras/etc/bash.bashrc /etc/\n","recorded":"2025-01-06 17:19:10.852903494","filePath":"null","pinned":false},{"value":"# sudo cp ~/dotfiles/Extras/Extras/etc/DIR_COLORS /etc/\n","recorded":"2025-01-06 17:19:10.428454735","filePath":"null","pinned":false},{"value":"# sudo cp ~/dotfiles/Extras/Extras/etc/mpd.conf /etc/\n","recorded":"2025-01-06 17:19:10.077897058","filePath":"null","pinned":false},{"value":"# mkdir ~/.icons \u0026\u0026 cp -r ~/dotfiles/Extras/Extras/.icons/Capitaine/ ~/.icons/\n","recorded":"2025-01-06 17:18:59.726546150","filePath":"null","pinned":false},{"value":"# cp ~/dotfiles/Extras/Extras/alanpeabody.zsh-theme ~/.oh-my-zsh/themes/\n","recorded":"2025-01-06 17:18:59.079698360","filePath":"null","pinned":false},{"value":"archcraft-dwm.zsh-theme","recorded":"2025-01-06 17:17:57.310578957","filePath":"null","pinned":false},{"value":"# # sudo cp -r ~/dotfiles/Extras/Extras/etc/lightdm/ /etc/\n","recorded":"2025-01-06 17:17:42.050971800","filePath":"null","pinned":false},{"value":"# sudo cp ~/dotfiles/Extras/Extras/etc/environment /etc/\n","recorded":"2025-01-06 17:17:41.305886804","filePath":"null","pinned":false},{"value":"# sudo cp ~/dotfiles/Extras/Extras/etc/nanorc /etc/\n","recorded":"2025-01-06 17:16:20.914049192","filePath":"null","pinned":false},{"value":"# 16. Install Fonts\n","recorded":"2025-01-06 17:14:54.420211021","filePath":"null","pinned":false},{"value":"# mv my-fonts ~/.local/share/fonts/\n","recorded":"2025-01-06 17:14:53.925791517","filePath":"null","pinned":false},{"value":"# 17. Install/stow dotfiles\n","recorded":"2025-01-06 17:14:51.017754470","filePath":"null","pinned":false},{"value":"# First check for conflicts\n","recorded":"2025-01-06 17:14:50.466473278","filePath":"null","pinned":false},{"value":"#rm -rf ~/.config/doom\n","recorded":"2025-01-06 17:14:50.047770844","filePath":"null","pinned":false},{"value":"# rm -rf ~/.config/gtk-3.0\n","recorded":"2025-01-06 17:14:49.557438206","filePath":"null","pinned":false},{"value":"# rm ~/.bashrc\n","recorded":"2025-01-06 17:14:48.018636396","filePath":"null","pinned":false},{"value":"# rm ~/.zshrc\n","recorded":"2025-01-06 17:14:47.107595298","filePath":"null","pinned":false},{"value":"# cd ~/dotfiles\n","recorded":"2025-01-06 17:14:46.648364252","filePath":"null","pinned":false},{"value":"# stow */\n","recorded":"2025-01-06 17:14:43.697138516","filePath":"null","pinned":false},{"value":"# Install python packages\n","recorded":"2025-01-06 17:14:42.489517744","filePath":"null","pinned":false},{"value":"# --------------------------------------------------------------------------------------\n\necho \"Installing PIP Packages...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install my PIP packages?\" \\\n  --yesno \"Would you like to install my PIP Packages?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"PIP packages installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"PIP packages installation will begin now.\" 10 50\n\n  pip install pynvim numpy pandas matplotlib seaborn scikit-learn jupyterlab ipykernel ipywidgets tensorflow python-prctl inotify-simple psutil opencv-python keras mov-cli-youtube mov-cli mov-cli-test otaku-watcher film-central daemon jupyterlab_wakatime\n\n  pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu # pytorch cpu version\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"PIP Packages has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear","recorded":"2025-01-06 17:13:29.752174142","filePath":"null","pinned":false},{"value":"pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu # pytorch cpu version\n","recorded":"2025-01-06 17:12:58.608262823","filePath":"null","pinned":false},{"value":"pip install \n","recorded":"2025-01-06 17:12:57.667134050","filePath":"null","pinned":false},{"value":"jupyterlab_wakatime\n","recorded":"2025-01-06 17:12:51.932250407","filePath":"null","pinned":false},{"value":"j","recorded":"2025-01-06 17:12:47.222041840","filePath":"null","pinned":false},{"value":"# pip install pynvim numpy pandas matplotlib seaborn scikit-learn jupyterlab ipykernel ipywidgets tensorflow python-prctl inotify-simple psutil opencv-python keras mov-cli-youtube mov-cli mov-cli-test otaku-watcher film-central daemon\n# pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu # pytorch cpu version\n# pip install jupyterlab_wakatime","recorded":"2025-01-06 17:12:37.671301349","filePath":"null","pinned":false},{"value":"  cd ~/dotfiles/Extras/Extras/waldl-master/ \u0026\u0026 sudo make install \u0026\u0026 cd ~/dotfiles\n","recorded":"2025-01-06 17:12:31.753603143","filePath":"null","pinned":false},{"value":"  cd ~/.config/dmenu \u0026\u0026 sudo make install \u0026\u0026 cd\n","recorded":"2025-01-06 17:12:31.538142770","filePath":"null","pinned":false},{"value":"  cd ~/.config/st \u0026\u0026 sudo make install \u0026\u0026 cd\n","recorded":"2025-01-06 17:12:31.289636738","filePath":"null","pinned":false},{"value":"  cd ~/.config/slstatus \u0026\u0026 sudo make clean install \u0026\u0026 cd\n","recorded":"2025-01-06 17:12:31.048092894","filePath":"null","pinned":false},{"value":"  cd ~/.config/dwm \u0026\u0026 sudo make clean install \u0026\u0026 cd\n","recorded":"2025-01-06 17:12:30.812321965","filePath":"null","pinned":false},{"value":"  stow ~/dotfiles/suckless/\n","recorded":"2025-01-06 17:12:30.303844730","filePath":"null","pinned":false},{"value":"echo \"Setting up dwm...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install dwm?\" \\\n  --yesno \"Would you like to install dwm (Dynamic Window Manager)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"dwm installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"dwm installation will begin now.\" 10 50\n\n  stow ~/dotfiles/suckless/\n\n  cd ~/.config/dwm \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/slstatus \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/st \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/.config/dmenu \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/dotfiles/Extras/Extras/waldl-master/ \u0026\u0026 sudo make install \u0026\u0026 cd ~/dotfiles\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"dwm has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear","recorded":"2025-01-06 17:11:28.468942260","filePath":"null","pinned":false},{"value":"echo \"Done with setup \u0026 to install pip packages you need to restart terminal \"\n","recorded":"2025-01-06 17:09:36.453883378","filePath":"null","pinned":false},{"value":"# --------------------------------------------------------------------------------------\n","recorded":"2025-01-06 17:07:20.540121554","filePath":"null","pinned":false},{"value":"echo \"Setting up Ollama...\"\n\n# Ask the user if they want to install Ollama\ndialog --title \"Install Ollama?\" \\\n  --yesno \"Would you like to install Ollama (a tool to run large language models locally)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Ollama installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Ollama installation will begin now.\" 10 50\nfi\n\n# Check if Ollama is available through the AUR or if manual installation is needed\n# You can install Ollama from their official site or via AUR\n# We will use AUR (Arch User Repository) to install it using an AUR helper like paru.\n\n# Install Ollama using paru (or an AUR helper of your choice)\nif ! command -v ollama \u0026\u003e/dev/null; then\n  echo \"Ollama not found, installing Ollama from AUR...\"\n\n  # Install Ollama from the AUR using paru (if not already installed)\n  paru -S --noconfirm ollama\n\n  ollama serve\n  ollama pull mistral\n  ollama pull gemma:7b\n\n  # Inform the user that Ollama has been installed\n  dialog --msgbox \"Ollama has been installed. You can now use it to run local large language models.\" 10 50\nelse\n  dialog --msgbox \"Ollama is already installed on your system.\" 10 50\nfi\n\nclear","recorded":"2025-01-06 17:06:46.802318299","filePath":"null","pinned":false},{"value":"  dialog --msgbox \"Hyprland configuration file copied to $HOME/.config/hypr/hyprland.conf\" 10 50\n","recorded":"2025-01-06 17:06:35.279299262","filePath":"null","pinned":false},{"value":"mkdir -p \"$HOME/.config/hypr\"\n  cp /etc/xdg/hyprland/hyprland.conf \"$HOME/.config/hypr/hyprland.conf\"","recorded":"2025-01-06 17:06:14.695304736","filePath":"null","pinned":false},{"value":"echo \"Setting Extra Packages for System...\" \u0026\u0026 sleep 1\n\nsudo npm i -g bash-language-server\n\ncd ~/dotfiles/\n\nrm ~/.bashrc ~/.zshrc\n\nstow anipy-cli bashrc BTOP cava dunst face fastfetch DWMScripts flameshot gtk-3 Kvantum latexmkrc libreoffice mpd mpv ncmpcpp newsboat nvim NWG octave pandoc pavucontrol picom Profile qt6ct qutebrowser ranger redyt rofi screenlayout screensaver starship XFCEPic xsettingsd zathura zsh\n\n","recorded":"2025-01-06 17:04:30.084136379","filePath":"null","pinned":false},{"value":"\necho \"Setting Extra Packages for System...\" \u0026\u0026 sleep 1\n\nsudo npm i -g bash-language-server\n\ncd ~/dotfiles/\n\nrm ~/.bashrc ~/.zshrc\n\nstow anipy-cli bashrc BTOP cava dunst face fastfetch DWMScripts flameshot gtk-3 Kvantum latexmkrc libreoffice mpd mpv ncmpcpp newsboat nvim NWG octave pandoc pavucontrol picom Profile qt6ct qutebrowser ranger redyt rofi screenlayout screensaver starship XFCEPic xsettingsd zathura zsh","recorded":"2025-01-06 17:04:25.423239010","filePath":"null","pinned":false},{"value":"### HYPRLAND\n","recorded":"2025-01-06 17:03:33.895686784","filePath":"null","pinned":false},{"value":"# Open in neovim from Thunar \n","recorded":"2025-01-06 17:03:33.549477222","filePath":"null","pinned":false},{"value":"# \n","recorded":"2025-01-06 17:03:32.695900024","filePath":"null","pinned":false},{"value":"sudo cp ~/dotfiles/Extras/Extras/nvim.desktop /usr/share/applications/\n","recorded":"2025-01-06 17:03:23.413011676","filePath":"null","pinned":false},{"value":"## #\n","recorded":"2025-01-06 17:03:12.008295521","filePath":"null","pinned":false},{"value":"paru -S wlrobs-hg hyprland-git xdg-desktop-portal-hyprland-git clipse-bin hyde-cli-git wlogout hyprshot-git hyprland-qtutils\n","recorded":"2025-01-06 17:02:58.015890531","filePath":"null","pinned":false},{"value":" sudo pacman -S kitty system-config-printer hyprpicker hyprlock chafa hypridle waybar wl-clipboard speech-dispatcher hyprpaper brightnessctl cmake meson cpio grim slurp wtype wf-recorder swaync\n","recorded":"2025-01-06 17:02:49.650331001","filePath":"null","pinned":false},{"value":"# Install Hyprland from the official repositories or AUR\necho \"Installing Hyprland...\"\nsudo pacman -S --noconfirm hyprland\n\n# Install dependencies and useful tools for Hyprland\necho \"Installing necessary dependencies for Hyprland...\"\nsudo pacman -S --noconfirm swaybg swaylock-effects waybar wayland-utils wofi rofi\n\n# Install a default font for Wayland (like FiraCode)\necho \"Installing font for Wayland...\"\nsudo pacman -S --noconfirm ttf-fira-code\n\n# Install a basic terminal emulator (Alacritty) for Hyprland\necho \"Installing terminal emulator (Alacritty)...\"\nsudo pacman -S --noconfirm alacritty\n\n# Install a basic text editor (like Neovim)\necho \"Installing text editor (Neovim)...\"\nsudo pacman -S --noconfirm neovim\n\n# Install tools for compositor management\necho \"Installing compositor utilities...\"\nsudo pacman -S --noconfirm hyprpaper\n\n# Install a file manager (e.g., thunar) for ease of file management\necho \"Installing file manager (Thunar)...\"\nsudo pacman -S --noconfirm thunar\n\n# Install a simple web browser (e.g., Firefox)\necho \"Installing web browser (Firefox)...\"\nsudo pacman -S --noconfirm firefox","recorded":"2025-01-06 17:02:26.684808916","filePath":"null","pinned":false},{"value":"# Install Hyprland from the official repositories or AUR\necho \"Installing Hyprland...\"\nsudo pacman -S --noconfirm hyprland\n\n# Install dependencies and useful tools for Hyprland\necho \"Installing necessary dependencies for Hyprland...\"\nsudo pacman -S --noconfirm swaybg swaylock-effects waybar wayland-utils wofi rofi\n\n# Install a default font for Wayland (like FiraCode)\necho \"Installing font for Wayland...\"\nsudo pacman -S --noconfirm ttf-fira-code\n\n# Install a basic terminal emulator (Alacritty) for Hyprland\necho \"Installing terminal emulator (Alacritty)...\"\nsudo pacman -S --noconfirm alacritty\n\n# Install a basic text editor (like Neovim)\necho \"Installing text editor (Neovim)...\"\nsudo pacman -S --noconfirm neovim\n\n# Install tools for compositor management\necho \"Installing compositor utilities...\"\nsudo pacman -S --noconfirm hyprpaper\n\n# Install a file manager (e.g., thunar) for ease of file management\necho \"Installing file manager (Thunar)...\"\nsudo pacman -S --noconfirm thunar\n\n# Install a simple web browser (e.g., Firefox)\necho \"Installing web browser (Firefox)...\"\nsudo pacman -S --noconfirm firefox\n\n# Set up Hyprland configuration\necho \"Configuring Hyprland...\"\n\n# Create the configuration file if it doesn't exist\nif [ ! -f \"$HOME/.config/hypr/hyprland.conf\" ]; then\n  mkdir -p \"$HOME/.config/hypr\"\n  cp /etc/xdg/hyprland/hyprland.conf \"$HOME/.config/hypr/hyprland.conf\"\n  dialog --msgbox \"Hyprland configuration file copied to $HOME/.config/hypr/hyprland.conf\" 10 50\n","recorded":"2025-01-06 17:02:06.268173814","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up dwm...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install dwm?\" \\\n  --yesno \"Would you like to install dwm (Dynamic Window Manager)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"dwm installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"dwm installation will begin now.\" 10 50\n\n  stow ~/dotfiles/suckless/\n\n  cd ~/.config/dwm \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/slstatus \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/st \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/.config/dmenu \u0026\u0026 sudo make install \u0026\u0026 cd\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"dwm has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear\n","recorded":"2025-01-06 17:01:51.681903481","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Hyprland...\"\n\n# Ask the user if they want to install Hyprland\ndialog --title \"Install Hyprland?\" \\\n  --yesno \"Would you like to install Hyprland (a dynamic Wayland compositor)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Hyprland installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Hyprland installation will begin now.\" 10 50\nfi\n\n# Install Hyprland from the official repositories or AUR\necho \"Installing Hyprland...\"\nsudo pacman -S --noconfirm hyprland\n\n# Install dependencies and useful tools for Hyprland\necho \"Installing necessary dependencies for Hyprland...\"\nsudo pacman -S --noconfirm swaybg swaylock-effects waybar wayland-utils wofi rofi\n\n# Install a default font for Wayland (like FiraCode)\necho \"Installing font for Wayland...\"\nsudo pacman -S --noconfirm ttf-fira-code\n\n# Install a basic terminal emulator (Alacritty) for Hyprland\necho \"Installing terminal emulator (Alacritty)...\"\nsudo pacman -S --noconfirm alacritty\n\n# Install a basic text editor (like Neovim)\necho \"Installing text editor (Neovim)...\"\nsudo pacman -S --noconfirm neovim\n\n# Install tools for compositor management\necho \"Installing compositor utilities...\"\nsudo pacman -S --noconfirm hyprpaper\n\n# Install a file manager (e.g., thunar) for ease of file management\necho \"Installing file manager (Thunar)...\"\nsudo pacman -S --noconfirm thunar\n\n# Install a simple web browser (e.g., Firefox)\necho \"Installing web browser (Firefox)...\"\nsudo pacman -S --noconfirm firefox\n\n# Set up Hyprland configuration\necho \"Configuring Hyprland...\"\n\n# Create the configuration file if it doesn't exist\nif [ ! -f \"$HOME/.config/hypr/hyprland.conf\" ]; then\n  mkdir -p \"$HOME/.config/hypr\"\n  cp /etc/xdg/hyprland/hyprland.conf \"$HOME/.config/hypr/hyprland.conf\"\n  dialog --msgbox \"Hyprland configuration file copied to $HOME/.config/hypr/hyprland.conf\" 10 50\nelse\n  dialog --msgbox \"Hyprland configuration file already exists.\" 10 50\nfi\n\n# Inform the user that installation is complete\ndialog --msgbox \"Hyprland has been installed and configured. Please restart your system to start using Hyprland.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:01:49.871181178","filePath":"null","pinned":false},{"value":"# sh ~/dotfiles/Extras/Extras/ollama.sh\n","recorded":"2025-01-06 17:01:05.732182352","filePath":"null","pinned":false},{"value":"# # 12. Install ollama from Extras folder of dotfiles\n","recorded":"2025-01-06 17:01:05.173156013","filePath":"null","pinned":false},{"value":"# ollama serve\n# ollama pull mistral\n# ollama pull gemma:7b\n\n","recorded":"2025-01-06 17:00:47.162886431","filePath":"null","pinned":false},{"value":"# ollama serve\n# ollama pull mistral\n# ollama pull gemma:7b","recorded":"2025-01-06 17:00:43.502207463","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Ollama...\"\n\n# Ask the user if they want to install Ollama\ndialog --title \"Install Ollama?\" \\\n  --yesno \"Would you like to install Ollama (a tool to run large language models locally)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Ollama installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Ollama installation will begin now.\" 10 50\nfi\n\n# Check if Ollama is available through the AUR or if manual installation is needed\n# You can install Ollama from their official site or via AUR\n# We will use AUR (Arch User Repository) to install it using an AUR helper like paru.\n\n# Install Ollama using paru (or an AUR helper of your choice)\nif ! command -v ollama \u0026\u003e /dev/null; then\n  echo \"Ollama not found, installing Ollama from AUR...\"\n\n  # Install Ollama from the AUR using paru (if not already installed)\n  paru -S --noconfirm ollama\n\n  # Inform the user that Ollama has been installed\n  dialog --msgbox \"Ollama has been installed. You can now use it to run local large language models.\" 10 50\nelse\n  dialog --msgbox \"Ollama is already installed on your system.\" 10 50\nfi\n\nclear\n","recorded":"2025-01-06 17:00:15.895355861","filePath":"null","pinned":false},{"value":"# 11. Insatll waldl fddrom Extras folder of dotfiles\n","recorded":"2025-01-06 16:58:55.968126308","filePath":"null","pinned":false},{"value":"cd  ~/dotfiles/Extras/Extras/waldl-master/ \u0026\u0026 sudo make install \u0026\u0026 cd ~/dotfiles\n","recorded":"2025-01-06 16:57:43.711755312","filePath":"null","pinned":false},{"value":"# 8. Mariadb setup\n","recorded":"2025-01-06 16:57:18.834522134","filePath":"null","pinned":false},{"value":"  # Install MariaDB if not already installed\n  sudo pacman -S --noconfirm mariadb\n\n  # Start and enable the MariaDB service\n  sudo systemctl enable --now mariadb.service\n\n  # Secure the MariaDB installation\n  sudo mysql_secure_installation","recorded":"2025-01-06 16:57:09.446080396","filePath":"null","pinned":false},{"value":"# sudo pacman -S mariadb --noconfirm\n# sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql\n# sudo systemctl enable --now mariadb\n# sudo mariadb-secure-installation\n","recorded":"2025-01-06 16:57:01.341622149","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up MariaDB...\"\n\n# Ask the user if they want to install MariaDB\ndialog --title \"Install MariaDB?\" \\\n  --yesno \"Would you like to install MariaDB (a relational database management system)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"MariaDB installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"MariaDB installation will begin now.\" 10 50\n\n  # Install MariaDB if not already installed\n  sudo pacman -S --noconfirm mariadb\n\n  # Start and enable the MariaDB service\n  sudo systemctl enable --now mariadb.service\n\n  # Secure the MariaDB installation\n  sudo mysql_secure_installation\n\n  # Inform the user that MariaDB has been installed and configured\n  dialog --msgbox \"MariaDB has been installed and secured. You can now use it for your database needs.\" 10 50\nfi\n\nclear\n","recorded":"2025-01-06 16:56:40.450160657","filePath":"null","pinned":false},{"value":"stow ani-cli bashrc BTOP cava dunst DWMScripts face fastfetch flameshot \n","recorded":"2025-01-06 16:55:53.809950821","filePath":"null","pinned":false},{"value":"stow anipy-cli bashrc BTOP cava dunst face fastfetch DWMScripts flameshot gtk-3 Hyprland Kvantum latexmkrc libreoffice mpd mpv ncmpcpp newsboat nvim NWG octave pandoc pavucontrol picom Profile qt6ct qutebrowser ranger redyt rofi screenlayout screensaver starship suckless XFCEPic xsettingsd zathura zsh","recorded":"2025-01-06 16:55:48.789813701","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/archcraft-dwm.zsh-theme","recorded":"2025-01-06 16:50:50.701481314","filePath":"null","pinned":false},{"value":"# --------------------------------------------------------------------------------------\n\necho \"Installing Extra Packages for System...\" \u0026\u0026 sleep 1\n\nsudo npm i -g bash-language-server","recorded":"2025-01-06 16:46:07.787352882","filePath":"null","pinned":false},{"value":"zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting","recorded":"2025-01-06 16:45:57.610728326","filePath":"null","pinned":false},{"value":"echo \"Setting up additional tools and packages...\"\n\n# Display checklist with a single column (scrollable) for additional tools using dialog\nextra_tools_choices=$(dialog --title \"Select Extra Tools to Install\" \\\n  --checklist \"Choose the extra tools and packages you want to install:\" 20 60 20 \\\n  \"Ani-Cli\" \"\" OFF \\\n  \"Ani-Cli-PY\" \"Python Version\" OFF \\\n  \"ytfzf\" \"\" OFF \\\n  \"Zathura\" \"\" OFF \\\n  \"Evince\" \"\" OFF \\\n  \"Okular\" \"\" OFF \\\n  \"Foxit-Reader\" \"\" OFF \\\n  \"Master-PDF-Editor\" \"\" OFF \\\n  \"MuPDF\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$extra_tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $extra_tools_choices; do\n  case $app in\n  \"Ani-Cli\")\n    echo \"Installing ani-cli...\"\n    paru -S --noconfirm --needed ani-cli-git\n    ;;\n  \"Ani-Cli-PY\")\n    echo \"Installing ani-cli python version...\"\n    pip install anipy-cli\n    ;;\n  \"ytfzf\")\n    echo \"Installing ytfzf...\"\n    paru -S --noconfirm --needed ytfzf-git\n    ;;\n  \"Zathura\")\n    echo \"Installing Zathura...\"\n   sudo pacman -S zathura zathura-pdf-mupdf zathura-djvu zathura-ps zathura-cb --noconfirm \n    ;;\n  \"Evince\")\n    echo \"Installing Evince...\"\n    sudo pacman -S --noconfirm evince\n    ;;\n  \"Okular\")\n    echo \"Installing Okular...\"\n    sudo pacman -S --noconfirm okular\n    ;;\n  \"Foxit-Reader\")\n    echo \"Installing Foxit Reader...\"\n    paru -S --noconfirm foxitreader\n    ;;\n  \"Master-PDF-Editor\")\n    echo \"Installing Master PDF Editor...\"\n    paru -S --noconfirm masterpdfeditor\n    ;;","recorded":"2025-01-06 16:45:57.602002491","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up additional tools and packages...\"\n\n# Display checklist with a single column (scrollable) for additional tools using dialog\nextra_tools_choices=$(dialog --title \"Select Extra Tools to Install\" \\\n  --checklist \"Choose the extra tools and packages you want to install:\" 20 60 20 \\\n  \"Ani-Cli\" \"\" OFF \\\n  \"Ani-Cli-PY\" \"Python Version\" OFF \\\n  \"ytfzf\" \"\" OFF \\\n  \"Zathura\" \"\" OFF \\\n  \"Evince\" \"\" OFF \\\n  \"Okular\" \"\" OFF \\\n  \"Foxit-Reader\" \"\" OFF \\\n  \"Master-PDF-Editor\" \"\" OFF \\\n  \"MuPDF\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$extra_tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $extra_tools_choices; do\n  case $app in\n  \"Ani-Cli\")\n    echo \"Installing ani-cli...\"\n    paru -S --noconfirm --needed ani-cli-git\n    ;;\n  \"Ani-Cli-PY\")\n    echo \"Installing ani-cli python version...\"\n    pip install anipy-cli\n    ;;\n  \"ytfzf\")\n    echo \"Installing ytfzf...\"\n    paru -S --noconfirm --needed ytfzf-git\n    ;;\n  \"Zathura\")\n    echo \"Installing Zathura...\"\n   sudo pacman -S zathura zathura-pdf-mupdf zathura-djvu zathura-ps zathura-cb --noconfirm \n    ;;\n  \"Evince\")\n    echo \"Installing Evince...\"\n    sudo pacman -S --noconfirm evince\n    ;;\n  \"Okular\")\n    echo \"Installing Okular...\"\n    sudo pacman -S --noconfirm okular\n    ;;\n  \"Foxit-Reader\")\n    echo \"Installing Foxit Reader...\"\n    paru -S --noconfirm foxitreader\n    ;;\n  \"Master-PDF-Editor\")\n    echo \"Installing Master PDF Editor...\"\n    paru -S --noconfirm masterpdfeditor\n    ;;\n  \"MuPDF\")\n    echo \"Installing MuPDF...\"\n    sudo pacman -S --noconfirm mupdf\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected extra tools and packages have been installed.\" 10 50\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Installing Extra Packages for System...\" \u0026\u0026 sleep 1\n\nsudo npm i -g bash-language-server\n","recorded":"2025-01-06 16:45:51.866023172","filePath":"null","pinned":false},{"value":"# 18. Install DWM\n","recorded":"2025-01-06 16:45:03.163818037","filePath":"null","pinned":false},{"value":"  # Install dwm if not already installed\n","recorded":"2025-01-06 16:44:35.334875703","filePath":"null","pinned":false},{"value":"  sudo pacman -S --noconfirm dwm\n","recorded":"2025-01-06 16:44:34.917730558","filePath":"null","pinned":false},{"value":"# cd ~/.config/dwm \u0026\u0026 sudo make clean install \u0026\u0026 cd\n# cd ~/.config/slstatus \u0026\u0026 sudo make clean install \u0026\u0026 cd\n# cd ~/.config/st \u0026\u0026 sudo make install \u0026\u0026 cd\n# cd ~/.config/dmenu \u0026\u0026 sudo make install \u0026\u0026 cd","recorded":"2025-01-06 16:44:29.814339214","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Zsh...\"\n\n# Ask the user if they want to install Zsh\ndialog --title \"Install and Set Up Zsh?\" \\\n  --yesno \"Would you like to install Zsh and set it as your default shell?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Zsh installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Zsh installation will begin now.\" 10 50\n\n  # Install Zsh if not already installed\n  sudo pacman -S --noconfirm zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting\n\n  # Change the default shell to Zsh\n  chsh -s /bin/zsh\n\n\n  sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n\n  # Check if the installation was successful and prompt to restart the terminal\n  dialog --msgbox \"Zsh has been installed and set as your default shell. Please restart your terminal to apply the changes.\" 10 50\nfi\n\nclear\n","recorded":"2025-01-06 16:44:13.941717461","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up dwm...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install dwm?\" \\\n  --yesno \"Would you like to install dwm (Dynamic Window Manager)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"dwm installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"dwm installation will begin now.\" 10 50\n\n  # Install dwm if not already installed\n  sudo pacman -S --noconfirm dwm\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"dwm has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear\n","recorded":"2025-01-06 16:44:11.960058748","filePath":"null","pinned":false},{"value":"# chsh -s /bin/zsh\n","recorded":"2025-01-06 16:43:32.155892411","filePath":"null","pinned":false},{"value":"# # 15. Setup zsh shell as default\n","recorded":"2025-01-06 16:43:31.750074717","filePath":"null","pinned":false},{"value":"# # exit # exit from zsh\n","recorded":"2025-01-06 16:43:30.251890509","filePath":"null","pinned":false},{"value":"# 16. Install oh-my-zsh\n","recorded":"2025-01-06 16:43:29.791373133","filePath":"null","pinned":false},{"value":"sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"","recorded":"2025-01-06 16:42:33.855462512","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Zsh and Oh My Zsh...\"\n\n# Ask the user if they want to install Zsh and Oh My Zsh\ndialog --title \"Install and Set Up Zsh with Oh My Zsh?\" \\\n  --yesno \"Would you like to install Zsh, set it as your default shell, and install Oh My Zsh?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Zsh and Oh My Zsh installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Zsh and Oh My Zsh installation will begin now.\" 10 50\n\n  # Install Zsh if not already installed\n  sudo pacman -S --noconfirm zsh\n\n  # Change the default shell to Zsh\n  chsh -s $(which zsh)\n\n  # Install Oh My Zsh via curl (or wget)\n  sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n\n  # Check if the installation was successful and prompt to restart the terminal\n  dialog --msgbox \"Zsh and Oh My Zsh have been installed and set as your default shell. Please restart your terminal to apply the changes.\" 10 50\nfi\n\nclear\n","recorded":"2025-01-06 16:42:27.895125547","filePath":"null","pinned":false},{"value":"sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n","recorded":"2025-01-06 16:41:50.096670605","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Miniconda...\"\n\n# Ask the user if they want to install Miniconda\ndialog --title \"Install Miniconda?\" \\\n  --yesno \"Would you like to install Miniconda? (Recommended for Python and Data Science)\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Miniconda installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Miniconda installation will begin now.\" 10 50\n\n  # Download Miniconda installer\n  wget https://repo.anaconda.com/miniconda/Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Run the installer\n  bash Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Remove the installer after installation\n  rm Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  dialog --msgbox \"Miniconda installation completed.\" 10 50\nfi\n\nclear\n","recorded":"2025-01-06 16:40:48.468258780","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Zsh...\"\n\n# Ask the user if they want to install Zsh\ndialog --title \"Install and Set Up Zsh?\" \\\n  --yesno \"Would you like to install Zsh and set it as your default shell?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Zsh installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Zsh installation will begin now.\" 10 50\n\n  # Install Zsh if not already installed\n  sudo pacman -S --noconfirm zsh\n\n  # Change the default shell to Zsh\n  chsh -s $(which zsh)\n\n  # Check if the installation was successful and prompt to restart the terminal\n  dialog --msgbox \"Zsh has been installed and set as your default shell. Please restart your terminal to apply the changes.\" 10 50\nfi\n\nclear\n","recorded":"2025-01-06 16:40:47.168791430","filePath":"null","pinned":false},{"value":"# 15. Install MINICONDA\n","recorded":"2025-01-06 16:31:40.634907400","filePath":"null","pinned":false},{"value":"# wget https://repo.anaconda.com/miniconda/Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n# sh Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n# rm Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n","recorded":"2025-01-06 16:31:36.288312313","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up additional tools and packages...\"\n\n# Display checklist with a single column (scrollable) for additional tools using dialog\nextra_tools_choices=$(dialog --title \"Select Extra Tools to Install\" \\\n  --checklist \"Choose the extra tools and packages you want to install:\" 20 60 20 \\\n  \"Ani-Cli\" \"\" OFF \\\n  \"Ani-Cli-PY\" \"Python Version\" OFF \\\n  \"ytfzf\" \"\" OFF \\\n  \"Zathura\" \"\" OFF \\\n  \"Evince\" \"\" OFF \\\n  \"Okular\" \"\" OFF \\\n  \"Foxit-Reader\" \"\" OFF \\\n  \"Master-PDF-Editor\" \"\" OFF \\\n  \"MuPDF\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$extra_tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $extra_tools_choices; do\n  case $app in\n  \"Ani-Cli\")\n    echo \"Installing ani-cli...\"\n    paru -S --noconfirm --needed ani-cli-git\n    ;;\n  \"Ani-Cli-PY\")\n    echo \"Installing ani-cli python version...\"\n    pip install anipy-cli\n    ;;\n  \"ytfzf\")\n    echo \"Installing ytfzf...\"\n    paru -S --noconfirm --needed ytfzf-git\n    ;;\n  \"Zathura\")\n    echo \"Installing Zathura...\"\n   sudo pacman -S zathura zathura-pdf-mupdf zathura-djvu zathura-ps zathura-cb --noconfirm \n    ;;\n  \"Evince\")\n    echo \"Installing Evince...\"\n    sudo pacman -S --noconfirm evince\n    ;;\n  \"Okular\")\n    echo \"Installing Okular...\"\n    sudo pacman -S --noconfirm okular\n    ;;\n  \"Foxit-Reader\")\n    echo \"Installing Foxit Reader...\"\n    paru -S --noconfirm foxitreader\n    ;;\n  \"Master-PDF-Editor\")\n    echo \"Installing Master PDF Editor...\"\n    paru -S --noconfirm masterpdfeditor\n    ;;\n","recorded":"2025-01-06 16:30:46.328909859","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Miniconda...\"\n\n# Ask the user if they want to install Miniconda\ninstall_miniconda=$(dialog --title \"Install Miniconda?\" \\\n  --yesno \"Would you like to install Miniconda? (Recommended for Python and Data Science)\" 10 60)\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Miniconda installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Miniconda installation will begin now.\" 10 50\n\n  # Download Miniconda installer\n  wget https://repo.anaconda.com/miniconda/Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Run the installer\n  bash Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Remove the installer after installation\n  rm Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  dialog --msgbox \"Miniconda installation completed.\" 10 50\nfi\n\nclear\n","recorded":"2025-01-06 16:30:46.321210249","filePath":"null","pinned":false},{"value":"In test line 6:\ninstall_miniconda=$(dialog --title \"Install Miniconda?\" \\\n^---------------^ SC2034 (warning): install_miniconda appears unused. Verify use (or export if used externally).\n","recorded":"2025-01-06 16:30:31.301195911","filePath":"null","pinned":false},{"value":"\"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n","recorded":"2025-01-06 16:28:04.818138708","filePath":"null","pinned":false},{"value":"  \"Miniconda\" \"\" OFF \\\n","recorded":"2025-01-06 16:27:59.612664076","filePath":"null","pinned":false},{"value":"# 14. Install Bash Language Server\n","recorded":"2025-01-06 16:23:46.788153428","filePath":"null","pinned":false},{"value":"sudo npm i -g bash-language-server\n","recorded":"2025-01-06 16:22:58.542571613","filePath":"null","pinned":false},{"value":"# 5. Install Zathura\n","recorded":"2025-01-06 16:21:08.416933490","filePath":"null","pinned":false},{"value":"    sudo pacman -S --noconfirm zathura\n","recorded":"2025-01-06 16:21:03.707378435","filePath":"null","pinned":false},{"value":"# sudo pacman -S zathura zathura-pdf-mupdf zathura-djvu zathura-ps zathura-cb --noconfirm \n","recorded":"2025-01-06 16:20:55.453682231","filePath":"null","pinned":false},{"value":"  \"ytfzf\" \"\" OFF \\\n","recorded":"2025-01-06 16:20:34.971530121","filePath":"null","pinned":false},{"value":"masterpdfeditor","recorded":"2025-01-06 16:20:04.639951718","filePath":"null","pinned":false},{"value":"# pip install anipy-cli\n","recorded":"2025-01-06 16:19:03.985522322","filePath":"null","pinned":false},{"value":"# 9. Install anipy-cli\n","recorded":"2025-01-06 16:19:03.672184317","filePath":"null","pinned":false},{"value":"    paru -S --noconfirm --needed ani-cli-py-git\n","recorded":"2025-01-06 16:18:46.877955742","filePath":"null","pinned":false},{"value":"# paru -S ani-cli-git ytfzf-git  --noconfirm\n","recorded":"2025-01-06 16:18:22.525563310","filePath":"null","pinned":false},{"value":"# 7. Install external packages\n","recorded":"2025-01-06 16:18:22.037686922","filePath":"null","pinned":false},{"value":"#\n","recorded":"2025-01-06 16:18:21.773224721","filePath":"null","pinned":false},{"value":"    paru -S --noconfirm --needed ani-cli\n","recorded":"2025-01-06 16:17:59.700707926","filePath":"null","pinned":false},{"value":"paru -S ani-cli-git","recorded":"2025-01-06 16:17:51.691504228","filePath":"null","pinned":false},{"value":"  \"Ani-Cli\" \"\" OFF \\\n","recorded":"2025-01-06 16:17:09.337413153","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools, office tools, communication tools, and multimedia tools...\"\n\n# Display checklist with a single column (scrollable) for all tools using dialog\ntools_choices=$(dialog --title \"Select Tools to Install\" \\\n  --checklist \"Choose the tools you want to install:\" 20 60 18 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Telegram\" \"\" OFF \\\n  \"LibreOffice\" \"\" OFF \\\n  \"OnlyOffice\" \"\" OFF \\\n  \"Skype\" \"\" OFF \\\n  \"Slack\" \"\" OFF \\\n  \"Zoom\" \"\" OFF \\\n  \"Blender\" \"\" OFF \\\n  \"Octave\" \"\" OFF \\\n  \"OBS-Studio\" \"\" OFF \\\n  \"Inkscape\" \"\" OFF \\\n  \"GIMP\" \"\" OFF \\\n  \"VLC\" \"\" OFF \\\n  \"Audacity\" \"\" OFF \\\n  \"Krita\" \"\" OFF \\\n  \"Shotcut\" \"\" OFF \\\n  \"Steam\" \"\" OFF \\\n  \"Minecraft\" \"\" OFF \\\n  \"YouTUI\" \"TUI YT Music(Preferred)\" OFF \\\n  \"YTerMusic\" \"TUI YT Music\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $tools_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    paru -S kind-bin\n    curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Telegram\")\n    echo \"Installing Telegram...\"\n    paru -S --noconfirm telegram-desktop-bin\n    ;;\n  \"LibreOffice\")\n    echo \"Installing LibreOffice...\"\n    sudo pacman -S --noconfirm libreoffice-fresh\n    ;;\n  \"OnlyOffice\")\n    echo \"Installing OnlyOffice...\"\n    paru -S --noconfirm onlyoffice-bin\n    ;;\n  \"Skype\")\n    echo \"Installing Skype...\"\n    paru -S --noconfirm skypeforlinux-bin\n    ;;\n  \"Slack\")\n    echo \"Installing Slack...\"\n    paru -S --noconfirm slack-desktop\n    ;;\n  \"Zoom\")\n    echo \"Installing Zoom...\"\n    paru -S --noconfirm zoom\n    ;;\n  \"Blender\")\n    echo \"Installing Blender...\"\n    sudo pacman -S --noconfirm blender\n    ;;\n  \"Octave\")\n    echo \"Installing Octave...\"\n    sudo pacman -S --noconfirm octave\n    ;;\n  \"OBS-Studio\")\n    echo \"Installing OBS Studio...\"\n    sudo pacman -S --noconfirm obs-studio\n    ;;\n  \"Inkscape\")\n    echo \"Installing Inkscape...\"\n    sudo pacman -S --noconfirm inkscape\n    ;;\n  \"GIMP\")\n    echo \"Installing GIMP...\"\n    sudo pacman -S --noconfirm gimp\n    ;;\n  \"VLC\")\n    echo \"Installing VLC...\"\n    sudo pacman -S --noconfirm vlc\n    ;;\n  \"Audacity\")\n    echo \"Installing Audacity...\"\n    sudo pacman -S --noconfirm audacity\n    ;;\n  \"Krita\")\n    echo \"Installing Krita...\"\n    sudo pacman -S --noconfirm krita\n    ;;\n  \"Shotcut\")\n    echo \"Installing Shotcut...\"\n    sudo pacman -S --noconfirm shotcut\n    ;;\n  \"Steam\")\n    echo \"Installing Steam...\"\n    paru -S --noconfirm steam\n    ;;\n  \"Minecraft\")\n    echo \"Installing Minecraft...\"\n    paru -S --noconfirm minecraft-launcher\n    ;;\n  \"YouTUI\")\n    echo \"Installing Minecraft...\"\n    cargo install youtui\n    ;;\n  \"YTerMusic\")\n    echo \"Installing Minecraft...\"\n    cargo install ytermusic\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected tools have been installed.\" 10 50\n\nclear\n","recorded":"2025-01-06 16:16:46.853879982","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools, office tools, communication tools, multimedia tools, and PDF tools...\"\n\n# Display checklist with a single column (scrollable) for all tools using dialog\ntools_choices=$(dialog --title \"Select Tools to Install\" \\\n  --checklist \"Choose the tools you want to install:\" 20 60 20 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Telegram\" \"\" OFF \\\n  \"LibreOffice\" \"\" OFF \\\n  \"OnlyOffice\" \"\" OFF \\\n  \"Skype\" \"\" OFF \\\n  \"Slack\" \"\" OFF \\\n  \"Zoom\" \"\" OFF \\\n  \"Blender\" \"\" OFF \\\n  \"Octave\" \"\" OFF \\\n  \"OBS-Studio\" \"\" OFF \\\n  \"Inkscape\" \"\" OFF \\\n  \"GIMP\" \"\" OFF \\\n  \"VLC\" \"\" OFF \\\n  \"Audacity\" \"\" OFF \\\n  \"Krita\" \"\" OFF \\\n  \"Shotcut\" \"\" OFF \\\n  \"Steam\" \"\" OFF \\\n  \"Minecraft\" \"\" OFF \\\n  \"Evince\" \"\" OFF \\\n  \"Okular\" \"\" OFF \\\n  \"Foxit-Reader\" \"\" OFF \\\n  \"Master-PDF-Editor\" \"\" OFF \\\n  \"MuPDF\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $tools_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Telegram\")\n    echo \"Installing Telegram...\"\n    paru -S --noconfirm telegram-desktop-bin\n    ;;\n  \"LibreOffice\")\n    echo \"Installing LibreOffice...\"\n    sudo pacman -S --noconfirm libreoffice-fresh\n    ;;\n  \"OnlyOffice\")\n    echo \"Installing OnlyOffice...\"\n    paru -S --noconfirm onlyoffice-bin\n    ;;\n  \"Skype\")\n    echo \"Installing Skype...\"\n    paru -S --noconfirm skypeforlinux\n    ;;\n  \"Slack\")\n    echo \"Installing Slack...\"\n    paru -S --noconfirm slack-desktop\n    ;;\n  \"Zoom\")\n    echo \"Installing Zoom...\"\n    paru -S --noconfirm zoom\n    ;;\n  \"Blender\")\n    echo \"Installing Blender...\"\n    sudo pacman -S --noconfirm blender\n    ;;\n  \"Octave\")\n    echo \"Installing Octave...\"\n    sudo pacman -S --noconfirm octave\n    ;;\n  \"OBS-Studio\")\n    echo \"Installing OBS Studio...\"\n    sudo pacman -S --noconfirm obs-studio\n    ;;\n  \"Inkscape\")\n    echo \"Installing Inkscape...\"\n    sudo pacman -S --noconfirm inkscape\n    ;;\n  \"GIMP\")\n    echo \"Installing GIMP...\"\n    sudo pacman -S --noconfirm gimp\n    ;;\n  \"VLC\")\n    echo \"Installing VLC...\"\n    sudo pacman -S --noconfirm vlc\n    ;;\n  \"Audacity\")\n    echo \"Installing Audacity...\"\n    sudo pacman -S --noconfirm audacity\n    ;;\n  \"Krita\")\n    echo \"Installing Krita...\"\n    sudo pacman -S --noconfirm krita\n    ;;\n  \"Shotcut\")\n    echo \"Installing Shotcut...\"\n    sudo pacman -S --noconfirm shotcut\n    ;;\n  \"Steam\")\n    echo \"Installing Steam...\"\n    paru -S --noconfirm steam\n    ;;\n  \"Minecraft\")\n    echo \"Installing Minecraft...\"\n    paru -S --noconfirm minecraft-launcher\n    ;;\n  # PDF Tools\n  \"Evince\")\n    echo \"Installing Evince...\"\n    sudo pacman -S --noconfirm evince\n    ;;\n  \"Okular\")\n    echo \"Installing Okular...\"\n    sudo pacman -S --noconfirm okular\n    ;;\n  \"Foxit-Reader\")\n    echo \"Installing Foxit Reader...\"\n    paru -S --noconfirm foxitreader\n    ;;\n  \"Master-PDF-Editor\")\n    echo \"Installing Master PDF Editor...\"\n    paru -S --noconfirm master-pdf-editor\n    ;;\n  \"MuPDF\")\n    echo \"Installing MuPDF...\"\n    sudo pacman -S --noconfirm mupdf\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected tools have been installed.\" 10 50\nclear\n","recorded":"2025-01-06 16:16:46.845562496","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up additional tools and packages...\"\n\n# Display checklist with a single column (scrollable) for additional tools using dialog\nextra_tools_choices=$(dialog --title \"Select Extra Tools to Install\" \\\n  --checklist \"Choose the extra tools and packages you want to install:\" 20 60 20 \\\n  \"ani-cli\" \"\" OFF \\\n  \"ytfzf\" \"\" OFF \\\n  \"Evince\" \"\" OFF \\\n  \"Okular\" \"\" OFF \\\n  \"Foxit-Reader\" \"\" OFF \\\n  \"Master-PDF-Editor\" \"\" OFF \\\n  \"MuPDF\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$extra_tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $extra_tools_choices; do\n  case $app in\n  \"ani-cli\")\n    echo \"Installing ani-cli...\"\n    paru -S --noconfirm --needed ani-cli\n    ;;\n  \"ytfzf\")\n    echo \"Installing ytfzf...\"\n    paru -S --noconfirm --needed ytfzf\n    ;;\n  \"Evince\")\n    echo \"Installing Evince...\"\n    sudo pacman -S --noconfirm evince\n    ;;\n  \"Okular\")\n    echo \"Installing Okular...\"\n    sudo pacman -S --noconfirm okular\n    ;;\n  \"Foxit-Reader\")\n    echo \"Installing Foxit Reader...\"\n    paru -S --noconfirm foxitreader\n    ;;\n  \"Master-PDF-Editor\")\n    echo \"Installing Master PDF Editor...\"\n    paru -S --noconfirm master-pdf-editor\n    ;;\n  \"MuPDF\")\n    echo \"Installing MuPDF...\"\n    sudo pacman -S --noconfirm mupdf\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected extra tools and packages have been installed.\" 10 50\nclear\n","recorded":"2025-01-06 16:16:45.459092701","filePath":"null","pinned":false},{"value":"dialog --msgbox \"Selected tools have been installed.\" 10 50\n","recorded":"2025-01-06 16:15:05.943387800","filePath":"null","pinned":false},{"value":"dialog --msgbox \"Selected tools have been installed.\" 10 50\n\nclear","recorded":"2025-01-06 16:14:48.688592036","filePath":"null","pinned":false},{"value":"# YTERMUSIC - youtube music in terminal \n# installation -  cargo install ytermusic --git https://github.com/ccgauche/ytermusic \n# setup - https://github.com/ccgauche/ytermusic/blob/master/README.md\n# just copy the cookie value from / document in network tab on f12 in youtube music and just paste in ~/dotfiles/ytermusic/.config/ytermusic/headers.txt cookie value\n#\n# For alternative we can use youtui (Present using)\n\n# copy cookie value and paste in cookie.txt in ~/.config/youtui/","recorded":"2025-01-06 16:09:02.195574054","filePath":"null","pinned":false},{"value":"# cargo install youtui\n","recorded":"2025-01-06 16:08:40.844968188","filePath":"null","pinned":false},{"value":"    paru -S --noconfirm minecraft-launcher\n","recorded":"2025-01-06 16:08:34.719064881","filePath":"null","pinned":false},{"value":"\"Minecraft\")\n    echo \"Installing Minecraft...\"\n    paru -S --noconfirm minecraft-launcher\n    ;;","recorded":"2025-01-06 16:08:16.557825612","filePath":"null","pinned":false},{"value":"  \"VLC\" \"\" OFF \\\n","recorded":"2025-01-06 16:07:57.995766256","filePath":"null","pinned":false},{"value":"  \"Shotcut\" \"\" OFF \\\n","recorded":"2025-01-06 16:07:56.312193856","filePath":"null","pinned":false},{"value":"    ;;\n","recorded":"2025-01-06 16:07:45.753763152","filePath":"null","pinned":false},{"value":"    sudo pacman -S --noconfirm vlc\n","recorded":"2025-01-06 16:07:45.264539037","filePath":"null","pinned":false},{"value":"    echo \"Installing VLC...\"\n","recorded":"2025-01-06 16:07:44.831935001","filePath":"null","pinned":false},{"value":"  \"VLC\")\n","recorded":"2025-01-06 16:07:44.472533584","filePath":"null","pinned":false},{"value":"https://github.com/ccgauche/ytermusic/blob/master/README.md","recorded":"2025-01-06 16:06:37.279429595","filePath":"null","pinned":false},{"value":"# sudo pacman -S wofi\n","recorded":"2025-01-06 16:05:48.827649972","filePath":"null","pinned":false},{"value":"# git clone https://github.com/dracula/wofi.git\n","recorded":"2025-01-06 16:05:47.943797382","filePath":"null","pinned":false},{"value":"# sudo pacman -S thunar thunar-archive-plugin thunar-media-tags-plugin thunar-volman thunar-vcs-plugin\n","recorded":"2025-01-06 16:05:46.003722660","filePath":"null","pinned":false},{"value":"# 24. Install blueman if needed for bluetooth manager\n","recorded":"2025-01-06 16:05:34.641323178","filePath":"null","pinned":false},{"value":"# sudo pacman -S octave --noconfirm\n","recorded":"2025-01-06 16:05:33.960690494","filePath":"null","pinned":false},{"value":"# 23. Install Octave for Numerical Computing\n","recorded":"2025-01-06 16:05:33.543576939","filePath":"null","pinned":false},{"value":"# sudo pacman -S inkscape --noconfirm\n","recorded":"2025-01-06 16:05:33.202687668","filePath":"null","pinned":false},{"value":"# 22. Install Inkscape for Vector Graphics\n","recorded":"2025-01-06 16:05:32.722252080","filePath":"null","pinned":false},{"value":"# sudo pacman -S gimp --noconfirm\n","recorded":"2025-01-06 16:05:32.412985284","filePath":"null","pinned":false},{"value":"# 21. Install GIMP for Image Editing\n","recorded":"2025-01-06 16:05:32.068724139","filePath":"null","pinned":false},{"value":"# sudo pacman -S obs-studio --noconfirm\n","recorded":"2025-01-06 16:05:31.712293323","filePath":"null","pinned":false},{"value":"# 20. Install OBS Studio for Screen Recording\n","recorded":"2025-01-06 16:05:31.317316951","filePath":"null","pinned":false},{"value":"# sudo pacman -S blender --noconfirm\n","recorded":"2025-01-06 16:05:30.914978944","filePath":"null","pinned":false},{"value":"# 19. Install Blender for Video Editing\n","recorded":"2025-01-06 16:05:29.861259693","filePath":"null","pinned":false},{"value":"# sudo pacman -S  libreoffice-fresh\n","recorded":"2025-01-06 16:04:45.159658699","filePath":"null","pinned":false},{"value":"# 4. Install GUI packages\n","recorded":"2025-01-06 16:04:44.824757956","filePath":"null","pinned":false},{"value":"  \"Minecraft\" \"\" OFF \\\n","recorded":"2025-01-06 16:03:12.620350604","filePath":"null","pinned":false},{"value":"# #\n","recorded":"2025-01-06 16:02:16.117272397","filePath":"null","pinned":false},{"value":"# Kubernetes installing locally using kind \n","recorded":"2025-01-06 16:02:15.719975805","filePath":"null","pinned":false},{"value":"   curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"","recorded":"2025-01-06 16:01:52.834221093","filePath":"null","pinned":false},{"value":"    sudo pacman -S --noconfirm kubernetes\n","recorded":"2025-01-06 16:01:47.137860520","filePath":"null","pinned":false},{"value":"paru -S kind-bin\n","recorded":"2025-01-06 16:01:39.866158372","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools using dialog\ndev_choices=$(dialog --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Telegram\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n\"Telegram\")\n    echo \"Installing Discord...\"\n    paru -S --noconfirm telegram-desktop-bin\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected development tools and packages have been installed.\" 10 50\nclear\n","recorded":"2025-01-06 16:01:26.885263968","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools, office tools, and communication tools...\"\n\n# Display checklist with a single column (scrollable) for development tools using dialog\ntools_choices=$(dialog --title \"Select Tools to Install\" \\\n  --checklist \"Choose the tools you want to install:\" 20 60 15 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Telegram\" \"\" OFF \\\n  \"LibreOffice\" \"\" OFF \\\n  \"OnlyOffice\" \"\" OFF \\\n  \"Skype\" \"\" OFF \\\n  \"Slack\" \"\" OFF \\\n  \"Zoom\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $tools_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Telegram\")\n    echo \"Installing Telegram...\"\n    paru -S --noconfirm telegram-desktop-bin\n    ;;\n  \"LibreOffice\")\n    echo \"Installing LibreOffice...\"\n    sudo pacman -S --noconfirm libreoffice-fresh\n    ;;\n  \"OnlyOffice\")\n    echo \"Installing OnlyOffice...\"\n    paru -S --noconfirm onlyoffice-bin\n    ;;\n  \"Skype\")\n    echo \"Installing Skype...\"\n    paru -S --noconfirm skypeforlinux\n    ;;\n  \"Slack\")\n    echo \"Installing Slack...\"\n    paru -S --noconfirm slack-desktop\n    ;;\n  \"Zoom\")\n    echo \"Installing Zoom...\"\n    paru -S --noconfirm zoom\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected tools have been installed.\" 10 50\nclear\n","recorded":"2025-01-06 16:01:26.875099522","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools, office tools, communication tools, and multimedia tools...\"\n\n# Display checklist with a single column (scrollable) for all tools using dialog\ntools_choices=$(dialog --title \"Select Tools to Install\" \\\n  --checklist \"Choose the tools you want to install:\" 20 60 18 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Telegram\" \"\" OFF \\\n  \"LibreOffice\" \"\" OFF \\\n  \"OnlyOffice\" \"\" OFF \\\n  \"Skype\" \"\" OFF \\\n  \"Slack\" \"\" OFF \\\n  \"Zoom\" \"\" OFF \\\n  \"Blender\" \"\" OFF \\\n  \"Octave\" \"\" OFF \\\n  \"OBS-Studio\" \"\" OFF \\\n  \"Inkscape\" \"\" OFF \\\n  \"GIMP\" \"\" OFF \\\n  \"VLC\" \"\" OFF \\\n  \"Audacity\" \"\" OFF \\\n  \"Krita\" \"\" OFF \\\n  \"Shotcut\" \"\" OFF \\\n  \"Steam\" \"\" OFF \\\n  \"Minecraft\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $tools_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Telegram\")\n    echo \"Installing Telegram...\"\n    paru -S --noconfirm telegram-desktop-bin\n    ;;\n  \"LibreOffice\")\n    echo \"Installing LibreOffice...\"\n    sudo pacman -S --noconfirm libreoffice-fresh\n    ;;\n  \"OnlyOffice\")\n    echo \"Installing OnlyOffice...\"\n    paru -S --noconfirm onlyoffice-bin\n    ;;\n  \"Skype\")\n    echo \"Installing Skype...\"\n    paru -S --noconfirm skypeforlinux\n    ;;\n  \"Slack\")\n    echo \"Installing Slack...\"\n    paru -S --noconfirm slack-desktop\n    ;;\n  \"Zoom\")\n    echo \"Installing Zoom...\"\n    paru -S --noconfirm zoom\n    ;;\n  \"Blender\")\n    echo \"Installing Blender...\"\n    sudo pacman -S --noconfirm blender\n    ;;\n  \"Octave\")\n    echo \"Installing Octave...\"\n    sudo pacman -S --noconfirm octave\n    ;;\n  \"OBS-Studio\")\n    echo \"Installing OBS Studio...\"\n    sudo pacman -S --noconfirm obs-studio\n    ;;\n  \"Inkscape\")\n    echo \"Installing Inkscape...\"\n    sudo pacman -S --noconfirm inkscape\n    ;;\n  \"GIMP\")\n    echo \"Installing GIMP...\"\n    sudo pacman -S --noconfirm gimp\n    ;;\n  \"VLC\")\n    echo \"Installing VLC...\"\n    sudo pacman -S --noconfirm vlc\n    ;;\n  \"Audacity\")\n    echo \"Installing Audacity...\"\n    sudo pacman -S --noconfirm audacity\n    ;;\n  \"Krita\")\n    echo \"Installing Krita...\"\n    sudo pacman -S --noconfirm krita\n    ;;\n  \"Shotcut\")\n    echo \"Installing Shotcut...\"\n    sudo pacman -S --noconfirm shotcut\n    ;;\n  \"Steam\")\n    echo \"Installing Steam...\"\n    paru -S --noconfirm steam\n    ;;\n  \"Minecraft\")\n    echo \"Installing Minecraft...\"\n    paru -S --noconfirm minecraft-launcher\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected tools have been installed.\" 10 50\nclear\n","recorded":"2025-01-06 16:01:24.251941878","filePath":"null","pinned":false},{"value":"\"","recorded":"2025-01-06 15:58:49.502891238","filePath":"null","pinned":false},{"value":"# paru -S telegram-desktop-bin discord --noconfirm\n","recorded":"2025-01-06 15:57:22.311314957","filePath":"null","pinned":false},{"value":"# 3. Install AUR packages\n","recorded":"2025-01-06 15:57:21.860616367","filePath":"null","pinned":false},{"value":"paru -S telegram-desktop-bin","recorded":"2025-01-06 15:57:05.606037788","filePath":"null","pinned":false},{"value":"\"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;","recorded":"2025-01-06 15:56:48.756062270","filePath":"null","pinned":false},{"value":"  \"Discord\" \"\" OFF \\\n","recorded":"2025-01-06 15:56:40.510799108","filePath":"null","pinned":false},{"value":"  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;","recorded":"2025-01-06 15:55:56.244836492","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:55:20.566110173","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools using dialog\ndev_choices=$(dialog --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# We need to split the output by newline, but also preserve spaces in app names\nIFS=$'\\n' read -r -d '' -a dev_choices_array \u003c\u003c\u003c \"$dev_choices\"\n\n# Process selected tools and install them\nfor app in \"${dev_choices_array[@]}\"; do\n  case \"$app\" in\n  \"Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\n","recorded":"2025-01-06 15:55:20.555809129","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools using dialog\ndev_choices=$(dialog --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:55:17.566846111","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50","recorded":"2025-01-06 15:54:49.167986815","filePath":"null","pinned":false},{"value":"Invalid choice: \"Visual Studio Code\"","recorded":"2025-01-06 15:53:19.500078705","filePath":"null","pinned":false},{"value":"dialog --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:52:56.186472405","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual Studio Code\" \"\" OFF \\\n  \"GitHub Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# We need to split the output by newline, but also preserve spaces in app names\nIFS=$'\\n' read -r -d '' -a dev_choices_array \u003c\u003c\u003c \"$dev_choices\"\n\n# Process selected tools and install them\nfor app in \"${dev_choices_array[@]}\"; do\n  case \"$app\" in\n  \"Visual Studio Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:52:28.721260815","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools using dialog\ndev_choices=$(dialog --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual Studio Code\" \"\" OFF \\\n  \"GitHub Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# We need to split the output by newline, but also preserve spaces in app names\nIFS=$'\\n' read -r -d '' -a dev_choices_array \u003c\u003c\u003c \"$dev_choices\"\n\n# Process selected tools and install them\nfor app in \"${dev_choices_array[@]}\"; do\n  case \"$app\" in\n  \"Visual Studio Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:52:11.134395355","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual Studio Code\" \"\" OFF \\\n  \"GitHub Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Split the string into an array based on the newline character.\nIFS=$'\\n' read -rd '' -a dev_choices_array \u003c\u003c\u003c \"$dev_choices\"\n\n# Process selected tools and install them\nfor app in \"${dev_choices_array[@]}\"; do\n  case \"$app\" in\n  \"Visual Studio Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    # sudo pacman -S --noconfirm kubernetes\n    sudo pacman -Syyu\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:51:51.414441927","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual Studio Code\" \"\" OFF \\\n  \"GitHub Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Convert the string to an array by replacing spaces with newlines for correct parsing\ndev_choices=$(echo \"$dev_choices\" | tr ' ' '\\n')\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n  case \"$app\" in\n  \"Visual Studio Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -Syyu\n    # sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n","recorded":"2025-01-06 15:49:58.099549462","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual Studio Code\" \"\" OFF \\\n  \"GitHub Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Split the string into an array based on the newline character.\nIFS=$'\\n' read -rd '' -a dev_choices_array \u003c\u003c\u003c \"$dev_choices\"\n\n# Process selected tools and install them\nfor app in \"${dev_choices_array[@]}\"; do\n  case \"$app\" in\n  \"Visual Studio Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:49:54.540832908","filePath":"null","pinned":false},{"value":"Setting up development tools and packages...\nInvalid choice: \"Kubernetes\"","recorded":"2025-01-06 15:49:28.328598922","filePath":"null","pinned":false},{"value":"whiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:48:54.583293446","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual Studio Code\" \"\" OFF \\\n  \"GitHub Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# We need to replace spaces with underscores and process the choices properly\nIFS=$'\\n' read -rd '' -a dev_choices_array \u003c\u003c\u003c \"$dev_choices\"\n\n# Process selected tools and install them\nfor app in \"${dev_choices_array[@]}\"; do\n  case \"$app\" in\n  \"Visual Studio Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:48:31.934469254","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual Studio Code\" \"\" OFF \\\n  \"GitHub Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Convert the string to an array by replacing spaces with newlines for correct parsing\ndev_choices=$(echo \"$dev_choices\" | tr ' ' '\\n')\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n  case \"$app\" in\n  \"Visual Studio Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:48:29.603823336","filePath":"null","pinned":false},{"value":"Setting up development tools and packages...\nInvalid choice: \"Visual Studio Code\"","recorded":"2025-01-06 15:45:49.414120922","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up torrent and remote working applications...\"\n\n# Display checklist for torrent and remote working applications\napps=$(whiptail --title \"Select Applications to Install\" \\\n    --checklist \"Choose the applications you want to install:\"  20 60 8 \\\n    \"torrent-cli\" \"\" OFF \\\n    \"qBittorrent\" \"\" OFF \\\n    \"Transmission\" \"\" OFF \\\n    \"Remmina\" \"\" OFF \\\n    \"VNC\" \"\" OFF \\\n    \"TeamViewer\" \"\" OFF \\\n    \"AnyDesk\" \"\" OFF \\\n    \"xrdp\" \"\" OFF \\\n    \"openvpn\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 /] || [ -z \"$apps\" ]; then\n    whiptail --msgbox \"No applications selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected applications and install them\nfor app in $apps; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            paru -S --noconfirm --needed webtorrent-cli webtorrent-mpv-hook peerflix\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Remmina\")\n            echo \"Installing Remmina (Remote Desktop Client)...\"\n            sudo pacman -S --noconfirm remmina\n            ;;\n        \"VNC\")\n            echo \"Installing VNC Server...\"\n            sudo pacman -S --noconfirm tigervnc\n            ;;\n        \"TeamViewer\")\n            echo \"Installing TeamViewer...\"\n            sudo pacman -S --noconfirm teamviewer\n            ;;\n        \"AnyDesk\")\n            echo \"Installing AnyDesk...\"\n            sudo pacman -S --noconfirm anydesk\n            ;;\n        \"xrdp\")\n            echo \"Installing xrdp (Remote Desktop Protocol)...\"\n            sudo pacman -S --noconfirm xrdp\n            ;;\n        \"openvpn\")\n            echo \"Installing OpenVPN...\"\n            sudo pacman -S --noconfirm openvpn\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected applications have been installed.\" 10 50\n\n\n","recorded":"2025-01-06 15:45:37.398968428","filePath":"null","pinned":false},{"value":"\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual Studio Code\" \"\" OFF \\\n  \"GitHub Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Convert the space-separated selections into a single item for each tool\n# In this case, we replace spaces with underscores for matching in the case statement\ndev_choices=$(echo $dev_choices | tr ' ' '\\n')\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n  case $app in\n  \"Visual Studio Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50","recorded":"2025-01-06 15:43:03.716147954","filePath":"null","pinned":false},{"value":"echo \"Setting up torrent and remote working applications...\"\n\n# Display checklist for torrent and remote working applications\napps=$(whiptail --title \"$(center_text \"Select Applications to Install\" 60)\" \\\n    --checklist \"$(center_text \"Choose the applications you want to install:\" 60)\" 20 60 8 \\\n    \"torrent-cli\" \"\" OFF \\\n    \"qBittorrent\" \"\" OFF \\\n    \"Transmission\" \"\" OFF \\\n    \"Remmina\" \"\" OFF \\\n    \"VNC\" \"\" OFF \\\n    \"TeamViewer\" \"\" OFF \\\n    \"AnyDesk\" \"\" OFF \\\n    \"xrdp\" \"\" OFF \\\n    \"openvpn\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 /] || [ -z \"$apps\" ]; then\n    whiptail --msgbox \"$(center_text \"No applications selected or setup canceled. Exiting.\" 60)\" 10 50\n    exit 1\nfi\n\n# Process selected applications and install them\nfor app in $apps; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            paru -S --noconfirm --needed webtorrent-cli webtorrent-mpv-hook peerflix\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Remmina\")\n            echo \"Installing Remmina (Remote Desktop Client)...\"\n            sudo pacman -S --noconfirm remmina\n            ;;\n        \"VNC\")\n            echo \"Installing VNC Server...\"\n            sudo pacman -S --noconfirm tigervnc\n            ;;\n        \"TeamViewer\")\n            echo \"Installing TeamViewer...\"\n            sudo pacman -S --noconfirm teamviewer\n            ;;\n        \"AnyDesk\")\n            echo \"Installing AnyDesk...\"\n            sudo pacman -S --noconfirm anydesk\n            ;;\n        \"xrdp\")\n            echo \"Installing xrdp (Remote Desktop Protocol)...\"\n            sudo pacman -S --noconfirm xrdp\n            ;;\n        \"openvpn\")\n            echo \"Installing OpenVPN...\"\n            sudo pacman -S --noconfirm openvpn\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"$(center_text \"Selected applications have been installed.\" 60)\" 10 50\n\n","recorded":"2025-01-06 15:42:52.890564360","filePath":"null","pinned":false},{"value":"Setting up development tools and packages...\nInvalid choice: \"Visual\nInvalid choice: Studio\nInvalid choice: Code\"","recorded":"2025-01-06 15:42:38.610431611","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual Studio Code\" \"\" OFF \\\n  \"GitHub Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n  case $app in\n  \"Visual Studio Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:42:30.947227238","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual Studio Code\" \"\" OFF \\\n  \"GitHub Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Convert the space-separated selections into a single item for each tool\n# In this case, we replace spaces with underscores for matching in the case statement\ndev_choices=$(echo $dev_choices | tr ' ' '\\n')\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n  case $app in\n  \"Visual Studio Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:42:28.239348834","filePath":"null","pinned":false},{"value":"Setting up development tools and packages...\nInvalid choice: \"Visual-Studio-Code\"","recorded":"2025-01-06 15:41:24.234931915","filePath":"null","pinned":false},{"value":"# 10. Permissions\n","recorded":"2025-01-06 15:39:56.595665903","filePath":"null","pinned":false},{"value":"# sudo usermod -aG docker $USER\n","recorded":"2025-01-06 15:39:48.251081834","filePath":"null","pinned":false},{"value":"# sudo systemctl enable --now docker.service\n","recorded":"2025-01-06 15:39:35.126990243","filePath":"null","pinned":false},{"value":"# yay  # Optional\n","recorded":"2025-01-06 15:39:29.869509544","filePath":"null","pinned":false},{"value":"sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak","recorded":"2025-01-06 15:39:17.376088773","filePath":"null","pinned":false},{"value":"-S docker-desktop","recorded":"2025-01-06 15:38:46.542167593","filePath":"null","pinned":false},{"value":"docker docker-compose","recorded":"2025-01-06 15:38:31.694211615","filePath":"null","pinned":false},{"value":"github-desktop-bin visual-studio-code-bin ","recorded":"2025-01-06 15:38:23.883552146","filePath":"null","pinned":false},{"value":"            sudo pacman -S --noconfirm github-desktop\n","recorded":"2025-01-06 15:37:47.385964889","filePath":"null","pinned":false},{"value":"paru -S github-desktop-bin","recorded":"2025-01-06 15:37:41.469428055","filePath":"null","pinned":false},{"value":"\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Development Setup\" --yesno \"Do you want to proceed with installing development tools and packages?\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi","recorded":"2025-01-06 15:37:22.925945377","filePath":"null","pinned":false},{"value":"    \"GitKraken\" \"GitKraken\" OFF \\\n","recorded":"2025-01-06 15:37:04.599171494","filePath":"null","pinned":false},{"value":"    \"Rust\" \"Rust\" OFF \\\n","recorded":"2025-01-06 15:37:04.219239495","filePath":"null","pinned":false},{"value":"    \"Go\" \"Go\" OFF \\\n","recorded":"2025-01-06 15:37:03.891064194","filePath":"null","pinned":false},{"value":"    \"Python\" \"Python\" OFF \\\n","recorded":"2025-01-06 15:37:03.592026740","filePath":"null","pinned":false},{"value":"    \"Node.js\" \"Node.js\" OFF \\\n","recorded":"2025-01-06 15:37:03.322620322","filePath":"null","pinned":false},{"value":"    \"Git\" \"\" OFF \\\n","recorded":"2025-01-06 15:37:03.029388317","filePath":"null","pinned":false},{"value":"Kubernetes","recorded":"2025-01-06 15:36:46.277737619","filePath":"null","pinned":false},{"value":"Docker Desktop","recorded":"2025-01-06 15:36:43.251079851","filePath":"null","pinned":false},{"value":"GitHub Desktop","recorded":"2025-01-06 15:36:30.615925233","filePath":"null","pinned":false},{"value":"Visual Studio Code","recorded":"2025-01-06 15:36:24.471156940","filePath":"null","pinned":false},{"value":" \"Visual Studio Code\" ","recorded":"2025-01-06 15:35:42.493498157","filePath":"null","pinned":false},{"value":"dev_apps=(\n    \"Visual Studio Code\"\n    \"GitHub Desktop\" \n    \"Docker\"\n    \"Docker Desktop\"\n    \"Kubernetes\"\n    \"Latex\"\n    \"Miniconda\"\n    \"Discord\"\n)","recorded":"2025-01-06 15:35:12.955980400","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Development Setup\" --yesno \"Do you want to proceed with installing development tools and packages?\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Define a list of development tools and packages (single column)\ndev_apps=(\n    \"Visual Studio Code\" \"Visual Studio Code\"\n    \"GitHub Desktop\" \"GitHub Desktop\"\n    \"Docker\" \"Docker\"\n    \"Docker Desktop\" \"Docker Desktop\"\n    \"Kubernetes\" \"Kubernetes\"\n    \"Latex\" \"LaTeX\"\n    \"Miniconda\" \"Miniconda\"\n    \"Discord\" \"Discord\"\n    \"Git\" \"Git\"\n    \"Node.js\" \"Node.js\"\n    \"Python\" \"Python\"\n    \"Go\" \"Go\"\n    \"Rust\" \"Rust\"\n    \"GitKraken\" \"GitKraken\"\n)\n\n# Display checklist with a single column (scrollable)\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n    --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n    \"${dev_apps[@]}\" \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n    whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n    case $app in\n        \"Visual Studio Code\")\n            echo \"Installing Visual Studio Code...\"\n            sudo pacman -S --noconfirm visual-studio-code-bin\n            ;;\n        \"GitHub Desktop\")\n            echo \"Installing GitHub Desktop...\"\n            sudo pacman -S --noconfirm github-desktop\n            ;;\n        \"Docker\")\n            echo \"Installing Docker...\"\n            sudo pacman -S --noconfirm docker\n            ;;\n        \"Docker Desktop\")\n            echo \"Installing Docker Desktop...\"\n            sudo pacman -S --noconfirm docker-desktop-bin\n            ;;\n        \"Kubernetes\")\n            echo \"Installing Kubernetes...\"\n            sudo pacman -S --noconfirm kubernetes\n            ;;\n        \"Latex\")\n            echo \"Installing LaTeX (texlive)...\"\n            sudo pacman -S --noconfirm texlive-most\n            ;;\n        \"Miniconda\")\n            echo \"Installing Miniconda...\"\n            sudo pacman -S --noconfirm miniconda\n            ;;\n        \"Discord\")\n            echo \"Installing Discord...\"\n            sudo pacman -S --noconfirm discord\n            ;;\n        \"Git\")\n            echo \"Installing Git...\"\n            sudo pacman -S --noconfirm git\n            ;;\n        \"Node.js\")\n            echo \"Installing Node.js...\"\n            sudo pacman -S --noconfirm nodejs\n            ;;\n        \"Python\")\n            echo \"Installing Python...\"\n            sudo pacman -S --noconfirm python\n            ;;\n        \"Go\")\n            echo \"Installing Go...\"\n            sudo pacman -S --noconfirm go\n            ;;\n        \"Rust\")\n            echo \"Installing Rust...\"\n            sudo pacman -S --noconfirm rust\n            ;;\n        \"GitKraken\")\n            echo \"Installing GitKraken...\"\n            sudo pacman -S --noconfirm gitkraken\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:35:12.942983509","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Development Setup\" --yesno \"Do you want to proceed with installing development tools and packages?\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n    --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n    \"Visual Studio Code\" \"Visual Studio Code\" OFF \\\n    \"GitHub Desktop\" \"GitHub Desktop\" OFF \\\n    \"Docker\" \"Docker\" OFF \\\n    \"Docker Desktop\" \"Docker Desktop\" OFF \\\n    \"Kubernetes\" \"Kubernetes\" OFF \\\n    \"Latex\" \"LaTeX\" OFF \\\n    \"Miniconda\" \"Miniconda\" OFF \\\n    \"Discord\" \"Discord\" OFF \\\n    \"Git\" \"Git\" OFF \\\n    \"Node.js\" \"Node.js\" OFF \\\n    \"Python\" \"Python\" OFF \\\n    \"Go\" \"Go\" OFF \\\n    \"Rust\" \"Rust\" OFF \\\n    \"GitKraken\" \"GitKraken\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n    whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n    case $app in\n        \"Visual Studio Code\")\n            echo \"Installing Visual Studio Code...\"\n            sudo pacman -S --noconfirm visual-studio-code-bin\n            ;;\n        \"GitHub Desktop\")\n            echo \"Installing GitHub Desktop...\"\n            sudo pacman -S --noconfirm github-desktop\n            ;;\n        \"Docker\")\n            echo \"Installing Docker...\"\n            sudo pacman -S --noconfirm docker\n            ;;\n        \"Docker Desktop\")\n            echo \"Installing Docker Desktop...\"\n            sudo pacman -S --noconfirm docker-desktop-bin\n            ;;\n        \"Kubernetes\")\n            echo \"Installing Kubernetes...\"\n            sudo pacman -S --noconfirm kubernetes\n            ;;\n        \"Latex\")\n            echo \"Installing LaTeX (texlive)...\"\n            sudo pacman -S --noconfirm texlive-most\n            ;;\n        \"Miniconda\")\n            echo \"Installing Miniconda...\"\n            sudo pacman -S --noconfirm miniconda\n            ;;\n        \"Discord\")\n            echo \"Installing Discord...\"\n            sudo pacman -S --noconfirm discord\n            ;;\n        \"Git\")\n            echo \"Installing Git...\"\n            sudo pacman -S --noconfirm git\n            ;;\n        \"Node.js\")\n            echo \"Installing Node.js...\"\n            sudo pacman -S --noconfirm nodejs\n            ;;\n        \"Python\")\n            echo \"Installing Python...\"\n            sudo pacman -S --noconfirm python\n            ;;\n        \"Go\")\n            echo \"Installing Go...\"\n            sudo pacman -S --noconfirm go\n            ;;\n        \"Rust\")\n            echo \"Installing Rust...\"\n            sudo pacman -S --noconfirm rust\n            ;;\n        \"GitKraken\")\n            echo \"Installing GitKraken...\"\n            sudo pacman -S --noconfirm gitkraken\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:35:10.471355385","filePath":"null","pinned":false},{"value":"dev_apps","recorded":"2025-01-06 15:34:51.227402134","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Development Setup\" --yesno \"Do you want to proceed with installing development tools and packages?\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Define a list of development tools and packages\ndev_apps=(\n    \"Visual Studio Code\"\n    \"GitHub Desktop\"\n    \"Docker\"\n    \"Docker Desktop\"\n    \"Kubernetes\"\n    \"Latex\"\n    \"Miniconda\"\n    \"Discord\"\n    \"Git\"\n    \"Node.js\"\n    \"Python\"\n    \"Go\"\n    \"Rust\"\n    \"GitKraken\"\n)\n\n# Display checklist with a single column (scrollable)\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n    --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n    \"${dev_apps[@]}\" \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n    whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n    case $app in\n        \"Visual Studio Code\")\n            echo \"Installing Visual Studio Code...\"\n            sudo pacman -S --noconfirm visual-studio-code-bin\n            ;;\n        \"GitHub Desktop\")\n            echo \"Installing GitHub Desktop...\"\n            sudo pacman -S --noconfirm github-desktop\n            ;;\n        \"Docker\")\n            echo \"Installing Docker...\"\n            sudo pacman -S --noconfirm docker\n            ;;\n        \"Docker Desktop\")\n            echo \"Installing Docker Desktop...\"\n            sudo pacman -S --noconfirm docker-desktop-bin\n            ;;\n        \"Kubernetes\")\n            echo \"Installing Kubernetes...\"\n            sudo pacman -S --noconfirm kubernetes\n            ;;\n        \"Latex\")\n            echo \"Installing LaTeX (texlive)...\"\n            sudo pacman -S --noconfirm texlive-most\n            ;;\n        \"Miniconda\")\n            echo \"Installing Miniconda...\"\n            sudo pacman -S --noconfirm miniconda\n            ;;\n        \"Discord\")\n            echo \"Installing Discord...\"\n            sudo pacman -S --noconfirm discord\n            ;;\n        \"Git\")\n            echo \"Installing Git...\"\n            sudo pacman -S --noconfirm git\n            ;;\n        \"Node.js\")\n            echo \"Installing Node.js...\"\n            sudo pacman -S --noconfirm nodejs\n            ;;\n        \"Python\")\n            echo \"Installing Python...\"\n            sudo pacman -S --noconfirm python\n            ;;\n        \"Go\")\n            echo \"Installing Go...\"\n            sudo pacman -S --noconfirm go\n            ;;\n        \"Rust\")\n            echo \"Installing Rust...\"\n            sudo pacman -S --noconfirm rust\n            ;;\n        \"GitKraken\")\n            echo \"Installing GitKraken...\"\n            sudo pacman -S --noconfirm gitkraken\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:34:34.143428749","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Development Setup\" --yesno \"Do you want to proceed with installing development tools and packages?\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Define a list of development tools and packages\ndev_apps=(\n    \"Visual Studio Code\"\n    \"GitHub Desktop\" \n    \"Docker\"\n    \"Docker Desktop\"\n    \"Kubernetes\"\n    \"Latex\"\n    \"Miniconda\"\n    \"Discord\"\n)\n\n# Display checklist with a single column (scrollable)\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n    --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n    \"${dev_apps[@]}\" \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n    whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n    case $app in\n        \"vscode\")\n            echo \"Installing Visual Studio Code...\"\n            sudo pacman -S --noconfirm visual-studio-code-bin\n            ;;\n        \"GitHub Desktop\")\n            echo \"Installing GitHub Desktop...\"\n            sudo pacman -S --noconfirm github-desktop\n            ;;\n        \"docker\")\n            echo \"Installing Docker...\"\n            sudo pacman -S --noconfirm docker\n            ;;\n        \"docker-desktop\")\n            echo \"Installing Docker Desktop...\"\n            sudo pacman -S --noconfirm docker-desktop-bin\n            ;;\n        \"kubernetes\")\n            echo \"Installing Kubernetes...\"\n            sudo pacman -S --noconfirm kubernetes\n            ;;\n        \"kubectl\")\n            echo \"Installing kubectl...\"\n            sudo pacman -S --noconfirm kubectl\n            ;;\n        \"latex\")\n            echo \"Installing LaTeX (texlive)...\"\n            sudo pacman -S --noconfirm texlive-most\n            ;;\n        \"miniconda\")\n            echo \"Installing Miniconda...\"\n            sudo pacman -S --noconfirm miniconda\n            ;;\n        \"discord\")\n            echo \"Installing Discord...\"\n            sudo pacman -S --noconfirm discord\n            ;;\n        \"git\")\n            echo \"Installing Git...\"\n            sudo pacman -S --noconfirm git\n            ;;\n        \"nodejs\")\n            echo \"Installing Node.js...\"\n            sudo pacman -S --noconfirm nodejs\n            ;;\n        \"python\")\n            echo \"Installing Python...\"\n            sudo pacman -S --noconfirm python\n            ;;\n        \"go\")\n            echo \"Installing Go...\"\n            sudo pacman -S --noconfirm go\n            ;;\n        \"rust\")\n            echo \"Installing Rust...\"\n            sudo pacman -S --noconfirm rust\n            ;;\n        \"gitkraken\")\n            echo \"Installing GitKraken...\"\n            sudo pacman -S --noconfirm gitkraken\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:33:40.255132744","filePath":"null","pinned":false},{"value":"    \"gitkraken\" \"GitKraken\"\n","recorded":"2025-01-06 15:32:35.382597723","filePath":"null","pinned":false},{"value":"    \"rust\" \"Rust\"\n","recorded":"2025-01-06 15:32:34.995598941","filePath":"null","pinned":false},{"value":"    \"go\" \"Go\"\n","recorded":"2025-01-06 15:32:34.597459234","filePath":"null","pinned":false},{"value":"    \"python\" \"Python\"\n","recorded":"2025-01-06 15:32:34.203320873","filePath":"null","pinned":false},{"value":"    \"nodejs\" \"Node.js\"\n","recorded":"2025-01-06 15:32:33.563053137","filePath":"null","pinned":false},{"value":"    t\" \"Git\"\n","recorded":"2025-01-06 15:32:33.144015207","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up torrent and remote working applications...\"\n\n# Display checklist for torrent and remote working applications\napps=$(whiptail --title \"$(center_text \"Select Applications to Install\" 60)\" \\\n    --checklist \"$(center_text \"Choose the applications you want to install:\" 60)\" 20 60 8 \\\n    \"torrent-cli\" \"\" OFF \\\n    \"qBittorrent\" \"\" OFF \\\n    \"Transmission\" \"\" OFF \\\n    \"Remmina\" \"\" OFF \\\n    \"VNC\" \"\" OFF \\\n    \"TeamViewer\" \"\" OFF \\\n    \"AnyDesk\" \"\" OFF \\\n    \"xrdp\" \"\" OFF \\\n    \"openvpn\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 /] || [ -z \"$apps\" ]; then\n    whiptail --msgbox \"$(center_text \"No applications selected or setup canceled. Exiting.\" 60)\" 10 50\n    exit 1\nfi\n\n# Process selected applications and install them\nfor app in $apps; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            paru -S --noconfirm --needed webtorrent-cli webtorrent-mpv-hook peerflix\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Remmina\")\n            echo \"Installing Remmina (Remote Desktop Client)...\"\n            sudo pacman -S --noconfirm remmina\n            ;;\n        \"VNC\")\n            echo \"Installing VNC Server...\"\n            sudo pacman -S --noconfirm tigervnc\n            ;;\n        \"TeamViewer\")\n            echo \"Installing TeamViewer...\"\n            sudo pacman -S --noconfirm teamviewer\n            ;;\n        \"AnyDesk\")\n            echo \"Installing AnyDesk...\"\n            sudo pacman -S --noconfirm anydesk\n            ;;\n        \"xrdp\")\n            echo \"Installing xrdp (Remote Desktop Protocol)...\"\n            sudo pacman -S --noconfirm xrdp\n            ;;\n        \"openvpn\")\n            echo \"Installing OpenVPN...\"\n            sudo pacman -S --noconfirm openvpn\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"$(center_text \"Selected applications have been installed.\" 60)\" 10 50\n","recorded":"2025-01-06 15:30:36.158063944","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Development Setup\" --yesno \"Do you want to proceed with installing development tools and packages?\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Define a list of development tools and packages\ndev_apps=(\n    \"vscode\" \"Visual Studio Code\"\n    \"GitHub Desktop\" \"GitHub Desktop\"\n    \"docker\" \"Docker\"\n    \"docker-desktop\" \"Docker Desktop\"\n    \"kubernetes\" \"Kubernetes\"\n    \"kubectl\" \"kubectl\"\n    \"latex\" \"TeX Live\"\n    \"miniconda\" \"Miniconda\"\n    \"discord\" \"Discord\"\n    \"git\" \"Git\"\n    \"nodejs\" \"Node.js\"\n    \"python\" \"Python\"\n    \"go\" \"Go\"\n    \"rust\" \"Rust\"\n    \"gitkraken\" \"GitKraken\"\n)\n\n# Display checklist with a single column (scrollable)\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n    --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n    \"${dev_apps[@]}\" \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n    whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n    case $app in\n        \"vscode\")\n            echo \"Installing Visual Studio Code...\"\n            sudo pacman -S --noconfirm visual-studio-code-bin\n            ;;\n        \"GitHub Desktop\")\n            echo \"Installing GitHub Desktop...\"\n            sudo pacman -S --noconfirm github-desktop\n            ;;\n        \"docker\")\n            echo \"Installing Docker...\"\n            sudo pacman -S --noconfirm docker\n            ;;\n        \"docker-desktop\")\n            echo \"Installing Docker Desktop...\"\n            sudo pacman -S --noconfirm docker-desktop-bin\n            ;;\n        \"kubernetes\")\n            echo \"Installing Kubernetes...\"\n            sudo pacman -S --noconfirm kubernetes\n            ;;\n        \"kubectl\")\n            echo \"Installing kubectl...\"\n            sudo pacman -S --noconfirm kubectl\n            ;;\n        \"latex\")\n            echo \"Installing LaTeX (texlive)...\"\n            sudo pacman -S --noconfirm texlive-most\n            ;;\n        \"miniconda\")\n            echo \"Installing Miniconda...\"\n            sudo pacman -S --noconfirm miniconda\n            ;;\n        \"discord\")\n            echo \"Installing Discord...\"\n            sudo pacman -S --noconfirm discord\n            ;;\n        \"git\")\n            echo \"Installing Git...\"\n            sudo pacman -S --noconfirm git\n            ;;\n        \"nodejs\")\n            echo \"Installing Node.js...\"\n            sudo pacman -S --noconfirm nodejs\n            ;;\n        \"python\")\n            echo \"Installing Python...\"\n            sudo pacman -S --noconfirm python\n            ;;\n        \"go\")\n            echo \"Installing Go...\"\n            sudo pacman -S --noconfirm go\n            ;;\n        \"rust\")\n            echo \"Installing Rust...\"\n            sudo pacman -S --noconfirm rust\n            ;;\n        \"gitkraken\")\n            echo \"Installing GitKraken...\"\n            sudo pacman -S --noconfirm gitkraken\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:30:36.148850066","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Function to install packages\ninstall_package() {\n    if pacman -Qs \"$1\" \u003e /dev/null ; then\n        whiptail --msgbox \"$1 is already installed.\" 8 78\n    else\n        whiptail --msgbox \"Installing $1...\" 8 78\n        sudo pacman -S --noconfirm \"$1\"\n    fi\n}\n\n# Whiptail dialog\nwhiptail --title \"Package Installer\" --msgbox \"Welcome to the package installation script!\" 8 78\n\n# List of packages to install\npackages=(\n    \"vscode\"\n    \"github-desktop\"\n    \"docker\"\n    \"docker-desktop\"\n    \"kubernetes\"\n    \"libreoffice-fresh\"  # Office package\n    \"discord\"\n    \"texlive-most\"  # LaTeX package\n    \"miniconda\"\n)\n\n# Install packages\nfor package in \"${packages[@]}\"; do\n    install_package \"$package\"\ndone\n\nwhiptail --msgbox \"All selected packages have been installed!\" 8 78\n","recorded":"2025-01-06 15:30:33.282543614","filePath":"null","pinned":false},{"value":"now its time for development packages\n\nadd some from your side\n\nsome of the applications from my side\n\nvscode, github desktop, docker, docker-desktop, kubernetes, some office packages, discord, latex, miniconda","recorded":"2025-01-06 15:30:03.661516343","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Development Setup\" --yesno \"Do you want to proceed with installing development tools and packages?\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Define a list of development tools and packages\ndev_apps=(\n    \"vscode\" \"GitHub Desktop\"\n    \"docker\" \"docker-desktop\"\n    \"kubernetes\" \"kubectl\"\n    \"latex\" \"texlive-most\"\n    \"miniconda\" \"conda\"\n    \"discord\" \"discord\"\n    \"git\" \"git\"\n    \"nodejs\" \"nodejs\"\n    \"python\" \"python\"\n    \"go\" \"go\"\n    \"rust\" \"rustup\"\n    \"gitkraken\" \"gitkraken\"\n)\n\n# Display checklist with scrolling\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n    --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n    \"${dev_apps[@]}\" \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n    whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n    case $app in\n        \"vscode\")\n            echo \"Installing Visual Studio Code...\"\n            sudo pacman -S --noconfirm visual-studio-code-bin\n            ;;\n        \"GitHub Desktop\")\n            echo \"Installing GitHub Desktop...\"\n            sudo pacman -S --noconfirm github-desktop\n            ;;\n        \"docker\")\n            echo \"Installing Docker...\"\n            sudo pacman -S --noconfirm docker\n            ;;\n        \"docker-desktop\")\n            echo \"Installing Docker Desktop...\"\n            sudo pacman -S --noconfirm docker-desktop-bin\n            ;;\n        \"kubernetes\")\n            echo \"Installing Kubernetes...\"\n            sudo pacman -S --noconfirm kubernetes\n            ;;\n        \"kubectl\")\n            echo \"Installing kubectl...\"\n            sudo pacman -S --noconfirm kubectl\n            ;;\n        \"latex\")\n            echo \"Installing LaTeX (texlive)...\"\n            sudo pacman -S --noconfirm texlive-most\n            ;;\n        \"miniconda\")\n            echo \"Installing Miniconda...\"\n            sudo pacman -S --noconfirm miniconda\n            ;;\n        \"discord\")\n            echo \"Installing Discord...\"\n            sudo pacman -S --noconfirm discord\n            ;;\n        \"git\")\n            echo \"Installing Git...\"\n            sudo pacman -S --noconfirm git\n            ;;\n        \"nodejs\")\n            echo \"Installing Node.js...\"\n            sudo pacman -S --noconfirm nodejs\n            ;;\n        \"python\")\n            echo \"Installing Python...\"\n            sudo pacman -S --noconfirm python\n            ;;\n        \"go\")\n            echo \"Installing Go...\"\n            sudo pacman -S --noconfirm go\n            ;;\n        \"rust\")\n            echo \"Installing Rust...\"\n            sudo pacman -S --noconfirm rust\n            ;;\n        \"gitkraken\")\n            echo \"Installing GitKraken...\"\n            sudo pacman -S --noconfirm gitkraken\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n\n","recorded":"2025-01-06 15:27:50.676050164","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Define a list of development tools and packages\ndev_apps=(\n    \"vscode\" \"GitHub Desktop\"\n    \"docker\" \"docker-desktop\"\n    \"kubernetes\" \"kubectl\"\n    \"latex\" \"texlive-most\"\n    \"miniconda\" \"conda\"\n    \"discord\" \"discord\"\n    \"git\" \"git\"\n    \"nodejs\" \"nodejs\"\n    \"python\" \"python\"\n    \"go\" \"go\"\n    \"rust\" \"rustup\"\n    \"gitkraken\" \"gitkraken\"\n)\n\n# Display checklist with two columns for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install \\\n    --checklist \"$(\"Choose the development tools and packages you want to install:\" 60)\" 20 60 8 \\\n    \"${dev_apps[@]}\" \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n    whiptail --msgbox \"$(\"No tools selected or setup canceled. Exiting.\" 60)\" 10 50\n    exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n    case $app in\n        \"vscode\")\n            echo \"Installing Visual Studio Code...\"\n            sudo pacman -S --noconfirm visual-studio-code-bin\n            ;;\n        \"GitHub Desktop\")\n            echo \"Installing GitHub Desktop...\"\n            sudo pacman -S --noconfirm github-desktop\n            ;;\n        \"docker\")\n            echo \"Installing Docker...\"\n            sudo pacman -S --noconfirm docker\n            ;;\n        \"docker-desktop\")\n            echo \"Installing Docker Desktop...\"\n            sudo pacman -S --noconfirm docker-desktop-bin\n            ;;\n        \"kubernetes\")\n            echo \"Installing Kubernetes...\"\n            sudo pacman -S --noconfirm kubernetes\n            ;;\n        \"kubectl\")\n            echo \"Installing kubectl...\"\n            sudo pacman -S --noconfirm kubectl\n            ;;\n        \"latex\")\n            echo \"Installing LaTeX (texlive)...\"\n            sudo pacman -S --noconfirm texlive-most\n            ;;\n        \"miniconda\")\n            echo \"Installing Miniconda...\"\n            sudo pacman -S --noconfirm miniconda\n            ;;\n        \"discord\")\n            echo \"Installing Discord...\"\n            sudo pacman -S --noconfirm discord\n            ;;\n        \"git\")\n            echo \"Installing Git...\"\n            sudo pacman -S --noconfirm git\n            ;;\n        \"nodejs\")\n            echo \"Installing Node.js...\"\n            sudo pacman -S --noconfirm nodejs\n            ;;\n        \"python\")\n            echo \"Installing Python...\"\n            sudo pacman -S --noconfirm python\n            ;;\n        \"go\")\n            echo \"Installing Go...\"\n            sudo pacman -S --noconfirm go\n            ;;\n        \"rust\")\n            echo \"Installing Rust...\"\n            sudo pacman -S --noconfirm rust\n            ;;\n        \"gitkraken\")\n            echo \"Installing GitKraken...\"\n            sudo pacman -S --noconfirm gitkraken\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"$(center_text \"Selected development tools and packages have been installed.\" 60)\" 10 50\n\n","recorded":"2025-01-06 15:26:56.390857714","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Development Setup\" --yesno \"Do you want to proceed with installing development tools and packages?\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Define a list of development tools and packages\ndev_apps=(\n    \"vscode\" \"GitHub Desktop\"\n    \"docker\" \"docker-desktop\"\n    \"kubernetes\" \"kubectl\"\n    \"latex\" \"texlive-most\"\n    \"miniconda\" \"conda\"\n    \"discord\" \"discord\"\n    \"git\" \"git\"\n    \"nodejs\" \"nodejs\"\n    \"python\" \"python\"\n    \"go\" \"go\"\n    \"rust\" \"rustup\"\n    \"gitkraken\" \"gitkraken\"\n)\n\n# Display checklist with scrolling\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n    --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n    \"${dev_apps[@]}\" \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n    whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n    case $app in\n        \"vscode\")\n            echo \"Installing Visual Studio Code...\"\n            sudo pacman -S --noconfirm visual-studio-code-bin\n            ;;\n        \"GitHub Desktop\")\n            echo \"Installing GitHub Desktop...\"\n            sudo pacman -S --noconfirm github-desktop\n            ;;\n        \"docker\")\n            echo \"Installing Docker...\"\n            sudo pacman -S --noconfirm docker\n            ;;\n        \"docker-desktop\")\n            echo \"Installing Docker Desktop...\"\n            sudo pacman -S --noconfirm docker-desktop-bin\n            ;;\n        \"kubernetes\")\n            echo \"Installing Kubernetes...\"\n            sudo pacman -S --noconfirm kubernetes\n            ;;\n        \"kubectl\")\n            echo \"Installing kubectl...\"\n            sudo pacman -S --noconfirm kubectl\n            ;;\n        \"latex\")\n            echo \"Installing LaTeX (texlive)...\"\n            sudo pacman -S --noconfirm texlive-most\n            ;;\n        \"miniconda\")\n            echo \"Installing Miniconda...\"\n            sudo pacman -S --noconfirm miniconda\n            ;;\n        \"discord\")\n            echo \"Installing Discord...\"\n            sudo pacman -S --noconfirm discord\n            ;;\n        \"git\")\n            echo \"Installing Git...\"\n            sudo pacman -S --noconfirm git\n            ;;\n        \"nodejs\")\n            echo \"Installing Node.js...\"\n            sudo pacman -S --noconfirm nodejs\n            ;;\n        \"python\")\n            echo \"Installing Python...\"\n            sudo pacman -S --noconfirm python\n            ;;\n        \"go\")\n            echo \"Installing Go...\"\n            sudo pacman -S --noconfirm go\n            ;;\n        \"rust\")\n            echo \"Installing Rust...\"\n            sudo pacman -S --noconfirm rust\n            ;;\n        \"gitkraken\")\n            echo \"Installing GitKraken...\"\n            sudo pacman -S --noconfirm gitkraken\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:26:53.813174524","filePath":"null","pinned":false},{"value":"\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Development Setup\" --yesno \"$(center_text \"Do you want to proceed with installing development tools and packages?\" 60)\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi","recorded":"2025-01-06 15:25:05.362000693","filePath":"null","pinned":false},{"value":"# Function to center text in a box\ncenter_text() {\n    local text=\"$1\"\n    local width=\"$2\"\n    local padding=$(( (width - ${#text}) / 2 ))\n    printf \"%*s%s%*s\\n\" $padding \"\" \"$text\" $padding \"\"\n}","recorded":"2025-01-06 15:25:02.350932459","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Function to center text in a box\ncenter_text() {\n    local text=\"$1\"\n    local width=\"$2\"\n    local padding=$(( (width - ${#text}) / 2 ))\n    printf \"%*s%s%*s\\n\" $padding \"\" \"$text\" $padding \"\"\n}\n\necho \"Setting up development tools and packages...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Development Setup\" --yesno \"$(center_text \"Do you want to proceed with installing development tools and packages?\" 60)\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Define a list of development tools and packages\ndev_apps=(\n    \"vscode\" \"GitHub Desktop\"\n    \"docker\" \"docker-desktop\"\n    \"kubernetes\" \"kubectl\"\n    \"latex\" \"texlive-most\"\n    \"miniconda\" \"conda\"\n    \"discord\" \"discord\"\n    \"git\" \"git\"\n    \"nodejs\" \"nodejs\"\n    \"python\" \"python\"\n    \"go\" \"go\"\n    \"rust\" \"rustup\"\n    \"gitkraken\" \"gitkraken\"\n)\n\n# Display checklist with two columns for development tools\ndev_choices=$(whiptail --title \"$(center_text \"Select Development Tools to Install\" 60)\" \\\n    --checklist \"$(center_text \"Choose the development tools and packages you want to install:\" 60)\" 20 60 8 \\\n    \"${dev_apps[@]}\" \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n    whiptail --msgbox \"$(center_text \"No tools selected or setup canceled. Exiting.\" 60)\" 10 50\n    exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n    case $app in\n        \"vscode\")\n            echo \"Installing Visual Studio Code...\"\n            sudo pacman -S --noconfirm visual-studio-code-bin\n            ;;\n        \"GitHub Desktop\")\n            echo \"Installing GitHub Desktop...\"\n            sudo pacman -S --noconfirm github-desktop\n            ;;\n        \"docker\")\n            echo \"Installing Docker...\"\n            sudo pacman -S --noconfirm docker\n            ;;\n        \"docker-desktop\")\n            echo \"Installing Docker Desktop...\"\n            sudo pacman -S --noconfirm docker-desktop-bin\n            ;;\n        \"kubernetes\")\n            echo \"Installing Kubernetes...\"\n            sudo pacman -S --noconfirm kubernetes\n            ;;\n        \"kubectl\")\n            echo \"Installing kubectl...\"\n            sudo pacman -S --noconfirm kubectl\n            ;;\n        \"latex\")\n            echo \"Installing LaTeX (texlive)...\"\n            sudo pacman -S --noconfirm texlive-most\n            ;;\n        \"miniconda\")\n            echo \"Installing Miniconda...\"\n            sudo pacman -S --noconfirm miniconda\n            ;;\n        \"discord\")\n            echo \"Installing Discord...\"\n            sudo pacman -S --noconfirm discord\n            ;;\n        \"git\")\n            echo \"Installing Git...\"\n            sudo pacman -S --noconfirm git\n            ;;\n        \"nodejs\")\n            echo \"Installing Node.js...\"\n            sudo pacman -S --noconfirm nodejs\n            ;;\n        \"python\")\n            echo \"Installing Python...\"\n            sudo pacman -S --noconfirm python\n            ;;\n        \"go\")\n            echo \"Installing Go...\"\n            sudo pacman -S --noconfirm go\n            ;;\n        \"rust\")\n            echo \"Installing Rust...\"\n            sudo pacman -S --noconfirm rust\n            ;;\n        \"gitkraken\")\n            echo \"Installing GitKraken...\"\n            sudo pacman -S --noconfirm gitkraken\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"$(center_text \"Selected development tools and packages have been installed.\" 60)\" 10 50\n","recorded":"2025-01-06 15:24:54.325992827","filePath":"null","pinned":false},{"value":"sudo pacman -S --noconfirm --needed base-devel intel-ucode vim zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting bash-completion openssh wget curl btop fastfetch bat exa fd ripgrep fzf stow stylua tar tree time acpilight aria2 unrar unzip bluez bluez-utils brightnessctl xfsprogs ntfs-3g clang gcc clipmenu clipnotify inotify-tools psutils dunst e2fsprogs gvfs gvfs-afc gvfs-google gvfs-goa gvfs-gphoto2 gvfs-mtp gvfs-nfs gvfs-onedrive gvfs-smb efibootmgr zoxide gc git-lfs gnome-keyring polkit-gnome pass udiskie gstreamer jq xdotool screenkey xorg-xprop lazygit lolcat sxiv shellcheck net-tools numlockx prettier progress zip rsync trash-cli tlp tlp-rdw neovim feh xorg-xinput xclip xcompmgr xorg-xrandr xorg-xsetroot xsel xwallpaper pandoc starship python-pywal glow xarchiver xfce4-clipman-plugin qemu-full libguestfs bc xorg-xman man-db man-pages ncdu python-adblock dnsmasq python-pip nwg-look python-prctl vscode-css-languageserver ffmpegthumbnailer virt-manager spice-vdagent lua-language-server pass pinentry gnupg pass-otp zbar xorg-xlsclients xscreensaver os-prober qt5ct pamixer qt5-wayland qt6-wayland parallel shfmt tesseract html-xml-utils sddm qt6-5compat qt6-declarative qt6-svg cava thunar thunar-archive-plugin thunar-media-tags-plugin thunar-volman thunar-vcs-plugin flameshot alacritty playerctl ncmpcpp mpd mpv mpc poppler poppler-glib adobe-source-code-pro-fonts noto-fonts noto-fonts-cjk noto-fonts-emoji ttf-hack ttf-jetbrains-mono ttf-ubuntu-font-family ttf-ubuntu-mono-nerd ttf-ubuntu-nerd ttf-opensans gnu-free-fonts libnewt baobab gnome-disk-utility gparted pavucontrol ranger yad timeshift go hugo hunspell hunspell-en_us imagemagick ueberzug luacheck yt-dlp mlocate nodejs npm translate-shell jdk-openjdk openjdk-doc openjdk-src blueman zenity rofi rofi-emoji rofi-calc newsboat","recorded":"2025-01-06 15:02:00.429003669","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Account Statement_unlocked.pdf","recorded":"2025-01-06 14:58:09.226815799","filePath":"null","pinned":false},{"value":"# After that run ---- M-x nerd-icons-install-fonts\n","recorded":"2025-01-06 14:54:10.525988884","filePath":"null","pinned":false},{"value":"# sudo pacman -S emacs --noconfirm \u0026\u0026 git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs \u0026\u0026 ~/.config/emacs/bin/doom install # Later run doom sync\n","recorded":"2025-01-06 14:54:07.261418673","filePath":"null","pinned":false},{"value":"# 10. Install Doom Emacs\n","recorded":"2025-01-06 14:54:06.815036567","filePath":"null","pinned":false},{"value":"# yay -S elementary-icon-theme --noconfirm # Previously used icons\n","recorded":"2025-01-06 14:51:22.317041955","filePath":"null","pinned":false},{"value":"😅","recorded":"2025-01-06 14:50:51.887749625","filePath":"null","pinned":false},{"value":"# also install pywal zathura in ~/dotfiles/Extras/Extras/Zathura-Pywal-master/\n","recorded":"2025-01-06 14:49:34.588349705","filePath":"null","pinned":false},{"value":"echo \"Installing main packages and application that I personally use the most...\" \u0026\u0026 sleep 2\n\n# Broswer \necho \"choose a browser to install...\"\n","recorded":"2025-01-06 14:46:17.191073534","filePath":"null","pinned":false},{"value":"echo \"Setting up torrent applications...\"\n\n# Display checklist for torrent applications\ntorrent_apps=$(whiptail --title \"Select Torrent Applications to Install\" \\\n    --checklist \"Choose the torrent applications you want to install:\" 15 60 8 \\\n    \"torrent-cli\" \"\" OFF \\\n    \"qBittorrent\" \"\" OFF \\\n    \"Transmission\" \"\" OFF \\\n    \"Deluge\" \"\" OFF \\\n    \"FrostWire\" \"\" OFF \\\n    \"Fierce\" \"\" OFF \\\n    \"PicoTorrent\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$torrent_apps\" ]; then\n    whiptail --msgbox \"No torrent applications selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected torrent applications and install them\nfor app in $torrent_apps; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            sudo pacman -S --noconfirm torrent-cli\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Deluge\")\n            echo \"Installing Deluge...\"\n            sudo pacman -S --noconfirm deluge\n            ;;\n        \"FrostWire\")\n            echo \"Installing FrostWire...\"\n            sudo pacman -S --noconfirm frostwire\n            ;;\n        \"Fierce\")\n            echo \"Installing Fierce...\"\n            sudo pacman -S --noconfirm fierce\n            ;;\n        \"PicoTorrent\")\n            echo \"Installing PicoTorrent...\"\n            sudo pacman -S --noconfirm picotorrent\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected torrent applications have been installed.\" 10 50","recorded":"2025-01-06 14:46:17.180280007","filePath":"null","pinned":false},{"value":"https://kubernetes.io/docs/tasks/tools/#kubectl","recorded":"2025-01-06 14:45:29.650551562","filePath":"null","pinned":false},{"value":"https://karna-blog.netlify.app/posts/docker-login-cli/","recorded":"2025-01-06 14:45:01.397952751","filePath":"null","pinned":false},{"value":"https://netbanking.hdfcbank.com/netbanking/","recorded":"2025-01-06 14:40:53.459638385","filePath":"null","pinned":false},{"value":"# paru -S --needed \"gcc\" \"binutils\" \"dotnet-runtime\" \"dotnet-sdk\" \"aspnet-runtime\" \"mono\" \"jdk-openjdk\" \"dart\" \"kotlin\" \"elixir\" \"npm\" \"nodejs\" \"typescript\" \"make\" \"go\" \"nasm\" \"r\" \"nuitka\" \"python\" \"ruby\" \"perl\" \"lua\" \"pyinstaller\" \"swift-language\" \"flutter-bin\" \"gcc-fortran\" \"fortran-fpm-bin\"\n","recorded":"2025-01-06 14:35:28.713282023","filePath":"null","pinned":false},{"value":"# Compiler.nvim for neovim compilation --\u003e Choose what you need \n","recorded":"2025-01-06 14:35:28.388100254","filePath":"null","pinned":false},{"value":"3. If you are using a dual-boot system, then make sure that the boot order is set to the linux system.\n","recorded":"2025-01-06 14:34:36.672979271","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/my-fonts","recorded":"2025-01-06 14:33:54.641008601","filePath":"null","pinned":false},{"value":"# sudo pacman -S qt6-5compat qt6-declarative qt6-svg sddm \n","recorded":"2025-01-06 14:32:47.991905669","filePath":"null","pinned":false},{"value":"#### SDDM \n","recorded":"2025-01-06 14:32:47.590502993","filePath":"null","pinned":false},{"value":"qt6-5compat qt6-declarative qt6-svg ","recorded":"2025-01-06 14:32:38.708130307","filePath":"null","pinned":false},{"value":"# curl -sSLf https://github.com/aclap-dev/vdhcoapp/releases/latest/download/install.sh | bash\n","recorded":"2025-01-06 14:32:04.938395825","filePath":"null","pinned":false},{"value":"# Video Download Helper \n","recorded":"2025-01-06 14:32:04.557184807","filePath":"null","pinned":false},{"value":"# Video Download Helper \n# curl -sSLf https://github.com/aclap-dev/vdhcoapp/releases/latest/download/install.sh | bash","recorded":"2025-01-06 14:31:49.411305806","filePath":"null","pinned":false},{"value":"# mv stockfish ~/\n","recorded":"2025-01-06 14:29:39.165266755","filePath":"null","pinned":false},{"value":"# rm stockfish-ubuntu-x86-64-avx2.tar\n","recorded":"2025-01-06 14:29:38.739859846","filePath":"null","pinned":false},{"value":"# tar -xvf stockfish-ubuntu-x86-64-avx2.tar\n","recorded":"2025-01-06 14:29:38.315366965","filePath":"null","pinned":false},{"value":"# wget https://github.com/official-stockfish/Stockfish/releases/latest/download/stockfish-ubuntu-x86-64-avx2.tar\n","recorded":"2025-01-06 14:29:37.869019420","filePath":"null","pinned":false},{"value":"# 19. Install Stockfish\n","recorded":"2025-01-06 14:29:37.357234514","filePath":"null","pinned":false},{"value":"git@github.com:Chaganti-Reddy/my-fonts.git","recorded":"2025-01-06 14:28:00.062947360","filePath":"null","pinned":false},{"value":"# sudo pacman -S discord --noconfirm\n","recorded":"2025-01-06 14:26:56.892010251","filePath":"null","pinned":false},{"value":"# sudo pacman -S blueman --noconfirm\n","recorded":"2025-01-06 14:26:56.461680724","filePath":"null","pinned":false},{"value":"# yay -S networkmanager-dmenu-git\n","recorded":"2025-01-06 14:26:17.981861694","filePath":"null","pinned":false},{"value":"# 18. Use dmenu for network manager (Optional)\n","recorded":"2025-01-06 14:26:17.362271696","filePath":"null","pinned":false},{"value":"# paru -S python-pywalfox --noconfirm\n","recorded":"2025-01-06 14:26:16.668213099","filePath":"null","pinned":false},{"value":"# paru -S zen-browser-bin --noconfirm\n","recorded":"2025-01-06 14:26:11.204431122","filePath":"null","pinned":false},{"value":"# 17. Install floorp instead of firefox\n","recorded":"2025-01-06 14:26:10.226659283","filePath":"null","pinned":false},{"value":"# brave://extensions/ ---\u003e Install Comp Companion, uBlock Origin, GFG to Github, Google Translate, LeetHub, User-Agent switcher\n","recorded":"2025-01-06 14:25:28.498118184","filePath":"null","pinned":false},{"value":"# 13. Install brave Extensions\n","recorded":"2025-01-06 14:25:27.937816902","filePath":"null","pinned":false},{"value":"            sudo pacman -S --noconfirm torrent-cli\n","recorded":"2025-01-06 14:20:36.965879849","filePath":"null","pinned":false},{"value":"# sudo pacman -S thunar thunar-archive-plugin thunar-volman thunar-media-tags-plugin --noconfirm\n","recorded":"2025-01-06 14:19:56.363640200","filePath":"null","pinned":false},{"value":"# 8. Install Thunar\n","recorded":"2025-01-06 14:19:55.883826829","filePath":"null","pinned":false},{"value":"# paru -S teamviewer --noconfirm\n","recorded":"2025-01-06 14:19:43.436969404","filePath":"null","pinned":false},{"value":"# 4. Install Teamviewer\n","recorded":"2025-01-06 14:19:42.979486981","filePath":"null","pinned":false},{"value":"# sudo pacman -S qbittorrent --noconfirm\n","recorded":"2025-01-06 14:19:36.060704625","filePath":"null","pinned":false},{"value":"# 2. Install qbit torrent\n","recorded":"2025-01-06 14:19:35.514139842","filePath":"null","pinned":false},{"value":"# 12. Alternatives \u0026 Optionals:\n","recorded":"2025-01-06 14:19:34.979890580","filePath":"null","pinned":false},{"value":"# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Torrent and Remote Working Setup\" --yesno \"$(center_text \"Do you want to proceed with installing torrent and remote working applications?\" 60)\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n","recorded":"2025-01-06 14:19:14.438919155","filePath":"null","pinned":false},{"value":"# Function to center text in a box\ncenter_text() {\n    local text=\"$1\"\n    local width=\"$2\"\n    local padding=$(( (width - ${#text}) / 2 ))\n    printf \"%*s%s%*s\\n\" $padding \"\" \"$text\" $padding \"\"\n}\n\n","recorded":"2025-01-06 14:19:11.960259196","filePath":"null","pinned":false},{"value":"bind = $mainMod, E, exec, rofi -modi emoji -show emoji \n","recorded":"2025-01-06 14:18:42.695338154","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up torrent and remote working applications...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Torrent and Remote Working Setup\" --yesno \"$(center_text \"Do you want to proceed with installing torrent and remote working applications?\" 60)\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Display checklist for torrent and remote working applications\napps=$(whiptail --title \"$(center_text \"Select Applications to Install\" 60)\" \\\n    --checklist \"$(center_text \"Choose the applications you want to install:\" 60)\" 20 60 8 \\\n    \"torrent-cli\" \"\" OFF \\\n    \"qBittorrent\" \"\" OFF \\\n    \"Transmission\" \"\" OFF \\\n    \"Remmina\" \"\" OFF \\\n    \"VNC\" \"\" OFF \\\n    \"TeamViewer\" \"\" OFF \\\n    \"AnyDesk\" \"\" OFF \\\n    \"xrdp\" \"\" OFF \\\n    \"openvpn\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$apps\" ]; then\n    whiptail --msgbox \"$(center_text \"No applications selected or setup canceled. Exiting.\" 60)\" 10 50\n    exit 1\nfi\n\n# Process selected applications and install them\nfor app in $apps; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            sudo pacman -S --noconfirm torrent-cli\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Remmina\")\n            echo \"Installing Remmina (Remote Desktop Client)...\"\n            sudo pacman -S --noconfirm remmina\n            ;;\n        \"VNC\")\n            echo \"Installing VNC Server...\"\n            sudo pacman -S --noconfirm tigervnc\n            ;;\n        \"TeamViewer\")\n            echo \"Installing TeamViewer...\"\n            sudo pacman -S --noconfirm teamviewer\n            ;;\n        \"AnyDesk\")\n            echo \"Installing AnyDesk...\"\n            sudo pacman -S --noconfirm anydesk\n            ;;\n        \"xrdp\")\n            echo \"Installing xrdp (Remote Desktop Protocol)...\"\n            sudo pacman -S --noconfirm xrdp\n            ;;\n        \"openvpn\")\n            echo \"Installing OpenVPN...\"\n            sudo pacman -S --noconfirm openvpn\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"$(center_text \"Selected applications have been installed.\" 60)\" 10 50\n","recorded":"2025-01-06 14:18:42.688117367","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Function to center text in a box\ncenter_text() {\n    local text=\"$1\"\n    local width=\"$2\"\n    local padding=$(( (width - ${#text}) / 2 ))\n    printf \"%*s%s%*s\\n\" $padding \"\" \"$text\" $padding \"\"\n}\n\necho \"Setting up torrent and remote working applications...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Torrent and Remote Working Setup\" --yesno \"$(center_text \"Do you want to proceed with installing torrent and remote working applications?\" 60)\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Define a list of applications in two columns\napps=(\n    \"torrent-cli\" \"qBittorrent\"\n    \"Transmission\" \"Remmina\"\n    \"VNC\" \"TeamViewer\"\n    \"AnyDesk\" \"xrdp\"\n    \"openvpn\"\n)\n\n# Display checklist with two columns by splitting the options\napp_choices=$(whiptail --title \"$(center_text \"Select Applications to Install\" 60)\" \\\n    --checklist \"$(center_text \"Choose the applications you want to install:\" 60)\" 20 60 8 \\\n    \"${apps[@]}\" \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$app_choices\" ]; then\n    whiptail --msgbox \"$(center_text \"No applications selected or setup canceled. Exiting.\" 60)\" 10 50\n    exit 1\nfi\n\n# Process selected applications and install them\nfor app in $app_choices; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            sudo pacman -S --noconfirm torrent-cli\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Remmina\")\n            echo \"Installing Remmina (Remote Desktop Client)...\"\n            sudo pacman -S --noconfirm remmina\n            ;;\n        \"VNC\")\n            echo \"Installing VNC Server...\"\n            sudo pacman -S --noconfirm tigervnc\n            ;;\n        \"TeamViewer\")\n            echo \"Installing TeamViewer...\"\n            sudo pacman -S --noconfirm teamviewer\n            ;;\n        \"AnyDesk\")\n            echo \"Installing AnyDesk...\"\n            sudo pacman -S --noconfirm anydesk\n            ;;\n        \"xrdp\")\n            echo \"Installing xrdp (Remote Desktop Protocol)...\"\n            sudo pacman -S --noconfirm xrdp\n            ;;\n        \"openvpn\")\n            echo \"Installing OpenVPN...\"\n            sudo pacman -S --noconfirm openvpn\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"$(center_text \"Selected applications have been installed.\" 60)\" 10 50\n","recorded":"2025-01-06 14:18:40.865695960","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Function to center text in a box\ncenter_text() {\n    local text=\"$1\"\n    local width=\"$2\"\n    local padding=$(( (width - ${#text}) / 2 ))\n    printf \"%*s%s%*s\\n\" $padding \"\" \"$text\" $padding \"\"\n}\n\necho \"Setting up torrent applications...\"\n\n# Display checklist for torrent applications\ntorrent_apps=$(whiptail --title \"$(center_text \"Select Torrent Applications to Install\" 60)\" \\\n    --checklist \"$(center_text \"Choose the torrent applications you want to install:\" 60)\" 15 60 8 \\\n    \"torrent-cli\" \"\" OFF \\\n    \"qBittorrent\" \"\" OFF \\\n    \"Transmission\" \"\" OFF \\\n    \"Deluge\" \"\" OFF \\\n    \"FrostWire\" \"\" OFF \\\n    \"Fierce\" \"\" OFF \\\n    \"PicoTorrent\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$torrent_apps\" ]; then\n    whiptail --msgbox \"$(center_text \"No torrent applications selected or setup canceled. Exiting.\" 60)\" 10 50\n    exit 1\nfi\n\n# Process selected torrent applications and install them\nfor app in $torrent_apps; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            sudo pacman -S --noconfirm torrent-cli\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Deluge\")\n            echo \"Installing Deluge...\"\n            sudo pacman -S --noconfirm deluge\n            ;;\n        \"FrostWire\")\n            echo \"Installing FrostWire...\"\n            sudo pacman -S --noconfirm frostwire\n            ;;\n        \"Fierce\")\n            echo \"Installing Fierce...\"\n            sudo pacman -S --noconfirm fierce\n            ;;\n        \"PicoTorrent\")\n            echo \"Installing PicoTorrent...\"\n            sudo pacman -S --noconfirm picotorrent\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"$(center_text \"Selected torrent applications have been installed.\" 60)\" 10 50\n","recorded":"2025-01-06 14:17:50.346551153","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Function to center text in a box\ncenter_text() {\n    local text=\"$1\"\n    local width=\"$2\"\n    local padding=$(( (width - ${#text}) / 2 ))\n    printf \"%*s%s%*s\\n\" $padding \"\" \"$text\" $padding \"\"\n}\n\necho \"Setting up torrent and remote working applications...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Torrent and Remote Working Setup\" --yesno \"$(center_text \"Do you want to proceed with installing torrent and remote working applications?\" 60)\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Display checklist for torrent and remote working applications\napps=$(whiptail --title \"$(center_text \"Select Applications to Install\" 60)\" \\\n    --checklist \"$(center_text \"Choose the applications you want to install:\" 60)\" 20 60 8 \\\n    \"torrent-cli\" \"\" OFF \\\n    \"qBittorrent\" \"\" OFF \\\n    \"Transmission\" \"\" OFF \\\n    \"Remmina\" \"\" OFF \\\n    \"VNC\" \"\" OFF \\\n    \"TeamViewer\" \"\" OFF \\\n    \"AnyDesk\" \"\" OFF \\\n    \"xrdp\" \"\" OFF \\\n    \"openvpn\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$apps\" ]; then\n    whiptail --msgbox \"$(center_text \"No applications selected or setup canceled. Exiting.\" 60)\" 10 50\n    exit 1\nfi\n\n# Process selected applications and install them\nfor app in $apps; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            sudo pacman -S --noconfirm torrent-cli\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Remmina\")\n            echo \"Installing Remmina (Remote Desktop Client)...\"\n            sudo pacman -S --noconfirm remmina\n            ;;\n        \"VNC\")\n            echo \"Installing VNC Server...\"\n            sudo pacman -S --noconfirm tigervnc\n            ;;\n        \"TeamViewer\")\n            echo \"Installing TeamViewer...\"\n            sudo pacman -S --noconfirm teamviewer\n            ;;\n        \"AnyDesk\")\n            echo \"Installing AnyDesk...\"\n            sudo pacman -S --noconfirm anydesk\n            ;;\n        \"xrdp\")\n            echo \"Installing xrdp (Remote Desktop Protocol)...\"\n            sudo pacman -S --noconfirm xrdp\n            ;;\n        \"openvpn\")\n            echo \"Installing OpenVPN...\"\n            sudo pacman -S --noconfirm openvpn\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"$(center_text \"Selected applications have been installed.\" 60)\" 10 50\n","recorded":"2025-01-06 14:17:47.868197895","filePath":"null","pinned":false},{"value":"# Ask the user whether they want to proceed with torrent setup\nif ! whiptail --title \"Torrent Application Setup\" --yesno \"Do you want to proceed with installing torrent applications?\" 10 60; then\n    echo \"Torrent application setup canceled. Exiting.\"\n    exit 1\nfi\n\n","recorded":"2025-01-06 14:15:37.505054576","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up torrent applications...\"\n\n# Ask the user whether they want to proceed with torrent setup\nif ! whiptail --title \"Torrent Application Setup\" --yesno \"Do you want to proceed with installing torrent applications?\" 10 60; then\n    echo \"Torrent application setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Display checklist for torrent applications\ntorrent_apps=$(whiptail --title \"Select Torrent Applications to Install\" \\\n    --checklist \"Choose the torrent applications you want to install:\" 15 60 8 \\\n    \"torrent-cli\" \"\" OFF \\\n    \"qBittorrent\" \"\" OFF \\\n    \"Transmission\" \"\" OFF \\\n    \"Deluge\" \"\" OFF \\\n    \"FrostWire\" \"\" OFF \\\n    \"Fierce\" \"\" OFF \\\n    \"PicoTorrent\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$torrent_apps\" ]; then\n    whiptail --msgbox \"No torrent applications selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected torrent applications and install them\nfor app in $torrent_apps; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            sudo pacman -S --noconfirm torrent-cli\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Deluge\")\n            echo \"Installing Deluge...\"\n            sudo pacman -S --noconfirm deluge\n            ;;\n        \"FrostWire\")\n            echo \"Installing FrostWire...\"\n            sudo pacman -S --noconfirm frostwire\n            ;;\n        \"Fierce\")\n            echo \"Installing Fierce...\"\n            sudo pacman -S --noconfirm fierce\n            ;;\n        \"PicoTorrent\")\n            echo \"Installing PicoTorrent...\"\n            sudo pacman -S --noconfirm picotorrent\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected torrent applications have been installed.\" 10 50\n","recorded":"2025-01-06 14:15:29.543065717","filePath":"null","pinned":false},{"value":"# Ask the user whether they want to proceed with torrent setup\nif ! whiptail --title \"Torrent Application Setup\" --yesno \"$(center_text \"Do you want to proceed with installing torrent applications?\" 60)\" 10 60; then\n    echo \"Torrent application setup canceled. Exiting.\"\n    exit 1\nfi\n\n","recorded":"2025-01-06 14:14:17.488842916","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up torrent applications...\"\n\n# Display checklist for torrent applications\ntorrent_apps=$(whiptail --title \"Select Torrent Applications to Install\" \\\n    --checklist \"Choose the torrent applications you want to install:\" 15 60 8 \\\n    \"torrent-cli\" \"\" OFF \\\n    \"qBittorrent\" \"\" OFF \\\n    \"Transmission\" \"\" OFF \\\n    \"Deluge\" \"\" OFF \\\n    \"FrostWire\" \"\" OFF \\\n    \"Fierce\" \"\" OFF \\\n    \"PicoTorrent\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$torrent_apps\" ]; then\n    whiptail --msgbox \"No torrent applications selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected torrent applications and install them\nfor app in $torrent_apps; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            sudo pacman -S --noconfirm torrent-cli\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Deluge\")\n            echo \"Installing Deluge...\"\n            sudo pacman -S --noconfirm deluge\n            ;;\n        \"FrostWire\")\n            echo \"Installing FrostWire...\"\n            sudo pacman -S --noconfirm frostwire\n            ;;\n        \"Fierce\")\n            echo \"Installing Fierce...\"\n            sudo pacman -S --noconfirm fierce\n            ;;\n        \"PicoTorrent\")\n            echo \"Installing PicoTorrent...\"\n            sudo pacman -S --noconfirm picotorrent\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected torrent applications have been installed.\" 10 50\n","recorded":"2025-01-06 14:14:12.426210646","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Function to center text in a box\ncenter_text() {\n    local text=\"$1\"\n    local width=\"$2\"\n    local padding=$(( (width - ${#text}) / 2 ))\n    printf \"%*s%s%*s\\n\" $padding \"\" \"$text\" $padding \"\"\n}\n\necho \"Setting up torrent applications...\"\n\n# Ask the user whether they want to proceed with torrent setup\nif ! whiptail --title \"Torrent Application Setup\" --yesno \"$(center_text \"Do you want to proceed with installing torrent applications?\" 60)\" 10 60; then\n    echo \"Torrent application setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Display checklist for torrent applications\ntorrent_apps=$(whiptail --title \"$(center_text \"Select Torrent Applications to Install\" 60)\" \\\n    --checklist \"$(center_text \"Choose the torrent applications you want to install:\" 60)\" 15 60 8 \\\n    \"torrent-cli\" \"\" OFF \\\n    \"qBittorrent\" \"\" OFF \\\n    \"Transmission\" \"\" OFF \\\n    \"Deluge\" \"\" OFF \\\n    \"FrostWire\" \"\" OFF \\\n    \"Fierce\" \"\" OFF \\\n    \"PicoTorrent\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$torrent_apps\" ]; then\n    whiptail --msgbox \"$(center_text \"No torrent applications selected or setup canceled. Exiting.\" 60)\" 10 50\n    exit 1\nfi\n\n# Process selected torrent applications and install them\nfor app in $torrent_apps; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            sudo pacman -S --noconfirm torrent-cli\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Deluge\")\n            echo \"Installing Deluge...\"\n            sudo pacman -S --noconfirm deluge\n            ;;\n        \"FrostWire\")\n            echo \"Installing FrostWire...\"\n            sudo pacman -S --noconfirm frostwire\n            ;;\n        \"Fierce\")\n            echo \"Installing Fierce...\"\n            sudo pacman -S --noconfirm fierce\n            ;;\n        \"PicoTorrent\")\n            echo \"Installing PicoTorrent...\"\n            sudo pacman -S --noconfirm picotorrent\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"$(center_text \"Selected torrent applications have been installed.\" 60)\" 10 50\n","recorded":"2025-01-06 14:14:09.863901792","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Git configuration...\"\n\n# Ask user whether to proceed with Git setup\nif ! whiptail --title \"Git Configuration Setup\" --yesno \"Do you want to proceed with setting up Git configuration?\" 10 60; then\n    echo \"Git setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n    whiptail --msgbox \"Git username setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n    whiptail --msgbox \"Git email setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Display confirmation dialog\nif whiptail --yesno \"Please confirm the Git configuration:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60; then\n    # Set Git configuration if confirmed\n    # git config --global user.name \"$git_username\"\n    # git config --global user.email \"$git_email\"\n    whiptail --msgbox \"Git has been successfully configured:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\nelse\n    whiptail --msgbox \"Git configuration canceled. No changes were made.\" 10 50\n    exit 1\nfi\n","recorded":"2025-01-06 14:13:30.177816270","filePath":"null","pinned":false},{"value":"#sudo pacman -S jdk-openjdk openjdk-doc openjdk-src --noconfirm\n","recorded":"2025-01-06 14:12:21.102529612","filePath":"null","pinned":false},{"value":"# 1. Install Java\n","recorded":"2025-01-06 14:12:20.568728628","filePath":"null","pinned":false},{"value":"jdk-openjdk openjdk-doc openjdk-src","recorded":"2025-01-06 14:12:11.139613813","filePath":"null","pinned":false},{"value":"#git config --global user.email \"chagantivenkataramireddy4@gmail.com\"\n","recorded":"2025-01-06 14:11:14.024735116","filePath":"null","pinned":false},{"value":"#git config --global user.name \"Chaganti-Reddy\"\n","recorded":"2025-01-06 14:11:13.434777549","filePath":"null","pinned":false},{"value":"# 11. Setup git\n","recorded":"2025-01-06 14:11:12.935113962","filePath":"null","pinned":false},{"value":"echo \"Setting up Git configuration...\"\n\n# Ask user whether to proceed with Git setup\nif ! whiptail --title \"Git Configuration Setup\" --yesno \"Do you want to proceed with setting up Git configuration?\" 10 60; then\n    echo \"Git setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n    whiptail --msgbox \"Git username setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n    whiptail --msgbox \"Git email setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Display confirmation dialog\nif whiptail --yesno \"Please confirm the Git configuration:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60; then\n    # Set Git configuration if confirmed\n    git config --global user.name \"$git_username\"\n    git config --global user.email \"$git_email\"\n    whiptail --msgbox \"Git has been successfully configured:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\nelse\n    whiptail --msgbox \"Git configuration canceled. No changes were made.\" 10 50\n    exit 1\nfi","recorded":"2025-01-06 14:10:34.915619477","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Git configuration...\"\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n    whiptail --msgbox \"Git username setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n    whiptail --msgbox \"Git email setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Display confirmation dialog\nif whiptail --yesno \"Please confirm the Git configuration:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60; then\n    # Set Git configuration if confirmed\n    # git config --global user.name \"$git_username\"\n    # git config --global user.email \"$git_email\"\n    whiptail --msgbox \"Git has been successfully configured:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\nelse\n    whiptail --msgbox \"Git configuration canceled. No changes were made.\" 10 50\n    exit 1\nfi\n","recorded":"2025-01-06 14:10:01.086798306","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Git configuration...\"\n\n# Ask user whether to proceed with Git setup\nif ! whiptail --title \"Git Configuration Setup\" --yesno \"Do you want to proceed with setting up Git configuration?\" 10 60; then\n    echo \"Git setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n    whiptail --msgbox \"Git username setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n    whiptail --msgbox \"Git email setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Display confirmation dialog\nif whiptail --yesno \"Please confirm the Git configuration:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60; then\n    # Set Git configuration if confirmed\n    git config --global user.name \"$git_username\"\n    git config --global user.email \"$git_email\"\n    whiptail --msgbox \"Git has been successfully configured:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\nelse\n    whiptail --msgbox \"Git configuration canceled. No changes were made.\" 10 50\n    exit 1\nfi\n","recorded":"2025-01-06 14:09:57.642965669","filePath":"null","pinned":false},{"value":"echo \"Setting up Git configuration...\"","recorded":"2025-01-06 14:09:34.292211287","filePath":"null","pinned":false},{"value":"echo \"Setting up Git configuration...\"\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n    whiptail --msgbox \"Git username setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n    whiptail --msgbox \"Git email setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Display confirmation dialog\nif whiptail --yesno \"Please confirm the Git configuration:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60; then\n    # Set Git configuration if confirmed\n    git config --global user.name \"$git_username\"\n    git config --global user.email \"$git_email\"\n    whiptail --msgbox \"Git has been successfully configured:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\nelse\n    whiptail --msgbox \"Git configuration canceled. No changes were made.\" 10 50\n    exit 1\nfi","recorded":"2025-01-06 14:09:05.056327792","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Git configuration...\"\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n    echo \"Git username setup canceled or empty. Exiting.\"\n    exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n    echo \"Git email setup canceled or empty. Exiting.\"\n    exit 1\nfi\n\n# Set Git configuration\n# git config --global user.name \"$git_username\"\n# git config --global user.email \"$git_email\"\n\n# Show confirmation using whiptail\nwhiptail --msgbox \"Git has been configured with the following details:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\n","recorded":"2025-01-06 14:08:23.420501556","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Git configuration...\"\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n    whiptail --msgbox \"Git username setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n    whiptail --msgbox \"Git email setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Display confirmation dialog\nif whiptail --yesno \"Please confirm the Git configuration:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60; then\n    # Set Git configuration if confirmed\n    git config --global user.name \"$git_username\"\n    git config --global user.email \"$git_email\"\n    whiptail --msgbox \"Git has been successfully configured:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\nelse\n    whiptail --msgbox \"Git configuration canceled. No changes were made.\" 10 50\n    exit 1\nfi\n","recorded":"2025-01-06 14:08:20.848084258","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Installing main packages and applications that I personally use the most...\"\nsleep 1\n\n# Function to display the browser selection menu\ninstall_browser() {\n    # Display the checkbox menu\n    choices=$(whiptail --title \"Browser Selection\" \\\n        --checklist \"Select the browsers you want to install:\" 15 50 6 \\\n        \"   Zen-Browser   \" \"\" OFF \\\n        \"     Firefox     \" \"\" OFF \\\n        \"    Chromium     \" \"\" OFF \\\n        \"     Vivaldi     \" \"\" OFF \\\n        \"   qutebrowser   \" \"\" OFF \\\n        \"     Brave       \" \"\" OFF \\\n        3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n    \n    # Check if the user pressed Cancel\n    if [ $? -ne 0 ]; then\n        echo \"No selection made. Exiting.\"\n        exit 1\n    fi\n\n    # Process the selected options\n    for choice in $choices; do\n        case $choice in\n            \"\\\"   Zen-Browser   \\\"\")\n                echo \"Installing Zen-Browser...\"\n                # Replace with Zen-Browser installation commands\n                ;;\n            \"\\\"     Firefox     \\\"\")\n                echo \"Installing Firefox...\"\n                sudo apt-get install -y firefox\n                ;;\n            \"\\\"    Chromium     \\\"\")\n                echo \"Installing Chromium...\"\n                sudo apt-get install -y chromium-browser\n                ;;\n            \"\\\"     Vivaldi     \\\"\")\n                echo \"Installing Vivaldi...\"\n                wget -qO- https://repo.vivaldi.com/archive/linux_signing_key.pub | sudo apt-key add -\n                echo \"deb [arch=amd64] https://repo.vivaldi.com/archive/deb/ stable main\" | sudo tee /etc/apt/sources.list.d/vivaldi.list\n                sudo apt update\n                sudo apt install -y vivaldi-stable\n                ;;\n            \"\\\"   qutebrowser   \\\"\")\n                echo \"Installing qutebrowser...\"\n                sudo apt-get install -y qutebrowser\n                ;;\n            \"\\\"     Brave       \\\"\")\n                echo \"Installing Brave...\"\n                sudo apt install -y apt-transport-https curl\n                curl -fsSL https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo gpg --dearmor -o /usr/share/keyrings/brave-browser-archive-keyring.gpg\n                echo \"deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main\" | sudo tee /etc/apt/sources.list.d/brave-browser-release.list\n                sudo apt update\n                sudo apt install -y brave-browser\n                ;;\n            *)\n                echo \"Invalid choice: $choice\"\n                ;;\n        esac\n    done\n}\n\n# Call the browser installation function\ninstall_browser\n","recorded":"2025-01-06 14:07:17.080538772","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Git configuration...\"\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n    echo \"Git username setup canceled or empty. Exiting.\"\n    exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n    echo \"Git email setup canceled or empty. Exiting.\"\n    exit 1\nfi\n\n# Set Git configuration\ngit config --global user.name \"$git_username\"\ngit config --global user.email \"$git_email\"\n\n# Show confirmation using whiptail\nwhiptail --msgbox \"Git has been configured with the following details:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\n","recorded":"2025-01-06 14:06:55.927067008","filePath":"null","pinned":false},{"value":"# 11. Setup git\n#git config --global user.name \"Chaganti-Reddy\"\n#git config --global user.email \"chagantivenkataramireddy4@gmail.com\"\n","recorded":"2025-01-06 14:05:02.626147405","filePath":"null","pinned":false},{"value":"# For VM sharing https://docs.getutm.app/guest-support/linux/\n","recorded":"2025-01-06 14:04:38.881564801","filePath":"null","pinned":false},{"value":"# sudo usermod -aG video $USER\n# sudo usermod -aG libvirt $USER\n# sudo virsh net-start default\n# For VM sharing https://docs.getutm.app/guest-support/linux/","recorded":"2025-01-06 14:04:15.470018610","filePath":"null","pinned":false},{"value":"# 9. Enable services\n# sudo updatedb\n# sudo mandb\n# sudo systemctl enable --now tlp\n# sudo systemctl enable --now bluetooth.service\n# sudo systemctl enable lightdm.service\n# sudo systemctl enable --now libvirtd","recorded":"2025-01-06 14:02:31.582938389","filePath":"null","pinned":false},{"value":"# sudo systemctl enable lightdm.service\n","recorded":"2025-01-06 14:02:02.777036724","filePath":"null","pinned":false},{"value":"# sudo updatedb\n# sudo mandb\n# sudo systemctl enable --now tlp\n# sudo systemctl enable --now bluetooth.service\n# sudo systemctl enable lightdm.service\n# sudo systemctl enable --now libvirtd\n# sudo systemctl enable --now docker.service","recorded":"2025-01-06 14:01:25.398156798","filePath":"null","pinned":false},{"value":"baobab gnome-disk-utility ","recorded":"2025-01-06 13:56:17.772134196","filePath":"null","pinned":false},{"value":"ccrypt didyoumean-git","recorded":"2025-01-06 13:56:03.196362839","filePath":"null","pinned":false},{"value":"git-remote-gcrypt","recorded":"2025-01-06 13:55:42.863801586","filePath":"null","pinned":false},{"value":"# rm -rf paru\n","recorded":"2025-01-06 13:46:52.594258958","filePath":"null","pinned":false},{"value":"# cd ..\n","recorded":"2025-01-06 13:46:52.219588413","filePath":"null","pinned":false},{"value":"# makepkg -si\n","recorded":"2025-01-06 13:46:51.930776492","filePath":"null","pinned":false},{"value":"# cd paru\n","recorded":"2025-01-06 13:46:51.657385732","filePath":"null","pinned":false},{"value":"# git clone https://aur.archlinux.org/paru.git\n","recorded":"2025-01-06 13:46:51.379759784","filePath":"null","pinned":false},{"value":"# 2. Install yay\n","recorded":"2025-01-06 13:46:51.122896486","filePath":"null","pinned":false},{"value":" \n","recorded":"2025-01-06 13:46:50.548034986","filePath":"null","pinned":false},{"value":"# lines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n# sudo sed -i '/^\\[options\\]/a '\"$lines_to_append\" /etc/pacman.conf\n ","recorded":"2025-01-06 13:46:28.658502332","filePath":"null","pinned":false},{"value":"# sudo pacman -Syu archlinux-keyring --noconfirm\n","recorded":"2025-01-06 13:46:05.672772999","filePath":"null","pinned":false},{"value":"# Update the system\n","recorded":"2025-01-06 13:46:05.218989052","filePath":"null","pinned":false},{"value":"# mkdir Downloads Documents Music Videos Pictures Desktop Git\n","recorded":"2025-01-06 13:46:04.821596335","filePath":"null","pinned":false},{"value":"# Reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation /v RealTimeIsUniversal /t REG_QWORD /d 1\n","recorded":"2025-01-06 13:45:49.313844721","filePath":"null","pinned":false},{"value":"# Dual boot windows time changing problem solution --\u003e Go to cmd with admiin permissions and run the following \n","recorded":"2025-01-06 13:45:48.936267274","filePath":"null","pinned":false},{"value":"\n\nIf you are dual-booting with windows then there might be problems with time in windows. To resolve that open cmd as admin in windows\n\n    For 32 Bit System rum Reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1\n    For 64 Bit System run Reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation /v RealTimeIsUniversal /t REG_QWORD /d 1\n\n","recorded":"2025-01-06 13:44:42.351042128","filePath":"null","pinned":false},{"value":"# Dual boot windows time changing problem solution --\u003e Go to cmd with admiin permissions and run the following \n# Reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation /v RealTimeIsUniversal /t REG_QWORD /d 1","recorded":"2025-01-06 13:43:59.471741873","filePath":"null","pinned":false},{"value":"# Using XFCE4-CLIPMAN for clipboard manager\n","recorded":"2025-01-06 13:42:56.350444243","filePath":"null","pinned":false},{"value":"# 1.  Install essential packages\n","recorded":"2025-01-06 13:42:55.271723953","filePath":"null","pinned":false},{"value":"# sudo pacman -S base-devel intel-ucode git vim zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting bash-completion openssh wget curl btop fastfetch bat exa fd ripgrep fzf stow stylua tar tree time acpilight aria2 unrar unzip bluez bluez-utils brightnessctl xfsprogs ntfs-3g clang gcc clipmenu clipnotify inotify-tools psutils dunst e2fsprogs gvfs gvfs-afc gvfs-google gvfs-goa gvfs-gphoto2 gvfs-mtp gvfs-nfs gvfs-onedrive gvfs-smb efibootmgr zoxide gc git-lfs gnome-keyring polkit-gnome pass udiskie gstreamer jq xdotool screenkey xorg-xprop lazygit lolcat sxiv shellcheck net-tools numlockx prettier progress zip rsync trash-cli tlp tlp-rdw neovim xorg-xinput xclip xcompmgr xorg-xrandr xorg-xsetroot xsel xwallpaper pandoc starship python-pywal glow xarchiver xfce4-clipman-plugin qemu-full libguestfs xorg-xman man-db man-pages ncdu python-adblock dnsmasq python-pip nwg-look python-prctl vscode-css-languageserver ffmpegthumbnailer virt-manager spice-vdagent lua-language-server pass pinentry gnupg pass-otp zbar xorg-xlsclients xscreensaver os-prober qt5ct pamixer qt5-wayland qt6-wayland parallel shfmt tesseract html-xml-utils --noconfirm\n","recorded":"2025-01-06 13:42:53.364779856","filePath":"null","pinned":false},{"value":"libnewt","recorded":"2025-01-06 13:42:29.042478673","filePath":"null","pinned":false},{"value":"      sudo apt install -y brave-browser\n","recorded":"2025-01-06 13:42:16.122316682","filePath":"null","pinned":false},{"value":"      sudo apt update\n","recorded":"2025-01-06 13:42:15.686526748","filePath":"null","pinned":false},{"value":"      echo \"deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main\" | sudo tee /etc/apt/sources.list.d/brave-browser-release.list\n","recorded":"2025-01-06 13:42:15.041349157","filePath":"null","pinned":false},{"value":"      curl -fsSL https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo gpg --dearmor -o /usr/share/keyrings/brave-browser-archive-keyring.gpg\n","recorded":"2025-01-06 13:42:14.538851733","filePath":"null","pinned":false},{"value":"      sudo apt install -y apt-transport-https curl\n","recorded":"2025-01-06 13:42:14.074349733","filePath":"null","pinned":false},{"value":"-S --noconfirm brave-bin","recorded":"2025-01-06 13:42:06.167774989","filePath":"null","pinned":false},{"value":"      sudo apt-get install -y qutebrowser\n","recorded":"2025-01-06 13:42:00.711789893","filePath":"null","pinned":false},{"value":"sudo pacman -S --noconfirm qutebrowser","recorded":"2025-01-06 13:41:55.345293739","filePath":"null","pinned":false},{"value":"      sudo apt install -y vivaldi-stable\n","recorded":"2025-01-06 13:41:50.765888735","filePath":"null","pinned":false},{"value":"      echo \"deb [arch=amd64] https://repo.vivaldi.com/archive/deb/ stable main\" | sudo tee /etc/apt/sources.list.d/vivaldi.list\n","recorded":"2025-01-06 13:41:49.339547408","filePath":"null","pinned":false},{"value":"      wget -qO- https://repo.vivaldi.com/archive/linux_signing_key.pub | sudo apt-key add -\n","recorded":"2025-01-06 13:41:48.925644589","filePath":"null","pinned":false},{"value":"-S --noconfirm vivaldi","recorded":"2025-01-06 13:41:41.414271182","filePath":"null","pinned":false},{"value":"                sudo apt-get install -y chromium-browser\n","recorded":"2025-01-06 13:41:28.517225486","filePath":"null","pinned":false},{"value":"sudo pacman -S --noconfirm chromium","recorded":"2025-01-06 13:41:19.612482263","filePath":"null","pinned":false},{"value":"                sudo pacman -S firefox\n","recorded":"2025-01-06 13:41:14.855466084","filePath":"null","pinned":false},{"value":"sudo pacman -S --noconfirm firefox","recorded":"2025-01-06 13:41:06.204529900","filePath":"null","pinned":false},{"value":"                sudo apt-get install -y firefox\n","recorded":"2025-01-06 13:40:51.461024181","filePath":"null","pinned":false},{"value":"                # Replace with Zen-Browser installation commands\n","recorded":"2025-01-06 13:40:04.382939145","filePath":"null","pinned":false},{"value":"sleep 2\n","recorded":"2025-01-06 13:39:56.208359002","filePath":"null","pinned":false},{"value":"echo \"Installing main packages and applications that I personally use the most...\"\n","recorded":"2025-01-06 13:39:55.784638468","filePath":"null","pinned":false},{"value":"echo \"choose a browser to install...\"\n","recorded":"2025-01-06 13:39:48.384826536","filePath":"null","pinned":false},{"value":"# Broswer \n","recorded":"2025-01-06 13:39:48.047547567","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Installing main packages and applications that I personally use the most...\"\nsleep 2\n\n# Function to display the browser selection menu\ninstall_browser() {\n    # Display the checkbox menu\n    choices=$(whiptail --title \"Browser Selection\" \\\n        --checklist \"Select the browsers you want to install:\" 15 50 6 \\\n        \"   Zen-Browser   \" \"\" OFF \\\n        \"     Firefox     \" \"\" OFF \\\n        \"    Chromium     \" \"\" OFF \\\n        \"     Vivaldi     \" \"\" OFF \\\n        \"   qutebrowser   \" \"\" OFF \\\n        \"     Brave       \" \"\" OFF \\\n        3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n    \n    # Check if the user pressed Cancel\n    if [ $? -ne 0 ]; then\n        echo \"No selection made. Exiting.\"\n        exit 1\n    fi\n\n    # Process the selected options\n    for choice in $choices; do\n        case $choice in\n            \"\\\"   Zen-Browser   \\\"\")\n                echo \"Installing Zen-Browser...\"\n                # Replace with Zen-Browser installation commands\n                ;;\n            \"\\\"     Firefox     \\\"\")\n                echo \"Installing Firefox...\"\n                sudo apt-get install -y firefox\n                ;;\n            \"\\\"    Chromium     \\\"\")\n                echo \"Installing Chromium...\"\n                sudo apt-get install -y chromium-browser\n                ;;\n            \"\\\"     Vivaldi     \\\"\")\n                echo \"Installing Vivaldi...\"\n                wget -qO- https://repo.vivaldi.com/archive/linux_signing_key.pub | sudo apt-key add -\n                echo \"deb [arch=amd64] https://repo.vivaldi.com/archive/deb/ stable main\" | sudo tee /etc/apt/sources.list.d/vivaldi.list\n                sudo apt update\n                sudo apt install -y vivaldi-stable\n                ;;\n            \"\\\"   qutebrowser   \\\"\")\n                echo \"Installing qutebrowser...\"\n                sudo apt-get install -y qutebrowser\n                ;;\n            \"\\\"     Brave       \\\"\")\n                echo \"Installing Brave...\"\n                sudo apt install -y apt-transport-https curl\n                curl -fsSL https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo gpg --dearmor -o /usr/share/keyrings/brave-browser-archive-keyring.gpg\n                echo \"deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main\" | sudo tee /etc/apt/sources.list.d/brave-browser-release.list\n                sudo apt update\n                sudo apt install -y brave-browser\n                ;;\n            *)\n                echo \"Invalid choice: $choice\"\n                ;;\n        esac\n    done\n}\n\n# Call the browser installation function\ninstall_browser\n","recorded":"2025-01-06 13:39:41.733941612","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Installing main packages and applications that I personally use the most...\"\nsleep 1\n\n# Function to display the browser selection menu\ninstall_browser() {\n    # Display the checkbox menu\n    choices=$(whiptail --title \"Browser Selection\" \\\n        --checklist \"Select the browsers you want to install:\" 15 50 6 \\\n        \"Zen-Browser\" \"\" OFF \\\n        \"Firefox\" \"\" OFF \\\n        \"Chromium\" \"\" OFF \\\n        \"Vivaldi\" \"\" OFF \\\n        \"qutebrowser\" \"\" OFF \\\n        \"Brave\" \"\" OFF \\\n        3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n    \n    # Check if the user pressed Cancel\n    if [ $? -ne 0 ]; then\n        echo \"No selection made. Exiting.\"\n        exit 1\n    fi\n\n    # Process the selected options\n    for choice in $choices; do\n        case $choice in\n            \"\\\"Zen-Browser\\\"\")\n                echo \"Installing Zen-Browser...\"\n                # Replace with Zen-Browser installation commands\n                ;;\n            \"\\\"Firefox\\\"\")\n                echo \"Installing Firefox...\"\n                sudo apt-get install -y firefox\n                ;;\n            \"\\\"Chromium\\\"\")\n                echo \"Installing Chromium...\"\n                sudo apt-get install -y chromium-browser\n                ;;\n            \"\\\"Vivaldi\\\"\")\n                echo \"Installing Vivaldi...\"\n                wget -qO- https://repo.vivaldi.com/archive/linux_signing_key.pub | sudo apt-key add -\n                echo \"deb [arch=amd64] https://repo.vivaldi.com/archive/deb/ stable main\" | sudo tee /etc/apt/sources.list.d/vivaldi.list\n                sudo apt update\n                sudo apt install -y vivaldi-stable\n                ;;\n            \"\\\"qutebrowser\\\"\")\n                echo \"Installing qutebrowser...\"\n                sudo apt-get install -y qutebrowser\n                ;;\n            \"\\\"Brave\\\"\")\n                echo \"Installing Brave...\"\n                sudo apt install -y apt-transport-https curl\n                curl -fsSL https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo gpg --dearmor -o /usr/share/keyrings/brave-browser-archive-keyring.gpg\n                echo \"deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main\" | sudo tee /etc/apt/sources.list.d/brave-browser-release.list\n                sudo apt update\n                sudo apt install -y brave-browser\n                ;;\n            *)\n                echo \"Invalid choice: $choice\"\n                ;;\n        esac\n    done\n}\n\n# Call the browser installation function\ninstall_browser\n","recorded":"2025-01-06 13:39:27.865026288","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Installing main packages and applications that I personally use the most...\"\nsleep 2\n\n# Function to display the browser selection menu\ninstall_browser() {\n    # Display the checkbox menu\n    choices=$(whiptail --title \"Browser Selection\" \\\n        --checklist \"Select the browsers you want to install:\" 15 50 3 \\\n        \"Zen-Browser\" \"Lightweight and fast browser\" OFF \\\n        \"Firefox\" \"Popular open-source browser\" OFF \\\n        \"Chromium\" \"Open-source base for Google Chrome\" OFF \\\n        3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n    \n    # Check if the user pressed Cancel\n    if [ $? -ne 0 ]; then\n        echo \"No selection made. Exiting.\"\n        exit 1\n    fi\n\n    # Process the selected options\n    for choice in $choices; do\n        case $choice in\n            \"\\\"Zen-Browser\\\"\")\n                echo \"Installing Zen-Browser...\"\n                # Replace with Zen-Browser installation commands\n                ;;\n            \"\\\"Firefox\\\"\")\n                echo \"Installing Firefox...\"\n                sudo apt-get install -y firefox\n                ;;\n            \"\\\"Chromium\\\"\")\n                echo \"Installing Chromium...\"\n                sudo apt-get install -y chromium-browser\n                ;;\n            *)\n                echo \"Invalid choice: $choice\"\n                ;;\n        esac\n    done\n}\n\n# Call the browser installation function\ninstall_browser\n","recorded":"2025-01-06 13:38:42.857046507","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Installing main packages and applications that I personally use the most...\"\nsleep 2\n\n# Function to display the browser selection menu\ninstall_browser() {\n    # Display the checkbox menu\n    choices=$(whiptail --title \"Browser Selection\" \\\n        --checklist \"Select the browsers you want to install:\" 15 50 6 \\\n        \"Zen-Browser\" \"\" OFF \\\n        \"Firefox\" \"\" OFF \\\n        \"Chromium\" \"\" OFF \\\n        \"Vivaldi\" \"\" OFF \\\n        \"qutebrowser\" \"\" OFF \\\n        \"Brave\" \"\" OFF \\\n        3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n    \n    # Check if the user pressed Cancel\n    if [ $? -ne 0 ]; then\n        echo \"No selection made. Exiting.\"\n        exit 1\n    fi\n\n    # Process the selected options\n    for choice in $choices; do\n        case $choice in\n            \"\\\"Zen-Browser\\\"\")\n                echo \"Installing Zen-Browser...\"\n                # Replace with Zen-Browser installation commands\n                ;;\n            \"\\\"Firefox\\\"\")\n                echo \"Installing Firefox...\"\n                sudo apt-get install -y firefox\n                ;;\n            \"\\\"Chromium\\\"\")\n                echo \"Installing Chromium...\"\n                sudo apt-get install -y chromium-browser\n                ;;\n            \"\\\"Vivaldi\\\"\")\n                echo \"Installing Vivaldi...\"\n                wget -qO- https://repo.vivaldi.com/archive/linux_signing_key.pub | sudo apt-key add -\n                echo \"deb [arch=amd64] https://repo.vivaldi.com/archive/deb/ stable main\" | sudo tee /etc/apt/sources.list.d/vivaldi.list\n                sudo apt update\n                sudo apt install -y vivaldi-stable\n                ;;\n            \"\\\"qutebrowser\\\"\")\n                echo \"Installing qutebrowser...\"\n                sudo apt-get install -y qutebrowser\n                ;;\n            \"\\\"Brave\\\"\")\n                echo \"Installing Brave...\"\n                sudo apt install -y apt-transport-https curl\n                curl -fsSL https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo gpg --dearmor -o /usr/share/keyrings/brave-browser-archive-keyring.gpg\n                echo \"deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main\" | sudo tee /etc/apt/sources.list.d/brave-browser-release.list\n                sudo apt update\n                sudo apt install -y brave-browser\n                ;;\n            *)\n                echo \"Invalid choice: $choice\"\n                ;;\n        esac\n    done\n}\n\n# Call the browser installation function\ninstall_browser\n","recorded":"2025-01-06 13:38:38.998425100","filePath":"null","pinned":false},{"value":"sudo pacman -S libnewt","recorded":"2025-01-06 13:35:48.434162650","filePath":"null","pinned":false},{"value":"whiptail","recorded":"2025-01-06 13:34:04.763623151","filePath":"null","pinned":false},{"value":"echo \"4. Chromium\"\n","recorded":"2025-01-06 13:31:17.756116276","filePath":"null","pinned":false},{"value":"echo \"3. Vivaldi\"\n","recorded":"2025-01-06 13:31:17.494111810","filePath":"null","pinned":false},{"value":"echo \"2. Brave\"\n","recorded":"2025-01-06 13:31:17.216854176","filePath":"null","pinned":false},{"value":"echo \"1. Firefox\"\n","recorded":"2025-01-06 13:31:16.951544764","filePath":"null","pinned":false},{"value":"clear\n","recorded":"2025-01-06 13:29:47.622505919","filePath":"null","pinned":false},{"value":"# 6. Install fonts\n","recorded":"2025-01-06 13:29:10.346219793","filePath":"null","pinned":false},{"value":"# sudo pacman -S adobe-source-code-pro-fonts noto-fonts noto-fonts-cjk noto-fonts-emoji ttf-hack ttf-jetbrains-mono ttf-ubuntu-font-family ttf-ubuntu-mono-nerd ttf-ubuntu-nerd ttf-opensans gnu-free-fonts --noconfirm \u0026\u0026 paru -S ttf-ms-fonts qt6ct-kde --noconfirm\n","recorded":"2025-01-06 13:29:08.824081003","filePath":"null","pinned":false},{"value":"# sudo pacman -Rns kate\n","recorded":"2025-01-06 13:28:18.141365834","filePath":"null","pinned":false},{"value":"# yay -S ferdium-bin --noconfirm\n","recorded":"2025-01-06 13:28:17.459021017","filePath":"null","pinned":false},{"value":"# sudo pacman -S mpv mpc mpd ncmpcpp mplayer poppler poppler-glib --noconfirm \u0026\u0026 \n","recorded":"2025-01-06 13:28:16.861873979","filePath":"null","pinned":false},{"value":"# 5. Install multimedia packages\n","recorded":"2025-01-06 13:28:16.338497899","filePath":"null","pinned":false},{"value":" mpv mpc mpd ncmpcpp mplayer poppler poppler-glib","recorded":"2025-01-06 13:27:58.900627580","filePath":"null","pinned":false},{"value":" ","recorded":"2025-01-06 13:24:09.405851846","filePath":"null","pinned":false},{"value":"# sudo pacman -S base-devel intel-ucode git vim zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting bash-completion openssh wget curl btop fastfetch bat exa fd ripgrep fzf stow stylua tar tree time acpilight aria2 unrar unzip bluez bluez-utils brightnessctl xfsprogs ntfs-3g clang gcc clipmenu clipnotify inotify-tools psutils dunst e2fsprogs gvfs gvfs-afc gvfs-google gvfs-goa gvfs-gphoto2 gvfs-mtp gvfs-nfs gvfs-onedrive gvfs-smb efibootmgr zoxide gc git-lfs gnome-keyring polkit-gnome pass udiskie gstreamer jq xdotool screenkey xorg-xprop lazygit lolcat sxiv shellcheck net-tools numlockx prettier progress zip rsync trash-cli tlp tlp-rdw neovim xorg-xinput xclip xcompmgr xorg-xrandr xorg-xsetroot xsel xwallpaper pandoc starship python-pywal glow xarchiver xfce4-clipman-plugin qemu-full libguestfs xorg-xman man-db man-pages ncdu python-adblock dnsmasq python-pip nwg-look python-prctl vscode-css-languageserver ffmpegthumbnailer virt-manager spice-vdagent lua-language-server pass pinentry gnupg pass-otp zbar xorg-xlsclients xscreensaver os-prober qt5ct pamixer qt5-wayland qt6-wayland parallel shfmt tesseract html-xml-utils --noconfirm","recorded":"2025-01-06 13:20:07.349481172","filePath":"null","pinned":false},{"value":"# Install base-devel and required packages\necho \"Installing dependencies..\" \u0026\u0026 sleep 2\nparu -S --noconfirm --needed base-devel qtile python-psutil pywal-git picom dunst zsh starship mpd ncmpcpp playerctl brightnessctl alacritty pfetch htop flameshot thunar roficlip rofi ranger cava neovim vim feh sddm\nclear","recorded":"2025-01-06 13:18:43.170753857","filePath":"null","pinned":false},{"value":"s","recorded":"2025-01-06 13:17:42.185465440","filePath":"null","pinned":false},{"value":"    mkdir -p ~/.srcs\n","recorded":"2025-01-06 13:17:15.103882243","filePath":"null","pinned":false},{"value":"    sudo ln -s /usr/lib/libalpm.so.15.0.0 /usr/lib/libalpm.so.14\n","recorded":"2025-01-06 13:16:10.167570056","filePath":"null","pinned":false},{"value":"    (cd ~/.srcs/paru-bin \u0026\u0026 makepkg -si --noconfirm)\n","recorded":"2025-01-06 13:16:09.780957640","filePath":"null","pinned":false},{"value":"# Clone and install Paru if not installed\necho \"This script requires an AUR helper to install the dependencies. Installing paru...\" \u0026 sleep 2\nif ! command -v paru \u0026\u003e /dev/null; then\n    echo \"Installing Paru, an AUR helper...\"\n    mkdir -p ~/.srcs\n    git clone https://aur.archlinux.org/paru-bin.git ~/.srcs/paru-bin\n    (cd ~/.srcs/paru-bin \u0026\u0026 makepkg -si --noconfirm)\n    sudo ln -s /usr/lib/libalpm.so.15.0.0 /usr/lib/libalpm.so.14\nfi\nclear","recorded":"2025-01-06 13:15:40.622902601","filePath":"null","pinned":false},{"value":"# System update \necho \"Performing a full system update...\"\nsudo pacman --noconfirm -Syu\nclear\necho \"System update done\" \u0026\u0026 sleep 2\nclear\n\n# Install Git if not present \necho \"Installing git...\" \u0026\u0026 sleep 1\nsudo pacman -S --noconfirm --needed git\nclear","recorded":"2025-01-06 13:15:25.955499537","filePath":"null","pinned":false},{"value":"# Introduction \u0026 Warning\necho \"Welcome to the Cozytile Setup!\" \u0026\u0026 sleep 2\necho \"Some parts of the script require sudo, so if you're planning on leaving the desktop while the installation script does its thing, better drop it already!.\" \u0026\u0026 sleep 4\n","recorded":"2025-01-06 13:14:57.915675694","filePath":"null","pinned":false},{"value":"#!/bin/env bash\nset -e","recorded":"2025-01-06 13:14:49.335317404","filePath":"null","pinned":false},{"value":"🫡","recorded":"2025-01-06 12:41:36.637302370","filePath":"null","pinned":false},{"value":"😁","recorded":"2025-01-06 12:39:09.387105055","filePath":"null","pinned":false},{"value":"bind = ALT, W, exec, rofi -modi window -show window\n","recorded":"2025-01-05 15:39:13.927916098","filePath":"null","pinned":false},{"value":"sidebar-mode: true;\n","recorded":"2025-01-05 15:37:30.166771240","filePath":"null","pinned":false},{"value":"kb-primary-copy: \"Control+Shift+c\";\n","recorded":"2025-01-05 15:37:05.284238183","filePath":"null","pinned":false},{"value":"😀","recorded":"2025-01-05 15:35:50.985403886","filePath":"null","pinned":false},{"value":"😃","recorded":"2025-01-05 15:34:06.112819847","filePath":"null","pinned":false},{"value":"kb-primary-paste: \"Control+V,Shift+Insert\";","recorded":"2025-01-05 15:33:24.784197747","filePath":"null","pinned":false},{"value":"matching: \"fuzzy\";","recorded":"2025-01-05 15:29:12.484015686","filePath":"null","pinned":false},{"value":"combi-modi: \"drun,run,ssh\";","recorded":"2025-01-05 15:29:06.286446056","filePath":"null","pinned":false},{"value":"sidebar-mode: true;","recorded":"2025-01-05 15:27:58.390323839","filePath":"null","pinned":false},{"value":"rofi -show emoji -no-config -dump-xresources\n","recorded":"2025-01-05 15:24:10.106310594","filePath":"null","pinned":false},{"value":"bind = $mainMod, E, exec, rofi -modi emoji -show emoji -kb-custom-1 Ctrl+c\n","recorded":"2025-01-05 15:23:11.083318247","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/youtui-current/.config/youtui/cookie.txt","recorded":"2025-01-05 15:20:52.152963484","filePath":"null","pinned":false},{"value":"cargo install youtui","recorded":"2025-01-05 15:19:14.086937705","filePath":"null","pinned":false},{"value":"youtui setup-oauth","recorded":"2025-01-04 18:45:40.924317569","filePath":"null","pinned":false},{"value":"VISITOR_INFO1_LIVE=iE04tztzhuo; VISITOR_PRIVACY_METADATA=CgJJThIEGgAgLw%3D%3D; PREF=f6=40000080\u0026f7=100\u0026tz=Asia.Kolkata\u0026f5=30000\u0026repeat=NONE; SID=g.a000rwh71fYnWxJuaOM2icgfVE_F36J4FJYPVOQWNB7GTwE3W54LCjBNFEEpnYEKCgISZdZLfQACgYKAXoSARQSFQHGX2MitTUQYmcCTX15Z3AK2-mHPRoVAUF8yKov-9xqBEwscXk161qcDg5a0076; __Secure-1PSIDTS=sidts-CjAB7wV3sR2fxyAV1dVULTToHWbDC5lDv8VCLqMcFBvmBTPPPmtKaGeKwsxaoH8kclkQAA; __Secure-3PSIDTS=sidts-CjAB7wV3sR2fxyAV1dVULTToHWbDC5lDv8VCLqMcFBvmBTPPPmtKaGeKwsxaoH8kclkQAA; __Secure-1PSID=g.a000rwh71fYnWxJuaOM2icgfVE_F36J4FJYPVOQWNB7GTwE3W54LJLwxvTsfNG9v4vyZspIjOgACgYKAUkSARQSFQHGX2Mi6gqz-mAAeU5dbrw-Y2wMwBoVAUF8yKr0EftNu38XZaK1MwXrfiyd0076; __Secure-3PSID=g.a000rwh71fYnWxJuaOM2icgfVE_F36J4FJYPVOQWNB7GTwE3W54LTFI5s81Uhw3T52L8k0kGDwACgYKAScSARQSFQHGX2MiD2vEFA7Ucxr_LYQTFptH4xoVAUF8yKr-dq9MNyqXmA7wCkdoV91S0076; HSID=AXD4SnU6OynDpKo5m; SSID=AnXJbpv_xdeRqgJp5; APISID=39-oKwAEYQa80R2Y/Ayc7j7wE2YlugVUaF; SAPISID=Tkj1MfKPyp7HtmOW/AfitJ7pHUH0XOJm4h; __Secure-1PAPISID=Tkj1MfKPyp7HtmOW/AfitJ7pHUH0XOJm4h; __Secure-3PAPISID=Tkj1MfKPyp7HtmOW/AfitJ7pHUH0XOJm4h; SIDCC=AKEyXzX1DqG9ep-xez-jF5Tp8pwF4LKA0KjoOzDMEcev9LfVy_i6WNNTXKnVLNUhzh42RikTBg; __Secure-1PSIDCC=AKEyXzVrAxxccFw3GYqdiUy2EJjWFjMwJZzR4VYm5gbVkFBGnMomj_CfUl3Y50SnyUpyiw1iZiU; __Secure-3PSIDCC=AKEyXzXQ_Z22feqPZBPpB75HnUyQPFzaMIcJsZSbam-vDfRKIaoKhNQ6cDJhvcyIiMq15AKumVQ; LOGIN_INFO=AFmmF2swRQIhAKDJ9uPrSMlUMdM_zp65VWagGDKaGArC_BCBFVIeu2YyAiAK-6_qZaepf80Ybc9cV-OCMsm22ew11JUDTfCHBcBtcQ:QUQ3MjNmejk1YWdULWRoRDRMckVvRkxKWTFNTkNFS2J3YUxfSUFiamd5YVM2Y2xyamh4QzlFRWg5WjAyM2hkX0s1ajlyMFlVSjFlYWR2cmtTS0JTdWRmcEt3eW9GVTItc0hBZXRqZkhROWpsY1JLemhPVHk4Q0FDN1EtQTJKeEtaWWdZN2lBYUMzTzh4aHUyTVZ4VGltdEtYajZkX19wdU1B; __Secure-ROLLOUT_TOKEN=CPjiwZXCur7QtwEQ67bv6rOuigMYzOKV-u7bigM%3D; YSC=F7ysok2Xisw; wide=1","recorded":"2025-01-04 16:44:20.862969452","filePath":"null","pinned":false},{"value":"Cookie: VISITOR_INFO1_LIVE=iE04tztzhuo; VISITOR_PRIVACY_METADATA=CgJJThIEGgAgLw%3D%3D; PREF=f6=40000080\u0026f7=100\u0026tz=Asia.Kolkata\u0026f5=30000\u0026repeat=NONE; SID=g.a000rwh71fYnWxJuaOM2icgfVE_F36J4FJYPVOQWNB7GTwE3W54LCjBNFEEpnYEKCgISZdZLfQACgYKAXoSARQSFQHGX2MitTUQYmcCTX15Z3AK2-mHPRoVAUF8yKov-9xqBEwscXk161qcDg5a0076; __Secure-1PSIDTS=sidts-CjAB7wV3sR2fxyAV1dVULTToHWbDC5lDv8VCLqMcFBvmBTPPPmtKaGeKwsxaoH8kclkQAA; __Secure-3PSIDTS=sidts-CjAB7wV3sR2fxyAV1dVULTToHWbDC5lDv8VCLqMcFBvmBTPPPmtKaGeKwsxaoH8kclkQAA; __Secure-1PSID=g.a000rwh71fYnWxJuaOM2icgfVE_F36J4FJYPVOQWNB7GTwE3W54LJLwxvTsfNG9v4vyZspIjOgACgYKAUkSARQSFQHGX2Mi6gqz-mAAeU5dbrw-Y2wMwBoVAUF8yKr0EftNu38XZaK1MwXrfiyd0076; __Secure-3PSID=g.a000rwh71fYnWxJuaOM2icgfVE_F36J4FJYPVOQWNB7GTwE3W54LTFI5s81Uhw3T52L8k0kGDwACgYKAScSARQSFQHGX2MiD2vEFA7Ucxr_LYQTFptH4xoVAUF8yKr-dq9MNyqXmA7wCkdoV91S0076; HSID=AXD4SnU6OynDpKo5m; SSID=AnXJbpv_xdeRqgJp5; APISID=39-oKwAEYQa80R2Y/Ayc7j7wE2YlugVUaF; SAPISID=Tkj1MfKPyp7HtmOW/AfitJ7pHUH0XOJm4h; __Secure-1PAPISID=Tkj1MfKPyp7HtmOW/AfitJ7pHUH0XOJm4h; __Secure-3PAPISID=Tkj1MfKPyp7HtmOW/AfitJ7pHUH0XOJm4h; SIDCC=AKEyXzUTeGJvRuJYG9aNvIWRRM5xIlsioOU5ruvZqJsqmdsfK4NajBg7YfJgR9XsGSVhGVargQ; __Secure-1PSIDCC=AKEyXzVIoYQF6HYC5U0zx3VB7dzJEQlJUXbTHCWR2FMDtF_FVIRuJdCLBWv0D54UCqpaW4sov7Y; __Secure-3PSIDCC=AKEyXzUNJN2KvdOcLqGjrqCQvo1V28kj4q6u17G_OUOFji1hE2IYiYxUo3dcE81kk2XLP7k0fWU; LOGIN_INFO=AFmmF2swRQIhAKDJ9uPrSMlUMdM_zp65VWagGDKaGArC_BCBFVIeu2YyAiAK-6_qZaepf80Ybc9cV-OCMsm22ew11JUDTfCHBcBtcQ:QUQ3MjNmejk1YWdULWRoRDRMckVvRkxKWTFNTkNFS2J3YUxfSUFiamd5YVM2Y2xyamh4QzlFRWg5WjAyM2hkX0s1ajlyMFlVSjFlYWR2cmtTS0JTdWRmcEt3eW9GVTItc0hBZXRqZkhROWpsY1JLemhPVHk4Q0FDN1EtQTJKeEtaWWdZN2lBYUMzTzh4aHUyTVZ4VGltdEtYajZkX19wdU1B; __Secure-ROLLOUT_TOKEN=CPjiwZXCur7QtwEQ67bv6rOuigMYzOKV-u7bigM%3D; YSC=F7ysok2Xisw; wide=1\n","recorded":"2025-01-04 16:29:30.108357113","filePath":"null","pinned":false},{"value":"/home/karna/.config/ytermusic/config.applied.toml\n/home/karna/.config/ytermusic/config.toml","recorded":"2025-01-04 16:29:17.442867469","filePath":"null","pinned":false},{"value":"windowrulev2 = float, class:(clipse)\nwindowrulev2 = size 622 652, class:(clipse)\n\n","recorded":"2025-01-04 16:13:46.161788596","filePath":"null","pinned":false},{"value":"bind = SUPER, V, exec, kitty --class clipse -e clipse  \n","recorded":"2025-01-04 16:12:57.130917365","filePath":"null","pinned":false},{"value":" cargo install ytermusic --git https://github.com/ccgauche/ytermusic","recorded":"2025-01-04 16:10:14.747788143","filePath":"null","pinned":false},{"value":"VISITOR_INFO1_LIVE=iE04tztzhuo; VISITOR_PRIVACY_METADATA=CgJJThIEGgAgLw%3D%3D; PREF=f6=40000080\u0026f7=100\u0026tz=Asia.Kolkata\u0026f5=30000\u0026repeat=NONE; SID=g.a000rwh71fYnWxJuaOM2icgfVE_F36J4FJYPVOQWNB7GTwE3W54LCjBNFEEpnYEKCgISZdZLfQACgYKAXoSARQSFQHGX2MitTUQYmcCTX15Z3AK2-mHPRoVAUF8yKov-9xqBEwscXk161qcDg5a0076; __Secure-1PSIDTS=sidts-CjAB7wV3sR2fxyAV1dVULTToHWbDC5lDv8VCLqMcFBvmBTPPPmtKaGeKwsxaoH8kclkQAA; __Secure-3PSIDTS=sidts-CjAB7wV3sR2fxyAV1dVULTToHWbDC5lDv8VCLqMcFBvmBTPPPmtKaGeKwsxaoH8kclkQAA; __Secure-1PSID=g.a000rwh71fYnWxJuaOM2icgfVE_F36J4FJYPVOQWNB7GTwE3W54LJLwxvTsfNG9v4vyZspIjOgACgYKAUkSARQSFQHGX2Mi6gqz-mAAeU5dbrw-Y2wMwBoVAUF8yKr0EftNu38XZaK1MwXrfiyd0076; __Secure-3PSID=g.a000rwh71fYnWxJuaOM2icgfVE_F36J4FJYPVOQWNB7GTwE3W54LTFI5s81Uhw3T52L8k0kGDwACgYKAScSARQSFQHGX2MiD2vEFA7Ucxr_LYQTFptH4xoVAUF8yKr-dq9MNyqXmA7wCkdoV91S0076; HSID=AXD4SnU6OynDpKo5m; SSID=AnXJbpv_xdeRqgJp5; APISID=39-oKwAEYQa80R2Y/Ayc7j7wE2YlugVUaF; SAPISID=Tkj1MfKPyp7HtmOW/AfitJ7pHUH0XOJm4h; __Secure-1PAPISID=Tkj1MfKPyp7HtmOW/AfitJ7pHUH0XOJm4h; __Secure-3PAPISID=Tkj1MfKPyp7HtmOW/AfitJ7pHUH0XOJm4h; SIDCC=AKEyXzUTeGJvRuJYG9aNvIWRRM5xIlsioOU5ruvZqJsqmdsfK4NajBg7YfJgR9XsGSVhGVargQ; __Secure-1PSIDCC=AKEyXzVIoYQF6HYC5U0zx3VB7dzJEQlJUXbTHCWR2FMDtF_FVIRuJdCLBWv0D54UCqpaW4sov7Y; __Secure-3PSIDCC=AKEyXzUNJN2KvdOcLqGjrqCQvo1V28kj4q6u17G_OUOFji1hE2IYiYxUo3dcE81kk2XLP7k0fWU; LOGIN_INFO=AFmmF2swRQIhAKDJ9uPrSMlUMdM_zp65VWagGDKaGArC_BCBFVIeu2YyAiAK-6_qZaepf80Ybc9cV-OCMsm22ew11JUDTfCHBcBtcQ:QUQ3MjNmejk1YWdULWRoRDRMckVvRkxKWTFNTkNFS2J3YUxfSUFiamd5YVM2Y2xyamh4QzlFRWg5WjAyM2hkX0s1ajlyMFlVSjFlYWR2cmtTS0JTdWRmcEt3eW9GVTItc0hBZXRqZkhROWpsY1JLemhPVHk4Q0FDN1EtQTJKeEtaWWdZN2lBYUMzTzh4aHUyTVZ4VGltdEtYajZkX19wdU1B; __Secure-ROLLOUT_TOKEN=CPjiwZXCur7QtwEQ67bv6rOuigMYzOKV-u7bigM%3D; YSC=F7ysok2Xisw; wide=1","recorded":"2025-01-04 16:08:19.455981510","filePath":"null","pinned":false},{"value":" Cookie: \u003ccookie\u003e\n User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36","recorded":"2025-01-04 16:03:44.263114171","filePath":"null","pinned":false},{"value":"/home/karna/.cargo/bin","recorded":"2025-01-04 15:56:53.125346771","filePath":"null","pinned":false},{"value":"sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl\nsudo chmod a+rx /usr/local/bin/youtube-dl","recorded":"2025-01-04 15:35:03.060833902","filePath":"null","pinned":false},{"value":"git submodule init\nMPV_BUILD=mpv-build/ cargo build --all --release --features build_libmpv","recorded":"2025-01-04 15:29:45.546883696","filePath":"null","pinned":false},{"value":"git clone git@github.com:sudipghimire533/ytui-music","recorded":"2025-01-04 15:29:36.801949597","filePath":"null","pinned":false},{"value":"curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh","recorded":"2025-01-04 15:29:10.361871255","filePath":"null","pinned":false},{"value":"pip install ytmdl","recorded":"2025-01-04 15:04:00.366796904","filePath":"null","pinned":false},{"value":"}\n","recorded":"2025-01-04 13:15:52.209259289","filePath":"null","pinned":false},{"value":"  ani-cli \"$1\"\n","recorded":"2025-01-04 13:15:51.856616133","filePath":"null","pinned":false},{"value":"function anime(){\n","recorded":"2025-01-04 13:15:51.506362232","filePath":"null","pinned":false},{"value":"https://meet.google.com/ddg-hmwm-knd","recorded":"2025-01-03 19:08:43.190913225","filePath":"null","pinned":false},{"value":"https://prod.liveshare.vsengsaas.visualstudio.com/join?D35F45835DC086EA2B9175E4E9D0055613D9","recorded":"2025-01-03 16:59:05.463828339","filePath":"null","pinned":false},{"value":"https://prod.liveshare.vsengsaas.visualstudio.com/join?28C99D18E0A76E6CBB8F0DB2F9BE0128B363","recorded":"2025-01-03 16:30:01.668256996","filePath":"null","pinned":false},{"value":"Chaganti-Reddy/cjpr-report-latest","recorded":"2025-01-03 16:25:38.918253988","filePath":"null","pinned":false},{"value":"/mnt/Karna/cjpr-report-latest/albert-base-v2\n/mnt/Karna/cjpr-report-latest/albert-large-v2\n/mnt/Karna/cjpr-report-latest/bert-base-uncased\n/mnt/Karna/cjpr-report-latest/bert-large-uncased\n/mnt/Karna/cjpr-report-latest/deberta\n/mnt/Karna/cjpr-report-latest/distilbert-base-uncased\n/mnt/Karna/cjpr-report-latest/Graphical Abstract\n/mnt/Karna/cjpr-report-latest/roberta-base\n/mnt/Karna/cjpr-report-latest/roberta-large\n/mnt/Karna/cjpr-report-latest/xlnet-base-cased\n/mnt/Karna/cjpr-report-latest/xlnet-large-cased\n/mnt/Karna/cjpr-report-latest/.gitignore\n/mnt/Karna/cjpr-report-latest/ALBERT_Accuracy.pdf\n/mnt/Karna/cjpr-report-latest/ALBERT_Loss.pdf\n/mnt/Karna/cjpr-report-latest/Case_Distribution.pdf\n/mnt/Karna/cjpr-report-latest/CJPR_1.bib\n/mnt/Karna/cjpr-report-latest/CJPR_Main_NEW.aux\n/mnt/Karna/cjpr-report-latest/CJPR_Main_NEW.bbl\n/mnt/Karna/cjpr-report-latest/CJPR_Main_NEW.blg\n/mnt/Karna/cjpr-report-latest/CJPR_Main_NEW.fdb_latexmk\n/mnt/Karna/cjpr-report-latest/CJPR_Main_NEW.fls\n/mnt/Karna/cjpr-report-latest/CJPR_Main_NEW.log\n/mnt/Karna/cjpr-report-latest/CJPR_Main_NEW.out\n/mnt/Karna/cjpr-report-latest/CJPR_Main_NEW.pdf\n/mnt/Karna/cjpr-report-latest/CJPR_Main_NEW.spl\n/mnt/Karna/cjpr-report-latest/CJPR_Main_NEW.tex\n/mnt/Karna/cjpr-report-latest/DeBERTa_Accuracy.pdf\n/mnt/Karna/cjpr-report-latest/DeBERTa_Loss.pdf\n/mnt/Karna/cjpr-report-latest/Docker.pdf\n/mnt/Karna/cjpr-report-latest/elsarticle.cls\n/mnt/Karna/cjpr-report-latest/elsarticle-harv.bst\n/mnt/Karna/cjpr-report-latest/ESWA-D-24-12938.pdf\n/mnt/Karna/cjpr-report-latest/framework.png\n/mnt/Karna/cjpr-report-latest/HXBR.pdf\n/mnt/Karna/cjpr-report-latest/LICENSE\n/mnt/Karna/cjpr-report-latest/methodological.txt\n/mnt/Karna/cjpr-report-latest/numcompress.sty\n/mnt/Karna/cjpr-report-latest/README.md\n/mnt/Karna/cjpr-report-latest/RFCF.pdf\n/mnt/Karna/cjpr-report-latest/RFROC.pdf\n/mnt/Karna/cjpr-report-latest/R_GPU.pdf\n/mnt/Karna/cjpr-report-latest/RoBERTa_Architecture.pdf\n/mnt/Karna/cjpr-report-latest/rotating.sty\n/mnt/Karna/cjpr-report-latest/rough.aux\n/mnt/Karna/cjpr-report-latest/rough.fdb_latexmk\n/mnt/Karna/cjpr-report-latest/rough.fls\n/mnt/Karna/cjpr-report-latest/rough.log\n/mnt/Karna/cjpr-report-latest/rough.out\n/mnt/Karna/cjpr-report-latest/rough.pdf\n/mnt/Karna/cjpr-report-latest/rough.synctex.gz\n/mnt/Karna/cjpr-report-latest/rough.tex\n/mnt/Karna/cjpr-report-latest/R_TPU.pdf\n/mnt/Karna/cjpr-report-latest/Sigmoid_Function.pdf\n/mnt/Karna/cjpr-report-latest/XGCF.pdf\n/mnt/Karna/cjpr-report-latest/XGROC.pdf","recorded":"2025-01-03 16:22:53.195869311","filePath":"null","pinned":false},{"value":"git@github.com:Chaganti-Reddy/CJPR-Report.git","recorded":"2025-01-03 16:19:46.367775127","filePath":"null","pinned":false},{"value":"https://prod.liveshare.vsengsaas.visualstudio.com/join?1620984162EA72B0C77DFE1C98677EBB7128","recorded":"2025-01-03 16:16:32.235761814","filePath":"null","pinned":false},{"value":"@startuml\nskinparam backgroundColor #f9f9f9\nskinparam arrowColor #333333\nskinparam actorBorderColor #333333\nskinparam activityBorderColor #333333\nskinparam activityBackgroundColor #ffffff\nskinparam diamondBackgroundColor #f2f2f2\nskinparam diamondBorderColor #333333\nskinparam rectangleFontColor #333333\ntitle Court Judgment Prediction and Recommendation (CJPR) - Activity Diagram\n\nstart\n:Start;\n:Data Scraping and Imputation;\n:Feature Engineering;\nnote right\n  Tokenization, Lemmatization,\n  Stop Words Removal\nend note\n\n:Data Labeling using LLM Prompt;\n:Model Selection;\n\nfork\n    :Classical Models (GPU);\nfork again\n    :Transformer Models (GPU + TPU);\nend fork\n\n:Model Training;\n:Model Evaluation and Testing;\nnote left\n  Ablation Study\nend note\n:Generate Prediction Output;\n\nif (Prediction Accepted?) then (Yes)\n    :Provide Final Prediction and Recommendations;\n    :Suggest Relevant Historical Cases;\nelse (No)\n    :Modify Hyperparameters and Retrain;\nendif\n\nstop\n@enduml","recorded":"2025-01-03 16:04:31.146218159","filePath":"null","pinned":false},{"value":"note right\n  Tokenization, Lemmatization,\n  Stop Words Removal\nend note","recorded":"2025-01-03 15:56:44.747334203","filePath":"null","pinned":false},{"value":"@startuml\nskinparam backgroundColor #f9f9f9\nskinparam arrowColor #333333\nskinparam actorBorderColor #333333\nskinparam activityBorderColor #333333\nskinparam activityBackgroundColor #ffffff\nskinparam diamondBackgroundColor #f2f2f2\nskinparam diamondBorderColor #333333\nskinparam rectangleFontColor #333333\ntitle Court Judgment Prediction and Recommendation (CJPR) - Activity Diagram\n\nstart\n:Start;\n:Data Scraping and Imputation;\n:Feature Engineering;\nnote right\n  Tokenization, Lemmatization,\n  Stop Words Removal\nend note\n\n:Data Labeling using LLM Prompt;\n:Model Selection;\n\nfork\n    :Classical Models (GPU);\nfork again\n    :Transformer Models (GPU + TPU);\nend fork\n\n:Model Training;\n:Ablation Study;\n:Model Evaluation and Testing;\n:Generate Prediction Output;\n\nif (Prediction Accepted?) then (Yes)\n    :Provide Final Prediction and Recommendations;\n    :Suggest Relevant Historical Cases;\nelse (No)\n    :Modify Hyperparameters and Retrain;\nendif\n\nstop\n@enduml","recorded":"2025-01-03 15:55:53.398334000","filePath":"null","pinned":false},{"value":"@startuml\nskinparam backgroundColor #f9f9f9\nskinparam arrowColor #333333\nskinparam actorBorderColor #333333\nskinparam activityBorderColor #333333\nskinparam activityBackgroundColor #ffffff\nskinparam diamondBackgroundColor #f2f2f2\nskinparam diamondBorderColor #333333\nskinparam rectangleFontColor #333333\ntitle Court Judgment Prediction and Recommendation (CJPR) - Activity Diagram\n\nstart\n:Start;\n:Data Collection and Scraping;\n:Data Cleaning and Imputation;\n:Feature Engineering;\nnote right\n  Tokenization, Lemmatization,\n  Stop Words Removal\nend note\n\n:Data Labeling using LLM Prompt;\n:Model Selection;\n\nfork\n    :Classical Models (GPU);\nfork again\n    :Transformer Models (GPU + TPU);\nend fork\n\n:Model Training;\n:Ablation Study;\n:Model Evaluation and Testing;\n:Generate Prediction Output;\n\nif (Prediction Accepted?) then (Yes)\n    :Provide Final Prediction and Recommendations;\n    :Suggest Relevant Historical Cases;\nelse (No)\n    :Modify Hyperparameters and Retrain;\nendif\n\nstop\n@enduml","recorded":"2025-01-03 15:54:09.781182363","filePath":"null","pinned":false},{"value":"skinparam backgroundColor #f9f9f9\nskinparam arrowColor #333333\nskinparam actorBorderColor #333333\nskinparam activityBorderColor #333333\nskinparam activityBackgroundColor #ffffff\nskinparam diamondBackgroundColor #f2f2f2\nskinparam diamondBorderColor #333333\nskinparam rectangleFontColor #333333","recorded":"2025-01-03 15:52:05.658271711","filePath":"null","pinned":false},{"value":"@startuml\ntitle Court Judgment Prediction and Recommendation (CJPR) - Activity Diagram\n\nstart\n:Start;\n:Data Collection and Scraping;\n:Data Cleaning and Imputation;\n:Feature Engineering;\n:Data Preprocessing (Tokenization, Lemmatization, Stop Words Removal);\n\n:Data Labeling using LLM Prompt;\n:Model Selection;\n\nfork\n    :Classical Models (GPU);\nfork again\n    :Transformer Models (GPU + TPU);\nend fork\n\n:Model Training;\n:Ablation Study;\n:Model Evaluation and Testing;\n:Generate Prediction Output;\n\nif (Prediction Accepted?) then (Yes)\n    :Provide Final Prediction and Recommendations;\n    :Suggest Relevant Historical Cases;\nelse (No)\n    :Modify Hyperparameters and Retrain;\nendif\n\nstop\n@enduml","recorded":"2025-01-03 15:39:40.175335538","filePath":"null","pinned":false},{"value":"Dynamic Honeypot Network","recorded":"2025-01-03 13:43:14.619230502","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/.gitignore","recorded":"2025-01-03 13:24:18.724850350","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/gitignore","recorded":"2025-01-03 13:23:41.341112811","filePath":"null","pinned":false},{"value":"Venkat Branch Created\n","recorded":"2025-01-03 12:26:43.691566431","filePath":"null","pinned":false},{"value":"/mnt/Shared/CJPR/CJPR-Report/albert-base-v2\n/mnt/Shared/CJPR/CJPR-Report/albert-large-v2\n/mnt/Shared/CJPR/CJPR-Report/bert-base-uncased\n/mnt/Shared/CJPR/CJPR-Report/bert-large-uncased\n/mnt/Shared/CJPR/CJPR-Report/deberta\n/mnt/Shared/CJPR/CJPR-Report/distilbert-base-uncased\n/mnt/Shared/CJPR/CJPR-Report/Graphical Abstract\n/mnt/Shared/CJPR/CJPR-Report/roberta-base\n/mnt/Shared/CJPR/CJPR-Report/roberta-large\n/mnt/Shared/CJPR/CJPR-Report/xlnet-base-cased\n/mnt/Shared/CJPR/CJPR-Report/xlnet-large-cased\n/mnt/Shared/CJPR/CJPR-Report/ALBERT_Accuracy.pdf\n/mnt/Shared/CJPR/CJPR-Report/ALBERT_Loss.pdf\n/mnt/Shared/CJPR/CJPR-Report/Case_Distribution.pdf\n/mnt/Shared/CJPR/CJPR-Report/CJPR_1.bib\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.aux\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.bbl\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.blg\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.fdb_latexmk\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.fls\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.log\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.out\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.pdf\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.spl\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.synctex.gz\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.tex\n/mnt/Shared/CJPR/CJPR-Report/DeBERTa_Accuracy.pdf\n/mnt/Shared/CJPR/CJPR-Report/DeBERTa_Loss.pdf\n/mnt/Shared/CJPR/CJPR-Report/Docker.pdf\n/mnt/Shared/CJPR/CJPR-Report/elsarticle.cls\n/mnt/Shared/CJPR/CJPR-Report/elsarticle-harv.bst\n/mnt/Shared/CJPR/CJPR-Report/ESWA-D-24-12938.pdf\n/mnt/Shared/CJPR/CJPR-Report/HXBR.pdf\n/mnt/Shared/CJPR/CJPR-Report/LICENSE\n/mnt/Shared/CJPR/CJPR-Report/numcompress.sty\n/mnt/Shared/CJPR/CJPR-Report/README.md\n/mnt/Shared/CJPR/CJPR-Report/RFCF.pdf\n/mnt/Shared/CJPR/CJPR-Report/RFROC.pdf\n/mnt/Shared/CJPR/CJPR-Report/R_GPU.pdf\n/mnt/Shared/CJPR/CJPR-Report/RoBERTa_Architecture.pdf\n/mnt/Shared/CJPR/CJPR-Report/rotating.sty\n/mnt/Shared/CJPR/CJPR-Report/rough.aux\n/mnt/Shared/CJPR/CJPR-Report/rough.fdb_latexmk\n/mnt/Shared/CJPR/CJPR-Report/rough.fls\n/mnt/Shared/CJPR/CJPR-Report/rough.log\n/mnt/Shared/CJPR/CJPR-Report/rough.out\n/mnt/Shared/CJPR/CJPR-Report/rough.pdf\n/mnt/Shared/CJPR/CJPR-Report/rough.synctex.gz\n/mnt/Shared/CJPR/CJPR-Report/rough.tex\n/mnt/Shared/CJPR/CJPR-Report/R_TPU.pdf\n/mnt/Shared/CJPR/CJPR-Report/Sigmoid_Function.pdf\n/mnt/Shared/CJPR/CJPR-Report/XGCF.pdf\n/mnt/Shared/CJPR/CJPR-Report/XGROC.pdf","recorded":"2025-01-03 12:15:53.920677516","filePath":"null","pinned":false},{"value":"git@github.com:Chaganti-Reddy/cjpr-report-latest.git","recorded":"2025-01-03 12:00:14.170156957","filePath":"null","pinned":false},{"value":"https://github.com/Chaganti-Reddy/cjpr-report-latest/","recorded":"2025-01-03 11:58:18.588767749","filePath":"null","pinned":false},{"value":"https://meet.google.com/wdi-oecz-jes","recorded":"2025-01-03 11:42:17.893874946","filePath":"null","pinned":false},{"value":"https://meet.google.com/wdi-oecz-jes?pli=1","recorded":"2025-01-03 11:42:11.464570865","filePath":"null","pinned":false},{"value":"Day-06 of 40 Days of Kubernetes with blog","recorded":"2025-01-03 10:59:48.962260509","filePath":"null","pinned":false},{"value":"csrftoken=K86QQ5Tyzu8JMC5yTT8wvQxvDvTk32RQ2sgVCgOZpos7tqzLXHjQV0MReCqUgeP3; cf_clearance=IT.rzrM85wMD2CYfYMI08flMGWWVlWRjlcTEJxOhjnM-1734689244-1.2.1.1-LcvPMKm0Lf09OpLicA_RfDQxmPPZ94imYfQ6fOoQ5kLkmVjrIwL.F6ydHAswmNhHVYKGvbDDu1NIv09RtRHNDbbxFEM9ZdbJVgVesThNGfR5X3GSqAT6JG7m6ktgP6tZbQ0W0YLKdwYZs0UsNl1AOg4LLXf.ddM7q.gmJAMVlXk9aNwvpfsiv8S_hmDVHFpfU4MrkbOjjfkGxKruIJ3dUgTRIgY2IQ0d6zuk0OHO41551LnTFjkyb.i.SbYT5scS89XRIXbwkdnW00EjP0.3OUqjHAJBVPhicD97Q_XstuhYMHxUkvEl378t6rm_vajWCBND5qT.Ty_5bRRGiKO5QGcCI4SoPPJlJefvRDhGwVzeA5QRK9HJiffztiYvattA; LEETCODE_SESSION=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfYXV0aF91c2VyX2lkIjoiNTg1NzE1OCIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImFsbGF1dGguYWNjb3VudC5hdXRoX2JhY2tlbmRzLkF1dGhlbnRpY2F0aW9uQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6ImIyYjRmNDExMzY0Zjg3ZDQwYTQ2ZmI3NDlhYzlkODg5YjViODhkMzYzYmRhMTkzZTc2YzZiODMzNDE5NjAzZmEiLCJzZXNzaW9uX3V1aWQiOiJjYWFmM2MwNCIsImlkIjo1ODU3MTU4LCJlbWFpbCI6ImNoYWdhbnRpdmVua2F0YXJhbWlyZWRkeTFAZ21haWwuY29tIiwidXNlcm5hbWUiOiJjaGFnYW50aXZlbmthdGFyYW1pcmVkZHkxIiwidXNlcl9zbHVnIjoiY2hhZ2FudGl2ZW5rYXRhcmFtaXJlZGR5MSIsImF2YXRhciI6Imh0dHBzOi8vYXNzZXRzLmxlZXRjb2RlLmNvbS91c2Vycy9hdmF0YXJzL2F2YXRhcl8xNjU0MTY3NDY0LnBuZyIsInJlZnJlc2hlZF9hdCI6MTczNTgxOTI4MiwiaXAiOiIxNzUuMTAxLjY4LjU1IiwiaWRlbnRpdHkiOiI2Y2IzYTcxZmUxY2RkN2Y0OTEyMTkyM2E5Mzk4MDA2ZSIsImRldmljZV93aXRoX2lwIjpbImExNTYyYWQzODk2M2MxYmVhMWE5NDcxZjFhMTU4NTc0IiwiMTc1LjEwMS42OC41NSJdLCJfc2Vzc2lvbl9leHBpcnkiOjEyMDk2MDB9.MHC0CS7zzD0TeDPCEnE8Mt47IN2DATfdxotirYwVPLw; INGRESSCOOKIE=04ea8f59b8f8291a012bc1031c29569c|8e0876c7c1464cc0ac96bc2edceabd27; c_a_u=\"Y2hhZ2FudGl2ZW5rYXRhcmFtaXJlZGR5MQ==:1tKxin:vGyV6-eewYv5z8nBH7rZL_fJ9cJMUPPvbMhhmN_Cfng\"; messages=W1siX19qc29uX21lc3NhZ2UiLDAsMjUsIlN1Y2Nlc3NmdWxseSBzaWduZWQgaW4gYXMgQ2hhZ2FudGkgUmVkZHkuIl1d:1tOZun:PESXPYNYvimt-aVGeQGE6XLV080arL3EdqbaC20VfuU; _dd_s=rum=0\u0026expire=1735820190008; ip_check=(false, \"175.101.68.55\")","recorded":"2025-01-02 17:32:07.759700547","filePath":"null","pinned":false},{"value":"cf_clearance=IT.rzrM85wMD2CYfYMI08flMGWWVlWRjlcTEJxOhjnM-1734689244-1.2.1.1-LcvPMKm0Lf09OpLicA_RfDQxmPPZ94imYfQ6fOoQ5kLkmVjrIwL.F6ydHAswmNhHVYKGvbDDu1NIv09RtRHNDbbxFEM9ZdbJVgVesThNGfR5X3GSqAT6JG7m6ktgP6tZbQ0W0YLKdwYZs0UsNl1AOg4LLXf.ddM7q.gmJAMVlXk9aNwvpfsiv8S_hmDVHFpfU4MrkbOjjfkGxKruIJ3dUgTRIgY2IQ0d6zuk0OHO41551LnTFjkyb.i.SbYT5scS89XRIXbwkdnW00EjP0.3OUqjHAJBVPhicD97Q_XstuhYMHxUkvEl378t6rm_vajWCBND5qT.Ty_5bRRGiKO5QGcCI4SoPPJlJefvRDhGwVzeA5QRK9HJiffztiYvattA; LEETCODE_SESSION=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfYXV0aF91c2VyX2lkIjoiNTg1NzE1OCIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImFsbGF1dGguYWNjb3VudC5hdXRoX2JhY2tlbmRzLkF1dGhlbnRpY2F0aW9uQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6ImIyYjRmNDExMzY0Zjg3ZDQwYTQ2ZmI3NDlhYzlkODg5YjViODhkMzYzYmRhMTkzZTc2YzZiODMzNDE5NjAzZmEiLCJzZXNzaW9uX3V1aWQiOiJjYWFmM2MwNCIsImlkIjo1ODU3MTU4LCJlbWFpbCI6ImNoYWdhbnRpdmVua2F0YXJhbWlyZWRkeTFAZ21haWwuY29tIiwidXNlcm5hbWUiOiJjaGFnYW50aXZlbmthdGFyYW1pcmVkZHkxIiwidXNlcl9zbHVnIjoiY2hhZ2FudGl2ZW5rYXRhcmFtaXJlZGR5MSIsImF2YXRhciI6Imh0dHBzOi8vYXNzZXRzLmxlZXRjb2RlLmNvbS91c2Vycy9hdmF0YXJzL2F2YXRhcl8xNjU0MTY3NDY0LnBuZyIsInJlZnJlc2hlZF9hdCI6MTczNTgxOTI4MiwiaXAiOiIxNzUuMTAxLjY4LjU1IiwiaWRlbnRpdHkiOiI2Y2IzYTcxZmUxY2RkN2Y0OTEyMTkyM2E5Mzk4MDA2ZSIsImRldmljZV93aXRoX2lwIjpbImExNTYyYWQzODk2M2MxYmVhMWE5NDcxZjFhMTU4NTc0IiwiMTc1LjEwMS42OC41NSJdLCJfc2Vzc2lvbl9leHBpcnkiOjEyMDk2MDB9.MHC0CS7zzD0TeDPCEnE8Mt47IN2DATfdxotirYwVPLw; messages=W1siX19qc29uX21lc3NhZ2UiLDAsMjUsIlN1Y2Nlc3NmdWxseSBzaWduZWQgaW4gYXMgQ2hhZ2FudGkgUmVkZHkuIl1d:1tOZun:PESXPYNYvimt-aVGeQGE6XLV080arL3EdqbaC20VfuU","recorded":"2025-01-02 17:31:51.454491691","filePath":"null","pinned":false},{"value":"bind = $mainMod SHIFT, W, exec, zen-browser --private-window\n","recorded":"2025-01-02 17:25:19.898928873","filePath":"null","pinned":false},{"value":"kubectl config get-contexts","recorded":"2025-01-02 17:13:45.721904238","filePath":"null","pinned":false},{"value":"kubectl cluster-info --context kind-test-single\n\nNot sure what to do next? 😅  Check out https://kind.sigs.k8s.io/docs/user/quick-start/\n(base) \u003e\u003e\u003e    ~  kubectl cluster-info --context kind-test-single\nKubernetes control plane is running at https://127.0.0.1:34267\nCoreDNS is running at https://127.0.0.1:34267/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n(base) \u003e\u003e\u003e    ~  ","recorded":"2025-01-02 17:13:18.942472733","filePath":"null","pinned":false},{"value":"kubectl cluster-info --context kind-test-single","recorded":"2025-01-02 17:12:19.737611026","filePath":"null","pinned":false},{"value":"Error response from daemon: conflict: unable to remove repository reference \"hello-world:latest\" (must force) - container 407722ab4431 is using its referenced image d2c94e258dcb","recorded":"2025-01-02 17:12:04.918340953","filePath":"null","pinned":false},{"value":"bind = $mainMod SHIFT, right, resizeactive, 10 0\nbind = $mainMod SHIFT, left, resizeactive, -10 0\nbind = $mainMod SHIFT, up, resizeactive, 0 -10\nbind = $mainMod SHIFT, down, resizeactive, 0 10","recorded":"2025-01-02 17:05:56.156548818","filePath":"null","pinned":false},{"value":"bind = $mainMod+CTRL, down, movewindow, d\n","recorded":"2025-01-02 17:03:31.200934372","filePath":"null","pinned":false},{"value":"bind = $mainMod+CTRL, up, layoutmsg, swapnext\nbind = $mainMod+CTRL, down, layoutmsg, swapnext prevbind","recorded":"2025-01-02 17:01:26.467445546","filePath":"null","pinned":false},{"value":"🤣","recorded":"2025-01-02 16:59:30.981869870","filePath":"null","pinned":false},{"value":"# 🌐 Kubernetes API Server: The Cluster's Gateway\n\nThe **API Server** is the heart of Kubernetes, acting as the primary interface for all cluster operations. It processes requests from users, internal components, and external systems, ensuring the cluster operates smoothly and securely.\n\n---\n\n## 🚀 Key Roles and Responsibilities\n\n1. **Central Communication Hub**:  \n   - Serves as the single point of interaction for cluster management.  \n   - Handles requests from `kubectl`, dashboards, and automated systems.  \n\n2. **Authentication and Authorization**:  \n   - Verifies who you are (**authentication**) and what you're allowed to do (**authorization**).  \n\n3. **Validation**:  \n   - Ensures incoming requests are correctly structured and logical.  \n\n4. **Persistence**:  \n   - Stores and retrieves the cluster’s state in **etcd**, maintaining a single source of truth.  \n\n5. **Cluster State Management**:  \n   - Manages the desired and current states of the cluster resources.  \n\n6. **Real-Time Monitoring**:  \n   - Supports \"watch\" requests, enabling clients to track resource changes in real time.  \n\n7. **Load Balancing and High Availability**:  \n   - Distributes requests across multiple API Servers in high-availability setups.  \n\n---\n\n## 🔄 API Server Workflow\n\n1. **Receive Request**:  \n   - Processes requests from `kubectl`, external apps, or other components.  \n\n2. **Authentication**:  \n   - Validates the requester using tokens, certificates, or plugins.  \n\n3. **Authorization**:  \n   - Checks permissions via RBAC or other authorization mechanisms.  \n\n4. **Admission Control**:  \n   - Applies policies like resource quotas and security constraints.  \n\n5. **Validation**:  \n   - Ensures requests conform to the API schema.  \n\n6. **Persistence and Update**:  \n   - Updates **etcd** for any state changes and notifies relevant components.  \n\n7. **Response**:  \n   - Returns the result (e.g., resource details or operation status).  \n\n---\n\n## ✨ Features of the API Server\n\n1. **RESTful Interface**:  \n   - Offers a RESTful API for seamless programmatic interaction.  \n\n2. **Extensibility**:  \n   - Supports **Custom Resource Definitions (CRDs)** to extend Kubernetes functionality.  \n\n3. **Scalability**:  \n   - Handles high request volumes efficiently in large clusters.  \n\n4. **Self-Healing**:  \n   - Works with controllers and the scheduler to maintain cluster health.  \n\n---\n\n## 🌟 Example Scenarios\n\n1. **Pod Deployment**:  \n   - A `kubectl apply` command sends a request to the API Server, which validates and stores the Pod's configuration in **etcd**.  \n\n2. **Cluster Monitoring**:  \n   - A monitoring system uses the \"watch\" feature to get real-time updates on resource changes.  \n\n3. **Security Enforcement**:  \n   - The API Server ensures only authorized users can modify critical resources.  \n\n---\n\n## 🛡️ Best Practices\n\n- **Monitor Traffic**: Use tools like `kube-apiserver` metrics to analyze request patterns.  \n- **Secure Communications**: Enforce TLS and authenticate using secure tokens or certificates.  \n- **Optimize RBAC**: Regularly review and refine Role-Based Access Controls.  \n- **Scale API Servers**: Add replicas in high-traffic environments for improved performance.  \n","recorded":"2025-01-02 16:53:40.991145232","filePath":"null","pinned":false},{"value":"In many nations, the life-span of people has increased significantly. Few\nindividuals argue that old-age population create hurdles to the governments while,\nothers believe that they are of an advantage to the society. In my opinion, the\nbenefits of having senior citizens outweigh its drawbacks.\nOlder people are well experienced. They must have witnessed all the highs and\nlows of life. Hence, they are wise enough to imbibe the young generations good\nmorals, values and ethics which not only moulds them to be a good person but\nalso, makes them a better person in the society. For instance, Swami\nVivekananda grew up listening to moral stories told by his grand-mother which\nhad a great impact on his success. Additionally, senior citizens tend to suffer from\nvarious health problems. This results in increased profits for the health-care\nindustry. For example, due to over population, especially the old, Telangana\nGovernment has increased the medical hospitals in the state which are now\nrunning successfully making good profits.\nOn the other hand, the Government has to invest a lot of funds for the welfare of\nelderly people because, it has to work on schemes like, monthly pensions, rations\nand generic medicines that are available at a lower cost. For instance, huge\nproportion of the governments income is spent for the well-being of senior o\ncitizens. Furthermore, issues like shortage of medical-professionals have to be\naddressed very quickly which is an expensive affair to the government. For\ninstance, during COVID-19 pandemic, Italy having highest number of old age\npopulation had to hire medical professionals from other countries to provide\nquality health care facilities.\nIn conclusion, like the two sides of a coin having over populated old-people is both\nboon and a bane. Nonetheless, in my perspective, advantages like having them\nas a moral support to the families and increased profits in the health-care industry\nis way beneficial than the odds like increased burden on government in allocation\nof funds for welfare schemes and need for medical-professionals.","recorded":"2025-01-02 16:51:18.277974679","filePath":"null","pinned":false},{"value":"- **API SERVER** : This is the main part of the Kubernetes which takes the requests and send the data or requests from users. Using this server, clients interact with the cluster.\n\t\n\t- ### Key Roles and Responsibilities of the API Server:\n\n\t\t1. **Central Communication Hub**:\n\t\t    \n\t\t    - The API Server acts as the single point of interaction for all cluster operations. It receives requests from users (e.g., `kubectl` commands), internal cluster components, and external applications.\n\t\t2. **Authentication and Authorization**:\n\t\t    \n\t\t    - Ensures that users or components making API requests are authenticated (who you are) and authorized (what you can do).\n\t\t3. **Validation**:\n\t\t    \n\t\t    - Validates API requests to ensure they conform to the required schema and logic before processing them.\n\t\t4. **Persistence**:\n\t\t    \n\t\t    - Interacts with **etcd** (the cluster's key-value store) to store and retrieve the state of the cluster. Any updates made via the API Server are persisted in `etcd`.\n\t\t5. **Cluster State Management**:\n\t\t    \n\t\t    - Serves as the source of truth for the current state of the cluster and manages desired state declarations.\n\t\t6. **Handling Watch Requests**:\n\t\t    \n\t\t    - Supports the \"watch\" mechanism for monitoring changes in resources. Clients can watch for updates (e.g., new Pods, changes to ConfigMaps) in real time.\n\t\t7. **Load Balancing and High Availability**:\n\t\t    \n\t\t    - In a multi-master setup, API Servers are load-balanced to ensure high availability and fault tolerance.\n\t\t\n\t\t### API Server Workflow:\n\t\n\t\t1. **Receive Request**:\n\t\t\t\n\t\t\t- A request arrives at the API Server (e.g., via `kubectl`, a dashboard, or an automated system).\n\t\t2. **Authentication**:\n\t\t\t\n\t\t\t- The server verifies the identity of the requester using mechanisms like tokens, certificates, or authentication plugins.\n\t\t3. **Authorization**:\n\t\t\t\n\t\t\t- Checks if the requester has permission to perform the requested action using Role-Based Access Control (RBAC) or other mechanisms.\n\t\t4. **Admission Control**:\n\t\t\t\n\t\t\t- Admission controllers validate and modify requests according to policies (e.g., resource quotas, security policies).\n\t\t5. **Validation**:\n\t\t\t\n\t\t\t- The request is checked against the API's schema to ensure it’s correctly structured.\n\t\t6. **Persistence and Update**:\n\t\t\t\n\t\t\t- If the request modifies the cluster, the API Server updates the state in **etcd** and notifies relevant components.\n\t\t7. **Response**:\n\t\t\t\n\t\t\t- Returns the result of the request (e.g., resource details, status of operation).\n\t\n\t\t### Features:\n\t\n\t\t1. **RESTful Interface**:\n\t\t\t\n\t\t\t- The Kubernetes API Server provides a RESTful interface, making it easy to interact programmatically.\n\t\t2. **Extensibility**:\n\t\t\t\n\t\t\t- Supports custom resources (Custom Resource Definitions - CRDs), enabling you to extend Kubernetes with your own APIs.\n\t\t3. **Scalability**:\n\t\t\t\n\t\t\t- Designed to handle a large number of API requests efficiently in large-scale clusters.\n\t\t4. **Self-Healing**:\n\t\t\t\n\t\t\t- Works with the controller-manager and scheduler to reconcile the cluster's current state with its desired state.","recorded":"2025-01-02 16:44:25.662234942","filePath":"null","pinned":false},{"value":"# ⚡ Kubernetes Scheduler: The Cluster Matchmaker\n\nThe **scheduler** is a vital part of Kubernetes' control plane, responsible for assigning Pods to the most suitable worker nodes. It ensures optimal resource utilization and enforces scheduling policies to maintain a balanced and efficient cluster.\n\n---\n\n## 🚀 Key Functions of the Scheduler\n\n1. **Node Selection**:  \n   - Chooses the best node for a Pod based on resource availability, constraints, and affinity rules.  \n\n2. **Resource Awareness**:  \n   - Ensures nodes have enough CPU, memory, and other resources to run the Pod.  \n\n3. **Policy Enforcement**:  \n   - Implements policies like:  \n     - **Node Affinity/Anti-Affinity**: Determines co-location or separation of Pods.  \n     - **Taints and Tolerations**: Matches Pods with compatible nodes.  \n     - **Pod Affinity/Anti-Affinity**: Governs scheduling relative to other Pods.  \n\n4. **Priority and Preemption**:  \n   - Honors Pod priorities and may preempt lower-priority Pods for higher-priority workloads.  \n\n5. **Topology Awareness**:  \n   - Considers zones and regions to ensure fault tolerance and reduce latency.  \n\n---\n\n## 🔄 Workflow of the Scheduler\n\n1. **Input**:  \n   - Identifies Pods that need scheduling (no assigned node).  \n\n2. **Filtering**:  \n   - Eliminates unsuitable nodes based on:  \n     - Node conditions (e.g., memory pressure, disk issues).  \n     - Resource requests vs. available capacity.  \n     - Policies like taints, tolerations, and affinity rules.  \n\n3. **Scoring**:  \n   - Scores remaining nodes by evaluating factors like:  \n     - Resource balance.  \n     - Pod affinity and anti-affinity preferences.  \n\n4. **Binding**:  \n   - Assigns the Pod to the highest-scoring node and updates the API Server.  \n\n---\n\n## 🛠 Extensibility\n\nThe Kubernetes Scheduler is highly customizable:  \n\n1. **Custom Schedulers**:  \n   - Create a scheduler tailored to specific needs.  \n\n2. **Scheduling Framework**:  \n   - Use plugins for custom filtering, scoring, or additional scheduling logic.  \n\n---\n\n## 🌟 Example Scenarios\n\n1. **Resource Constraints**:  \n   - A Pod requesting 4 CPUs and 8GB memory is scheduled to a node with adequate resources.  \n\n2. **Affinity Rules**:  \n   - A Pod with **Node Affinity** is placed on a preferred node (e.g., in a specific zone).  \n\n3. **Priority Handling**:  \n   - A high-priority Pod preempts a low-priority Pod when resources are scarce.  \n\n---\n\n## 🛡️ Best Practices\n\n- Monitor scheduler performance and logs for bottlenecks or errors.  \n- Use **taints** and **tolerations** to optimize resource usage.  \n- Implement **custom plugins** for unique scheduling requirements.  \n- Regularly review **Pod priorities** to ensure critical workloads are prioritized.  \n","recorded":"2025-01-02 16:43:36.385170987","filePath":"null","pinned":false},{"value":"**SCHEDULAR** : In Kubernetes, the **scheduler** is a critical component of the control plane, running on the master node. It is responsible for assigning workloads, encapsulated as **pods, to appropriate worker nodes in the cluster. The scheduler ensures that Pods are allocated to nodes that meet the requirements specified in the Pod's definition and optimizes resource utilization across the cluster.\n\t\n\t- ### Key Functions of the Kubernetes Scheduler:\n\n\t\t1. **Node Selection**:\n\t\t\t\n\t\t\t- The scheduler selects a node for a Pod based on various criteria such as resource availability (CPU, memory), constraints, and affinity/anti-affinity rules.\n\t\t2. **Resource Awareness**:\n\t\t\t\n\t\t\t- It evaluates whether a node has sufficient resources (e.g., CPU, memory) to run the Pod.\n\t\t3. **Policy Enforcement**:\n\t\t\t\n\t\t\t- It respects policies such as:\n\t\t\t\t- **Node Affinity/Anti-Affinity**: Rules that specify whether Pods should be co-located or separated.\n\t\t\t\t- **Taints and Tolerations**: Mechanisms to avoid or tolerate nodes with specific taints.\n\t\t\t\t- **Pod Affinity/Anti-Affinity**: Rules regarding how Pods should be scheduled relative to each other.\n\t\t4. **Priority and Preemption**:\n\t\t\t\n\t\t\t- It considers Pod priority classes and may preempt lower-priority Pods to make room for higher-priority ones if the cluster is running out of resources.\n\t\t5. **Topology Awareness**:\n\t\t\t\n\t\t\t- It can consider topology constraints (e.g., zones, regions) to ensure fault tolerance and optimize network latency.\n\t\n\t\t### Workflow of the Scheduler:\n\n\t\t1. **Input**:\n\t\t\t\n\t\t\t- A Pod without an assigned node.\n\t\t2. **Filtering**:\n\t\t\t\n\t\t\t- The scheduler filters nodes that cannot run the Pod based on:\n\t\t\t\t- Node conditions (e.g., out of memory, disk pressure).\n\t\t\t\t- Resource requests vs. available capacity.\n\t\t\t\t- Constraints like taints, tolerations, and affinity rules.\n\t\t3. **Scoring**:\n\t\t\t\n\t\t\t- The scheduler scores the remaining nodes based on various factors such as resource balance, affinity, and anti-affinity preferences.\n\t\t4. **Binding**:\n\t\t\t\n\t\t\t- The scheduler assigns the Pod to the node with the highest score and updates the API server with the decision.\n\n\t\t### Extensibility:\n\n\t\tKubernetes Scheduler is highly extensible:\n\t\t\n\t\t- **Custom Schedulers**: You can implement a custom scheduler if the default one doesn't meet specific requirements.\n\t\t- **Scheduling Framework**: Allows plugins to be used for custom filtering, scoring, and other scheduling logic.","recorded":"2025-01-02 16:42:54.594929562","filePath":"null","pinned":false},{"value":"**LAYMAN 😁** : Generally it is a database to store the values, but its specialty is to store in JSON(key: value) format which helps to make custom keys for custom values unlike in the RDBMS we have to specify a key for every value. ","recorded":"2025-01-02 16:40:27.717556259","filePath":"null","pinned":false},{"value":"# 🗝️ etcd: The Backbone of Kubernetes\n\n**etcd** is Kubernetes' **key-value store** and the **source of truth** for cluster data. It's distributed, highly available, and ensures data consistency.  \n\n---\n\n## 🚀 What Makes etcd Special?\n\n1. **Strong Consistency**:  \n   Uses the **Raft consensus algorithm** for consistent data across nodes.  \n\n2. **High Availability**:  \n   Distributed design ensures no single point of failure.  \n\n3. **Durable**:  \n   Data is persisted to disk, surviving restarts or failures.  \n\n4. **Low Latency**:  \n   Optimized for real-time cluster state updates.  \n\n5. **Scalable**:  \n   Handles high request volumes, perfect for large clusters.  \n\n---\n\n## 🛠 Role of etcd in Kubernetes\n\n1. **Cluster State Storage**:  \n   Stores everything: Nodes, Pods, ConfigMaps, Secrets, CRDs, etc.  \n\n2. **Leader Election**:  \n   Helps control plane components elect a leader (e.g., Scheduler).  \n\n3. **Watch Mechanism**:  \n   Enables components to react instantly to state changes.  \n\n4. **Backup \u0026 Restore**:  \n   Critical for disaster recovery.\n\n---\n\n## 🔍 How etcd Works\n\n1. **Key-Value Store**:  \n   Stores data like:  \n   - Key: `/registry/pods/default/my-pod`  \n   - Value: Pod's JSON/YAML configuration.  \n\n2. **API Server Interaction**:  \n   - API Server writes state to etcd.  \n   - Other components read from it and act.  \n\n3. **Replication \u0026 Consensus**:  \n   - Data is replicated across nodes.  \n   - Writes go to the leader; followers stay in sync.\n\n---\n\n## 🔒 Deployment Tips\n\n1. **HA Setup**:  \n   - Use 3 or 5 nodes for quorum-based fault tolerance.  \n\n2. **Secure Communication**:  \n   - Encrypt traffic with TLS.  \n\n3. **Fast Storage**:  \n   - Use SSDs for performance.  \n\n4. **Regular Backups**:  \n   - Tools: `etcdctl`, Kubernetes backup mechanisms.  \n\n---\n\n## 🌟 Best Practices\n\n- Monitor health: Disk latency, memory, and leader elections.  \n- Regular updates to avoid vulnerabilities.  \n- Secure access with strong authentication.  \n\n---\n\n# ⚙️ Kubernetes Controller Manager\n\nThe **Controller Manager** ensures Kubernetes runs like a well-oiled machine! It coordinates controllers to maintain the cluster's **desired state**.  \n\n---\n\n## 🧩 Key Roles\n\n1. **State Reconciliation**:  \n   Keeps the actual state aligned with the desired state (e.g., reschedules crashed Pods).  \n\n2. **Controller Aggregation**:  \n   Combines multiple controllers into a single process for simplicity.  \n\n3. **Resource Management**:  \n   Automates tasks like scaling, scheduling, and repairs.  \n\n---\n\n## 🛠 Controllers Overview\n\n1. **Node Controller**:  \n   Handles node health and reschedules Pods from failed nodes.  \n\n2. **Replication Controller**:  \n   Ensures the desired number of Pod replicas are running.  \n\n3. **Deployment Controller**:  \n   Manages rollouts, updates, and rollbacks of Deployments.  \n\n4. **DaemonSet Controller**:  \n   Ensures a Pod copy runs on all/specific nodes.  \n\n5. **Job Controller**:  \n   Ensures Pods complete tasks for Jobs.  \n\n6. **Endpoint Controller**:  \n   Updates IP addresses for Services.  \n\n7. **Service Account Controller**:  \n   Manages default ServiceAccounts and their secrets.  \n\n8. **Resource Quota Controller**:  \n   Enforces resource usage limits in namespaces.  \n\n9. **PV Controller**:  \n   Manages Persistent Volumes and bindings to PVCs.  \n\n---\n\n## 🔄 Workflow of the Controller Manager\n\n1. **Watch**:  \n   Monitors desired state via API Server.  \n\n2. **Reconcile**:  \n   Fixes mismatches (e.g., recreates deleted Pods).  \n\n3. **Update State**:  \n   Updates the cluster state and persists changes in etcd.  \n\n---\n\n## 🔑 Features\n\n- **Leader Election**: Ensures only one active instance in HA setups.  \n- **Modularity**: Independent controllers simplify debugging.  \n- **Extendability**: Add custom controllers for specialized tasks.  \n\n---\n\n## 🌟 Example Scenarios\n\n1. **Node Failure**:  \n   Node Controller detects a failure, marks it \"NotReady,\" and reschedules Pods.  \n\n2. **Replica Management**:  \n   If a Pod in a Deployment crashes, the Replication Controller creates a new one.  \n\n3. **Resource Binding**:  \n   The PV Controller binds a PVC to an available PV.  \n\n---\n\n## 🛠 Best Practices\n\n- **Monitor Logs**: Ensure controllers are functioning properly.  \n- **Enable Leader Election**: Avoid conflicts in HA setups.  \n- **Develop Custom Controllers**: Extend Kubernetes for unique workflows.  \n","recorded":"2025-01-02 16:39:48.955308755","filePath":"null","pinned":false},{"value":"## 🚀 What Makes etcd Special?\n\n1. **Strong Consistency**:  \n   Uses the **Raft consensus algorithm** for consistent data across nodes.  \n\n2. **High Availability**:  \n   Distributed design ensures no single point of failure.  \n\n3. **Durable**:  \n   Data is persisted to disk, surviving restarts or failures.  \n\n4. **Low Latency**:  \n   Optimized for real-time cluster state updates.  \n\n5. **Scalable**:  \n   Handles high request volumes, perfect for large clusters.  \n\n---\n\n## 🛠 Role of etcd in Kubernetes\n\n1. **Cluster State Storage**:  \n   Stores everything: Nodes, Pods, ConfigMaps, Secrets, CRDs, etc.  \n\n2. **Leader Election**:  \n   Helps control plane components elect a leader (e.g., Scheduler).  \n\n3. **Watch Mechanism**:  \n   Enables components to react instantly to state changes.  \n\n4. **Backup \u0026 Restore**:  \n   Critical for disaster recovery.\n\n---\n\n## 🔍 How etcd Works\n\n1. **Key-Value Store**:  \n   Stores data like:  \n   - Key: `/registry/pods/default/my-pod`  \n   - Value: Pod's JSON/YAML configuration.  \n\n2. **API Server Interaction**:  \n   - API Server writes state to etcd.  \n   - Other components read from it and act.  \n\n3. **Replication \u0026 Consensus**:  \n   - Data is replicated across nodes.  \n   - Writes go to the leader; followers stay in sync.\n\n---\n\n## 🔒 Deployment Tips\n\n1. **HA Setup**:  \n   - Use 3 or 5 nodes for quorum-based fault tolerance.  \n\n2. **Secure Communication**:  \n   - Encrypt traffic with TLS.  \n\n3. **Fast Storage**:  \n   - Use SSDs for performance.  \n\n4. **Regular Backups**:  \n   - Tools: `etcdctl`, Kubernetes backup mechanisms.  \n\n---\n\n## 🌟 Best Practices\n\n- Monitor health: Disk latency, memory, and leader elections.  \n- Regular updates to avoid vulnerabilities.  \n- Secure access with strong authentication.  ","recorded":"2025-01-02 16:39:41.339159090","filePath":"null","pinned":false},{"value":"- **ETCD** : **etcd** is a distributed, highly available, and consistent key-value store that serves as the **backbone** of Kubernetes' control plane. It stores the entire state and configuration of the Kubernetes cluster, making it a critical component for cluster operation and reliability.\n\n\t**LAYMAN 😁** : Generally it is a database to store the values, but its specialty is to store in JSON(key: value) format which helps to make custom keys for custom values unlike in the RDBMS we have to specify a key for every value. \n\n\t### **Key Features of etcd:**\n\n\t1. **Strong Consistency**:\n\t\t\n\t\t- etcd uses the **Raft consensus algorithm** to ensure that data is strongly consistent across all nodes in the etcd cluster.\n\t2. **High Availability**:\n\t\t\n\t\t- By running as a distributed system, etcd ensures high availability through leader election and replication. If one node fails, other nodes in the etcd cluster continue to operate.\n\t3. **Durability**:\n\t\t\n\t\t- All data in etcd is persisted to disk, ensuring durability even in the event of node restarts or failures.\n\t4. **Low Latency**:\n\t\t\n\t\t- Optimized for fast reads and writes, making it suitable for managing cluster state in real time.\n\t5. **Scalability**:\n\t\t\n\t\t- Can handle high volumes of requests, making it ideal for large-scale clusters.\n\n\t### **Role of etcd in Kubernetes:**\n\n\t1. **Cluster State Storage**:\n\t\t\n\t\t- etcd acts as the **source of truth** for the Kubernetes cluster, storing all cluster data, including:\n\t\t\t- Node and Pod information\n\t\t\t- Configurations (e.g., ConfigMaps, Secrets)\n\t\t\t- Persistent Volume Claims (PVCs)\n\t\t\t- Networking information (e.g., Services, Endpoints)\n\t\t\t- Custom Resource Definitions (CRDs)\n\t2. **Leader Election**:\n\t\t\n\t\t- Used for leader election among control plane components like the Kubernetes Controller Manager and Scheduler.\n\t3. **Watch Mechanism**:\n\t\t\n\t\t- etcd supports a **watch** feature, enabling Kubernetes components to subscribe to changes in cluster state and react in real time.\n\t4. **Backup and Restore**:\n\t\t\n\t\t- Since it stores the cluster’s state, regular backups of etcd are crucial for disaster recovery.\n\n\t### **How etcd Works in Kubernetes:**\n\n\t1. **Data Storage**:\n\t\t\n\t\t- All objects and configurations are stored as key-value pairs. For example:\n\t\t\t- Key: `/registry/pods/default/my-pod`\n\t\t\t- Value: Detailed JSON/YAML representation of the Pod's configuration.\n\t2. **Interaction with API Server**:\n\t\t\n\t\t- The API Server interacts with etcd to retrieve or persist cluster state.\n\t\t- For example:\n\t\t\t- When a new Pod is created, the API Server writes the Pod's desired state to etcd.\n\t\t\t- Other control plane components read this state and act accordingly (e.g., the scheduler assigns the Pod to a node).\n\t3. **Replication and Consensus**:\n\t\t\n\t\t- etcd replicates data across all its nodes and uses the Raft consensus algorithm to ensure consistency. Only one node acts as the leader, and write requests are sent to the leader.\n\n\t### **Deployment in Kubernetes:**\n\n\t- **Embedded in the Control Plane**:\n\t\t\n\t\t- etcd is typically deployed alongside other control plane components in a highly available configuration.\n\t\t- A typical Kubernetes HA setup includes multiple etcd instances (e.g., 3 or 5) for fault tolerance.\n\t- **Secured Communication**:\n\t\t\n\t\t- Communication between etcd and other components (like the API Server) is secured using Transport Layer Security (TLS).\n\n\t### **Best Practices for etcd:**\n\n\t1. **Regular Backups**:\n\t\t\n\t\t- Use tools like `etcdctl` or Kubernetes' built-in backup mechanisms to regularly back up etcd data.\n\t2. **Cluster Size**:\n\t\t\n\t\t- Deploy an odd number of etcd nodes (e.g., 3, 5) to ensure quorum-based consensus.\n\t3. **Monitor Health**:\n\t\t\n\t\t- Monitor metrics like disk latency, memory usage, and leader election frequency to ensure etcd is healthy.\n\t4. **Use Fast Storage**:\n\t\t\n\t\t- Store etcd data on high-performance SSDs to minimize latency and ensure reliable performance.\n\t5. **Secure Configuration**:\n\t\t\n\t\t- Use strong authentication and encryption (TLS) to secure etcd communications and data.\n\n- **CONTROLLER MANAGER**: The **Controller Manager** is a core component of the Kubernetes control plane responsible for managing various controllers that regulate the state of the cluster. Each controller is a loop that monitors the cluster's desired state (as defined in etcd via the API Server) and works to reconcile it with the actual state.\n\n\t### Key Roles of the Kubernetes Controller Manager:\n\t\n\t1. **State Reconciliation**:\n\t    \n\t    - Ensures the actual state of the cluster matches the desired state defined by users and stored in etcd. For example, if a Pod crashes, a controller ensures it's rescheduled.\n\t2. **Controller Coordination**:\n\t    \n\t    - The Controller Manager aggregates several individual controllers into a single binary, simplifying operations and resource management.\n\t3. **Resource Management**:\n\t    \n\t    - Manages resources like nodes, Pods, ReplicationControllers, and more by automating operations such as scaling, scheduling, and repairing.\n\t\n\t### **Types of Controllers in the Controller Manager:**\n\t\n\t1. **Node Controller**:\n\t    \n\t    - Monitors the health of nodes.\n\t    - Detects node failures and triggers actions like marking the node as \"NotReady\" and rescheduling Pods elsewhere.\n\t2. **Replication Controller**:\n\t    \n\t    - Ensures that the desired number of Pod replicas for a ReplicationController or ReplicaSet exists at any given time.\n\t3. **Deployment Controller**:\n\t    \n\t    - Manages the rollout and scaling of Deployments.\n\t    - Handles rolling updates and rollbacks.\n\t4. **DaemonSet Controller**:\n\t    \n\t    - Ensures that a copy of a specific Pod runs on all (or a subset of) nodes.\n\t5. **Job Controller**:\n\t    \n\t    - Manages Job objects, ensuring Pods complete their tasks successfully.\n\t6. **Endpoint Controller**:\n\t    \n\t    - Populates the Endpoints object with the IP addresses of Pods associated with a Service.\n\t7. **Service Account Controller**:\n\t    \n\t    - Creates default ServiceAccounts for namespaces and manages their secrets.\n\t8. **Resource Quota Controller**:\n\t    \n\t    - Ensures that resource usage within a namespace does not exceed predefined quotas.\n\t9. **Persistent Volume (PV) Controller**:\n\t    \n\t    - Manages the lifecycle of Persistent Volumes and their binding to Persistent Volume Claims (PVCs).\n\t\n\t### Workflow of the Controller Manager:\n\t\n\t1. **Watch the Cluster State**:\n\t    \n\t    - The Controller Manager communicates with the API Server to \"watch\" for changes in the cluster's desired state.\n\t2. **Reconcile State**:\n\t    \n\t    - If there’s a mismatch between the desired state and the actual state (e.g., a Pod is deleted or a node becomes unhealthy), the corresponding controller takes action.\n\t3. **Update Cluster State**:\n\t    \n\t    - The controller performs the necessary operations (e.g., creating a new Pod, unbinding a PVC) and updates the API Server, which then persists changes to etcd.\n\t\n\t### Deployment:\n\t\n\t- The Kubernetes Controller Manager runs as a single process but includes multiple controllers.\n\t- In High Availability (HA) setups, it runs on multiple master nodes, but **leader election** ensures only one instance is active at a time.\n\t\n\t### Features:\n\t\n\t1. **Leader Election**:\n\t    \n\t    - Ensures high availability by electing a single active Controller Manager in an HA setup.\n\t2. **Extendability**:\n\t    \n\t    - Kubernetes allows custom controllers to extend cluster functionality (e.g., for managing custom resources or workflows).\n\t3. **Modular Design**:\n\t    \n\t    - Individual controllers work independently, making the system modular and easier to debug or extend.\n\t\n\t### Example Scenarios:\n\t\n\t1. **Node Failure**:\n\t    \n\t    - The Node Controller detects that a node is down.\n\t    - It marks the node as \"NotReady\" and ensures all Pods on that node are rescheduled on healthy nodes.\n\t2. **Replica Management**:\n\t    \n\t    - A Deployment specifies that 5 replicas of a Pod should run.\n\t    - If one Pod crashes, the Replication Controller ensures a new Pod is created to maintain 5 replicas.\n\t3. **Resource Binding**:\n\t    \n\t    - A user creates a Persistent Volume Claim (PVC).\n\t    - The Persistent Volume Controller binds the PVC to an available Persistent Volume (PV).\n\t\n\t### Best Practices:\n\t\n\t1. **Monitoring**:\n\t    \n\t    - Monitor logs and metrics from the Controller Manager to ensure controllers are reconciling state effectively.\n\t2. **Leader Election**:\n\t    \n\t    - Use leader election to avoid conflicts in HA setups.\n\t3. **Custom Controllers**:\n\t    \n\t    - For specialized workflows, develop custom controllers using Kubernetes' controller-runtime library.","recorded":"2025-01-02 16:38:19.826718371","filePath":"null","pinned":false},{"value":"# 🚀 Worker Node in Kubernetes\n\nA **Worker Node** is where your **apps live and thrive** in Kubernetes! It's the powerhouse that runs Pods, hosts containers, and manages resources. Let's break it down!  \n\n---\n\n## 🧩 Key Components\n\n1. **Kubelet**:  \n   - The worker node's **brain**!  \n   - Talks to the API server, ensures Pods are running, and reports node status.  \n\n2. **Container Runtime**:  \n   - The **engine** that runs your containers.  \n   - Examples: `Docker`, `containerd`, `CRI-O`.\n\n3. **Kube-Proxy**:  \n   - The **networking wizard**!  \n   - Routes traffic to/from Pods and handles load balancing.  \n\n4. **Operating System**:  \n   - The base for all Kubernetes magic!  \n   - Popular choices: Ubuntu, CentOS, CoreOS.\n\n---\n\n## 🎯 Responsibilities\n\n1. **Host Pods**: Runs app workloads.  \n2. **Networking**: Enables inter-Pod and external communication.  \n3. **Monitor Health**: Reports resource usage \u0026 status.  \n4. **Scale \u0026 Load Balance**: Shares workloads with other nodes.\n\n---\n\n## ⚡ Workflow in Action\n\n1. **Pod Scheduling**: Scheduler assigns Pods → Kubelet sets them up.  \n2. **Run Containers**: Container runtime pulls images and launches containers.  \n3. **Allocate Resources**: Pods get CPU, memory, etc., as per their needs.  \n4. **Networking**: Kube-proxy ensures smooth traffic flow.  \n5. **Health Check**: Kubelet monitors containers and restarts them if needed.\n\n---\n\n## 🌟 Features\n\n- **Scalable**: Add more nodes to handle more workloads.  \n- **Fault-Tolerant**: Failing nodes? Pods are rescheduled elsewhere.  \n- **Resource Isolation**: Keeps Pods secure using namespaces and cgroups.  \n- **Smart Resource Management**: Efficient and stable resource usage.  \n\n---\n\n## 🛠 Deployment \u0026 Maintenance Tips\n\n- **Node Labels \u0026 Taints**: Organize workloads intelligently (e.g., GPU nodes).  \n- **Monitoring**: Use tools like Prometheus/Grafana for insights.  \n- **Upgrades**: Keep OS and Kubernetes updated for security and stability.  \n- **Autoscaling**: Ensure high availability with auto-scaling and health checks.  \n\n---\n\n## 💡 Best Practices\n\n1. **Allocate Sufficient Resources**: Avoid bottlenecks.  \n2. **Stay Updated**: Patch vulnerabilities and improve performance.  \n3. **Use Quotas**: Prevent Pods from hogging resources.  \n4. **Label Nodes**: Optimize workload distribution.  \n\n---\n\nKubernetes Worker Nodes: **Simple, Scalable, Powerful!** 🛠\n","recorded":"2025-01-02 16:35:42.324277008","filePath":"null","pinned":false},{"value":"Now this is the **MASTER NODE**, coming to **WORKER NODE**, it also contains 2 different components \n1. KUBE-PROXY\n2. KUBELET\n\n**A worker node in Kubernetes is where the actual application workloads (containers) run. It is a critical part of the Kubernetes cluster that provides the compute, memory, storage, and networking resources necessary to host and manage Pods. Each worker node communicates with the Kubernetes control plane to perform its assigned tasks.**\n\n### Key Components of a Worker Node:\n\n1. **Kubelet**:\n    \n    - The primary agent on the worker node that communicates with the Kubernetes API Server.\n    - It ensures that the Pods scheduled to the node are running as expected.\n    - Periodically reports the status of the node and its running Pods back to the control plane.\n2. **Container Runtime**:\n    \n    - Responsible for running containers. Kubernetes supports multiple container runtimes, including:\n        - Docker\n        - containerd\n        - CRI-O\n    - The runtime pulls container images, starts containers, and manages their lifecycle.\n3. **Kube-Proxy**:\n    \n    - A network proxy that manages networking rules on the node.\n    - It ensures that network traffic is correctly routed to and from Pods running on the node.\n    - Supports Services by load-balancing traffic between Pods.\n4. **Operating System**:\n    \n    - The base layer that hosts the Kubernetes components and container runtime. Common OS choices include Linux distributions like Ubuntu, CentOS, or specialized Kubernetes OSes like CoreOS.\n\n### Responsibilities of a Worker Node:\n\n1. **Hosting Pods**:\n    \n    - Worker nodes run the application Pods as scheduled by the Kubernetes Scheduler.\n2. **Networking**:\n    \n    - Ensures inter-Pod communication and manages traffic between external clients and the cluster.\n3. **Monitoring and Reporting**:\n    \n    - Continuously reports its health and resource usage (e.g., CPU, memory, disk) to the control plane.\n4. **Scaling and Load Distribution**:\n    \n    - Shares the cluster's workload with other worker nodes, allowing Kubernetes to scale applications across the nodes.\n\n### Workflow of a Worker Node:\n\n1. **Pod Scheduling**:\n    \n    - The Kubernetes Scheduler assigns Pods to the worker node.\n    - The kubelet on the node receives instructions to create the Pods.\n2. **Container Runtime**:\n    \n    - The container runtime pulls the required container images from a container registry and starts the containers.\n3. **Resource Allocation**:\n    \n    - The node's resources (CPU, memory, disk) are allocated to running containers as per the Pod specifications.\n4. **Networking**:\n    \n    - The kube-proxy configures networking rules to route traffic to and from Pods.\n    - Pods can communicate with other Pods on the same or different nodes.\n5. **Monitoring**:\n    \n    - The kubelet monitors the health of the containers and ensures they remain in the desired state. If a container fails, kubelet attempts to restart it.\n\n### Features of a Worker Node:\n\n1. **Scalability**:\n    \n    - New worker nodes can be added to the cluster to handle increased workloads.\n2. **Fault Tolerance**:\n    \n    - If a worker node fails, the control plane reschedules the affected Pods on other available nodes.\n3. **Resource Isolation**:\n    \n    - Ensures that Pods running on the same node are isolated from one another using container runtime features like namespaces and cgroups.\n4. **Flexible Resource Management**:\n    \n    - Nodes support overcommitting resources, allowing efficient utilization while maintaining stability.\n\n### Deployment and Configuration:\n\n1. **Node Registration**:\n    \n    - Each worker node registers itself with the control plane using the kubelet.\n2. **Labels and Taints**:\n    \n    - Nodes can have labels to specify their capabilities (e.g., `region=us-east`).\n    - Taints can prevent certain workloads from being scheduled on specific nodes unless the workloads tolerate those taints.\n3. **Node Pooling**:\n    \n    - In managed Kubernetes services (e.g., GKE, EKS, AKS), worker nodes are often organized into \"node pools\" for easier management.\n\n### Monitoring and Maintenance:\n\n1. **Monitoring Tools**:\n    \n    - Tools like Prometheus, Grafana, or Kubernetes Dashboard can be used to monitor node health and performance.\n2. **Resource Usage**:\n    \n    - Continuously monitor CPU, memory, and disk usage to prevent resource exhaustion.\n3. **Upgrades**:\n    \n    - Worker nodes should be upgraded to keep their Kubernetes components and OS up to date.\n4. **Fault Recovery**:\n    \n    - Use node autoscaling and health checks to ensure continuous availability in case of node failures.\n\n### Best Practices:\n\n1. **Ensure Sufficient Resources**:\n    \n    - Allocate adequate CPU, memory, and storage to handle expected workloads.\n2. **Regular Updates**:\n    \n    - Keep the node OS and Kubernetes components updated to avoid security vulnerabilities and compatibility issues.\n3. **Resource Quotas**:\n    \n    - Use resource quotas to prevent any Pod from monopolizing node resources.\n4. **Use Node Labels**:\n    \n    - Label nodes to facilitate intelligent workload scheduling (e.g., running GPU-intensive workloads on GPU nodes).","recorded":"2025-01-02 16:34:24.337855949","filePath":"null","pinned":false},{"value":"There are other commands to run and for documentation visit the official website. ","recorded":"2025-01-02 16:32:14.475006799","filePath":"null","pinned":false},{"value":"# a cluster with 3 control-plane nodes and 3 workers\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n- role: control-plane\n- role: control-plane\n- role: worker\n- role: worker\n- role: worker","recorded":"2025-01-02 16:18:18.738701743","filePath":"null","pinned":false},{"value":"https://kind.sigs.k8s.io/docs/user/quick-start/#multi-node-clusters","recorded":"2025-01-02 16:17:35.374241024","filePath":"null","pinned":false},{"value":"[[ $commands[kubectl] ]] \u0026\u0026 source \u003c(kubectl completion zsh)\n","recorded":"2025-01-02 16:16:14.695393179","filePath":"null","pinned":false},{"value":"echo '[[ $commands[kubectl] ]] \u0026\u0026 source \u003c(kubectl completion zsh)' \u003e\u003e ~/.zshrc","recorded":"2025-01-02 16:15:39.805483673","filePath":"null","pinned":false},{"value":"source \u003c(kubectl completion zsh)","recorded":"2025-01-02 16:15:23.092260167","filePath":"null","pinned":false},{"value":"source \u003c(kubectl completion zsh)  # set up autocomplete in zsh into the current shell\necho '[[ $commands[kubectl] ]] \u0026\u0026 source \u003c(kubectl completion zsh)' \u003e\u003e ~/.zshrc ","recorded":"2025-01-02 16:15:16.597438222","filePath":"null","pinned":false},{"value":"https://kubernetes.io/docs/reference/kubectl/quick-reference/","recorded":"2025-01-02 16:14:26.060577369","filePath":"null","pinned":false},{"value":"# this config file contains all config fields with comments\n# NOTE: this is not a particularly useful config file\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\n# patch the generated kubeadm config with some extra settings\nkubeadmConfigPatches:\n- |\n  apiVersion: kubelet.config.k8s.io/v1beta1\n  kind: KubeletConfiguration\n  evictionHard:\n    nodefs.available: \"0%\"\n# patch it further using a JSON 6902 patch\nkubeadmConfigPatchesJSON6902:\n- group: kubeadm.k8s.io\n  version: v1beta3\n  kind: ClusterConfiguration\n  patch: |\n    - op: add\n      path: /apiServer/certSANs/-\n      value: my-hostname\n# 1 control plane node and 3 workers\nnodes:\n# the control plane node config\n- role: control-plane\n# the three workers\n- role: worker\n- role: worker\n- role: worker\n","recorded":"2025-01-02 16:13:44.842615083","filePath":"null","pinned":false},{"value":"sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl","recorded":"2025-01-02 16:09:37.066909611","filePath":"null","pinned":false},{"value":"kubectl version --client --output=yaml","recorded":"2025-01-02 16:08:08.392742709","filePath":"null","pinned":false},{"value":"kubectl version --client","recorded":"2025-01-02 16:08:05.137223670","filePath":"null","pinned":false},{"value":"echo \"$(cat kubectl.sha256)  kubectl\" | sha256sum --check","recorded":"2025-01-02 16:07:38.958952476","filePath":"null","pinned":false},{"value":"   curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256\"","recorded":"2025-01-02 16:07:32.032294690","filePath":"null","pinned":false},{"value":"One more important note is that in CKA examination - **Below domains and all of its sub-domains are allowed to be referred in the exam**, but the thing is we have to know how to search and what to search 😂","recorded":"2025-01-02 16:05:04.245672621","filePath":"null","pinned":false},{"value":"😂","recorded":"2025-01-02 16:05:03.615158751","filePath":"null","pinned":false},{"value":"https://kubernetes.io/docs","recorded":"2025-01-02 16:04:32.051499860","filePath":"null","pinned":false},{"value":"https://kubernetes.io/blog/","recorded":"2025-01-02 16:04:22.768332841","filePath":"null","pinned":false},{"value":"\n    https://kubernetes.io/docs\n    https://kubernetes.io/blog/\n    Kubernetes cheat sheet : https://kubernetes.io/docs/reference/kubectl/quick-reference/\n","recorded":"2025-01-02 16:03:48.802762944","filePath":"null","pinned":false},{"value":"Below domains and all of its sub-domains are allowed to be referred in the exam","recorded":"2025-01-02 16:03:41.903237630","filePath":"null","pinned":false},{"value":"https://kind.sigs.k8s.io/docs/user/quick-start/#creating-a-cluster","recorded":"2025-01-02 16:00:40.912856405","filePath":"null","pinned":false},{"value":"https://kind.sigs.k8s.io/docs/user/quick-start/","recorded":"2025-01-02 15:58:50.163917958","filePath":"null","pinned":false},{"value":"## Day-05: Kubernetes Architecture","recorded":"2025-01-02 15:51:22.181433345","filePath":"null","pinned":false},{"value":"# sudo systemctl enable --now libvirtd\n","recorded":"2025-01-02 15:03:47.500294870","filePath":"null","pinned":false},{"value":"CONTAINER ID   IMAGE         COMMAND    CREATED         STATUS                     PORTS     NAMES\n407722ab4431   hello-world   \"/hello\"   3 seconds ago   Exited (0) 2 seconds ago             hello-world","recorded":"2025-01-02 14:16:58.245140410","filePath":"null","pinned":false},{"value":"elated_swartz","recorded":"2025-01-02 14:16:23.818866456","filePath":"null","pinned":false},{"value":"821c34da15e2","recorded":"2025-01-02 14:15:34.999932913","filePath":"null","pinned":false},{"value":"821c34da15e2   hello-world   \"/hello\"   31 minutes ago   Exited (0) 31 minutes ago             elated_swartz","recorded":"2025-01-02 14:15:34.140809457","filePath":"null","pinned":false},{"value":"https://docs.docker.com/get-started/docker_cheatsheet.pdf","recorded":"2025-01-02 14:12:02.771946689","filePath":"null","pinned":false},{"value":"docker-login-cli","recorded":"2025-01-02 14:06:55.880038892","filePath":"null","pinned":false},{"value":"Docker Login using Pass in CLI","recorded":"2025-01-02 14:06:48.931800265","filePath":"null","pinned":false},{"value":"Login to docker","recorded":"2025-01-02 14:05:51.618077995","filePath":"null","pinned":false},{"value":"sed -i '0,/{/s/{/{\\n\\t\"credsStore\": \"pass\",/' ~/.docker/config.json","recorded":"2025-01-02 14:05:43.684455006","filePath":"null","pinned":false},{"value":"Add credsStore to your docker config. This can be done with sed if you don't already have credStore added to your config or you can manually add \"credStore\":\"pass\" to the config.json.","recorded":"2025-01-02 14:05:39.314439221","filePath":"null","pinned":false},{"value":"pass init \"\u003cYour Name\u003e\"","recorded":"2025-01-02 14:05:26.511111328","filePath":"null","pinned":false},{"value":"Initialize pass using the newly created key","recorded":"2025-01-02 14:05:19.089749416","filePath":"null","pinned":false},{"value":"Follow prompts from gpg2 utility","recorded":"2025-01-02 14:05:10.454539668","filePath":"null","pinned":false},{"value":"gpg2 --gen-key","recorded":"2025-01-02 14:05:02.254916406","filePath":"null","pinned":false},{"value":"Create a new gpg2 key.","recorded":"2025-01-02 14:04:18.034474877","filePath":"null","pinned":false},{"value":"wget https://github.com/docker/docker-credential-helpers/releases/download/v0.6.0/docker-credential-pass-v0.6.0-amd64.tar.gz \u0026\u0026 tar -xf docker-credential-pass-v0.6.0-amd64.tar.gz \u0026\u0026 chmod +x docker-credential-pass \u0026\u0026 sudo mv docker-credential-pass /usr/local/bin/","recorded":"2025-01-02 14:04:01.415754137","filePath":"null","pinned":false},{"value":"Download, extract, make executable, and move docker-credential-pass","recorded":"2025-01-02 14:03:52.417095537","filePath":"null","pinned":false},{"value":"https://www.passwordstore.org/","recorded":"2025-01-02 14:02:59.217336582","filePath":"null","pinned":false},{"value":"https://github.com/docker/docker-credential-helpers/issues/102#issuecomment-388974092","recorded":"2025-01-02 13:58:51.594008422","filePath":"null","pinned":false},{"value":"Generally when we are using CLI version of docker preferably in linux (I use Arch BTW  )","recorded":"2025-01-02 13:57:44.284256684","filePath":"null","pinned":false},{"value":"👿","recorded":"2025-01-02 13:57:34.457681653","filePath":"null","pinned":false},{"value":"VZCL-XNKC","recorded":"2025-01-02 13:55:29.283277513","filePath":"null","pinned":false},{"value":"sed -i '0,/{/s/{/{\\n\\t\"credsStore\": \"pass\",/' ~/.docker/config.json\n","recorded":"2025-01-02 13:55:00.906519802","filePath":"null","pinned":false},{"value":"347DAB753B400EF50ED5E1103DBB25722D672CD8","recorded":"2025-01-02 13:54:43.784345526","filePath":"null","pinned":false},{"value":"wget https://github.com/docker/docker-credential-helpers/releases/download/v0.6.0/docker-credential-pass-v0.6.0-amd64.tar.gz \u0026\u0026 tar -xf docker-credential-pass-v0.6.0-amd64.tar.gz \u0026\u0026 chmod +x docker-credential-pass \u0026\u0026 sudo mv docker-credential-pass /usr/local/bin/\n","recorded":"2025-01-02 13:54:03.927072471","filePath":"null","pinned":false},{"value":"\n    Install pass\n\nsudo apt-get install pass\n\n    Download, extract, make executable, and move docker-credential-pass\n\nwget https://github.com/docker/docker-credential-helpers/releases/download/v0.6.0/docker-credential-pass-v0.6.0-amd64.tar.gz \u0026\u0026 tar -xf docker-credential-pass-v0.6.0-amd64.tar.gz \u0026\u0026 chmod +x docker-credential-pass \u0026\u0026 sudo mv docker-credential-pass /usr/local/bin/\n\n    Create a new gpg2 key.\n\ngpg2 --gen-key\n\n    Follow prompts from gpg2 utility\n\n    Initialize pass using the newly created key\n\npass init \"\u003cYour Name\u003e\"\n\n    Add credsStore to your docker config. This can be done with sed if you don't already have credStore added to your config or you can manually add \"credStore\":\"pass\" to the config.json.\n\nsed -i '0,/{/s/{/{\\n\\t\"credsStore\": \"pass\",/' ~/.docker/config.json\n\n    Login to docker\n\ndocker login\n","recorded":"2025-01-02 13:53:05.074986100","filePath":"null","pinned":false},{"value":"\"credsStore\": \"osxkeychain\"","recorded":"2025-01-02 13:49:56.858914974","filePath":"null","pinned":false},{"value":"WARNING! Your password will be stored unencrypted in /home/karna/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credential-stores","recorded":"2025-01-02 13:49:04.228423901","filePath":"null","pinned":false},{"value":"chagantivenkataramireddy1@gmail.com","recorded":"2025-01-02 13:46:14.593772226","filePath":"null","pinned":false},{"value":"sudo usermod -aG docker $USER","recorded":"2025-01-02 13:42:19.653689670","filePath":"null","pinned":false},{"value":"Day-05 of 40 Days of Kubernetes with blog (Part2)","recorded":"2025-01-02 13:26:33.395574553","filePath":"null","pinned":false},{"value":"  background: rgba(255, 77, 77, 0.15);\n","recorded":"2025-01-02 13:08:30.375560539","filePath":"null","pinned":false},{"value":"nwg-clipman ","recorded":"2024-12-31 14:12:58.361974201","filePath":"null","pinned":false},{"value":"https://www.linkedin.com/posts/karan-saxena-466b07190_if-you-dont-want-to-waste-100s-of-hours-activity-7275849490740219904-dXbC/?utm_source=share\u0026utm_medium=member_ios","recorded":"2024-12-31 14:09:12.902821408","filePath":"null","pinned":false},{"value":"/mnt/Shared/SOCTA PPT - Update.pptx","recorded":"2024-12-31 14:00:13.257255023","filePath":"null","pinned":false},{"value":"Hyderabad@2003","recorded":"2024-12-30 15:27:48.847434465","filePath":"null","pinned":false},{"value":"/run/media/karna/Files/Agnito.zip","recorded":"2024-12-30 14:54:13.090454501","filePath":"null","pinned":false}]}