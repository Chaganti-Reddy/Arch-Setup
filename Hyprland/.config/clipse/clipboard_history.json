{"clipboardHistory":[{"value":"/home/karna/dotfiles/ranger_karna/.config/ranger/plugins\n/home/karna/dotfiles/ranger_karna/.config/ranger/commands.py\n/home/karna/dotfiles/ranger_karna/.config/ranger/commands_full.py\n/home/karna/dotfiles/ranger_karna/.config/ranger/rc.conf\n/home/karna/dotfiles/ranger_karna/.config/ranger/rifle.conf","recorded":"2025-01-09 21:22:55.991979476","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/ncmpcpp_karna/.ncmpcpp/ncmpcpp-ueberzug\n/home/karna/dotfiles/ncmpcpp_karna/.ncmpcpp/bindings\n/home/karna/dotfiles/ncmpcpp_karna/.ncmpcpp/config","recorded":"2025-01-09 21:22:16.971840664","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/ncmpcpp_karna/.ncmpcpp/ncmpcpp-ueberzug\n/home/karna/dotfiles/ncmpcpp_karna/.ncmpcpp/bindings\n/home/karna/dotfiles/ncmpcpp_karna/.ncmpcpp/config\n/home/karna/dotfiles/ncmpcpp_karna/.ncmpcpp/config_bak","recorded":"2025-01-09 21:22:14.588648000","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/mpv_karna/.config/mpv/script-opts\n/home/karna/dotfiles/mpv_karna/.config/mpv/scripts\n/home/karna/dotfiles/mpv_karna/.config/mpv/.gitignore\n/home/karna/dotfiles/mpv_karna/.config/mpv/encoding.rst\n/home/karna/dotfiles/mpv_karna/.config/mpv/input.conf\n/home/karna/dotfiles/mpv_karna/.config/mpv/mplayer-input.conf\n/home/karna/dotfiles/mpv_karna/.config/mpv/mpv.conf\n/home/karna/dotfiles/mpv_karna/.config/mpv/mpvHistory.log\n/home/karna/dotfiles/mpv_karna/.config/mpv/restore-old-bindings.conf\n/home/karna/dotfiles/mpv_karna/.config/mpv/tech-overview.txt","recorded":"2025-01-09 21:21:52.100861291","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/mpd_karna/.mpd/mpd.conf","recorded":"2025-01-09 21:21:13.690999878","filePath":"null","pinned":false},{"value":"# bind = $mainMod ALT SHIFT, w, exec, hyprshot -m window\n","recorded":"2025-01-09 21:20:24.813861815","filePath":"null","pinned":false},{"value":"# bind = $mainMod ALT SHIFT, S, exec, hyprshot -m output\n","recorded":"2025-01-09 21:20:24.208769788","filePath":"null","pinned":false},{"value":"# bind = $mainMod SHIFT, S, exec, hyprshot -m region   --clipboard-only\n","recorded":"2025-01-09 21:20:23.849641992","filePath":"null","pinned":false},{"value":"# bind = $mainMod SHIFT, C, exec, hyprshot -m region  \n","recorded":"2025-01-09 21:20:23.514932731","filePath":"null","pinned":false},{"value":"\n","recorded":"2025-01-09 21:20:23.147100950","filePath":"null","pinned":false},{"value":"#\n","recorded":"2025-01-09 21:20:22.845026857","filePath":"null","pinned":false},{"value":"# bind = $mainMod ALT SHIFT, S, exec, $HOME/.config/hypr/scripts/screenshots/captureAll.sh\n","recorded":"2025-01-09 21:20:21.828639190","filePath":"null","pinned":false},{"value":"# bind = $mainMod ALT, S, exec, $HOME/.config/hypr/scripts/screenshots/ScreenRecord.sh\n","recorded":"2025-01-09 21:20:21.288754490","filePath":"null","pinned":false},{"value":"# bind = $mainMod SHIFT, S, exec, $HOME/.config/hypr/scripts/screenshots/captureArea.sh\n","recorded":"2025-01-09 21:20:20.925430725","filePath":"null","pinned":false},{"value":"# bind = $mainMod SHIFT, P, exec, wlogout \u0026\n","recorded":"2025-01-09 21:20:11.999194891","filePath":"null","pinned":false},{"value":"# bind = $mainMod ALT, F, exec, ferdium \u0026\n","recorded":"2025-01-09 21:20:09.175745746","filePath":"null","pinned":false},{"value":"bind = $mainMod ALT, W, exec, zen-browser --private-window\n","recorded":"2025-01-09 21:18:46.397743215","filePath":"null","pinned":false},{"value":"device {\n    name = razer-razer-deathadder-essential-1\n    sensitivity = -0.8\n}\n\ndevice {\n    name = razer-razer-deathadder-essential\n    sensitivity = -0.8\n}\n\ndevice {\n    name = razer-razer-deathadder-essential-keyboard-1\n    sensitivity = -0.8\n}\n\n","recorded":"2025-01-09 21:18:39.261642842","filePath":"null","pinned":false},{"value":"windowrulev2 = size 1100 700, class:(yterm)\n","recorded":"2025-01-09 21:18:21.157130952","filePath":"null","pinned":false},{"value":"windowrulev2 = float, class:(yterm)\n","recorded":"2025-01-09 21:18:20.678696491","filePath":"null","pinned":false},{"value":"bind = SUPER+SHIFT, M, exec, kitty --class yterm -e youtui\n","recorded":"2025-01-09 21:18:19.772154884","filePath":"null","pinned":false},{"value":"exec-once = fdm \u0026\n","recorded":"2025-01-09 21:18:12.607565543","filePath":"null","pinned":false},{"value":"neofetch\n","recorded":"2025-01-09 21:17:26.264752458","filePath":"null","pinned":false},{"value":"exec-once = /usr/lib/polkit-kde-authentication-agent-1 \u0026\n","recorded":"2025-01-09 21:16:56.485725192","filePath":"null","pinned":false},{"value":"exec-once = waybar -c ~/.config/hypr/waybar/config.jsonc -s ~/.config/hypr/waybar/style.css\n","recorded":"2025-01-09 21:16:42.972457392","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/hypr/hyprland.conf","recorded":"2025-01-09 21:15:57.741675844","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/kitty/frappe.conf\n/home/karna/dotfiles/Hyprland/.config/kitty/kitty.conf\n/home/karna/dotfiles/Hyprland/.config/kitty/kitty_old.conf\n/home/karna/dotfiles/Hyprland/.config/kitty/latte.conf\n/home/karna/dotfiles/Hyprland/.config/kitty/macchiato.conf\n/home/karna/dotfiles/Hyprland/.config/kitty/mocha.conf\n/home/karna/dotfiles/Hyprland/.config/kitty/nord.conf","recorded":"2025-01-09 21:13:26.159009239","filePath":"null","pinned":false},{"value":"\t\tshotarea_clipboard\n","recorded":"2025-01-09 21:07:59.194502715","filePath":"null","pinned":false},{"value":"-modi emoji -show emoji","recorded":"2025-01-09 21:07:59.182186196","filePath":"null","pinned":false},{"value":"-show calc -modi calc -no-show-match -no-sort","recorded":"2025-01-09 21:07:54.451645646","filePath":"null","pinned":false},{"value":"#! /usr/bin/env bash\n\ndir=\"$HOME/.config/rofi/launchers/type-1\"\ntheme='style-5'\n\n## Run\nrofi \\\n    -modi emoji -show emoji  \\\n    -theme ${dir}/${theme}.rasi\n","recorded":"2025-01-09 21:07:45.009240113","filePath":"null","pinned":false},{"value":"-window-title","recorded":"2025-01-09 21:05:49.531644636","filePath":"null","pinned":false},{"value":"󰞅 Emojis","recorded":"2025-01-09 21:04:51.898489920","filePath":"null","pinned":false},{"value":"typename=\"type-1\"\nthemename=\"style-5\"\n\ndir=\"$HOME/.config/rofi/launchers\"\n\nrofimoji \\\n  --selector-args=\"-theme ${dir}/${typename}/${themename}.rasi\"","recorded":"2025-01-09 21:04:10.800110220","filePath":"null","pinned":false},{"value":"dir=\"$HOME/.config/rofi/launchers/type-1\"\ntheme='style-5'\n\n## Run\nrofi \\\n    -show drun \\\n    -theme ${dir}/${theme}.rasi","recorded":"2025-01-09 21:04:07.630507577","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/rofi/files/launchers/type-1","recorded":"2025-01-09 21:02:43.967929897","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Emoji Picker\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt=\"Select Emoji\"\nmesg=\"Pick your favorite emoji\"\nif [[ \"$theme\" == *'type-1'* ]]; then\n    list_col='1'\n    list_row='5'\n    win_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n    list_col='1'\n    list_row='5'\n    win_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n    list_col='1'\n    list_row='5'\n    win_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n    list_col='5'\n    list_row='1'\n    win_width='670px'\nfi\n\n# Emoji Picker Command (using rofi-emoji)\nrofi_cmd() {\n    rofi -theme-str \"window {width: $win_width;}\" \\\n         -theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n         -theme-str 'textbox-prompt-colon {str: \"😊\";}' \\\n         -dmenu \\\n         -p \"$prompt\" \\\n         -mesg \"$mesg\" \\\n         -theme ${theme}\n}\n\n# Execute the Emoji Picker\nchosen_emoji=$(rofi_cmd)\n\n# If an emoji is chosen, copy it to the clipboard\nif [[ -n \"$chosen_emoji\" ]]; then\n    echo -n \"$chosen_emoji\" | xclip -selection clipboard\n    notify-send \"Emoji Copied\" \"$chosen_emoji\"\nelse\n    notify-send \"No Emoji Selected\" \"You didn't select any emoji.\"\nfi\n","recorded":"2025-01-09 20:59:41.787917361","filePath":"null","pinned":false},{"value":"#! /usr/bin/env bash\n\ntypename=\"type-1\"\nthemename=\"style-5\"\n\ndir=\"$HOME/.config/rofi/launchers\"\n\nrofimoji \\\n  --selector-args=\"-theme ${dir}/${typename}/${themename}.rasi\" \\\n  --prompt=\"󰞅 Emojis\"","recorded":"2025-01-09 20:59:39.888701402","filePath":"null","pinned":false},{"value":"rofi -modi emoji -show emoji ","recorded":"2025-01-09 20:59:29.899674058","filePath":"null","pinned":false},{"value":"enable_audio_bell no\n","recorded":"2025-01-09 20:58:30.724214935","filePath":"null","pinned":false},{"value":"#! /usr/bin/env bash\n\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\ndir=\"$HOME/.config/rofi/launchers\"\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\nrofimoji \\\n  --selector-args=\"-theme ${dir}/${typename}/${themename}.rasi\" \\\n  --prompt=\"󰞅 Emojis\"\n","recorded":"2025-01-09 20:57:33.489499107","filePath":"null","pinned":false},{"value":"# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}","recorded":"2025-01-09 20:56:30.677965831","filePath":"null","pinned":false},{"value":"typename=\"type-1\"\nthemename=\"style-5\"","recorded":"2025-01-09 20:56:17.406591523","filePath":"null","pinned":false},{"value":"source \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"","recorded":"2025-01-09 20:56:13.871630652","filePath":"null","pinned":false},{"value":"adi1090x","recorded":"2025-01-09 20:54:55.004723084","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Volume\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Volume Info\nmixer=\"`amixer info Master | grep 'Mixer name' | cut -d':' -f2 | tr -d \\',' '`\"\nspeaker=\"`amixer get Master | tail -n1 | awk -F ' ' '{print $5}' | tr -d '[]'`\"\nmic=\"`amixer get Capture | tail -n1 | awk -F ' ' '{print $5}' | tr -d '[]'`\"\n\nactive=\"\"\nurgent=\"\"\n\n# Speaker Info\namixer get Master | grep '\\[on\\]' \u0026\u003e/dev/null\nif [[ \"$?\" == 0 ]]; then\n\tactive=\"-a 1\"\n\tstext='Unmute'\n\tsicon=''\nelse\n\turgent=\"-u 1\"\n\tstext='Mute'\n\tsicon=''\nfi\n\n# Microphone Info\namixer get Capture | grep '\\[on\\]' \u0026\u003e/dev/null\nif [[ \"$?\" == 0 ]]; then\n    [ -n \"$active\" ] \u0026\u0026 active+=\",3\" || active=\"-a 3\"\n\tmtext='Unmute'\n\tmicon=''\nelse\n    [ -n \"$urgent\" ] \u0026\u0026 urgent+=\",3\" || urgent=\"-u 3\"\n\tmtext='Mute'\n\tmicon=''\nfi\n\n# Theme Elements\nprompt=\"S:$stext, M:$mtext\"\nmesg=\"$mixer - Speaker: $speaker, Mic: $mic\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n\tlist_col='5'\n\tlist_row='1'\n\twin_width='670px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Increase\"\n\toption_2=\"$sicon $stext\"\n\toption_3=\" Decrese\"\n\toption_4=\"$micon $mtext\"\n\toption_5=\" Settings\"\nelse\n\toption_1=\"\"\n\toption_2=\"$sicon\"\n\toption_3=\"\"\n\toption_4=\"$micon\"\n\toption_5=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t${active} ${urgent} \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\\n$option_5\" | rofi_cmd\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tamixer -Mq set Master,0 5%+ unmute\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tamixer set Master toggle\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tamixer -Mq set Master,0 5%- unmute\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tamixer set Capture toggle\n\telif [[ \"$1\" == '--opt5' ]]; then\n\t\tpavucontrol\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\n    $option_5)\n\t\trun_cmd --opt5\n        ;;\nesac\n\n","recorded":"2025-01-09 20:54:01.810638770","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Volume\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Volume Info (using wpctl for PipeWire)\nmixer=\"`wpctl status | grep -oP '(?\u003c=Sink ).*(?= \\[)'`\"\nspeaker=\"`wpctl status | grep -oP '(?\u003c=Sink ).*' | awk '{print $2}'`\"\nmic=\"`wpctl status | grep -oP '(?\u003c=Source ).*(?= \\[)'`\"\n\nactive=\"\"\nurgent=\"\"\n\n# Speaker Info\nwpctl status | grep 'Mute: no' \u0026\u003e/dev/null\nif [[ \"$?\" == 0 ]]; then\n\tactive=\"-a 1\"\n\tstext='Unmute'\n\tsicon=''\nelse\n\turgent=\"-u 1\"\n\tstext='Mute'\n\tsicon=''\nfi\n\n# Microphone Info\nwpctl status | grep 'Source mute: no' \u0026\u003e/dev/null\nif [[ \"$?\" == 0 ]]; then\n    [ -n \"$active\" ] \u0026\u0026 active+=\",3\" || active=\"-a 3\"\n\tmtext='Unmute'\n\tmicon=''\nelse\n    [ -n \"$urgent\" ] \u0026\u0026 urgent+=\",3\" || urgent=\"-u 3\"\n\tmtext='Mute'\n\tmicon=''\nfi\n\n# Theme Elements\nprompt=\"S:$stext, M:$mtext\"\nmesg=\"Mixer: $mixer, Speaker: $speaker, Mic: $mic\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n\tlist_col='5'\n\tlist_row='1'\n\twin_width='670px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Increase\"\n\toption_2=\"$sicon $stext\"\n\toption_3=\" Decrese\"\n\toption_4=\"$micon $mtext\"\n\toption_5=\" Settings\"\nelse\n\toption_1=\"\"\n\toption_2=\"$sicon\"\n\toption_3=\"\"\n\toption_4=\"$micon\"\n\toption_5=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t${active} ${urgent} \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\\n$option_5\" | rofi_cmd\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\twpctl set-volume @DEFAULT_SINK@ +5%\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\twpctl set-mute @DEFAULT_SINK@ toggle\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\twpctl set-volume @DEFAULT_SINK@ -5%\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\twpctl set-mute @DEFAULT_SOURCE@ toggle\n\telif [[ \"$1\" == '--opt5' ]]; then\n\t\tpavucontrol\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\n    $option_5)\n\t\trun_cmd --opt5\n        ;;\nesac\n","recorded":"2025-01-09 20:54:01.793100647","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Volume\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Volume Info (using wpctl for PipeWire)\nmixer=\"`wpctl status | grep -oP '(?\u003c=Sink ).*(?= \\[)'`\"\nspeaker=\"`wpctl status | grep -oP '(?\u003c=Sink ).*' | awk '{print $2}'`\"\nmic=\"`wpctl status | grep -oP '(?\u003c=Source ).*(?= \\[)'`\"\n\nactive=\"\"\nurgent=\"\"\n\n# Speaker Info\nwpctl status | grep 'Mute: no' \u0026\u003e/dev/null\nif [[ \"$?\" == 0 ]]; then\n\tactive=\"-a 1\"\n\tstext='Unmute'\n\tsicon=''\nelse\n\turgent=\"-u 1\"\n\tstext='Mute'\n\tsicon=''\nfi\n\n# Microphone Info\nwpctl status | grep 'Source mute: no' \u0026\u003e/dev/null\nif [[ \"$?\" == 0 ]]; then\n    [ -n \"$active\" ] \u0026\u0026 active+=\",3\" || active=\"-a 3\"\n\tmtext='Unmute'\n\tmicon=''\nelse\n    [ -n \"$urgent\" ] \u0026\u0026 urgent+=\",3\" || urgent=\"-u 3\"\n\tmtext='Mute'\n\tmicon=''\nfi\n\n# Theme Elements\nprompt=\"S:$stext, M:$mtext\"\nmesg=\"Mixer: $mixer, Speaker: $speaker, Mic: $mic\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n\tlist_col='5'\n\tlist_row='1'\n\twin_width='670px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Increase\"\n\toption_2=\"$sicon $stext\"\n\toption_3=\" Decrese\"\n\toption_4=\"$micon $mtext\"\n\toption_5=\" Settings\"\nelse\n\toption_1=\"\"\n\toption_2=\"$sicon\"\n\toption_3=\"\"\n\toption_4=\"$micon\"\n\toption_5=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t${active} ${urgent} \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\\n$option_5\" | rofi_cmd\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\twpctl set-volume @DEFAULT_AUDIO_SINK@ +5%\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\twpctl set-mute @DEFAULT_AUDIO_SINK@ toggle\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\twpctl set-volume @DEFAULT_AUDIO_SINK@ -5%\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\twpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle\n\telif [[ \"$1\" == '--opt5' ]]; then\n\t\tpavucontrol\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\n    $option_5)\n\t\trun_cmd --opt5\n        ;;\nesac\n","recorded":"2025-01-09 20:53:59.066084933","filePath":"null","pinned":false},{"value":"@DEFAULT_AUDIO_SOURCE@","recorded":"2025-01-09 20:53:34.478512527","filePath":"null","pinned":false},{"value":"@DEFAULT_AUDIO_SINK@","recorded":"2025-01-09 20:53:26.208133838","filePath":"null","pinned":false},{"value":"QP","recorded":"2025-01-09 20:50:23.369799152","filePath":"null","pinned":false},{"value":"","recorded":"2025-01-09 20:49:26.069406769","filePath":"null","pinned":false},{"value":"📋","recorded":"2025-01-09 20:49:19.364249730","filePath":"null","pinned":false},{"value":"📷 258693-840014339.png","recorded":"2025-01-09 20:48:35.978329556","filePath":"/home/karna/.config/clipse/tmp_files/258693-840014339.png","pinned":false},{"value":"\t\tshotnow\n","recorded":"2025-01-09 20:47:46.209094641","filePath":"null","pinned":false},{"value":"","recorded":"2025-01-09 20:47:27.193676434","filePath":"null","pinned":false},{"value":"📋\"","recorded":"2025-01-09 20:47:09.511028232","filePath":"null","pinned":false},{"value":"\toption_5=\"📋\"\n","recorded":"2025-01-09 20:47:01.191011638","filePath":"null","pinned":false},{"value":"option_5=\"📋 Capture Region to Clipboard\"","recorded":"2025-01-09 20:46:35.234882639","filePath":"null","pinned":false},{"value":"  win_height='720px'\n","recorded":"2025-01-09 20:45:14.791472721","filePath":"null","pinned":false},{"value":"dir=\"$HOME/Pictures/Screenshots\"\n","recorded":"2025-01-09 20:42:28.120320202","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + Hyprshot)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Region to Clipboard\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot directory\ndir=\"${HYPRSHOT_DIR:-${XDG_PICTURES_DIR:-$HOME/Pictures}}/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Take shots using hyprshot\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\thyprshot -m output -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotwin() {\n\tfile=\"$dir/window_${timestamp}.png\"\n\thyprshot -m window -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\thyprshot -m region -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea_clipboard() {\n\thyprshot -m region --clipboard-only\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshotarea_clipboard\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:42:19.089799445","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot + Screen Recording (Hyprland + grim + slurp + wf-recorder)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot/Recording'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Start Screen Recording (with Audio)\"\n\toption_4=\" Start Screen Recording (No Audio)\"\n\toption_5=\"📋 Capture Region to Clipboard\"\n\toption_6=\"❌ Exit Recording\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\n\toption_5=\"📋\"\n\toption_6=\"❌\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\\n$option_5\\n$option_6\" | rofi_cmd\n}\n\n# Screenshot/Recording directory (ensuring screenshots are saved in ~/Pictures/Screenshots)\ndir=\"$HOME/Pictures/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Take screenshots using grim and slurp\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\tgrim \"$file\"\n\tdunstify -u low --replace=699 \"Screenshot Saved: $file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\tgrim -g \"$(slurp)\" \"$file\"\n\tdunstify -u low --replace=699 \"Screenshot Saved: $file\"\n}\n\nshotarea_clipboard() {\n\tgrim -g \"$(slurp)\" - | wl-copy\n\tdunstify -u low --replace=699 \"Screenshot copied to clipboard.\"\n}\n\n# Start Screen Recording with Audio\nstart_recording_with_audio() {\n\tfile=\"$dir/screen_recording_${timestamp}.mp4\"\n\twf-recorder -f \"$file\" --audio \u0026\n\tdunstify -u low --replace=699 \"Recording Started (with Audio)\"\n}\n\n# Start Screen Recording without Audio\nstart_recording_no_audio() {\n\tfile=\"$dir/screen_recording_${timestamp}.mp4\"\n\twf-recorder -f \"$file\" \u0026\n\tdunstify -u low --replace=699 \"Recording Started (No Audio)\"\n}\n\n# Exit Screen Recording (kill the wf-recorder process)\nexit_recording() {\n\tkillall wf-recorder\n\tdunstify -u low --replace=699 \"Recording Stopped\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tstart_recording_with_audio\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tstart_recording_no_audio\n\telif [[ \"$1\" == '--opt5' ]]; then\n\t\tshotarea_clipboard\n\telif [[ \"$1\" == '--opt6' ]]; then\n\t\texit_recording\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\n    $option_5)\n\t\trun_cmd --opt5\n        ;;\n    $option_6)\n\t\trun_cmd --opt6\n        ;;\nesac\n","recorded":"2025-01-09 20:42:19.075204040","filePath":"null","pinned":false},{"value":"wlogout hyprshot-git","recorded":"2025-01-09 20:41:59.682966863","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot + Screen Recording (Hyprland + grim + slurp + wf-recorder)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot/Recording'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='720px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Start Screen Recording (with Audio)\"\n\toption_4=\" Start Screen Recording (No Audio)\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot/Recording directory (ensuring screenshots are saved in ~/Pictures/Screenshots)\ndir=\"$HOME/Pictures/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Take screenshots using grim and slurp\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\tgrim \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\tgrim -g \"$(slurp)\" \"$file\"\n}\n\nshotarea_clipboard() {\n\tgrim -g \"$(slurp)\" - | wl-copy\n}\n\n# Start Screen Recording with Audio\nstart_recording_with_audio() {\n\tfile=\"$dir/screen_recording_${timestamp}.mp4\"\n\twf-recorder -f \"$file\" --audio\n}\n\n# Start Screen Recording without Audio\nstart_recording_no_audio() {\n\tfile=\"$dir/screen_recording_${timestamp}.mp4\"\n\twf-recorder -f \"$file\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tstart_recording_with_audio\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tstart_recording_no_audio\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:40:46.502903051","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + grim + slurp)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Region to Clipboard\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot directory (ensuring screenshots are saved in ~/Pictures/Screenshots)\ndir=\"$HOME/Pictures/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Take shots using grim and slurp\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\tgrim \"$file\"\n}\n\nshotwin() {\n\t# We are not using any window selector in this case\n\t# We can either use slurp or simply use grim to capture the full screen\n\tfile=\"$dir/window_${timestamp}.png\"\n\tgrim -g \"$(slurp)\" \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\tgrim -g \"$(slurp)\" \"$file\"\n}\n\nshotarea_clipboard() {\n\tgrim -g \"$(slurp)\" - | wl-copy\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshotarea_clipboard\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:37:38.680115171","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot + Screen Recording (Hyprland + grim + slurp + wf-recorder)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot/Recording'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Start Screen Recording (with Audio)\"\n\toption_4=\" Start Screen Recording (No Audio)\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot/Recording directory (ensuring screenshots are saved in ~/Pictures/Screenshots)\ndir=\"$HOME/Pictures/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Take screenshots using grim and slurp\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\tgrim \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\tgrim -g \"$(slurp)\" \"$file\"\n}\n\nshotarea_clipboard() {\n\tgrim -g \"$(slurp)\" - | wl-copy\n}\n\n# Start Screen Recording with Audio\nstart_recording_with_audio() {\n\tfile=\"$dir/screen_recording_${timestamp}.mp4\"\n\twf-recorder -f \"$file\" --audio\n}\n\n# Start Screen Recording without Audio\nstart_recording_no_audio() {\n\tfile=\"$dir/screen_recording_${timestamp}.mp4\"\n\twf-recorder -f \"$file\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tstart_recording_with_audio\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tstart_recording_no_audio\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:37:37.004332659","filePath":"null","pinned":false},{"value":"📷 384921-185217656.png","recorded":"2025-01-09 20:37:20.380755814","filePath":"/home/karna/.config/clipse/tmp_files/384921-185217656.png","pinned":false},{"value":"📷 243127-641864022.png","recorded":"2025-01-09 20:37:12.773703462","filePath":"/home/karna/.config/clipse/tmp_files/243127-641864022.png","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + grim + slurp)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Region to Clipboard\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot directory (fixing trailing slash issue)\ndir=\"${HYPRSHOT_DIR:-${XDG_PICTURES_DIR:-$HOME/Pictures}}\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Take shots using grim and slurp\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\tgrim \"$file\"\n}\n\nshotwin() {\n\t# We are not using any window selector in this case\n\t# We can either use slurp or simply use grim to capture the full screen\n\tfile=\"$dir/window_${timestamp}.png\"\n\tgrim -g \"$(slurp)\" \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\tgrim -g \"$(slurp)\" \"$file\"\n}\n\nshotarea_clipboard() {\n\tgrim -g \"$(slurp)\" - | wl-copy\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshotarea_clipboard\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:36:04.552330037","filePath":"null","pinned":false},{"value":"📷 262910-087064613.png","recorded":"2025-01-09 20:35:26.217715610","filePath":"/home/karna/.config/clipse/tmp_files/262910-087064613.png","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + Hyprshot)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Region to Clipboard\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot directory (fixing trailing slash issue)\ndir=\"${HYPRSHOT_DIR:-${XDG_PICTURES_DIR:-$HOME/Pictures}}\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Take shots using hyprshot\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\thyprshot -m output -o \"$file\"\n}\n\nshotwin() {\n\tfile=\"$dir/window_${timestamp}.png\"\n\thyprshot -m window -o \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\thyprshot -m region -o \"$file\"\n}\n\nshotarea_clipboard() {\n\thyprshot -m region --clipboard-only\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshotarea_clipboard\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:34:53.390342699","filePath":"null","pinned":false},{"value":"📷 741525-440471723.png","recorded":"2025-01-09 20:33:41.790448541","filePath":"/home/karna/.config/clipse/tmp_files/741525-440471723.png","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + Hyprshot)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Region to Clipboard\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot directory (fixed path to avoid nesting issues)\ndir=\"${HYPRSHOT_DIR:-${XDG_PICTURES_DIR:-$HOME/Pictures}}\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Take shots using hyprshot\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\thyprshot -m output -o \"$file\"\n}\n\nshotwin() {\n\tfile=\"$dir/window_${timestamp}.png\"\n\thyprshot -m window -o \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\thyprshot -m region -o \"$file\"\n}\n\nshotarea_clipboard() {\n\thyprshot -m region --clipboard-only\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshotarea_clipboard\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:33:36.197767216","filePath":"null","pinned":false},{"value":"📷 197922-835880593.png","recorded":"2025-01-09 20:33:03.939544983","filePath":"/home/karna/.config/clipse/tmp_files/197922-835880593.png","pinned":false},{"value":"/home/karna/Pictures/desktop_2025-01-09-20-31-24.png/","recorded":"2025-01-09 20:31:49.428893474","filePath":"null","pinned":false},{"value":"📷 256085-504811519.png","recorded":"2025-01-09 20:31:37.627246775","filePath":"/home/karna/.config/clipse/tmp_files/256085-504811519.png","pinned":false},{"value":"📷 717886-099970901.png","recorded":"2025-01-09 20:31:27.440020132","filePath":"/home/karna/.config/clipse/tmp_files/717886-099970901.png","pinned":false},{"value":"/home/karna/Pictures/Screenshots/desktop_2025-01-09-20-29-25.png/","recorded":"2025-01-09 20:29:50.674570466","filePath":"null","pinned":false},{"value":"📷 708884-336252678.png","recorded":"2025-01-09 20:29:27.671446001","filePath":"/home/karna/.config/clipse/tmp_files/708884-336252678.png","pinned":false},{"value":"\tdunstify -u low --replace=699 \"Screenshot copied to clipboard.\"\n","recorded":"2025-01-09 20:29:21.631939660","filePath":"null","pinned":false},{"value":"# Notify about screenshot\nnotify_view() {\n\tif [[ -e \"$1\" ]]; then\n\t\tdunstify -u low --replace=699 \"Screenshot Saved: $1\"\n\telse\n\t\tdunstify -u low --replace=699 \"Screenshot Failed.\"\n\tfi\n}\n\n","recorded":"2025-01-09 20:29:18.534989030","filePath":"null","pinned":false},{"value":"elif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='120px'","recorded":"2025-01-09 20:28:57.140008713","filePath":"null","pinned":false},{"value":"dir=\"${HYPRSHOT_DIR:-${XDG_PICTURES_DIR:-$HOME/Pictures}}/Screenshots\"\n","recorded":"2025-01-09 20:28:20.889737623","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + Hyprshot)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Region to Clipboard\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot directory\ndir=\"${HYPRSHOT_DIR:-${XDG_PICTURES_DIR:-$HOME/Pictures}}/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Notify about screenshot\nnotify_view() {\n\tif [[ -e \"$1\" ]]; then\n\t\tdunstify -u low --replace=699 \"Screenshot Saved: $1\"\n\telse\n\t\tdunstify -u low --replace=699 \"Screenshot Failed.\"\n\tfi\n}\n\n# Take shots using hyprshot\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\thyprshot -m output -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotwin() {\n\tfile=\"$dir/window_${timestamp}.png\"\n\thyprshot -m window -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\thyprshot -m region -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea_clipboard() {\n\thyprshot -m region --clipboard-only\n\tdunstify -u low --replace=699 \"Screenshot copied to clipboard.\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshotarea_clipboard\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:28:09.047147681","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + Hyprshot)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Region to Clipboard\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot directory\ndir=\"$HOME/Pictures/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Notify about screenshot\nnotify_view() {\n\tif [[ -e \"$1\" ]]; then\n\t\techo \"Screenshot Saved: $1\"\n\telse\n\t\techo \"Screenshot Failed.\"\n\tfi\n}\n\n# Take shots using hyprshot\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\thyprshot -m output -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotwin() {\n\tfile=\"$dir/window_${timestamp}.png\"\n\thyprshot -m window -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\thyprshot -m region -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea_clipboard() {\n\thyprshot -m region --clipboard-only\n\techo \"Screenshot copied to clipboard.\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshotarea_clipboard\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:28:07.472091001","filePath":"null","pinned":false},{"value":"XDG_PICTURES_DIR","recorded":"2025-01-09 20:27:51.622064455","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + Hyprshot)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Region to Clipboard\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot directory\ndir=\"$HOME/Pictures/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Notify about screenshot\nnotify_view() {\n\tif [[ -e \"$1\" ]]; then\n\t\tdunstify -u low --replace=699 \"Screenshot Saved: $1\"\n\telse\n\t\tdunstify -u low --replace=699 \"Screenshot Failed.\"\n\tfi\n}\n\n# Take shots using hyprshot\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\thyprshot -m output -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotwin() {\n\tfile=\"$dir/window_${timestamp}.png\"\n\thyprshot -m window -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\thyprshot -m region -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea_clipboard() {\n\thyprshot -m region --clipboard-only\n\tdunstify -u low --replace=699 \"Screenshot copied to clipboard.\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshotarea_clipboard\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:26:08.816714119","filePath":"null","pinned":false},{"value":"📷 662475-777365518.png","recorded":"2025-01-09 20:25:54.093317589","filePath":"/home/karna/.config/clipse/tmp_files/662475-777365518.png","pinned":false},{"value":"📷 342557-230357549.png","recorded":"2025-01-09 20:24:33.409153771","filePath":"/home/karna/.config/clipse/tmp_files/342557-230357549.png","pinned":false},{"value":"📷 250917-822781865.png","recorded":"2025-01-09 20:24:23.969732758","filePath":"/home/karna/.config/clipse/tmp_files/250917-822781865.png","pinned":false},{"value":"📷 314700-460305210.png","recorded":"2025-01-09 20:24:04.620940119","filePath":"/home/karna/.config/clipse/tmp_files/314700-460305210.png","pinned":false},{"value":"📷 640411-232092509.png","recorded":"2025-01-09 20:23:57.561541696","filePath":"/home/karna/.config/clipse/tmp_files/640411-232092509.png","pinned":false},{"value":"\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ]]; then\n\tlist_col='4'\n\tlist_row='1'\n\twin_width='670px'","recorded":"2025-01-09 20:23:51.051633102","filePath":"null","pinned":false},{"value":"\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='120px'","recorded":"2025-01-09 20:23:40.182650260","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n\tlist_col='5'\n\tlist_row='1'\n\twin_width='670px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Area\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture in 5s\"\n\toption_5=\" Capture in 10s\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\n\toption_5=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\\n$option_5\" | rofi_cmd\n}\n\n# Screenshot\ntime=`date +%Y-%m-%d-%H-%M-%S`\ngeometry=`xrandr | grep 'current' | head -n1 | cut -d',' -f2 | tr -d '[:blank:],current'`\ndir=\"$HOME/Pictures/Screenshots\"\nfile=\"Screenshot_${time}_${geometry}.png\"\n\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# notify and view screenshot\nnotify_view() {\n\tnotify_cmd_shot='dunstify -u low --replace=699'\n\t${notify_cmd_shot} \"Copied to clipboard.\"\n\tviewnior ${dir}/\"$file\"\n\tif [[ -e \"$dir/$file\" ]]; then\n\t\t${notify_cmd_shot} \"Screenshot Saved.\"\n\telse\n\t\t${notify_cmd_shot} \"Screenshot Deleted.\"\n\tfi\n}\n\n# Copy screenshot to clipboard\ncopy_shot () {\n\ttee \"$file\" | xclip -selection clipboard -t image/png\n}\n\n# countdown\ncountdown () {\n\tfor sec in `seq $1 -1 1`; do\n\t\tdunstify -t 1000 --replace=699 \"Taking shot in : $sec\"\n\t\tsleep 1\n\tdone\n}\n\n# take shots\nshotnow () {\n\tcd ${dir} \u0026\u0026 sleep 0.5 \u0026\u0026 maim -u -f png | copy_shot\n\tnotify_view\n}\n\nshot5 () {\n\tcountdown '5'\n\tsleep 1 \u0026\u0026 cd ${dir} \u0026\u0026 maim -u -f png | copy_shot\n\tnotify_view\n}\n\nshot10 () {\n\tcountdown '10'\n\tsleep 1 \u0026\u0026 cd ${dir} \u0026\u0026 maim -u -f png | copy_shot\n\tnotify_view\n}\n\nshotwin () {\n\tcd ${dir} \u0026\u0026 maim -u -f png -i `xdotool getactivewindow` | copy_shot\n\tnotify_view\n}\n\nshotarea () {\n\tcd ${dir} \u0026\u0026 maim -u -f png -s -b 2 -c 0.35,0.55,0.85,0.25 -l | copy_shot\n\tnotify_view\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshot5\n\telif [[ \"$1\" == '--opt5' ]]; then\n\t\tshot10\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\n    $option_5)\n\t\trun_cmd --opt5\n        ;;\nesac\n\n\n","recorded":"2025-01-09 20:23:34.866166906","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + Hyprshot)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ]]; then\n\tlist_col='5'\n\tlist_row='1'\n\twin_width='670px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Desktop in 5s\"\n\toption_5=\" Capture Desktop in 10s\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\n\toption_5=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\\n$option_5\" | rofi_cmd\n}\n\n# Screenshot directory\ndir=\"${HYPRSHOT_DIR:-${XDG_PICTURES_DIR:-$HOME/Pictures}}/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Notify about screenshot\nnotify_view() {\n\tif [[ -e \"$1\" ]]; then\n\t\tdunstify -u low --replace=699 \"Screenshot Saved: $1\"\n\telse\n\t\tdunstify -u low --replace=699 \"Screenshot Failed.\"\n\tfi\n}\n\n# Take shots using hyprshot\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\thyprshot -m output -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshot5() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\tsleep 5 \u0026\u0026 hyprshot -m output -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshot10() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\tsleep 10 \u0026\u0026 hyprshot -m output -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotwin() {\n\tfile=\"$dir/window_${timestamp}.png\"\n\thyprshot -m window -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\thyprshot -m region -o \"$file\"\n\tnotify_view \"$file\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshot5\n\telif [[ \"$1\" == '--opt5' ]]; then\n\t\tshot10\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\n    $option_5)\n\t\trun_cmd --opt5\n        ;;\nesac\n","recorded":"2025-01-09 20:23:34.853476661","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + Hyprshot)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ]]; then\n\tlist_col='4'\n\tlist_row='1'\n\twin_width='670px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Region to Clipboard\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Screenshot directory\ndir=\"${HYPRSHOT_DIR:-${XDG_PICTURES_DIR:-$HOME/Pictures}}/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Notify about screenshot\nnotify_view() {\n\tif [[ -e \"$1\" ]]; then\n\t\tdunstify -u low --replace=699 \"Screenshot Saved: $1\"\n\telse\n\t\tdunstify -u low --replace=699 \"Screenshot Failed.\"\n\tfi\n}\n\n# Take shots using hyprshot\ntimestamp=$(date +%Y-%m-%d-%H-%M-%S)\n\nshotnow() {\n\tfile=\"$dir/desktop_${timestamp}.png\"\n\thyprshot -m output -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotwin() {\n\tfile=\"$dir/window_${timestamp}.png\"\n\thyprshot -m window -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/region_${timestamp}.png\"\n\thyprshot -m region -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea_clipboard() {\n\thyprshot -m region --clipboard-only\n\tdunstify -u low --replace=699 \"Screenshot copied to clipboard.\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshotarea_clipboard\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 20:23:33.137335114","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + Hyprshot)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n\tlist_col='5'\n\tlist_row='1'\n\twin_width='670px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Region\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture Desktop in 5s\"\n\toption_5=\" Capture Desktop in 10s\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\n\toption_5=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\\n$option_5\" | rofi_cmd\n}\n\n# Screenshot directory\ndir=\"${HYPRSHOT_DIR:-${XDG_PICTURES_DIR:-$HOME/Pictures}}/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Notify about screenshot\nnotify_view() {\n\tif [[ -e \"$1\" ]]; then\n\t\tdunstify -u low --replace=699 \"Screenshot Saved: $1\"\n\telse\n\t\tdunstify -u low --replace=699 \"Screenshot Failed.\"\n\tfi\n}\n\n# Take shots using hyprshot\nshotnow() {\n\thyprshot -m output -o \"$dir/desktop_$(date +%Y-%m-%d-%H-%M-%S).png\"\n\tnotify_view \"$dir/desktop_$(date +%Y-%m-%d-%H-%M-%S).png\"\n}\n\nshot5() {\n\tsleep 5 \u0026\u0026 hyprshot -m output -o \"$dir/desktop_$(date +%Y-%m-%d-%H-%M-%S).png\"\n\tnotify_view \"$dir/desktop_$(date +%Y-%m-%d-%H-%M-%S).png\"\n}\n\nshot10() {\n\tsleep 10 \u0026\u0026 hyprshot -m output -o \"$dir/desktop_$(date +%Y-%m-%d-%H-%M-%S).png\"\n\tnotify_view \"$dir/desktop_$(date +%Y-%m-%d-%H-%M-%S).png\"\n}\n\nshotwin() {\n\thyprshot -m window -o \"$dir/window_$(date +%Y-%m-%d-%H-%M-%S).png\"\n\tnotify_view \"$dir/window_$(date +%Y-%m-%d-%H-%M-%S).png\"\n}\n\nshotarea() {\n\thyprshot -m region -o \"$dir/region_$(date +%Y-%m-%d-%H-%M-%S).png\"\n\tnotify_view \"$dir/region_$(date +%Y-%m-%d-%H-%M-%S).png\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshot5\n\telif [[ \"$1\" == '--opt5' ]]; then\n\t\tshot10\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\n    $option_5)\n\t\trun_cmd --opt5\n        ;;\nesac\n","recorded":"2025-01-09 20:22:11.352018689","filePath":"null","pinned":false},{"value":"📷 671572-788470229.png","recorded":"2025-01-09 20:21:22.113543243","filePath":"/home/karna/.config/clipse/tmp_files/671572-788470229.png","pinned":false},{"value":"📷 250813-589098909.png","recorded":"2025-01-09 20:20:59.743571146","filePath":"/home/karna/.config/clipse/tmp_files/250813-589098909.png","pinned":false},{"value":"📷 253600-201513828.png","recorded":"2025-01-09 20:20:47.359887923","filePath":"/home/karna/.config/clipse/tmp_files/253600-201513828.png","pinned":false},{"value":"📷 287695-237662202.png","recorded":"2025-01-09 20:20:39.405842234","filePath":"/home/karna/.config/clipse/tmp_files/287695-237662202.png","pinned":false},{"value":"📷 305616-703301338.png","recorded":"2025-01-09 20:20:32.847254056","filePath":"/home/karna/.config/clipse/tmp_files/305616-703301338.png","pinned":false},{"value":"📷 645125-880093476.png","recorded":"2025-01-09 20:19:51.221113905","filePath":"/home/karna/.config/clipse/tmp_files/645125-880093476.png","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot (Hyprland + Hyprshot)\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n\tlist_col='5'\n\tlist_row='1'\n\twin_width='670px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Area\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture in 5s\"\n\toption_5=\" Capture in 10s\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\n\toption_5=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\\n$option_5\" | rofi_cmd\n}\n\n# Screenshot directory\ndir=\"$HOME/Pictures/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Notify about screenshot\nnotify_view() {\n\tif [[ -e \"$1\" ]]; then\n\t\tdunstify -u low --replace=699 \"Screenshot Saved: $1\"\n\telse\n\t\tdunstify -u low --replace=699 \"Screenshot Failed.\"\n\tfi\n}\n\n# Take shots using hyprshot\nshotnow() {\n\tfile=\"$dir/desktop_$(date +%Y-%m-%d-%H-%M-%S).png\"\n\thyprshot full -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshot5() {\n\tfile=\"$dir/desktop_$(date +%Y-%m-%d-%H-%M-%S).png\"\n\tsleep 5 \u0026\u0026 hyprshot full -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshot10() {\n\tfile=\"$dir/desktop_$(date +%Y-%m-%d-%H-%M-%S).png\"\n\tsleep 10 \u0026\u0026 hyprshot full -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotwin() {\n\tfile=\"$dir/window_$(date +%Y-%m-%d-%H-%M-%S).png\"\n\thyprshot window -o \"$file\"\n\tnotify_view \"$file\"\n}\n\nshotarea() {\n\tfile=\"$dir/area_$(date +%Y-%m-%d-%H-%M-%S).png\"\n\thyprshot select -o \"$file\"\n\tnotify_view \"$file\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshot5\n\telif [[ \"$1\" == '--opt5' ]]; then\n\t\tshot10\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\n    $option_5)\n\t\trun_cmd --opt5\n        ;;\nesac\n","recorded":"2025-01-09 20:19:43.314656106","filePath":"null","pinned":false},{"value":"# Hyprshot\n\n[![AUR version](https://img.shields.io/aur/version/hyprshot?label=hyprshot\u0026logo=arch+linux)](https://aur.archlinux.org/packages/hyprshot)\n[![AUR git version](https://img.shields.io/aur/version/hyprshot-git?label=hyprshot-git\u0026logo=arch+linux)](https://aur.archlinux.org/packages/hyprshot-git)\n[![GitHub release (latest by date)](https://img.shields.io/github/v/release/Gustash/hyprshot?color=green\u0026logo=github)](https://github.com/Gustash/hyprshot/releases/latest)\n\nHyprshot is an utility to easily take screenshot in Hyprland using your mouse.\n\nIt allows taking screenshots of windows, regions and monitors which are saved to a folder of your choosing and copied to your clipboard.\n\n## Installation\n\n### ALT Sisyphus\n\n```shell\n# apt-get install hyprshot\n```\n\n### Arch Linux\n\nYou can install the [hyprshot](https://aur.archlinux.org/packages/hyprshot) package in AUR.\n\n### Gentoo Linux\n\nActivate wayland overlay as described in [README](https://github.com/bsd-ac/wayland-desktop#activate-overlay-via-eselect-repository), allow **~amd64** keyword and then install it:\n\n```bash\n# emerge --ask gui-apps/hyprshot\n```\n\n### Dependencies\n\n- hyprland (this one should be obvious)\n- jq (to parse and manipulate json)\n- grim (to take the screenshot)\n- slurp (to select what to screenshot)\n- wl-clipboard (to copy screenshot to clipboard)\n- libnotify (to get notified when a screenshot is saved)\n\n### Optional Dependencies\n\n- hyprpicker (to freeze the screen contents with the `--freeze` flag)\n\n### Manual\n\nTo install manually, simply clone this repo and copy/symlink the `hyprshot` script to a folder in your `PATH`:\n\n```bash\n$ git clone https://github.com/Gustash/hyprshot.git Hyprshot\n$ ln -s $(pwd)/Hyprshot/hyprshot $HOME/.local/bin\n$ chmod +x Hyprshot/hyprshot\n```\n\n## Usage\n\nYou can get help on how to use hyprshot by executing:\n\n```bash\n$ hyprshot -h\n```\n\nThe simplest usage of Hyprshot is executing it with one of the available modes.\n\nFor example, to screenshot an open window:\n\n```bash\n$ hyprshot -m window\n```\n\nYou can also skip saving the screenshot to a file, copying it only to the clipboard:\n\n```bash\n$ hyprshot -m output --clipboard-only\n```\n\n## Configuration\n\nYou can add the various modes as keybindings in your Hyprland config like so:\n\n```\n# ~/.config/hypr/hyprland.conf\n\n...\n\n# Screenshot a window\nbind = $mainMod, PRINT, exec, hyprshot -m window\n# Screenshot a monitor\nbind = , PRINT, exec, hyprshot -m output\n# Screenshot a region\nbind = $shiftMod, PRINT, exec, hyprshot -m region\n```\n\nThis would allow you to:\n\nTake a screenshot of a window by using `MOD + PrintScr`\n\nTake a screenshot of a monitor by using `PrintScr`\n\nTake a screenshot of a region by using `MOD + Shift + PrintScr`\n\n## Save location\n\nYou can choose which directory Hyprshot will save screenshots in by setting an `HYPRSHOT_DIR` environment variable to your preferred location.\n\nIf `HYPRSHOT_DIR` is not set, Hyprshot will attempt to save to `XDG_PICTURES_DIR` and will further fallback to your home directory if this is also not available.","recorded":"2025-01-09 20:16:26.219035056","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt='Screenshot'\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n\tlist_col='5'\n\tlist_row='1'\n\twin_width='670px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Desktop\"\n\toption_2=\" Capture Area\"\n\toption_3=\" Capture Window\"\n\toption_4=\" Capture in 5s\"\n\toption_5=\" Capture in 10s\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\n\toption_5=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\\n$option_5\" | rofi_cmd\n}\n\n# Screenshot directory and file\ntime=`date +%Y-%m-%d-%H-%M-%S`\ndir=\"$HOME/Pictures/Screenshots\"\nfile=\"Screenshot_${time}.png\"\n\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Notify and view screenshot\nnotify_view() {\n\tif [[ -e \"$dir/$file\" ]]; then\n\t\tdunstify -u low --replace=699 \"Screenshot Saved: $dir/$file\"\n\telse\n\t\tdunstify -u low --replace=699 \"Screenshot Deleted.\"\n\tfi\n}\n\n# Copy screenshot to clipboard\ncopy_shot() {\n\tgrim - | wl-copy --type image/png\n}\n\n# Countdown\ncountdown() {\n\tfor sec in $(seq $1 -1 1); do\n\t\tdunstify -t 1000 --replace=699 \"Taking shot in : $sec\"\n\t\tsleep 1\n\tdone\n}\n\n# Take shots\nshotnow() {\n\tgrim \"$dir/$file\"\n\tcopy_shot\n\tnotify_view\n}\n\nshot5() {\n\tcountdown 5\n\tgrim \"$dir/$file\"\n\tcopy_shot\n\tnotify_view\n}\n\nshot10() {\n\tcountdown 10\n\tgrim \"$dir/$file\"\n\tcopy_shot\n\tnotify_view\n}\n\nshotwin() {\n\tgrim -g \"$(slurp)\" \"$dir/$file\"\n\tcopy_shot\n\tnotify_view\n}\n\nshotarea() {\n\tgrim -g \"$(slurp)\" \"$dir/$file\"\n\tcopy_shot\n\tnotify_view\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tshotnow\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tshotarea\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tshotwin\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tshot5\n\telif [[ \"$1\" == '--opt5' ]]; then\n\t\tshot10\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\n    $option_5)\n\t\trun_cmd --opt5\n        ;;\nesac\n","recorded":"2025-01-09 20:15:27.958504703","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# if not create the directory\nif [ ! -d \"$HOME/Pictures/Screenshots\" ]; then\n    mkdir -p \"$HOME/Pictures/Screenshots\"\nfi\n\n# Take the screenshot and save it\nname=$(date +'%m%d%S.png')\ngrim -g \"$(slurp)\" \"$HOME/Pictures/Screenshots/$name\"\n\n# Ask to save the file through rofi\nif [ -x \"$(command -v rofi)\" ]; then\n    save_confirmation=$(echo -e \"No\\nYes\" | rofi -dmenu -i -p \"Save the screenshot?\")\n    if [ \"$save_confirmation\" != \"Yes\" ]; then\n        rm \"$HOME/Pictures/Screenshots/$name\"  # Remove the screenshot if not saving\n        dunstify -u low -t 2000 \"Screenshot discarded.\"\n        exit 0  # Exit if not saving\n    fi\nfi\n\n# Ask to rename the file through rofi\nif [ -x \"$(command -v rofi)\" ]; then\n    new_name=$(echo -e \"No\\nYes\" | rofi -dmenu -i -p \"Rename the file?\")\n    if [ \"$new_name\" = \"Yes\" ]; then\n        new_name=$(echo -e \"\" | rofi -dmenu -i -p \"Enter new name\")\n        mv \"$HOME/Pictures/Screenshots/$name\" \"$HOME/Pictures/Screenshots/$new_name.png\"\n        name=$new_name.png\n    fi\nfi\n\n# Notify user\ndunstify -u low -t 2000 \"Screenshot saved to $HOME/Pictures/Screenshots/$name\"\n\n# Copy the screenshot to clipboard\nif [ -x \"$(command -v rofi)\" ]; then\n    if [ \"$(echo -e \"No\\nYes\" | rofi -dmenu -i -p \"Copy to clipboard?\")\" = \"Yes\" ]; then\n        clipse -a \"$HOME/Pictures/Screenshots/$name\"\n        dunstify -u low -t 2000 \"Screenshot copied to clipboard\"\n    fi\nfi\n\n# Give an option to open the screenshot in sxiv\nif [ -x \"$(command -v rofi)\" ]; then\n    if [ \"$(echo -e \"No\\nYes\" | rofi -dmenu -i -p \"Open with sxiv?\")\" = \"Yes\" ]; then\n        sxiv \"$HOME/Pictures/Screenshots/$name\"\n    fi\nfi\n","recorded":"2025-01-09 20:13:36.161339453","filePath":"null","pinned":false},{"value":"  \"pulseaudio\": {\n    \"scroll-step\": 1,\n    \"format\": \"{icon} {volume}%\", \n    \"format-muted\": \"婢 Muted\",\n    \"format-icons\": {\n      \"default\": [\"\", \"\", \"\"]\n    },\n    \"states\": {\n      \"warning\": 85,\n    },\n    \"scroll-step\": 1,\n    \"on-click\": \"pactl set-sink-mute @DEFAULT_SINK@ toggle\",\n    \"tooltip\": false,\n  },","recorded":"2025-01-09 20:13:36.149421622","filePath":"null","pinned":false},{"value":"    \"pulseaudio\": {\n        \"format\": \"{icon} {volume}%\",\n        \"format-muted\": \"婢 {volume}%\",\n        \"format-icons\": {\n            \"headphone\": \"󰋋\",\n            \"default\": [\"󰖀\", \"󰕾\"]\n        },\n        \"on-click\": \"~/.config/hypr/waybar/scripts/volumecontrol.sh -o m\",\n        \"on-click-right\": \"pavucontrol -t 3\",\n        \"on-scroll-up\": \"~/.config/hypr/waybar/scripts/volumecontrol.sh -o i\",\n        \"on-scroll-down\": \"~/.config/hypr/waybar/scripts/volumecontrol.sh -o d\",\n        \"scroll-step\": 10,\n        \"min-length\": 6,\n        \"max-length\": 6\n    },","recorded":"2025-01-09 20:13:32.989192241","filePath":"null","pinned":false},{"value":"  \"pulseaudio\": {\n    \"scroll-step\": 1,\n    \"format\": \"\u003cspan foreground='#d08770'\u003e{icon}\u003c/span\u003e {volume}%\", \n    \"format-muted\": \"婢 Muted\",\n    \"format-icons\": {\n      \"default\": [\"\", \"\", \"\"]\n    },\n    \"states\": {\n      \"warning\": 85,\n    },\n    \"scroll-step\": 1,\n    \"on-click\": \"pactl set-sink-mute @DEFAULT_SINK@ toggle\",\n    \"tooltip\": false,\n  },","recorded":"2025-01-09 20:11:51.608044574","filePath":"null","pinned":false},{"value":"📷 531649-733957396.png","recorded":"2025-01-09 20:07:07.981806533","filePath":"/home/karna/.config/clipse/tmp_files/531649-733957396.png","pinned":false},{"value":"📷 421024-681387992.png","recorded":"2025-01-09 20:06:55.856410897","filePath":"/home/karna/.config/clipse/tmp_files/421024-681387992.png","pinned":false},{"value":"📷 559240-976107505.png","recorded":"2025-01-09 20:06:43.241145400","filePath":"/home/karna/.config/clipse/tmp_files/559240-976107505.png","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Screenshot\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Theme Elements\nprompt=\"Screenshot\"\nmesg=\"$HOME/Pictures/Screenshots\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='5'\n\twin_width='520px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n\tlist_col='5'\n\tlist_row='1'\n\twin_width='670px'\nfi\n\n# Options\nlayout=$(grep 'USE_ICON' \"${theme}\" | cut -d'=' -f2)\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Capture Area\"\n\toption_2=\" Save Screenshot\"\n\toption_3=\" Rename Screenshot\"\n\toption_4=\" Copy to Clipboard\"\n\toption_5=\" Open with sxiv\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\n\toption_5=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\\n$option_5\" | rofi_cmd\n}\n\n# Screenshot directory\ndir=\"$HOME/Pictures/Screenshots\"\nif [[ ! -d \"$dir\" ]]; then\n\tmkdir -p \"$dir\"\nfi\n\n# Functions\ntake_screenshot() {\n\tname=$(date +'%m%d%S.png')\n\tgrim -g \"$(slurp)\" \"$dir/$name\"\n\tdunstify -u low -t 2000 \"Screenshot saved: $name\"\n}\n\nrename_screenshot() {\n\tlatest=$(ls -Art \"$dir\" | tail -n 1)\n\tif [[ -z \"$latest\" ]]; then\n\t\tdunstify -u low -t 2000 \"No screenshot to rename!\"\n\t\treturn\n\tfi\n\tnew_name=$(rofi -dmenu -i -p \"Enter new name\" \u003c\u003c\u003c \"\")\n\tif [[ -n \"$new_name\" ]]; then\n\t\tmv \"$dir/$latest\" \"$dir/$new_name.png\"\n\t\tdunstify -u low -t 2000 \"Renamed to $new_name.png\"\n\tfi\n}\n\ncopy_to_clipboard() {\n\tlatest=$(ls -Art \"$dir\" | tail -n 1)\n\tif [[ -z \"$latest\" ]]; then\n\t\tdunstify -u low -t 2000 \"No screenshot to copy!\"\n\t\treturn\n\tfi\n\tclipse -a \"$dir/$latest\"\n\tdunstify -u low -t 2000 \"Screenshot copied to clipboard.\"\n}\n\nopen_with_sxiv() {\n\tlatest=$(ls -Art \"$dir\" | tail -n 1)\n\tif [[ -z \"$latest\" ]]; then\n\t\tdunstify -u low -t 2000 \"No screenshot to open!\"\n\t\treturn\n\tfi\n\tsxiv \"$dir/$latest\"\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\ttake_screenshot\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\ttake_screenshot\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\trename_screenshot\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\tcopy_to_clipboard\n\telif [[ \"$1\" == '--opt5' ]]; then\n\t\topen_with_sxiv\n\tfi\n}\n\n# Actions\nchosen=$(run_rofi)\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\n    $option_5)\n\t\trun_cmd --opt5\n        ;;\nesac\n","recorded":"2025-01-09 20:00:50.489595213","filePath":"null","pinned":false},{"value":"polkit-kde-agent","recorded":"2025-01-09 19:54:54.665308614","filePath":"null","pinned":false},{"value":"s%                                                                                         (base) \u003e\u003e\u003e    ~  sudo pacman -S polkit-kde-agent","recorded":"2025-01-09 19:54:52.899814704","filePath":"null","pinned":false},{"value":"olki","recorded":"2025-01-09 19:54:51.949681647","filePath":"null","pinned":false},{"value":"/usr/lib/polkit-kde-authentication-agent-1","recorded":"2025-01-09 18:42:19.218303412","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Brightness\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Brightness Info\nbacklight=\"$(printf \"%.0f\\n\" `light -G`)\"\ncard=\"`light -L | grep 'backlight' | head -n1 | cut -d'/' -f3`\"\n\nif [[ $backlight -ge 0 ]] \u0026\u0026 [[ $backlight -le 29 ]]; then\n    level=\"Low\"\nelif [[ $backlight -ge 30 ]] \u0026\u0026 [[ $backlight -le 49 ]]; then\n    level=\"Optimal\"\nelif [[ $backlight -ge 50 ]] \u0026\u0026 [[ $backlight -le 69 ]]; then\n    level=\"High\"\nelif [[ $backlight -ge 70 ]] \u0026\u0026 [[ $backlight -le 100 ]]; then\n    level=\"Peak\"\nfi\n\n# Theme Elements\nprompt=\"${backlight}%\"\nmesg=\"Device: ${card}, Level: $level\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='425px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n\tlist_col='4'\n\tlist_row='1'\n\twin_width='550px'\nfi\n\n# Options\nlayout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Increase\"\n\toption_2=\" Optimal\"\n\toption_3=\" Decrease\"\n\toption_4=\" Settings\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tbrightnessctl s 5%+\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tbrightnessctl s 50\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tbrightnessctl s 5%-\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\txfce4-power-manager-settings\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 18:41:07.607239934","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n## Author  : Aditya Shakya (adi1090x)\n## Github  : @adi1090x\n#\n## Applets : Brightness\n\n# Import Current Theme\nsource \"$HOME\"/.config/rofi/applets/shared/theme.bash\ntheme=\"$type/$style\"\n\n# Brightness Info\nbacklight=$(brightnessctl g)  # Get current brightness\nmax_brightness=$(brightnessctl m)  # Get max brightness\npercentage=$((backlight * 100 / max_brightness))\n\nif [[ $percentage -ge 0 ]] \u0026\u0026 [[ $percentage -le 29 ]]; then\n    level=\"Low\"\nelif [[ $percentage -ge 30 ]] \u0026\u0026 [[ $percentage -le 49 ]]; then\n    level=\"Optimal\"\nelif [[ $percentage -ge 50 ]] \u0026\u0026 [[ $percentage -le 69 ]]; then\n    level=\"High\"\nelif [[ $percentage -ge 70 ]] \u0026\u0026 [[ $percentage -le 100 ]]; then\n    level=\"Peak\"\nfi\n\n# Theme Elements\nprompt=\"${percentage}%\"\nmesg=\"Brightness: ${percentage}%, Level: $level\"\n\nif [[ \"$theme\" == *'type-1'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='400px'\nelif [[ \"$theme\" == *'type-3'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='120px'\nelif [[ \"$theme\" == *'type-5'* ]]; then\n\tlist_col='1'\n\tlist_row='4'\n\twin_width='425px'\nelif [[ ( \"$theme\" == *'type-2'* ) || ( \"$theme\" == *'type-4'* ) ]]; then\n\tlist_col='4'\n\tlist_row='1'\n\twin_width='550px'\nfi\n\n# Options\nlayout=$(grep 'USE_ICON' \"${theme}\" | cut -d'=' -f2)\nif [[ \"$layout\" == 'NO' ]]; then\n\toption_1=\" Increase\"\n\toption_2=\" Optimal\"\n\toption_3=\" Decrease\"\n\toption_4=\" Settings\"\nelse\n\toption_1=\"\"\n\toption_2=\"\"\n\toption_3=\"\"\n\toption_4=\"\"\nfi\n\n# Rofi CMD\nrofi_cmd() {\n\trofi -theme-str \"window {width: $win_width;}\" \\\n\t\t-theme-str \"listview {columns: $list_col; lines: $list_row;}\" \\\n\t\t-theme-str 'textbox-prompt-colon {str: \"\";}' \\\n\t\t-dmenu \\\n\t\t-p \"$prompt\" \\\n\t\t-mesg \"$mesg\" \\\n\t\t-markup-rows \\\n\t\t-theme ${theme}\n}\n\n# Pass variables to rofi dmenu\nrun_rofi() {\n\techo -e \"$option_1\\n$option_2\\n$option_3\\n$option_4\" | rofi_cmd\n}\n\n# Execute Command\nrun_cmd() {\n\tif [[ \"$1\" == '--opt1' ]]; then\n\t\tbrightnessctl s 5%+\n\telif [[ \"$1\" == '--opt2' ]]; then\n\t\tbrightnessctl s 50%\n\telif [[ \"$1\" == '--opt3' ]]; then\n\t\tbrightnessctl s 5%-\n\telif [[ \"$1\" == '--opt4' ]]; then\n\t\txfce4-power-manager-settings\n\tfi\n}\n\n# Actions\nchosen=\"$(run_rofi)\"\ncase ${chosen} in\n    $option_1)\n\t\trun_cmd --opt1\n        ;;\n    $option_2)\n\t\trun_cmd --opt2\n        ;;\n    $option_3)\n\t\trun_cmd --opt3\n        ;;\n    $option_4)\n\t\trun_cmd --opt4\n        ;;\nesac\n","recorded":"2025-01-09 18:41:06.516837354","filePath":"null","pinned":false},{"value":"\n  specific value\t\tExample: 500\n  percentage value\t\tExample: 50%\n  specific delta\t\tExample: 50- or +10\n  percentage delta\t\tExample: 50%- or +10%\n\n(base) \u003e\u003e\u003e    ~  brightnessctl s 25","recorded":"2025-01-09 18:37:57.906069748","filePath":"null","pinned":false},{"value":"brightnessctl s 25","recorded":"2025-01-09 18:37:42.732635639","filePath":"null","pinned":false},{"value":"rightnessc","recorded":"2025-01-09 18:37:40.798786225","filePath":"null","pinned":false},{"value":"/usr/lib/polkit-kde-authentication-agent-1 \n\n\n\n\n\n\n","recorded":"2025-01-09 18:37:06.038755485","filePath":"null","pinned":false},{"value":"/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1","recorded":"2025-01-09 18:34:44.073344085","filePath":"null","pinned":false},{"value":"exec-once = systemctl --user start plasma-polkit-agent\n","recorded":"2025-01-09 18:34:38.503255175","filePath":"null","pinned":false},{"value":"powertop","recorded":"2025-01-09 18:30:26.890397898","filePath":"null","pinned":false},{"value":"xfce4-power-manager","recorded":"2025-01-09 18:27:51.543417845","filePath":"null","pinned":false},{"value":"powermenu_t4","recorded":"2025-01-09 18:25:24.847534321","filePath":"null","pinned":false},{"value":"acpi","recorded":"2025-01-09 18:23:25.711635696","filePath":"null","pinned":false},{"value":"Hyprland\n(base) \u003e\u003e\u003e    ~  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","recorded":"2025-01-09 18:20:41.157113030","filePath":"null","pinned":false},{"value":"paru -S --noconfirm wlrobs-hg hyprland-git xdg-desktop-portal-hyprland-git clipse-bin hyde-cli-git hyprshot-git hyprland-qtutils\n","recorded":"2025-01-09 18:20:38.722960029","filePath":"null","pinned":false},{"value":"if [[ -x '/usr/bin/betterlockscreen' ]]; then\n\t\t\tbetterlockscreen -l\n\t\telif [[ -x '/usr/bin/i3lock' ]]; then\n\t\t\ti3lock\n\t\tfi","recorded":"2025-01-09 18:17:59.577706243","filePath":"null","pinned":false},{"value":"\n\t\t\telif [[ \"$DESKTOP_SESSION\" == 'plasma' ]]; then\n\t\t\t\tqdbus org.kde.ksmserver /KSMServer logout 0 0 0","recorded":"2025-01-09 18:17:15.061990460","filePath":"null","pinned":false},{"value":"$logout)\n\t\trun_cmd --logout\n        ;;","recorded":"2025-01-09 18:10:19.079853864","filePath":"null","pinned":false},{"value":"\n\t\t\telif [[ \"$desktop_session\" == 'plasma' ]]; then\n\t\t\t\tqdbus org.kde.ksmserver /ksmserver logout 0 0 0","recorded":"2025-01-09 18:08:15.743819885","filePath":"null","pinned":false},{"value":"Hyprland","recorded":"2025-01-09 18:06:53.821478172","filePath":"null","pinned":false},{"value":"echo $XDG_CURRENT_DESKTOP","recorded":"2025-01-09 18:06:51.201906474","filePath":"null","pinned":false},{"value":"hyprctl dispatch exit","recorded":"2025-01-09 18:06:08.094179388","filePath":"null","pinned":false},{"value":"sh ~/.dwm/scripts/uptime reboot","recorded":"2025-01-09 18:03:19.935799063","filePath":"null","pinned":false},{"value":"sh ~/.dwm/scripts/uptime shutdown","recorded":"2025-01-09 18:02:57.744085496","filePath":"null","pinned":false},{"value":"# paru -S --noconfirm wlrobs-hg hyprland-git xdg-desktop-portal-hyprland-git clipse-bin hyde-cli-git wlogout hyprshot-git hyprland-qtutils\n","recorded":"2025-01-09 18:01:24.726688700","filePath":"null","pinned":false},{"value":"sh ~/.config/rofi/launchers/type-7/launcher.sh","recorded":"2025-01-09 17:58:50.103561706","filePath":"null","pinned":false},{"value":"    bindsym $mod+Shift+d exec kitty --class=\"danmufloat\" --hold sh -c \"cd /home/ruixi/Codelearning/go/src/bilibili_live_tui/  \u0026\u0026 export TERM=xterm-256color \u0026\u0026 ./main\" \n","recorded":"2025-01-09 17:56:35.053960383","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/waybar/Cava.sh\n/home/karna/Downloads/sway-dotfiles-main/waybar/Cava-internal.sh\n/home/karna/Downloads/sway-dotfiles-main/waybar/config1\n/home/karna/Downloads/sway-dotfiles-main/waybar/config2\n/home/karna/Downloads/sway-dotfiles-main/waybar/get_temp_path.sh\n/home/karna/Downloads/sway-dotfiles-main/waybar/launch_waybar.sh\n/home/karna/Downloads/sway-dotfiles-main/waybar/live_wallpaper.sh\n/home/karna/Downloads/sway-dotfiles-main/waybar/style1.css\n/home/karna/Downloads/sway-dotfiles-main/waybar/style2.css\n/home/karna/Downloads/sway-dotfiles-main/waybar/switch_style1.sh\n/home/karna/Downloads/sway-dotfiles-main/waybar/switch_style2.sh\n/home/karna/Downloads/sway-dotfiles-main/waybar/wallpaper_random.sh","recorded":"2025-01-09 17:54:27.115104941","filePath":"null","pinned":false},{"value":"swaymsg gaps outer all set 0 \u0026\u0026 swaymsg gaps inner all set 5","recorded":"2025-01-09 17:53:58.815152949","filePath":"null","pinned":false},{"value":"swaymsg gaps outer all set 0 \u0026\u0026 swaymsg gaps inner all set 5\n","recorded":"2025-01-09 17:53:49.216407296","filePath":"null","pinned":false},{"value":"swaymsg gaps outer all set 0 \u0026\u0026 swaymsg gaps inner all set 0","recorded":"2025-01-09 17:52:35.292634616","filePath":"null","pinned":false},{"value":"swaymsg gaps outer all set 0 \u0026\u0026 swaymsg gaps inner all set 0\n","recorded":"2025-01-09 17:52:12.965221327","filePath":"null","pinned":false},{"value":"\nVotes           : 10","recorded":"2025-01-09 17:50:25.639055857","filePath":"null","pinned":false},{"value":"export PATH=$HOME/.config/rofi/scripts:$PATH","recorded":"2025-01-09 15:19:32.328221381","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/rofi/files/applets\n/home/karna/Downloads/rofi/files/colors\n/home/karna/Downloads/rofi/files/images\n/home/karna/Downloads/rofi/files/launchers\n/home/karna/Downloads/rofi/files/powermenu\n/home/karna/Downloads/rofi/files/scripts\n/home/karna/Downloads/rofi/files/config.rasi","recorded":"2025-01-09 15:19:11.828545974","filePath":"null","pinned":false},{"value":"/home/karna/.config/hypr/Assets/dp.png","recorded":"2025-01-09 15:18:01.830712772","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/rofi/fonts/GrapeNuts-Regular.ttf\n/home/karna/Downloads/rofi/fonts/Icomoon-Feather.ttf\n/home/karna/Downloads/rofi/fonts/Iosevka-Nerd-Font-Complete.ttf\n/home/karna/Downloads/rofi/fonts/JetBrains-Mono-Nerd-Font-Complete.ttf","recorded":"2025-01-09 15:11:19.940920547","filePath":"null","pinned":false},{"value":"/home/karna/.local/share/fonts/GrapeNuts-Regular.ttf\n/home/karna/.local/share/fonts/Icomoon-Feather.ttf\n/home/karna/.local/share/fonts/Iosevka-Nerd-Font-Complete.ttf\n/home/karna/.local/share/fonts/JetBrains-Mono-Nerd-Font-Complete.ttf","recorded":"2025-01-09 15:11:11.637465028","filePath":"null","pinned":false},{"value":"$ git clone --depth=1 https://github.com/adi1090x/rofi.git","recorded":"2025-01-09 15:10:13.386034182","filePath":"null","pinned":false},{"value":"rofi -no-lazy-grab -show drun -modi drun -theme $dir/\"$theme\"","recorded":"2025-01-09 15:06:20.484836881","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/rofi","recorded":"2025-01-09 15:03:59.765500356","filePath":"null","pinned":false},{"value":"Right     Increase number of bars","recorded":"2025-01-09 14:26:58.462370864","filePath":"null","pinned":false},{"value":"5e217a023bc2b3ca4ffd48ac6e03be1519ec2b504b13a')\n  17   │ ","recorded":"2025-01-09 14:26:10.243696757","filePath":"null","pinned":false},{"value":"cd \n","recorded":"2025-01-09 14:24:29.402911764","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/sway/.config/waybar","recorded":"2025-01-09 14:23:36.655231289","filePath":"null","pinned":false},{"value":"/home/karna/.config/waybar","recorded":"2025-01-09 14:22:55.876586472","filePath":"null","pinned":false},{"value":"brightnessctl s 5%+","recorded":"2025-01-09 14:17:14.241682662","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/waybar","recorded":"2025-01-09 14:13:44.986829223","filePath":"null","pinned":false},{"value":"papirus-folders-catppuccin-git","recorded":"2025-01-09 14:07:23.039095796","filePath":"null","pinned":false},{"value":"yay -S papirus-folders-catppuccin-git","recorded":"2025-01-09 14:06:37.462587539","filePath":"null","pinned":false},{"value":"./papirus-folders -C cat-mocha-blue --theme Papirus-Dark","recorded":"2025-01-09 14:05:50.672151953","filePath":"null","pinned":false},{"value":"cat-mocha-mauve","recorded":"2025-01-09 14:05:46.042462807","filePath":"null","pinned":false},{"value":"./papirus-folders -l","recorded":"2025-01-09 14:05:39.256480507","filePath":"null","pinned":false},{"value":"sudo cp -r src/* /usr/share/icons/Papirus  ","recorded":"2025-01-09 14:05:34.754956937","filePath":"null","pinned":false},{"value":"curl -LO https://raw.githubusercontent.com/PapirusDevelopmentTeam/papirus-folders/master/papirus-folders \u0026\u0026 chmod +x ./papirus-folders","recorded":"2025-01-09 14:05:14.914440011","filePath":"null","pinned":false},{"value":"git clone https://github.com/catppuccin/papirus-folders.git\ncd papirus-folders","recorded":"2025-01-09 14:04:55.118075913","filePath":"null","pinned":false},{"value":"papirus-icon-theme","recorded":"2025-01-09 14:04:08.790920553","filePath":"null","pinned":false},{"value":"maroon.zip with bsdtar\n  -\u003e Extracting catppuccin-gtk-theme-mocha-1.0.3-mauve.zip with bsdtar\n  -\u003e Extracting catppuccin-gtk-theme-mocha-1.0.3-peach.zip with bsdtar\n  -\u003e Extracting catppuccin-gtk-theme-mocha-1.0.3-pink.zip with bsdtar\n  -\u003e Extracting catppuccin-gtk-theme-mocha-1.0.3-red.zip with bsdtar\n  -\u003e Extracting catppuccin-gtk-theme-mocha-1.0.3-rosewater.zip with bsdtar\n  -\u003e Extracting catppuccin-gtk-theme-mocha-1.0.3-sapphire.zip with bsdtar\n(base) \u003e\u003e\u003e    ~  sudo pacman -S ","recorded":"2025-01-09 14:04:06.385572692","filePath":"null","pinned":false},{"value":"catppuccin-fcitx5-git","recorded":"2025-01-09 13:56:49.012915106","filePath":"null","pinned":false},{"value":"fcitx5 -r","recorded":"2025-01-09 13:55:41.858943981","filePath":"null","pinned":false},{"value":"Theme=catppuccin-mocha-mauve","recorded":"2025-01-09 13:55:36.207562999","filePath":"null","pinned":false},{"value":"Theme=catppuccin-{flavour}-{accent}","recorded":"2025-01-09 13:55:09.593049064","filePath":"null","pinned":false},{"value":"classicui.conf","recorded":"2025-01-09 13:55:05.297615315","filePath":"null","pinned":false},{"value":"catppuccin-cursors-mocha","recorded":"2025-01-09 13:48:04.424498806","filePath":"null","pinned":false},{"value":"kvantum-theme-catppuccin-git","recorded":"2025-01-09 13:47:22.721039615","filePath":"null","pinned":false},{"value":"themes","recorded":"2025-01-09 13:44:46.907643291","filePath":"null","pinned":false},{"value":"# -------------------------------------------------------------------------------------\n\necho \"Setting up dwm...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install dwm?\" \\\n  --yesno \"Would you like to install dwm (Dynamic Window Manager)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"dwm installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"dwm installation will begin now.\" 10 50\n\n  stow ~/dotfiles/suckless/\n\n  cd ~/.config/dwm \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/slstatus \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/st \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/.config/dmenu \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/dotfiles/Extras/Extras/waldl-master/ \u0026\u0026 sudo make install \u0026\u0026 cd ~/dotfiles\n\n  sudo mkdir /usr/share/xsessions/\n  sudo cp ~/dotfiles/Extras/Extras/usr/share/xsessions/dwm.desktop /usr/share/xsessions\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"dwm has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear","recorded":"2025-01-09 13:43:07.576204417","filePath":"null","pinned":false},{"value":"yay -S catppuccin-cursors-mocha","recorded":"2025-01-09 13:42:37.815679807","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/.themes","recorded":"2025-01-09 13:40:55.644073968","filePath":"null","pinned":false},{"value":"fcitx5 fcitx5-configtool","recorded":"2025-01-09 13:37:57.604889433","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/telegram","recorded":"2025-01-09 13:32:31.774306991","filePath":"null","pinned":false},{"value":"trash:///Ubuntu-i3-rice-main.2/ranger/scope.sh","recorded":"2025-01-09 13:17:37.120495481","filePath":"null","pinned":false},{"value":"trash:///ranger/scope.sh","recorded":"2025-01-09 13:17:04.492005237","filePath":"null","pinned":false},{"value":"trash:///ranger.3/scope.sh","recorded":"2025-01-09 13:16:49.068305286","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/ranger_karna/.config/ranger/bak/scope.sh","recorded":"2025-01-09 13:15:41.001510000","filePath":"null","pinned":false},{"value":"set font \"DaddyTimeMono Nerd Font 12\"\n","recorded":"2025-01-09 13:14:53.769846865","filePath":"null","pinned":false},{"value":"5. The roof of the mo","recorded":"2025-01-09 13:14:35.787784010","filePath":"null","pinned":false},{"value":"set font \"DaddyTimeMono Nerd Font 15\"\nset default-fg \t\t\t\"#96CDFB\"\nset default-bg \t\t\t\"#1A1823\"\n\nset completion-bg\t\t\"#1A1823\"\nset completion-fg\t\t\"#96cdfb\"\nset completion-highlight-bg\t\"#302D41\"\nset completion-highlight-fg\t\"#96cdfb\"\nset completion-group-bg\t\t\"#1a1823\"\nset completion-group-fg\t\t\"#89DCEB\"\n\nset statusbar-fg\t\t\"#C9CBFF\"\nset statusbar-bg\t\t\"#1A1823\"\nset statusbar-h-padding\t\t10\nset statusbar-v-padding\t\t10\n\nset notification-bg\t\t\"#1A1823\"\nset notification-fg\t\t\"#D9E0EE\"\nset notification-error-bg\t\"#d9e0ee\"\nset notification-error-fg\t\"#D9E0EE\"\nset notification-warning-bg\t\"#FAE3B0\"\nset notification-warning-fg\t\"#D9E0EE\"\nset selection-notification\t\"true\"\n\nset inputbar-fg\t\t\t\"#C9CBFF\"\nset inputbar-bg \t\t\"#1A1823\"\n\nset recolor\t\t\t\"true\"\nset recolor-lightcolor\t\t\"#D9E0EE\"\nset recolor-darkcolor\t\t\"#1A1823\"\n\nset index-fg\t\t\t\"#96cdfb\"\nset index-bg\t\t\t\"#1A1823\"\nset index-active-fg\t\t\"#96cdfb\"\nset index-active-bg\t\t\"#1A1823\"\n\nset render-loading-bg\t\t\"#1A1823\"\nset render-loading-fg\t\t\"#96cdfb\"\n\nset highlight-color\t\t\"#96cdfb\"\nset highlight-active-color\t\"#DDB6F2\"\n\n\nset render-loading \"false\"\nset scroll-step 50\n\nset selection-clipboard clipboard","recorded":"2025-01-09 13:14:15.025800368","filePath":"null","pinned":false},{"value":"set font \"DaddyTimeMono Nerd Font 15\"\nset default-fg \t\t\t\"#96CDFB\"\nset default-bg \t\t\t\"#1A1823\"","recorded":"2025-01-09 13:13:40.826307598","filePath":"null","pinned":false},{"value":"set scroll-step 100\n","recorded":"2025-01-09 13:13:06.205220818","filePath":"null","pinned":false},{"value":"    info \"${c5} STORAGE \\n \\n \\n \\n \" disk\n","recorded":"2025-01-09 13:05:47.312553027","filePath":"null","pinned":false},{"value":"    info \"${c5}  MODEL \\n \\n \\n \\n \\n \\n \\n\" model\n","recorded":"2025-01-09 13:00:58.156729720","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/neofetch/.config/neofetch/bak/config.conf\n/home/karna/dotfiles/neofetch/.config/neofetch/bak/tentaclecol.png","recorded":"2025-01-09 13:00:23.048072903","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/neofetch/config.conf","recorded":"2025-01-09 13:00:12.943616259","filePath":"null","pinned":false},{"value":"script-opts=ytdl_hook-ytdl_path=yt-dlp\n","recorded":"2025-01-09 12:58:32.323432444","filePath":"null","pinned":false},{"value":"CTRL+2 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Restore_CNN_VL.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode A (HQ)\"\nCTRL+3 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Restore_CNN_Soft_VL.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode B (HQ)\"\nCTRL+4 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode C (HQ)\"\nCTRL+5 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Restore_CNN_VL.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl:~~/shaders/Anime4K_Restore_CNN_M.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode A+A (HQ)\"\nCTRL+6 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Restore_CNN_Soft_VL.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Restore_CNN_Soft_M.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode B+B (HQ)\"\nCTRL+7 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Restore_CNN_M.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode C+A (HQ)\"\n\nCTRL+1 no-osd change-list glsl-shaders clr \"\"; show-text \"GLSL shaders cleared\"\n","recorded":"2025-01-09 12:58:05.655828387","filePath":"null","pinned":false},{"value":"CTRL+1 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Restore_CNN_VL.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode A (HQ)\"\nCTRL+2 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Restore_CNN_Soft_VL.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode B (HQ)\"\nCTRL+3 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode C (HQ)\"\nCTRL+4 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Restore_CNN_VL.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl:~~/shaders/Anime4K_Restore_CNN_M.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode A+A (HQ)\"\nCTRL+5 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Restore_CNN_Soft_VL.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Restore_CNN_Soft_M.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode B+B (HQ)\"\nCTRL+6 no-osd change-list glsl-shaders set \"~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Restore_CNN_M.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl\"; show-text \"Anime4K: Mode C+A (HQ)\"\n\nCTRL+0 no-osd change-list glsl-shaders clr \"\"; show-text \"GLSL shaders cleared\"\n","recorded":"2025-01-09 12:58:01.583362232","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/mpv/scripts/file-browser.lua","recorded":"2025-01-09 12:57:30.966137946","filePath":"null","pinned":false},{"value":"map ctrl+v       paste_from_clipboard\n","recorded":"2025-01-09 12:53:54.330443292","filePath":"null","pinned":false},{"value":"map ctrl+c       copy_to_clipboard\n","recorded":"2025-01-09 12:53:42.268690916","filePath":"null","pinned":false},{"value":"confirm_os_window_close 0\n","recorded":"2025-01-09 12:52:56.732139305","filePath":"null","pinned":false},{"value":"hide_window_decorations yes\n","recorded":"2025-01-09 12:52:51.499617992","filePath":"null","pinned":false},{"value":"window_padding_width 10\n","recorded":"2025-01-09 12:52:45.603834715","filePath":"null","pinned":false},{"value":"copy_on_select yes\n","recorded":"2025-01-09 12:52:01.344151201","filePath":"null","pinned":false},{"value":"disable_ligatures never\n","recorded":"2025-01-09 12:51:38.825144652","filePath":"null","pinned":false},{"value":"file:///home/karna/dotfiles/homepage/homepage.html","recorded":"2025-01-09 12:41:10.020832826","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Extras/Extras/Zen Browser/User Default/chrome/homepage.html","recorded":"2025-01-08 23:33:59.763506583","filePath":"null","pinned":false},{"value":"file:///home/karna/homepage.html","recorded":"2025-01-08 23:30:18.857570952","filePath":"null","pinned":false},{"value":"file:///home/karna/dotfiles/Extras/Extras/Zen%20Browser/User%20Default/chrome/homepage.html","recorded":"2025-01-08 23:29:55.568702731","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/firefox_homepage/homepage.html","recorded":"2025-01-08 23:27:09.250642351","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/dunst/catppuccin.dunstrc","recorded":"2025-01-08 23:25:00.488132205","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/cava/config\n/home/karna/Downloads/sway-dotfiles-main/cava/config1","recorded":"2025-01-08 23:24:11.590801283","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/cava/config","recorded":"2025-01-08 23:24:05.120646290","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/BTOP/.config/btop/themes\n/home/karna/dotfiles/BTOP/.config/btop/btop.conf","recorded":"2025-01-08 23:23:49.016122414","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/sway-dotfiles-main/btop/themes\n/home/karna/Downloads/sway-dotfiles-main/btop/btop.conf","recorded":"2025-01-08 23:23:40.319485058","filePath":"null","pinned":false},{"value":"https://github.com/Ruixi-rebirth/nixos-config","recorded":"2025-01-08 23:20:49.586378805","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\n# Add this script to your wm startup file.\n\nDIR=\"$HOME/.config/i3/polybar/forest\"\n\n# Terminate already running bar instances\nkillall -q polybar\n\n# Wait until the processes have been shut down\nwhile pgrep -u $UID -x polybar \u003e/dev/null; do sleep 1; done\n\n# Launch the bar\npolybar -q main -c \"$DIR\"/config.ini \u0026\n","recorded":"2025-01-08 23:05:23.399966745","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nunpushed_changes=$(git log origin/\"$branch\"..HEAD --oneline)\n\nif [ -z \"$changes\" ] \u0026\u0026 [ -z \"$unpushed_changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# If there are committed but unpushed changes\nif [ -z \"$changes\" ] \u0026\u0026 [ -n \"$unpushed_changes\" ]; then\n  echo \"You have unpushed commits:\"\n  echo \"$unpushed_changes\"\n  read -p \"Do you want to push these commits to branch '$branch'? (y/n): \" confirm_push\n  if [[ \"$confirm_push\" == \"y\" || \"$confirm_push\" == \"Y\" ]]; then\n    echo \"Pushing changes to branch '$branch'...\"\n    git push origin \"$branch\" \u0026\u0026 echo \"Changes have been pushed to the remote repository.\" || echo \"Push failed. Check your connection or permissions.\"\n  else\n    echo \"Push cancelled. Changes remain committed locally.\"\n  fi\n  exit 0\nfi\n\n# Initialize commit counter\ncommit_counter=0\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: \\\"$file\\\" with status: $status\"\n\n  # Remove any unwanted quotes around the file name\n  file=$(echo \"$file\" | sed 's/^\"\\(.*\\)\"$/\\1/')\n\n  # Check if the file or directory exists\n  if [ ! -e \"$file\" ] \u0026\u0026 [ \"$status\" != \"D\" ]; then\n    echo \"Warning: File or directory $file does not exist.\"\n    continue\n  fi\n\n  # Determine commit message based on file status\n  case \"$status\" in\n  \"A\") # Added files (new files, untracked)\n    commit_message=\"create $file\"\n    git add -- \"$file\"\n    ;;\n  \"M\") # Modified files\n    commit_message=\"update $file\"\n    git add -- \"$file\"\n    ;;\n  \"D\") # Deleted files\n    commit_message=\"delete $file\"\n    git rm --ignore-unmatch \"$file\"\n    ;;\n  \"??\") # Untracked files (new files)\n    commit_message=\"create $file\"\n    git add -- \"$file\"\n    ;;\n  *) # Other statuses\n    echo \"Unknown status: $status for file: $file. Skipping.\"\n    continue\n    ;;\n  esac\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" \u0026\u0026 commit_counter=$((commit_counter + 1)) || {\n    echo \"Commit failed for file: $file\"\n    continue\n  }\n\ndone \u003c\u003c\u003c\"$(git status --porcelain)\"\n\n# Check if there were no commits\nif [ \"$commit_counter\" -eq 0 ]; then\n  echo \"No new changes to commit.\"\nelse\n  echo \"$commit_counter commit(s) have been successfully made.\"\nfi\n\n# Confirm pushing the changes\nread -p \"Do you want to push all changes to branch '$branch'? (y/n): \" confirm_push\nif [[ \"$confirm_push\" == \"y\" || \"$confirm_push\" == \"Y\" ]]; then\n  echo \"Pushing changes to branch '$branch'...\"\n  git push origin \"$branch\" \u0026\u0026 echo \"Changes have been pushed to the remote repository.\" || echo \"Push failed. Check your connection or permissions.\"\nelse\n  echo \"Push cancelled. Changes remain committed locally.\"\nfi\n","recorded":"2025-01-08 23:05:23.387097038","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nunpushed_changes=$(git log origin/\"$branch\"..HEAD --oneline)\n\nif [ -z \"$changes\" ] \u0026\u0026 [ -z \"$unpushed_changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# If there are committed but unpushed changes\nif [ -z \"$changes\" ] \u0026\u0026 [ -n \"$unpushed_changes\" ]; then\n  echo \"You have unpushed commits:\"\n  echo \"$unpushed_changes\"\n  read -p \"Do you want to push these commits to branch '$branch'? (Y/n): \" confirm_push\n  confirm_push=${confirm_push:-Y}  # Default to \"Y\" if input is blank\n  if [[ \"$confirm_push\" =~ ^[Yy]$ ]]; then\n    echo \"Pushing changes to branch '$branch'...\"\n    git push origin \"$branch\" \u0026\u0026 echo \"Changes have been pushed to the remote repository.\" || echo \"Push failed. Check your connection or permissions.\"\n  else\n    echo \"Push cancelled. Changes remain committed locally.\"\n  fi\n  exit 0\nfi\n\n# Initialize commit counter\ncommit_counter=0\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: \\\"$file\\\" with status: $status\"\n\n  # Remove any unwanted quotes around the file name\n  file=$(echo \"$file\" | sed 's/^\"\\(.*\\)\"$/\\1/')\n\n  # Check if the file or directory exists\n  if [ ! -e \"$file\" ] \u0026\u0026 [ \"$status\" != \"D\" ]; then\n    echo \"Warning: File or directory $file does not exist.\"\n    continue\n  fi\n\n  # Determine commit message based on file status\n  case \"$status\" in\n  \"A\") # Added files (new files, untracked)\n    commit_message=\"create $file\"\n    git add -- \"$file\"\n    ;;\n  \"M\") # Modified files\n    commit_message=\"update $file\"\n    git add -- \"$file\"\n    ;;\n  \"D\") # Deleted files\n    commit_message=\"delete $file\"\n\n    git rm --ignore-unmatch \"$file\"\n    ;;\n  \"??\") # Untracked files (new files)\n    commit_message=\"create $file\"\n    git add -- \"$file\"\n    ;;\n  *) # Other statuses\n    echo \"Unknown status: $status for file: $file. Skipping.\"\n    continue\n    ;;\n  esac\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" \u0026\u0026 commit_counter=$((commit_counter + 1)) || {\n    echo \"Commit failed for file: $file\"\n    continue\n  }\n\ndone \u003c\u003c\u003c\"$(git status --porcelain)\"\n\n# Check if there were no commits\nif [ \"$commit_counter\" -eq 0 ]; then\n  echo \"No new changes to commit.\"\nelse\n  echo \"$commit_counter commit(s) have been successfully made.\"\nfi\n\n# Confirm pushing the changes\nread -p \"Do you want to push all changes to branch '$branch'? (Y/n): \" confirm_push\nconfirm_push=${confirm_push:-Y}  # Default to \"Y\" if input is blank\nif [[ \"$confirm_push\" =~ ^[Yy]$ ]]; then\n  echo \"Pushing changes to branch '$branch'...\"\n  git push origin \"$branch\" \u0026\u0026 echo \"Changes have been pushed to the remote repository.\" || echo \"Push failed. Check your connection or permissions.\"\nelse\n  echo \"Push cancelled. Changes remain committed locally.\"\nfi\n","recorded":"2025-01-08 23:05:18.381582166","filePath":"null","pinned":false},{"value":"/home/karna/.zen/7gx52li9.Default (alpha)/chrome/zen-themes.css","recorded":"2025-01-08 23:03:10.294083918","filePath":"null","pinned":false},{"value":"waybar -c ~/.config/hypr/waybar/config.jsonc -s ~/.config/hypr/waybar/style.css","recorded":"2025-01-08 22:59:40.342736989","filePath":"null","pinned":false},{"value":"(base) \u003e\u003e\u003e    dotfiles [master] ⚡  git rm \"ranger_karna/.config/ranger/.gitignore\" \n\nfatal: pathspec 'ranger_karna/.config/ranger/.gitignore' did not match any files","recorded":"2025-01-08 22:59:29.160288202","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/hypr/waybar","recorded":"2025-01-08 22:53:50.574407164","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/waybar","recorded":"2025-01-08 22:53:19.518184367","filePath":"null","pinned":false},{"value":"// \"custom/timer\": {\n//     \"exec\": \"~/dotfiles/Hyprland/.config/waybar/waybar-timer.sh updateandprint\",\n//     \"exec-on-event\": true,\n//     \"return-type\": \"json\",\n//     \"interval\": 5,\n//     \"signal\": 4,\n//     \"format\": \"{icon} {0}\",\n//     \"format-icons\": {\n//         \"standby\": \"STANDBY\",\n//         \"running\": \"RUNNING\",\n//         \"paused\": \"PAUSE\"\n//     },\n//     \"on-click\": \"~/dotfiles/Hyprland/.config/waybar/waybar-timer.sh new 25 'notify-send \\\"Session finished\\\"'\",\n//     \"on-click-middle\": \"~/dotfiles/Hyprland/.config/waybar/waybar-timer.sh cancel\",\n//     \"on-click-right\": \"~/dotfiles/Hyprland/.config/waybar/waybar-timer.sh togglepause\",\n//     \"on-scroll-up\": \"~/dotfiles/Hyprland/.config/waybar/waybar-timer.sh increase 60 || ~/dotfiles/Hyprland/.config/waybar/waybar-timer.sh new 1 'notify-send -u critical \\\"Timer expired.\\\"'\",\n//     \"on-scroll-down\": \"~/dotfiles/Hyprland/.config/waybar/waybar-timer.sh increase -60\"\n// },","recorded":"2025-01-08 22:51:05.113589497","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Initialize commit counter\ncommit_counter=0\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: \\\"$file\\\" with status: $status\"\n\n  # Remove any unwanted quotes around the file name\n  file=$(echo \"$file\" | sed 's/^\"\\(.*\\)\"$/\\1/')\n\n  # Check if the file or directory exists\n  if [ ! -e \"$file\" ]; then\n    echo \"Warning: File or directory $file does not exist.\"\n    continue\n  fi\n\n  # Determine commit message based on file status\n  case \"$status\" in\n  \"A\") # Added files (new files, untracked)\n    commit_message=\"create $file\"\n    git add -- \"$file\"\n    ;;\n  \"M\") # Modified files\n    commit_message=\"update $file\"\n    git add -- \"$file\"\n    ;;\n  \"D\") # Deleted files\n    commit_message=\"delete $file\"\n\n    git rm \"$file\"\n    ;;\n  \"??\") # Untracked files (new files)\n    commit_message=\"create $file\"\n    git add -- \"$file\"\n    ;;\n  *) # Other statuses\n    commit_message=\"Unknown status: $status for file: $file\"\n    git add -- \"$file\"\n    ;;\n  esac\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" \u0026\u0026 commit_counter=$((commit_counter + 1)) || {\n    echo \"Commit failed for file: $file\"\n    continue\n  }\n\ndone \u003c\u003c\u003c\"$(git status --porcelain)\"\n\n# Check if there were no commits\nif [ \"$commit_counter\" -eq 0 ]; then\n  echo \"No changes to commit. Exiting.\"\n  exit 0\nfi\n\n# Show the number of commits before pushing\necho \"$commit_counter commit(s) have been successfully made.\"\n\n# Confirm pushing the changes\nread -p \"Do you want to push these changes to branch '$branch'? (y/n): \" confirm_push\nif [[ \"$confirm_push\" == \"y\" || \"$confirm_push\" == \"Y\" ]]; then\n  # Push all committed changes\n  echo \"Pushing changes to branch '$branch'...\"\n  git push origin \"$branch\"\n  echo \"Changes have been pushed to the remote repository.\"\nelse\n  echo \"Push cancelled. Changes are committed locally.\"\nfi\n","recorded":"2025-01-08 22:39:20.492939350","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Initialize commit counter\ncommit_counter=0\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: \\\"$file\\\" with status: $status\"\n\n  # Remove any unwanted quotes around the file name\n  file=$(echo \"$file\" | sed 's/^\"\\(.*\\)\"$/\\1/')\n\n  # Check if the file or directory exists\n  if [ ! -e \"$file\" ] \u0026\u0026 [ \"$status\" != \"D\" ]; then\n    echo \"Warning: File or directory $file does not exist.\"\n    continue\n  fi\n\n  # Determine commit message based on file status\n  case \"$status\" in\n  \"A\") # Added files (new files, untracked)\n    commit_message=\"create $file\"\n    git add -- \"$file\"\n    ;;\n  \"M\") # Modified files\n    commit_message=\"update $file\"\n    git add -- \"$file\"\n    ;;\n  \"D\") # Deleted files\n    commit_message=\"delete $file\"\n    git rm --ignore-unmatch \"$file\"\n    ;;\n  \"??\") # Untracked files (new files)\n    commit_message=\"create $file\"\n    git add -- \"$file\"\n    ;;\n  *) # Other statuses\n    echo \"Unknown status: $status for file: $file. Skipping.\"\n    continue\n    ;;\n  esac\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" \u0026\u0026 commit_counter=$((commit_counter + 1)) || {\n    echo \"Commit failed for file: $file\"\n    continue\n  }\n\ndone \u003c\u003c\u003c\"$(git status --porcelain)\"\n\n# Check if there were no commits\nif [ \"$commit_counter\" -eq 0 ]; then\n  echo \"No changes to commit. Exiting.\"\n  exit 0\nfi\n\n# Show the number of commits before pushing\necho \"$commit_counter commit(s) have been successfully made.\"\n\n# Confirm pushing the changes\nread -p \"Do you want to push these changes to branch '$branch'? (y/n): \" confirm_push\nif [[ \"$confirm_push\" == \"y\" || \"$confirm_push\" == \"Y\" ]]; then\n  # Push all committed changes\n  echo \"Pushing changes to branch '$branch'...\"\n  git push origin \"$branch\" \u0026\u0026 echo \"Changes have been pushed to the remote repository.\" || echo \"Push failed. Check your connection or permissions.\"\nelse\n  echo \"Push cancelled. Changes are committed locally.\"\nfi\n","recorded":"2025-01-08 22:39:20.473019480","filePath":"null","pinned":false},{"value":"(base) \u003e\u003e\u003e    dotfiles [master] ./gitAutoCommitter.sh \nEnter the Git repository path: .\nEnter branch to push changes (default: master): \nNo changes detected. Exiting.","recorded":"2025-01-08 22:37:33.685671934","filePath":"null","pinned":false},{"value":"git status | grep ranger_karna/.config/ranger/.gitignore\n","recorded":"2025-01-08 22:33:32.577799060","filePath":"null","pinned":false},{"value":"git rm --cached ranger_karna/.config/ranger/.gitignore\n","recorded":"2025-01-08 22:33:26.536900672","filePath":"null","pinned":false},{"value":"git ls-files ranger_karna/.config/ranger/.gitignore\n","recorded":"2025-01-08 22:33:06.835727179","filePath":"null","pinned":false},{"value":"Enter the Git repository path: .\nEnter branch to push changes (default: master): \nProcessing changes...\nProcessing file: \"Hyprland/.config/clipse/clipboard_history.json\" with status: M\nCommitting: \"update Hyprland/.config/clipse/clipboard_history.json\"\n[master 4ddc13ee] update Hyprland/.config/clipse/clipboard_history.json\n 2 files changed, 1 insertion(+), 161 deletions(-)\n delete mode 100644 ranger_karna/.config/ranger/.gitignore\nProcessing file: \"gitAutoCommitter.sh\" with status: M\nCommitting: \"update gitAutoCommitter.sh\"\n[master db58f525] update gitAutoCommitter.sh\n 1 file changed, 2 insertions(+), 1 deletion(-)\nProcessing file: \"picom/.stow-local-ignore\" with status: D\nWarning: File or directory picom/.stow-local-ignore does not exist.\nProcessing file: \"ranger_karna/.config/ranger/.gitignore\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/.gitignore does not exist.\nProcessing file: \"ranger_karna/.config/ranger/colorschemes/__init__.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/colorschemes/__init__.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/colorschemes/dracula.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/colorschemes/dracula.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/colorschemes/nord.py\" with status: D\n(base) \u003e\u003e\u003e    dotfiles [master] ⚡  ./gitAutoCommitter.sh \nEnter the Git repository path: .\nEnter branch to push changes (default: master): \nProcessing changes...\nProcessing file: \"picom/.stow-local-ignore\" with status: D\nWarning: File or directory picom/.stow-local-ignore does not exist.\nProcessing file: \"ranger_karna/.config/ranger/colorschemes/__init__.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/colorschemes/__init__.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/colorschemes/dracula.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/colorschemes/dracula.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/colorschemes/nord.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/colorschemes/nord.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/CONTRIBUTING.MD\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/CONTRIBUTING.MD does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/LICENSE\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/LICENSE does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/LICENSE_NERDFONT\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/LICENSE_NERDFONT does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/README.md\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/README.md does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/__init__.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/__init__.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/devicons.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/devicons.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/screenshot.png\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/screenshot.png does not exist.\nNo changes to commit. Exiting.","recorded":"2025-01-08 22:30:49.760630909","filePath":"null","pinned":false},{"value":"    git rm --ignore-unmatch \"$file\" # Handle deletion\n","recorded":"2025-01-08 22:30:13.855620123","filePath":"null","pinned":false},{"value":"git rm --ignore-unmatch -- \"$file\"\n","recorded":"2025-01-08 22:30:06.088970985","filePath":"null","pinned":false},{"value":"(base) \u003e\u003e\u003e    dotfiles [master] ⚡  git rm --ignore-unmatch \"ranger_karna/.config/ranger/.gitignore\"\n\nrm 'ranger_karna/.config/ranger/.gitignore'","recorded":"2025-01-08 22:29:25.344388658","filePath":"null","pinned":false},{"value":"git rm --ignore-unmatch \"ranger_karna/.config/ranger/.gitignore\"\n","recorded":"2025-01-08 22:29:07.440898170","filePath":"null","pinned":false},{"value":"Enter the Git repository path: .\nEnter branch to push changes (default: master): \nProcessing changes...\nProcessing file: \"picom/.stow-local-ignore\" with status: D\nWarning: File or directory picom/.stow-local-ignore does not exist.\nProcessing file: \"ranger_karna/.config/ranger/.gitignore\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/.gitignore does not exist.\nProcessing file: \"ranger_karna/.config/ranger/colorschemes/__init__.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/colorschemes/__init__.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/colorschemes/dracula.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/colorschemes/dracula.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/colorschemes/nord.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/colorschemes/nord.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/CONTRIBUTING.MD\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/CONTRIBUTING.MD does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/LICENSE\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/LICENSE does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/LICENSE_NERDFONT\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/LICENSE_NERDFONT does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/README.md\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/README.md does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/__init__.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/__init__.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/devicons.py\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/devicons.py does not exist.\nProcessing file: \"ranger_karna/.config/ranger/plugins/ranger_devicons/screenshot.png\" with status: D\nWarning: File or directory ranger_karna/.config/ranger/plugins/ranger_devicons/screenshot.png does not exist.\nNo changes to commit. Exiting.","recorded":"2025-01-08 22:26:44.241796410","filePath":"null","pinned":false},{"value":"Unknown status: $status for file: $file","recorded":"2025-01-08 22:26:08.895168846","filePath":"null","pinned":false},{"value":"    git rm -- \"$file\"\n","recorded":"2025-01-08 22:25:56.694286310","filePath":"null","pinned":false},{"value":"git rm --cached --ignore-unmatch \"$file\"  # Handle deletion","recorded":"2025-01-08 22:25:38.006033888","filePath":"null","pinned":false},{"value":"case \"$status\" in\n    \"A\") # Added files (new files, untracked)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      git add -- \"$file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      git rm -- \"$file\"\n      ;;\n    \"??\") # Untracked files (new files)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      git add -- \"$file\"\n      ;;\n  esac","recorded":"2025-01-08 22:25:20.077441998","filePath":"null","pinned":false},{"value":"case \"$status\" in\n  \"A\") # Added files (new files, untracked)\n    commit_message=\"create $file\"\n    git add -- \"$file\"\n    ;;\n  \"M\") # Modified files\n    commit_message=\"update $file\"\n    git add -- \"$file\"\n    ;;\n  \"D\") # Deleted files\n    commit_message=\"delete $file\"\n    git rm --cached --ignore-unmatch \"$file\"  # Handle deletion\n    ;;\n  \"??\") # Untracked files (new files)\n    commit_message=\"create $file\"\n    git add -- \"$file\"\n    ;;\n  *) # Other statuses\n    echo \"Unknown status: $status for file: $file\"\n    ;;\nesac\n","recorded":"2025-01-08 22:25:14.413582924","filePath":"null","pinned":false},{"value":"  case \"$status\" in\n    \"A\") # Added files (new files, untracked)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      git add -- \"$file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      git rm -- \"$file\"\n      ;;\n    \"??\") # Untracked files (new files)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      git add -- \"$file\"\n      ;;\n  esac","recorded":"2025-01-08 22:25:03.277728931","filePath":"null","pinned":false},{"value":"rofi rofi-emoji rofi-calc","recorded":"2025-01-08 22:22:35.388359524","filePath":"null","pinned":false},{"value":"Ruixi-rebirth/sway-dotf","recorded":"2025-01-08 22:20:18.277791454","filePath":"null","pinned":false},{"value":"\n# -------------------------------------------------------------------------------------\n\necho \"Setting up dwm...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install i3?\" \\\n  --yesno \"Would you like to install i3 window manager?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"dwm installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"dwm installation will begin now.\" 10 50\n\n  sudo pacman -S i3-wm polybar kitty rofi dunst papirus-icon-theme picom feh neofetch w3m xfce4-power-manager\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"dwm has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear","recorded":"2025-01-08 22:05:34.333541552","filePath":"null","pinned":false},{"value":"Bugreports: https://github.com/davatorium/rofi/","recorded":"2025-01-08 22:03:48.326148031","filePath":"null","pinned":false},{"value":"\t• drun    enabled","recorded":"2025-01-08 22:03:33.922445105","filePath":"null","pinned":false},{"value":"rofi -show drun  -config ~/.config/hypr/rofi/config.rasi\n[1]    2685 segmentation fault (core dumped)  rofi -show drun -config ~/.config/hypr/rofi/config.rasi","recorded":"2025-01-08 22:02:10.711977875","filePath":"null","pinned":false},{"value":"feh --bg-fill 'path/to/image.jpg' ","recorded":"2025-01-08 21:48:42.718162115","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/i3/.config/i3/rofi/Wifimenu","recorded":"2025-01-08 21:41:14.211597013","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/i3/.config/i3/rofi/powermenu/powermenu.sh\n/home/karna/dotfiles/i3/.config/i3/rofi/powermenu/style-3.rasi","recorded":"2025-01-08 21:41:00.418471126","filePath":"null","pinned":false},{"value":"sudo pacman -S i3-wm polybar kitty rofi dunst papirus-icon-theme picom feh neofetch","recorded":"2025-01-08 21:31:37.155236172","filePath":"null","pinned":false},{"value":"  stow ~/dotfiles/suckless/\n\n  cd ~/.config/dwm \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/slstatus \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/st \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/.config/dmenu \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/dotfiles/Extras/Extras/waldl-master/ \u0026\u0026 sudo make install \u0026\u0026 cd ~/dotfiles\n\n  sudo mkdir /usr/share/xsessions/\n  sudo cp ~/dotfiles/Extras/Extras/usr/share/xsessions/dwm.desktop /usr/share/xsessions","recorded":"2025-01-08 21:31:29.448382903","filePath":"null","pinned":false},{"value":"# map dD console delete\nmap \u003cF8\u003e shell -w echo \"Use Delete or DD to delete files. It uses trash-cli.\"\nmap \u003cDELETE\u003e shell -p trash -v %s 2\u003e\u00261\nmap DD shell -p trash -v %s 2\u003e\u00261","recorded":"2025-01-08 21:27:54.078840265","filePath":"null","pinned":false},{"value":"map dD console delete\n","recorded":"2025-01-08 21:27:47.204775977","filePath":"null","pinned":false},{"value":"class code(Command):\n  \"\"\"\n  :code\n\n  Opens current directory in VSCode\n  \"\"\"\n\n  def execute(self):\n    dirname = self.fm.thisdir.path\n    codecmd = [\"code\", dirname]\n    self.fm.execute_command(codecmd)","recorded":"2025-01-08 21:24:04.147663308","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Dotfiles_i3-master/ncmpcpp/config","recorded":"2025-01-08 21:18:08.871861392","filePath":"null","pinned":false},{"value":"selected_item_prefix = \"$0\"\nselected_item_suffix = \"$9\"\nuser_interface = \"alternative\"","recorded":"2025-01-08 21:17:40.975833313","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Dotfiles_i3-master/ncmpcpp/ncmpcpp-ueberzug","recorded":"2025-01-08 21:10:35.348524412","filePath":"null","pinned":false},{"value":"## name: Catppuccin\n## author: Pocco81 (https://github.com/Pocco81)\n## license: MIT\n## upstream: https://github.com/catppuccin/kitty/blob/main/catppuccin.conf\n## blurb: Soothing pastel theme for the high-spirited!\n\n# The basic colors\nforeground              #D9E0EE\nbackground              #1E1E2E\nselection_foreground    #D9E0EE\nselection_background    #575268\n\n# Cursor colors\ncursor                  #F5E0DC\ncursor_text_color       #1E1E2E\n\n# URL underline color when hovering with mouse\nurl_color               #F5E0DC\n\n# kitty window border colors\nactive_border_color     #C9CBFF\ninactive_border_color   #575268\nbell_border_color       #FAE3B0\n\n# OS Window titlebar colors\nwayland_titlebar_color system\nmacos_titlebar_color system\n\n#: Tab bar colors\nactive_tab_foreground   #F5C2E7\nactive_tab_background   #575268\ninactive_tab_foreground #D9E0EE\ninactive_tab_background #1E1e2E\ntab_bar_background      #161320\n\n# Colors for marks (marked text in the terminal)\n\nmark1_foreground #1E1E2E\nmark1_background #96CDFB\nmark2_foreground #1E1E2E\nmark2_background #F5C2E7\nmark3_foreground #1E1E2E\nmark3_background #B5E8E0\n\n#: The 16 terminal colors\n\n#: black\ncolor0 #6E6C7E\ncolor8 #988BA2\n\n#: red\ncolor1 #F28FAD\ncolor9 #F28FAD\n\n#: green\ncolor2  #ABE9B3\ncolor10 #ABE9B3\n\n#: yellow\ncolor3  #FAE3B0\ncolor11 #FAE3B0\n\n#: blue\ncolor4  #96CDFB\ncolor12 #96CDFB\n\n#: magenta\ncolor5  #F5C2E7\ncolor13 #F5C2E7\n\n#: cyan\ncolor6  #89DCEB\ncolor14 #89DCEB\n\n#: white\ncolor7  #D9E0EE\ncolor15 #D9E0EE\n","recorded":"2025-01-08 20:58:41.151507182","filePath":"null","pinned":false},{"value":"toggle_visualizer","recorded":"2025-01-08 20:43:34.753470224","filePath":"null","pinned":false},{"value":"CaskaydiaCove Nerd Font","recorded":"2025-01-08 20:43:34.728399673","filePath":"null","pinned":false},{"value":"Jet Brains Mono Nerd Font","recorded":"2025-01-08 20:43:30.992846575","filePath":"null","pinned":false},{"value":"Algorithm79's i3 dotfiles","recorded":"2025-01-08 20:41:02.662598269","filePath":"null","pinned":false},{"value":"unzip Hack.zip","recorded":"2025-01-08 20:39:31.357365067","filePath":"null","pinned":false},{"value":"wget https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/Hack.zip","recorded":"2025-01-08 20:39:27.176417346","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/i3","recorded":"2025-01-08 20:32:19.523442280","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Ubuntu-i3-rice-main/polybar","recorded":"2025-01-08 20:32:11.546588314","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Ubuntu-i3-rice-main/rofi","recorded":"2025-01-08 20:31:40.421422943","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Ubuntu-i3-rice-main/picom/picom.conf","recorded":"2025-01-08 20:26:41.182039701","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Ubuntu-i3-rice-main/neofetch/animeascii\n/home/karna/Downloads/Ubuntu-i3-rice-main/neofetch/config.conf\n/home/karna/Downloads/Ubuntu-i3-rice-main/neofetch/random_ascii.sh","recorded":"2025-01-08 20:25:55.045628880","filePath":"null","pinned":false},{"value":"sticker_file       \"~/.config/mpd/sticker.sql\"\n","recorded":"2025-01-08 20:22:25.215499079","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Ubuntu-i3-rice-main/dunst/critical.png\n/home/karna/Downloads/Ubuntu-i3-rice-main/dunst/normal.png\n/home/karna/Downloads/Ubuntu-i3-rice-main/dunst/notify-send.sh\n/home/karna/Downloads/Ubuntu-i3-rice-main/dunst/volume.sh","recorded":"2025-01-08 20:21:25.351481955","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Ubuntu-i3-rice-main/dunst/critical.png\n/home/karna/Downloads/Ubuntu-i3-rice-main/dunst/normal.png\n/home/karna/Downloads/Ubuntu-i3-rice-main/dunst/notify-send.sh","recorded":"2025-01-08 20:21:22.862142138","filePath":"null","pinned":false},{"value":"[shortcuts]\n\n    # Shortcuts are specified as [modifier+][modifier+]...key\n    # Available modifiers are \"ctrl\", \"mod1\" (the alt-key), \"mod2\",\n    # \"mod3\" and \"mod4\" (windows-key).\n    # Xev might be helpful to find names for keys.\n\n    # Close notification.\n    close = ctrl+space\n\n    # Close all notifications.\n    close_all = ctrl+shift+space\n\n    # Redisplay last message(s).\n    # On the US keyboard layout \"grave\" is normally above TAB and left\n    # of \"1\". Make sure this key actually exists on your keyboard layout,\n    # e.g. check output of 'xmodmap -pke'\n    history = ctrl+grave\n\n    # Context menu.\n    context = ctrl+shift+period\n\n","recorded":"2025-01-08 20:19:00.216240011","filePath":"null","pinned":false},{"value":"[shortcuts]\n\n    # Shortcuts are specified as [modifier+][modifier+]...key\n    # Available modifiers are \"ctrl\", \"mod1\" (the alt-key), \"mod2\",\n    # \"mod3\" and \"mod4\" (windows-key).\n    # Xev might be helpful to find names for keys.\n\n    # Close notification.\n    close = ctrl+space\n\n    # Close all notifications.\n    close_all = ctrl+shift+space\n\n    # Redisplay last message(s).\n    # On the US keyboard layout \"grave\" is normally above TAB and left\n    # of \"1\". Make sure this key actually exists on your keyboard layout,\n    # e.g. check output of 'xmodmap -pke'\n    history = ctrl+grave\n\n    # Context menu.\n    context = ctrl+shift+period","recorded":"2025-01-08 20:16:02.022667797","filePath":"null","pinned":false},{"value":"dialog --msgbox","recorded":"2025-01-08 18:45:09.934834309","filePath":"null","pinned":false},{"value":" gradient_color_6 = '#E894E1'\n gradient_color_5 = '#DA97E9'\n gradient_color_4 = '#C49AEB'\n gradient_color_3 = '#B49CEB'\n gradient_color_2 = '#A19FEC'\n gradient_color_1 = '#A2B5ED'","recorded":"2025-01-08 18:45:09.921136876","filePath":"null","pinned":false},{"value":"gradient_color_1 = '#B5E8E0'\ngradient_color_2 = '#89DCEB'\ngradient_color_3 = '#96CDFB'\ngradient_color_4 = '#DDB6F2'\ngradient_color_5 = '#F5C2E7'\ngradient_color_6 = '#E8A2AF'\ngradient_color_7 = '#F2CDCD'\ngradient_color_8 = '#F5E0DC'","recorded":"2025-01-08 18:45:06.203444363","filePath":"null","pinned":false},{"value":"/mnt/Karna/Git/Project-K/","recorded":"2025-01-08 18:11:58.235938284","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Initialize commit counter\ncommit_counter=0\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Check if the file is a directory (based on the status code)\n  if [ -d \"$file\" ]; then\n    continue\n  fi\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: $file with status: $status\"\n\n  # Remove any unwanted quotes around the file name\n  file=$(echo \"$file\" | sed 's/^\"\\(.*\\)\"$/\\1/')\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files (new files, untracked)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      git add -- \"$file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      git rm -- \"$file\"\n      ;;\n    \"??\") # Untracked files (new files)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      git add -- \"$file\"\n      ;;\n  esac\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" \u0026\u0026 commit_counter=$((commit_counter + 1)) || { echo \"Commit failed for file: $file\"; continue; }\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Check if there were no commits\nif [ \"$commit_counter\" -eq 0 ]; then\n  echo \"No changes to commit. Exiting.\"\n  exit 0\nfi\n\n# Show the number of commits before pushing\necho \"$commit_counter commit(s) have been successfully made.\"\n\n# Confirm pushing the changes\nread -p \"Do you want to push these changes to branch '$branch'? (y/n): \" confirm_push\nif [[ \"$confirm_push\" == \"y\" || \"$confirm_push\" == \"Y\" ]]; then\n  # Push all committed changes\n  echo \"Pushing changes to branch '$branch'...\"\n  git push origin \"$branch\"\n  echo \"Changes have been pushed to the remote repository.\"\nelse\n  echo \"Push cancelled. Changes are committed locally.\"\nfi\n","recorded":"2025-01-08 18:10:07.405896098","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Initialize commit counter\ncommit_counter=0\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: \\\"$file\\\" with status: $status\"\n\n  # Remove any unwanted quotes around the file name\n  file=$(echo \"$file\" | sed 's/^\"\\(.*\\)\"$/\\1/')\n\n  # Check if the file or directory exists\n  if [ ! -e \"$file\" ]; then\n    echo \"Warning: File or directory $file does not exist.\"\n    continue\n  fi\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files (new files, untracked)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      git add -- \"$file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      git rm -- \"$file\"\n      ;;\n    \"??\") # Untracked files (new files)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      git add -- \"$file\"\n      ;;\n  esac\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" \u0026\u0026 commit_counter=$((commit_counter + 1)) || { echo \"Commit failed for file: $file\"; continue; }\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Check if there were no commits\nif [ \"$commit_counter\" -eq 0 ]; then\n  echo \"No changes to commit. Exiting.\"\n  exit 0\nfi\n\n# Show the number of commits before pushing\necho \"$commit_counter commit(s) have been successfully made.\"\n\n# Confirm pushing the changes\nread -p \"Do you want to push these changes to branch '$branch'? (y/n): \" confirm_push\nif [[ \"$confirm_push\" == \"y\" || \"$confirm_push\" == \"Y\" ]]; then\n  # Push all committed changes\n  echo \"Pushing changes to branch '$branch'...\"\n  git push origin \"$branch\"\n  echo \"Changes have been pushed to the remote repository.\"\nelse\n  echo \"Push cancelled. Changes are committed locally.\"\nfi\n","recorded":"2025-01-08 18:10:02.983992215","filePath":"null","pinned":false},{"value":"ranger_karna/.config/ranger/commands.py","recorded":"2025-01-08 18:09:29.416537116","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Initialize commit counter\ncommit_counter=0\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Check if the file is a directory (based on the status code)\n  if [ -d \"$file\" ]; then\n    continue\n  fi\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: $file with status: $status\"\n\n  # Remove any unwanted quotes around the file name\n  file=$(echo \"$file\" | sed 's/^\"\\(.*\\)\"$/\\1/')\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files (new files, untracked)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      git add -- \"$file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      git rm -- \"$file\"\n      ;;\n    \"??\") # Untracked files (new files)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      git add -- \"$file\"\n      ;;\n  esac\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" \u0026\u0026 commit_counter=$((commit_counter + 1)) || { echo \"Commit failed for file: $file\"; continue; }\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Show the number of commits before pushing\necho \"$commit_counter commit(s) have been successfully made.\"\n\n# Confirm pushing the changes\nread -p \"Do you want to push these changes to branch '$branch'? (y/n): \" confirm_push\nif [[ \"$confirm_push\" == \"y\" || \"$confirm_push\" == \"Y\" ]]; then\n  # Push all committed changes\n  echo \"Pushing changes to branch '$branch'...\"\n  git push origin \"$branch\"\n  echo \"Changes have been pushed to the remote repository.\"\nelse\n  echo \"Push cancelled. Changes are committed locally.\"\nfi\n","recorded":"2025-01-08 18:09:03.840996535","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/gitAutoCommitter.sh","recorded":"2025-01-08 18:07:29.561903760","filePath":"null","pinned":false},{"value":"/mnt/Karna/Git/Books/","recorded":"2025-01-08 18:04:44.705621287","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Initialize commit counter\ncommit_counter=0\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Check if the file is a directory (based on the status code)\n  if [ -d \"$file\" ]; then\n    continue\n  fi\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: $file with status: $status\"\n\n  # Remove any unwanted quotes around the file name\n  file=$(echo \"$file\" | sed 's/^\"\\(.*\\)\"$/\\1/')\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files (new files, untracked)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      git add -- \"$file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      git rm -- \"$file\"\n      ;;\n    \"??\") # Untracked files (new files)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      git add -- \"$file\"\n      ;;\n  esac\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" \u0026\u0026 commit_counter=$((commit_counter + 1)) || { echo \"Commit failed for file: $file\"; continue; }\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to branch '$branch'...\"\ngit push origin \"$branch\"\n\n# Output the total number of commits made\necho \"$commit_counter commit(s) have been successfully made.\"\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 18:04:18.775920447","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Check if the file is a directory (based on the status code)\n  if [ -d \"$file\" ]; then\n    continue\n  fi\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: $file with status: $status\"\n\n  # Remove any unwanted quotes around the file name\n  file=$(echo \"$file\" | sed 's/^\"\\(.*\\)\"$/\\1/')\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files (new files, untracked)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      git add -- \"$file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      git rm -- \"$file\"\n      ;;\n    \"??\") # Untracked files (new files)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      git add -- \"$file\"\n      ;;\n  esac\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" || { echo \"Commit failed for file: $file\"; continue; }\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to branch '$branch'...\"\ngit push origin \"$branch\"\n\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 18:03:11.833681022","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Check if the file is a directory (based on the status code)\n  if [ -d \"$file\" ]; then\n    continue\n  fi\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: $file with status: $status\"\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files (new files, untracked)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      git add -- \"$file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      git rm -- \"$file\"\n      ;;\n    \"??\") # Untracked files (new files)\n      commit_message=\"create $file\"\n      git add -- \"$file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      git add -- \"$file\"\n      ;;\n  esac\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" || { echo \"Commit failed for file: \\\"$file\\\"\"; continue; }\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to branch '$branch'...\"\ngit push origin \"$branch\"\n\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 18:01:26.470373415","filePath":"null","pinned":false},{"value":"Enter the Git repository path: .\nEnter branch to push changes (default: main): \nProcessing changes...\nProcessing file: \"Deep Learning/1722433328418.pdf\" with status: D\nfatal: pathspec '\"Deep Learning/1722433328418.pdf\"' did not match any files\nCommitting: \"delete \"Deep Learning/1722433328418.pdf\"\"\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add/rm \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tdeleted:    Deep Learning/1722433328418.pdf\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nUntracked files:\n  (use \"git add \u003cfile\u003e...\" to include in what will be committed)\n\tDeep Learning/172243332841.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/1722433328418.pdf\"\"\nProcessing file: \"Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\" with status: M\nfatal: pathspec '\"Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\"' did not match any files\nCommitting: \"update \"Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\"\"\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add/rm \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tdeleted:    Deep Learning/1722433328418.pdf\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nUntracked files:\n  (use \"git add \u003cfile\u003e...\" to include in what will be committed)\n\tDeep Learning/172243332841.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\"\"\nProcessing file: \"Deep Learning/EAAI-24-9693.pdf\" with status: M\nfatal: pathspec '\"Deep Learning/EAAI-24-9693.pdf\"' did not match any files\nCommitting: \"update \"Deep Learning/EAAI-24-9693.pdf\"\"\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add/rm \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tdeleted:    Deep Learning/1722433328418.pdf\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nUntracked files:\n  (use \"git add \u003cfile\u003e...\" to include in what will be committed)\n\tDeep Learning/172243332841.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/EAAI-24-9693.pdf\"\"\nProcessing file: \"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\" with status: M\nfatal: pathspec '\"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"' did not match any files\nCommitting: \"update \"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"\"\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add/rm \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tdeleted:    Deep Learning/1722433328418.pdf\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nUntracked files:\n  (use \"git add \u003cfile\u003e...\" to include in what will be committed)\n\tDeep Learning/172243332841.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"\"\nProcessing file: \"Deep Learning/172243332841.pdf\" with status: ??\nfatal: pathspec '\"Deep Learning/172243332841.pdf\"' did not match any files\nCommitting: \"create \"Deep Learning/172243332841.pdf\"\"\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add/rm \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tdeleted:    Deep Learning/1722433328418.pdf\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nUntracked files:\n  (use \"git add \u003cfile\u003e...\" to include in what will be committed)\n\tDeep Learning/172243332841.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/172243332841.pdf\"\"\nPushing changes to branch 'main'...\nEverything up-to-date\nAll changes have been committed and pushed.","recorded":"2025-01-08 17:59:32.891861436","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  # Check if the file is a directory (based on the status code)\n  if [ -d \"$file\" ]; then\n    continue\n  fi\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: $file with status: $status\"\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files\n      commit_message=\"create $file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      ;;\n    \"R\") # Renamed files\n      old_file=$(echo \"$line\" | awk '{print $2}')\n      new_file=$(echo \"$line\" | awk '{print $3}')\n      commit_message=\"rename $old_file to $new_file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      ;;\n  esac\n\n  # Stage the change\n  if [ \"$status\" = \"D\" ]; then\n    git rm -- \"$file\" \u0026\u003e/dev/null\n  else\n    git add -- \"$file\" \u0026\u003e/dev/null\n  fi\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" || { echo \"Commit failed for file: \\\"$file\\\"\"; continue; }\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to branch '$branch'...\"\ngit push origin \"$branch\"\n\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 17:59:13.872696444","filePath":"null","pinned":false},{"value":"git status --porcelain\n D \"Deep Learning/1722433328418.pdf\"\n M \"Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\"\n M \"Deep Learning/EAAI-24-9693.pdf\"\n M \"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"\n?? \"Deep Learning/172243332841.pdf\"","recorded":"2025-01-08 17:58:45.106979519","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  if [ -z \"$file\" ]; then\n    continue\n  fi\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: $file with status: $status\"\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files\n      commit_message=\"create $file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      ;;\n    \"R\") # Renamed files\n      old_file=$(echo \"$line\" | awk '{print $2}')\n      new_file=$(echo \"$line\" | awk '{print $3}')\n      commit_message=\"rename $old_file to $new_file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      ;;\n  esac\n\n  # Stage the change\n  if [ \"$status\" = \"D\" ]; then\n    git rm -- \"$file\" \u0026\u003e/dev/null\n  else\n    git add -- \"$file\" \u0026\u003e/dev/null\n  fi\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" || { echo \"Commit failed for file: \\\"$file\\\"\"; continue; }\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to branch '$branch'...\"\ngit push origin \"$branch\"\n\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 17:57:17.710972966","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  if [ -z \"$file\" ]; then\n    continue\n  fi\n\n  # Debugging: Output the status and file to ensure correct handling\n  echo \"Processing file: \\\"$file\\\" with status: $status\"\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files\n      commit_message=\"create $file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      ;;\n    \"R\") # Renamed files\n      old_file=$(echo \"$line\" | awk '{print $2}')\n      new_file=$(echo \"$line\" | awk '{print $3}')\n      commit_message=\"rename $old_file to $new_file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      ;;\n  esac\n\n  # Stage the change\n  if [ \"$status\" = \"D\" ]; then\n    git rm -- \"$file\" \u0026\u003e/dev/null\n  else\n    git add -- \"$file\" \u0026\u003e/dev/null\n  fi\n\n  # Commit the change\n  echo \"Committing: \\\"$commit_message\\\"\"\n  git commit -m \"$commit_message\" || { echo \"Commit failed for file: \\\"$file\\\"\"; continue; }\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to branch '$branch'...\"\ngit push origin \"$branch\"\n\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 17:55:50.182905962","filePath":"null","pinned":false},{"value":"Enter the Git repository path: .\nEnter branch to push changes (default: main): \nProcessing changes...\nProcessing file: \"\"Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\"\" with status: M\nCommitting: \"update \"Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\"\"\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\"\"\nProcessing file: \"\"Deep Learning/EAAI-24-9693.pdf\"\" with status: M\nCommitting: \"update \"Deep Learning/EAAI-24-9693.pdf\"\"\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/EAAI-24-9693.pdf\"\"\nProcessing file: \"\"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"\" with status: M\nCommitting: \"update \"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"\"\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"\"\nPushing changes to branch 'main'...\nEverything up-to-date\nAll changes have been committed and pushed.","recorded":"2025-01-08 17:55:24.102999023","filePath":"null","pinned":false},{"value":"ate with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\"\"\nProcessing file: \"\"Deep Learning/EAAI-24-9693.pdf\"\" with status: M\nCommitting: \"update \"Deep Learning/EAAI-24-9693.pdf\"\"\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/EAAI-24-9693.pdf\"\"\nProcessing file: \"\"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"\" with status: M\nCommitting: \"update \"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"\"\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nCommit failed for file: \"\"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"\"\nPushing changes to branch 'main'...\nEverything up-to-date\nAll changes have been committed and pushed.","recorded":"2025-01-08 17:55:08.343065177","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  if [ -z \"$file\" ]; then\n    continue\n  fi\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files\n      commit_message=\"create $file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      ;;\n    \"R\") # Renamed files\n      old_file=$(echo \"$line\" | awk '{print $2}')\n      new_file=$(echo \"$line\" | awk '{print $3}')\n      commit_message=\"rename $old_file to $new_file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      ;;\n  esac\n\n  # Stage the change\n  if [ \"$status\" = \"D\" ]; then\n    git rm -- \"$file\" \u0026\u003e/dev/null\n  else\n    git add -- \"$file\" \u0026\u003e/dev/null\n  fi\n\n  # Commit the change\n  git commit -m \"$commit_message\"\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to branch '$branch'...\"\ngit push origin \"$branch\"\n\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 17:54:48.662666929","filePath":"null","pinned":false},{"value":"git status --porcelain\n M \"Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\"\n M \"Deep Learning/EAAI-24-9693.pdf\"\n M \"Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\"","recorded":"2025-01-08 17:53:24.210458974","filePath":"null","pinned":false},{"value":"git status --porcelain","recorded":"2025-01-08 17:53:14.943114233","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  # Extract status and file name, handling spaces correctly\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print substr($0, index($0,$2))}' | sed 's/^ *//')\n\n  if [ -z \"$file\" ]; then\n    continue\n  fi\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files\n      commit_message=\"create $file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      ;;\n    \"R\") # Renamed files\n      old_file=$(echo \"$line\" | awk '{print $2}')\n      new_file=$(echo \"$line\" | awk '{print $3}')\n      commit_message=\"rename $old_file to $new_file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      ;;\n  esac\n\n  # Stage the change\n  git add \"$file\" \u0026\u003e/dev/null || git rm \"$file\" \u0026\u003e/dev/null\n  \n  # Commit the change\n  git commit -m \"$commit_message\"\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to branch '$branch'...\"\ngit push origin \"$branch\"\n\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 17:52:14.451000508","filePath":"null","pinned":false},{"value":"Enter the Git repository path: /mnt/Karna/Git/Books/\nEnter branch to push changes (default: main): \nProcessing changes...\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nPushing changes to branch 'main'...\nEverything up-to-date\nAll changes have been committed and pushed.","recorded":"2025-01-08 17:51:21.331479657","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Prompt for the repository path\nread -p \"Enter the Git repository path: \" repo_path\n\n# Check if the path exists and is a valid Git repository\nif [ ! -d \"$repo_path/.git\" ]; then\n  echo \"The specified path is not a Git repository. Please provide a valid repo path.\"\n  exit 1\nfi\n\n# Change to the repository directory\ncd \"$repo_path\" || exit\n\n# Get the current branch name\ncurrent_branch=$(git rev-parse --abbrev-ref HEAD)\n\n# Prompt for the branch to push changes to\nread -p \"Enter branch to push changes (default: $current_branch): \" input_branch\nbranch=${input_branch:-$current_branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print $2}')\n\n  if [ -z \"$file\" ]; then\n    continue\n  fi\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files\n      commit_message=\"create $file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      ;;\n    \"R\") # Renamed files\n      old_file=$(echo \"$line\" | awk '{print $3}')\n      commit_message=\"rename $old_file to $file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      ;;\n  esac\n\n  # Stage the change\n  git add \"$file\"\n  \n  # Commit the change\n  git commit -m \"$commit_message\"\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to branch '$branch'...\"\ngit push origin \"$branch\"\n\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 17:50:40.781238444","filePath":"null","pinned":false},{"value":"Enter the Git repository path: /mnt/Karna/Git/Books/\nEnter branch to push changes (default: main): main\nProcessing changes...\nfatal: pathspec '\"Deep' did not match any files\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add/rm \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Deep Learning/Deep Double Descent_ Where Bigger Models and More Data Hurt.pdf\n\tmodified:   Deep Learning/EAAI-24-9693.pdf\n\tmodified:   Deep Learning/Topological Deep Learning_ Going Beyond Graph Data.pdf\n\tdeleted:    Internships/ISRO/Isro.pdf\n\tdeleted:    Internships/ISRO/application_ISRO.pdf\n\tmodified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nfatal: pathspec '\"Deep' did not match any files\nOn branch main\nYour branch is up to date with 'origin/main'.","recorded":"2025-01-08 17:49:48.601628409","filePath":"null","pinned":false},{"value":"\n#!/bin/bash\n\n# Check if the script is being run in a Git repository\nif [ ! -d \".git\" ]; then\n  echo \"This is not a Git repository. Please run this script inside a Git repo.\"\n  exit 1\nfi\n\n# Prompt for a branch to push changes to\nbranch=$(git rev-parse --abbrev-ref HEAD)\nread -p \"Enter branch to push changes (default: $branch): \" input_branch\nbranch=${input_branch:-$branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print $2}')\n\n  if [ -z \"$file\" ]; then\n    continue\n  fi\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files\n      commit_message=\"create $file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      ;;\n    \"R\") # Renamed files\n      old_file=$(echo \"$line\" | awk '{print $3}')\n      commit_message=\"rename $old_file to $file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      ;;\n  esac\n\n  # Stage the change\n  git add \"$file\"\n  \n  # Commit the change\n  git commit -m \"$commit_message\"\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to $branch...\"\ngit push origin \"$branch\"\n\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 17:47:26.050269367","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Check if the script is being run in a Git repository\nif [ ! -d \".git\" ]; then\n  echo \"This is not a Git repository. Please run this script inside a Git repo.\"\n  exit 1\nfi\n\n# Prompt for a branch to push changes to\nbranch=$(git rev-parse --abbrev-ref HEAD)\nread -p \"Enter branch to push changes (default: $branch): \" input_branch\nbranch=${input_branch:-$branch}\n\n# Check for unstaged changes\nchanges=$(git status --porcelain)\nif [ -z \"$changes\" ]; then\n  echo \"No changes detected. Exiting.\"\n  exit 0\nfi\n\n# Loop through each change and commit individually\necho \"Processing changes...\"\nwhile IFS= read -r line; do\n  status=$(echo \"$line\" | awk '{print $1}')\n  file=$(echo \"$line\" | awk '{print $2}')\n\n  if [ -z \"$file\" ]; then\n    continue\n  fi\n\n  # Determine commit message based on file status\n  case \"$status\" in\n    \"A\") # Added files\n      commit_message=\"create $file\"\n      ;;\n    \"M\") # Modified files\n      commit_message=\"update $file\"\n      ;;\n    \"D\") # Deleted files\n      commit_message=\"delete $file\"\n      ;;\n    \"R\") # Renamed files\n      old_file=$(echo \"$line\" | awk '{print $3}')\n      commit_message=\"rename $old_file to $file\"\n      ;;\n    *) # Other statuses\n      commit_message=\"change $file\"\n      ;;\n  esac\n\n  # Stage the change\n  git add \"$file\"\n  \n  # Commit the change\n  git commit -m \"$commit_message\"\n\ndone \u003c\u003c\u003c \"$(git status --porcelain)\"\n\n# Push all committed changes\necho \"Pushing changes to $branch...\"\ngit push origin \"$branch\"\n\necho \"All changes have been committed and pushed.\"\n","recorded":"2025-01-08 17:45:28.711281005","filePath":"null","pinned":false},{"value":"git-sizer","recorded":"2025-01-08 17:40:55.115008638","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/install.sh","recorded":"2025-01-08 17:36:04.106441008","filePath":"null","pinned":false},{"value":"# Stow configuration based on username\n    if [ \"$(whoami)\" == \"karna\" ]; then\n      stow_folder=\"ytfzf_karna\"\n    else\n      stow_folder=\"ytfzf\"\n    fi\n\n    # Apply the stow configuration\n    cd ~/dotfiles\n    stow \"$stow_folder\"","recorded":"2025-01-08 17:33:25.958012967","filePath":"null","pinned":false},{"value":"    ;;\n","recorded":"2025-01-08 17:33:12.276477782","filePath":"null","pinned":false},{"value":"    dialog --msgbox \"ytfzf configuration ($stow_folder) has been set up.\" 10 50\n","recorded":"2025-01-08 17:33:11.824314283","filePath":"null","pinned":false},{"value":"  \"ytfzf\")\n    echo \"Installing ytfzf...\"\n    paru -S --noconfirm --needed ytfzf-git","recorded":"2025-01-08 17:33:05.731563246","filePath":"null","pinned":false},{"value":"  \"ytfzf\")\n    echo \"Installing ytfzf...\"\n    paru -S --noconfirm --needed ytfzf-git\n\n    # Stow configuration based on username\n    if [ \"$(whoami)\" == \"karna\" ]; then\n      stow_folder=\"ytfzf_karna\"\n    else\n      stow_folder=\"ytfzf\"\n    fi\n\n    # Apply the stow configuration\n    cd ~/dotfiles\n    stow \"$stow_folder\"\n    dialog --msgbox \"ytfzf configuration ($stow_folder) has been set up.\" 10 50\n    ;;\n","recorded":"2025-01-08 17:33:00.816667086","filePath":"null","pinned":false},{"value":"#!/bin/bash\n","recorded":"2025-01-08 17:30:35.587065522","filePath":"null","pinned":false},{"value":"echo \"Setting up Hyprland...\"\n\n# Ask the user if they want to install Hyprland\ndialog --title \"Install Hyprland?\" \\\n  --yesno \"Would you like to install Hyprland (a dynamic Wayland compositor)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Hyprland installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Hyprland installation will begin now.\" 10 50\nfi\n\nsudo pacman -S kitty system-config-printer hyprpicker hyprlock chafa hypridle waybar wl-clipboard speech-dispatcher hyprpaper brightnessctl cmake meson cpio grim slurp wtype wf-recorder swaync\n\nparu -S wlrobs-hg hyprland-git xdg-desktop-portal-hyprland-git clipse-bin hyde-cli-git wlogout hyprshot-git hyprland-qtutils\n\nsudo cp ~/dotfiles/Extras/Extras/nvim.desktop /usr/share/applications/\n\n# Set up Hyprland configuration\necho \"Configuring Hyprland...\"\n\n# Create the configuration file if it doesn't exist\nif [ ! -f \"$HOME/.config/hypr/hyprland.conf\" ]; then\n  cd ~/dotfiles\n  stow Hyprland\n  dialog --msgbox \"Hyprland configuration has been set up.\" 10 50\nelse\n  dialog --msgbox \"Hyprland configuration file already exists.\" 10 50\nfi\n\n# Inform the user that installation is complete\ndialog --msgbox \"Hyprland has been installed and configured. Please restart your system to start using Hyprland.\" 10 50\n\nclear","recorded":"2025-01-08 17:30:34.355450950","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Hyprland...\"\n\n# Ask the user if they want to install Hyprland\ndialog --title \"Install Hyprland?\" \\\n  --yesno \"Would you like to install Hyprland (a dynamic Wayland compositor)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Hyprland installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Hyprland installation will begin now.\" 10 50\nfi\n\n# Install Hyprland and related packages\nsudo pacman -S --noconfirm kitty system-config-printer hyprpicker hyprlock chafa hypridle waybar wl-clipboard speech-dispatcher hyprpaper brightnessctl cmake meson cpio grim slurp wtype wf-recorder swaync\n\nparu -S --noconfirm wlrobs-hg hyprland-git xdg-desktop-portal-hyprland-git clipse-bin hyde-cli-git wlogout hyprshot-git hyprland-qtutils\n\nsudo cp ~/dotfiles/Extras/Extras/nvim.desktop /usr/share/applications/\n\n# Set up Hyprland configuration\necho \"Configuring Hyprland...\"\n\n# Check if the username is \"karna\"\nif [ \"$(whoami)\" == \"karna\" ]; then\n  stow_folder=\"Hyprland\"\nelse\n  stow_folder=\"Hypr_ALL\"\nfi\n\n# Create the configuration file if it doesn't exist\nif [ ! -f \"$HOME/.config/hypr/hyprland.conf\" ]; then\n  cd ~/dotfiles\n  stow \"$stow_folder\"\n  dialog --msgbox \"Hyprland configuration ($stow_folder) has been set up.\" 10 50\nelse\n  dialog --msgbox \"Hyprland configuration file already exists.\" 10 50\nfi\n\n# Inform the user that installation is complete\ndialog --msgbox \"Hyprland has been installed and configured. Please restart your system to start using Hyprland.\" 10 50\n\nclear\n","recorded":"2025-01-08 17:30:29.277518688","filePath":"null","pinned":false},{"value":"dialog --title \"Install Extras?\" \\\n  --yesno \"Choose to Install my configs?\" 10 60\n\n","recorded":"2025-01-08 17:25:22.417366903","filePath":"null","pinned":false},{"value":"  echo \"User is karna. No files were stowed.\"\n","recorded":"2025-01-08 17:24:53.345836183","filePath":"null","pinned":false},{"value":"dialog --msgbox \"Extras have been installed.\" 10 50","recorded":"2025-01-08 17:24:39.964791193","filePath":"null","pinned":false},{"value":"echo \"Setting Extra Packages for System...\" \u0026\u0026 sleep 1\n\nsudo npm i -g bash-language-server\n\ncd ~/dotfiles/\n\nrm ~/.bashrc ~/.zshrc\n\ndialog --title \"Install Extras?\" \\\n  --yesno \"Choose to Install my configs?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Copy all configs from dots but before using change username from mine to yours...\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Extras installation will begin now.\" 10 50\nfi\n\nstow bashrc BTOP cava dunst DWMScripts fastfetch flameshot gtk-2 gtk-3 Hypr_ALL Kvantum mpd mpv ncmpcpp newsboat NWG pandoc pavucontrol qt6ct qutebrowser ranger redyt screensaver sxiv Templates Thunar XFCEPic xsettingsd ytfzf zathura zsh  \n\n# Show confirmation message\ndialog --msgbox \"Extras have been installed.\" 10 50\n\nclear","recorded":"2025-01-08 17:24:21.451585956","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting Extra Packages for System...\" \u0026\u0026 sleep 1\n\nsudo npm i -g bash-language-server\n\ncd ~/dotfiles/\n\nrm ~/.bashrc ~/.zshrc\n\ndialog --title \"Install Extras?\" \\\n  --yesno \"Choose to Install my configs?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Copy all configs from dots but before using change username from mine to yours...\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Extras installation will begin now.\" 10 50\nfi\n\n# Check if the username is \"karna\"\nif [ \"$(whoami)\" != \"karna\" ]; then\n  stow bashrc BTOP cava dunst DWMScripts fastfetch flameshot gtk-2 gtk-3 Hypr_ALL Kvantum mpd mpv ncmpcpp newsboat NWG pandoc pavucontrol qt6ct qutebrowser ranger redyt screensaver sxiv Templates Thunar XFCEPic xsettingsd ytfzf zathura zsh\n  \n  # Show confirmation message\n  dialog --msgbox \"Extras have been installed.\" 10 50\nelse\n  echo \"User is karna. No files were stowed.\"\nfi\n\nclear\n","recorded":"2025-01-08 17:24:16.974466607","filePath":"null","pinned":false},{"value":"  dialog --msgbox \"user not.\" 10 50\n","recorded":"2025-01-08 17:23:37.853116330","filePath":"null","pinned":false},{"value":"MB-Plum-Suru-GLOW_1.9.3.zip","recorded":"2025-01-08 17:18:56.811243002","filePath":"null","pinned":false},{"value":"MB-Cherry-Suru-GLOW_1.9.3.zip","recorded":"2025-01-08 17:18:48.788169747","filePath":"null","pinned":false},{"value":"    cd ~/dotfiles/\n","recorded":"2025-01-08 17:10:55.931167185","filePath":"null","pinned":false},{"value":"    stow ytfzf\n","recorded":"2025-01-08 17:10:55.335069931","filePath":"null","pinned":false},{"value":"# --------------------------------------------------------------------------------------\n\ncd ~/dotfiles/Extras/Extras/\n\nsudo cp etc/nanorc /etc/nanorc\nsudo cp etc/bash.bashrc /etc/bash.bashrc\nsudo cp etc/DIR_COLORS /etc/DIR_COLORS\nsudo cp etc/environment /etc/environment\nsudo cp etc/mpd.conf /etc/mpd.conf\n\ncp archcraft-dwm.zsh-theme ~/.oh-my-zsh/themes/archcraft-dwm.zsh-theme\n\n# Setup kaggle JSON and wakatime files using ccrypt\n\n# --------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 17:07:48.108032081","filePath":"null","pinned":false},{"value":"echo \"All done! Please reboot your system.\"\n","recorded":"2025-01-08 17:07:32.295358982","filePath":"null","pinned":false},{"value":"# -------------------------------------------------------------------------------------\n\necho \"Setting Extra Packages for System...\" \u0026\u0026 sleep 1\n\nsudo npm i -g bash-language-server\n\ncd ~/dotfiles/\n\nrm ~/.bashrc ~/.zshrc\n\ndialog --title \"Install Extras?\" \\\n  --yesno \"Please Press No since these are my installs(You can copy configs from dots)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Copy all configs from dots but before using change username from mine to yours...\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Extras installation will begin now.\" 10 50\nfi\n\nstow anipy-cli bashrc BTOP cava dunst face fastfetch DWMScripts flameshot gtk-3 Kvantum latexmkrc libreoffice mpd mpv ncmpcpp newsboat nvim NWG octave pandoc pavucontrol picom Profile qt6ct qutebrowser ranger redyt rofi screenlayout screensaver starship XFCEPic xsettingsd zathura zsh\n\n# Show confirmation message\ndialog --msgbox \"Extras have been installed.\" 10 50\n\nclear","recorded":"2025-01-08 17:06:44.363661597","filePath":"null","pinned":false},{"value":"echo \"Setting up Zsh...\"\n\n# Ask the user if they want to install Zsh\ndialog --title \"Install and Set Up Zsh?\" \\\n  --yesno \"Would you like to install Zsh and set it as your default shell?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Zsh installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Zsh installation will begin now.\" 10 50\n\n  # Install Zsh if not already installed\n  sudo pacman -S --noconfirm zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting\n\n  # Change the default shell to Zsh\n  chsh -s /bin/zsh\n\n  sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n\n  # Check if the installation was successful and prompt to restart the terminal\n  dialog --msgbox \"Zsh has been installed and set as your default shell. Please restart your terminal to apply the changes.\" 10 50\nfi\n\nclear","recorded":"2025-01-08 17:05:33.445841924","filePath":"null","pinned":false},{"value":"# choice yes or no\n","recorded":"2025-01-08 17:05:22.428515107","filePath":"null","pinned":false},{"value":"echo \"Setting up SDDM (Simple Desktop Display Manager)...\"\n\n# Install SDDM\necho \"Installing SDDM...\"\n\nsudo pacman -S --noconfirm sddm qt6-5compat qt6-declarative qt6-svg\n\necho \"Enabling SDDM to start at boot...\"\nsudo systemctl enable sddm.service --now\n\nsudo cp ~/dotfiles/Extras/Extras/usr/share/sddm/themes/simple-sddm/ /usr/share/sddm/themes\n\nsudo cp etc/sddm.conf /etc/sddm.conf\n\ncd ~/dotfiles/\n\n# Show confirmation message\ndialog --msgbox \"SDDM has been installed and enabled to start at boot.\" 10 50\n\nclear\n\n# --------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 16:47:27.634376443","filePath":"null","pinned":false},{"value":"echo \"Setting up GRUB theme...\"\n\n# Ask if the user wants to set up a GRUB theme\ndialog --title \"Install GRUB theme?\" \\\n  --yesno \"Would you like to install a GRUB theme?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"GRUB theme setup skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"GRUB theme setup will begin now.\" 10 50\nfi\n\nsudo cp ~/dotfiles/Extras/Extras/boot/grub/themes/SekiroShadow/ /boot/grub/themes/\n\n# Enable the GRUB theme\necho \"Setting GRUB theme...\"\necho 'GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"' | sudo tee -a /etc/default/grub\n\necho \"Enabling os-prober in GRUB configuration...\"\necho 'GRUB_DISABLE_OS_PROBER=\"false\"' | sudo tee -a /etc/default/grub\n\n# Regenerate GRUB config\necho \"Regenerating GRUB configuration...\"\nsudo grub-mkconfig -o /boot/grub/grub.cfg\n\ndialog --msgbox \"GRUB theme setup is complete and GRUB config has been updated.\" 10 50\nclear\n\n# --------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 16:46:55.327647897","filePath":"null","pinned":false},{"value":"echo \"Installing PIP Packages...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install my PIP packages?\" \\\n  --yesno \"Would you like to install my PIP Packages?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"PIP packages installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"PIP packages installation will begin now.\" 10 50\n\n  bash\n\n  pip install pynvim numpy pandas matplotlib seaborn scikit-learn jupyterlab ipykernel ipywidgets tensorflow python-prctl inotify-simple psutil opencv-python keras mov-cli-youtube mov-cli mov-cli-test otaku-watcher film-central daemon jupyterlab_wakatime\n\n  pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu # pytorch cpu version\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"PIP Packages has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear\n\n# --------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 16:31:42.961515724","filePath":"null","pinned":false},{"value":"  zsh\n","recorded":"2025-01-08 16:29:43.699471624","filePath":"null","pinned":false},{"value":"echo \"Setting up Ollama...\"\n\n# Ask the user if they want to install Ollama\ndialog --title \"Install Ollama?\" \\\n  --yesno \"Would you like to install Ollama (a tool to run large language models locally)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Ollama installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Ollama installation will begin now.\" 10 50\nfi\n\n# Check if Ollama is available through the AUR or if manual installation is needed\n# You can install Ollama from their official site or via AUR\n# We will use AUR (Arch User Repository) to install it using an AUR helper like paru.\n\n# Install Ollama using paru (or an AUR helper of your choice)\nif ! command -v ollama \u0026\u003e/dev/null; then\n  echo \"Ollama not found, installing Ollama from AUR...\"\n\n  # Install Ollama from the AUR using paru (if not already installed)\n  paru -S --noconfirm ollama\n\n  ollama serve\n  ollama pull mistral\n  ollama pull gemma:7b\n\n  # Inform the user that Ollama has been installed\n  dialog --msgbox \"Ollama has been installed. You can now use it to run local large language models.\" 10 50\nelse\n  dialog --msgbox \"Ollama is already installed on your system.\" 10 50\nfi\n\nclear\n\n# --------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 16:26:08.890051913","filePath":"null","pinned":false},{"value":"echo \"Setting up dwm...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install dwm?\" \\\n  --yesno \"Would you like to install dwm (Dynamic Window Manager)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"dwm installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"dwm installation will begin now.\" 10 50\n\n  stow ~/dotfiles/suckless/\n\n  cd ~/.config/dwm \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/slstatus \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/st \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/.config/dmenu \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/dotfiles/Extras/Extras/waldl-master/ \u0026\u0026 sudo make install \u0026\u0026 cd ~/dotfiles\n\n  sudo mkdir /usr/share/xsessions/\n  sudo cp ~/dotfiles/Extras/Extras/usr/share/xsessions/dwm.desktop /usr/share/xsessions\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"dwm has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear\n\n# --------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 16:25:54.161495877","filePath":"null","pinned":false},{"value":"echo \"Setting up Hyprland...\"\n\n# Ask the user if they want to install Hyprland\ndialog --title \"Install Hyprland?\" \\\n  --yesno \"Would you like to install Hyprland (a dynamic Wayland compositor)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Hyprland installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Hyprland installation will begin now.\" 10 50\nfi\n\nsudo pacman -S kitty system-config-printer hyprpicker hyprlock chafa hypridle waybar wl-clipboard speech-dispatcher hyprpaper brightnessctl cmake meson cpio grim slurp wtype wf-recorder swaync\n\nparu -S wlrobs-hg hyprland-git xdg-desktop-portal-hyprland-git clipse-bin hyde-cli-git wlogout hyprshot-git hyprland-qtutils\n\nsudo cp ~/dotfiles/Extras/Extras/nvim.desktop /usr/share/applications/\n\n# Set up Hyprland configuration\necho \"Configuring Hyprland...\"\n\n# Create the configuration file if it doesn't exist\nif [ ! -f \"$HOME/.config/hypr/hyprland.conf\" ]; then\n  cd ~/dotfiles\n  stow Hyprland\n  dialog --msgbox \"Hyprland configuration has been set up.\" 10 50\nelse\n  dialog --msgbox \"Hyprland configuration file already exists.\" 10 50\nfi\n\n# Inform the user that installation is complete\ndialog --msgbox \"Hyprland has been installed and configured. Please restart your system to start using Hyprland.\" 10 50\n\nclear\n\n# -------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 16:25:38.697057829","filePath":"null","pinned":false},{"value":"echo \"Setting up Fonts...\" \u0026\u0026 sleep 1\n\nmkdir -p ~/.local/share/fonts\ncd ~/.local/share/fonts\n\ngit clone https://github.com/Chaganti-Reddy/my-fonts.git\n\ncd my-fonts\n\nrm -rf .git/\n\ncd ~/dotfiles/\n\necho \"Fonts have been installed...\"\n\n# --------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 16:24:18.602345901","filePath":"null","pinned":false},{"value":"echo \"Setting up additional tools and packages...\"\n\n# Display checklist with a single column (scrollable) for additional tools using dialog\nextra_tools_choices=$(dialog --title \"Select Extra Tools to Install\" \\\n  --checklist \"Choose the extra tools and packages you want to install:\" 20 60 20 \\\n  \"Ani-Cli\" \"\" OFF \\\n  \"Ani-Cli-PY\" \"\" OFF \\\n  \"ytfzf\" \"\" OFF \\\n  \"Zathura\" \"\" OFF \\\n  \"Evince\" \"\" OFF \\\n  \"Okular\" \"\" OFF \\\n  \"Foxit-Reader\" \"\" OFF \\\n  \"Master-PDF-Editor\" \"\" OFF \\\n  \"MuPDF\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$extra_tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $extra_tools_choices; do\n  case $app in\n  \"Ani-Cli\")\n    echo \"Installing ani-cli...\"\n    paru -S --noconfirm --needed ani-cli-git\n    ;;\n  \"Ani-Cli-PY\")\n    echo \"Installing ani-cli python version...\"\n    pip install anipy-cli\n    ;;\n  \"ytfzf\")\n    echo \"Installing ytfzf...\"\n    paru -S --noconfirm --needed ytfzf-git\n    ;;\n  \"Zathura\")\n    echo \"Installing Zathura...\"\n    sudo pacman -S zathura zathura-pdf-mupdf zathura-djvu zathura-ps zathura-cb --noconfirm\n    ;;\n  \"Evince\")\n    echo \"Installing Evince...\"\n    sudo pacman -S --noconfirm evince\n    ;;\n  \"Okular\")\n    echo \"Installing Okular...\"\n    sudo pacman -S --noconfirm okular\n    ;;\n  \"Foxit-Reader\")\n    echo \"Installing Foxit Reader...\"\n    paru -S --noconfirm foxitreader\n    ;;\n  \"Master-PDF-Editor\")\n    echo \"Installing Master PDF Editor...\"\n    paru -S --noconfirm masterpdfeditor\n    ;;\n  \"MuPDF\")\n    echo \"Installing MuPDF...\"\n    sudo pacman -S --noconfirm mupdf\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected extra tools and packages have been installed.\" 10 50\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up MariaDB...\"\n\n# Ask the user if they want to install MariaDB\ndialog --title \"Install MariaDB?\" \\\n  --yesno \"Would you like to install MariaDB (a relational database management system)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"MariaDB installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"MariaDB installation will begin now.\" 10 50\n\n  sudo pacman -S mariadb --noconfirm\n  sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql\n  sudo systemctl enable --now mariadb\n  sudo mariadb-secure-installation\n\n  # Inform the user that MariaDB has been installed and configured\n  dialog --msgbox \"MariaDB has been installed and secured. You can now use it for your database needs.\" 10 50\nfi\n\nclear\n\n# -------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 16:22:37.620072861","filePath":"null","pinned":false},{"value":"# -------------------------------------------------------------------------------------\n\necho \"Setting up KVM...\"\n\n# Ask the user if they want to install Miniconda\ndialog --title \"Install KVM QEMU?\" \\\n  --yesno \"Would you like to install KVM QEMU Virtual Machine\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"KVM installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"KVM installation will begin now.\" 10 50\n\n  sudo pacman -S qemu-full qemu-img libvirt virt-install virt-manager virt-viewer spice-vdagent edk2-ovmf dnsmasq swtpm guestfs-tools libosinfo tuned\n  sudo systemctl enable --now libvirtd.service\n  sudo usermod -aG libvirt \"$USER\"\n  sudo virsh net-autostart default\n\n  sudo modprobe -r kvm_intel\n  sudo modprobe kvm_intel nested=1\n\n  dialog --msgbox \"QEMU installation completed.\" 10 50\nfi\n\nclear","recorded":"2025-01-08 16:18:54.103822322","filePath":"null","pinned":false},{"value":"# -------------------------------------------------------------------------------------\n\necho \"Setting up torrent and remote working applications...\"\n\n# Display checklist for torrent and remote working applications\napps=$(whiptail --title \"Select Applications to Install\" \\\n  --checklist \"Choose the applications you want to install:\" 20 60 8 \\\n  \"torrent-cli\" \"\" OFF \\\n  \"qBittorrent\" \"\" OFF \\\n  \"Transmission\" \"\" OFF \\\n  \"Remmina\" \"\" OFF \\\n  \"VNC\" \"\" OFF \\\n  \"TeamViewer\" \"\" OFF \\\n  \"AnyDesk\" \"\" OFF \\\n  \"xrdp\" \"\" OFF \\\n  \"openvpn\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$apps\" ]; then\n  whiptail --msgbox \"No applications selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected applications and install them\nfor app in $apps; do\n  case $app in\n  \"torrent-cli\")\n    echo \"Installing torrent-cli...\"\n    paru -S --noconfirm --needed webtorrent-cli webtorrent-mpv-hook peerflix\n    ;;\n  \"qBittorrent\")\n    echo \"Installing qBittorrent...\"\n    sudo pacman -S --noconfirm qbittorrent\n    ;;\n  \"Transmission\")\n    echo \"Installing Transmission...\"\n    sudo pacman -S --noconfirm transmission-qt\n    ;;\n  \"Remmina\")\n    echo \"Installing Remmina (Remote Desktop Client)...\"\n    sudo pacman -S --noconfirm remmina\n    ;;\n  \"VNC\")\n    echo \"Installing VNC Server...\"\n    sudo pacman -S --noconfirm tigervnc\n    ;;\n  \"TeamViewer\")\n    echo \"Installing TeamViewer...\"\n    sudo pacman -S --noconfirm teamviewer\n    ;;\n  \"AnyDesk\")\n    echo \"Installing AnyDesk...\"\n    sudo pacman -S --noconfirm anydesk\n    ;;\n  \"xrdp\")\n    echo \"Installing xrdp (Remote Desktop Protocol)...\"\n    sudo pacman -S --noconfirm xrdp\n    ;;\n  \"openvpn\")\n    echo \"Installing OpenVPN...\"\n    sudo pacman -S --noconfirm openvpn\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected torrents have been installed.\" 10 50\n\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up development tools, office tools, communication tools, and multimedia tools...\"\n\n# Display checklist with a single column (scrollable) for all tools using dialog\ntools_choices=$(dialog --title \"Select Tools to Install\" \\\n  --checklist \"Choose the tools you want to install:\" 20 60 18 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Telegram\" \"\" OFF \\\n  \"LibreOffice\" \"\" OFF \\\n  \"OnlyOffice\" \"\" OFF \\\n  \"Skype\" \"\" OFF \\\n  \"Slack\" \"\" OFF \\\n  \"Zoom\" \"\" OFF \\\n  \"Blender\" \"\" OFF \\\n  \"Octave\" \"\" OFF \\\n  \"OBS-Studio\" \"\" OFF \\\n  \"Inkscape\" \"\" OFF \\\n  \"GIMP\" \"\" OFF \\\n  \"VLC\" \"\" OFF \\\n  \"Audacity\" \"\" OFF \\\n  \"Krita\" \"\" OFF \\\n  \"Shotcut\" \"\" OFF \\\n  \"Steam\" \"\" OFF \\\n  \"Minecraft\" \"\" OFF \\\n  \"YouTUI\" \"TUI YT Music(Preferred)\" OFF \\\n  \"YTerMusic\" \"TUI YT Music\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $tools_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker \"$USER\"\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    paru -S kind-bin\n    curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Telegram\")\n    echo \"Installing Telegram...\"\n    paru -S --noconfirm telegram-desktop-bin\n    ;;\n  \"LibreOffice\")\n    echo \"Installing LibreOffice...\"\n    sudo pacman -S --noconfirm libreoffice-fresh\n    ;;\n  \"OnlyOffice\")\n    echo \"Installing OnlyOffice...\"\n    paru -S --noconfirm onlyoffice-bin\n    ;;\n  \"Skype\")\n    echo \"Installing Skype...\"\n    paru -S --noconfirm skypeforlinux-bin\n    ;;\n  \"Slack\")\n    echo \"Installing Slack...\"\n    paru -S --noconfirm slack-desktop\n    ;;\n  \"Zoom\")\n    echo \"Installing Zoom...\"\n    paru -S --noconfirm zoom\n    ;;\n  \"Blender\")\n    echo \"Installing Blender...\"\n    sudo pacman -S --noconfirm blender\n    ;;\n  \"Octave\")\n    echo \"Installing Octave...\"\n    sudo pacman -S --noconfirm octave\n    ;;\n  \"OBS-Studio\")\n    echo \"Installing OBS Studio...\"\n    sudo pacman -S --noconfirm obs-studio\n    ;;\n  \"Inkscape\")\n    echo \"Installing Inkscape...\"\n    sudo pacman -S --noconfirm inkscape\n    ;;\n  \"GIMP\")\n    echo \"Installing GIMP...\"\n    sudo pacman -S --noconfirm gimp\n    ;;\n  \"VLC\")\n    echo \"Installing VLC...\"\n    sudo pacman -S --noconfirm vlc\n    ;;\n  \"Audacity\")\n    echo \"Installing Audacity...\"\n    sudo pacman -S --noconfirm audacity\n    ;;\n  \"Krita\")\n    echo \"Installing Krita...\"\n    sudo pacman -S --noconfirm krita\n    ;;\n  \"Shotcut\")\n    echo \"Installing Shotcut...\"\n    sudo pacman -S --noconfirm shotcut\n    ;;\n  \"Steam\")\n    echo \"Installing Steam...\"\n    paru -S --noconfirm steam\n    ;;\n  \"Minecraft\")\n    echo \"Installing Minecraft...\"\n    paru -S --noconfirm minecraft-launcher\n    ;;\n  \"YouTUI\")\n    echo \"Installing YouTUI...\"\n    cargo install youtui\n    ;;\n  \"YTerMusic\")\n    echo \"Installing YTerMusic...\"\n    cargo install ytermusic\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected tools have been installed.\" 10 50\n\nclear\n\n# -------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 16:17:54.456563953","filePath":"null","pinned":false},{"value":"# -------------------------------------------------------------------------------------\n\necho \"Setting up Miniconda...\"\n\n# Ask the user if they want to install Miniconda\ndialog --title \"Install Miniconda?\" \\\n  --yesno \"Would you like to install Miniconda? (Recommended for Python and Data Science)\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Miniconda installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Miniconda installation will begin now.\" 10 50\n\n  # Download Miniconda installer\n  wget https://repo.anaconda.com/miniconda/Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Run the installer\n  bash Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Remove the installer after installation\n  rm Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  dialog --msgbox \"Miniconda installation completed.\" 10 50\nfi\n\nclear","recorded":"2025-01-08 16:16:50.718866757","filePath":"null","pinned":false},{"value":"echo \"Installing main packages and applications that I personally use the most...\" \u0026\u0026 sleep 1\n\n# Function to display the browser selection menu using dialog\ninstall_browser() {\n  # Display the checklist menu\n  choices=$(dialog --title \"Browser Selection\" \\\n    --checklist \"Select the browsers you want to install:\" 15 50 6 \\\n    \"Zen-Browser\" \"\" OFF \\\n    \"Firefox\" \"\" OFF \\\n    \"Chromium\" \"\" OFF \\\n    \"Vivaldi\" \"\" OFF \\\n    \"qutebrowser\" \"\" OFF \\\n    \"Brave\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\n  # Check if the user pressed Cancel\n  if [ $? -ne 0 ]; then\n    echo \"No selection made. Exiting.\"\n    exit 1\n  fi\n\n  # Process the selected options\n  for choice in $choices; do\n    case $choice in\n    \"Zen-Browser\")\n      echo \"Installing Zen-Browser...\"\n      paru -S --noconfirm --needed zen-browser-bin\n      # Video Download Helper\n      curl -sSLf https://github.com/aclap-dev/vdhcoapp/releases/latest/download/install.sh | bash\n      ;;\n    \"Firefox\")\n      echo \"Installing Firefox...\"\n      sudo pacman -S --noconfirm firefox\n      ;;\n    \"Chromium\")\n      echo \"Installing Chromium...\"\n      sudo pacman -S --noconfirm chromium\n      ;;\n    \"Vivaldi\")\n      echo \"Installing Vivaldi...\"\n      paru -S --noconfirm vivaldi\n      ;;\n    \"qutebrowser\")\n      echo \"Installing qutebrowser...\"\n      sudo pacman -S --noconfirm qutebrowser\n      ;;\n    \"Brave\")\n      echo \"Installing Brave...\"\n      paru -S --noconfirm brave-bin\n      ;;\n    *)\n      echo \"Invalid choice: $choice\"\n      ;;\n    esac\n  done\n}\n\n# Call the browser installation function\ninstall_browser\n\ndialog --msgbox \"Selected browsers have been installed.\" 10 50\n\nclear","recorded":"2025-01-08 16:16:27.286255893","filePath":"null","pinned":false},{"value":"# --------------------------------------------------------------------------------------\n\necho \"Setting up Git configuration...\"\n\n# Ask user whether to proceed with Git setup\nif ! whiptail --title \"Git Configuration Setup\" --yesno \"Do you want to proceed with setting up Git configuration?\" 10 60; then\n  echo \"Git setup canceled. Exiting.\"\n  exit 1\nfi\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n  whiptail --msgbox \"Git username setup canceled or empty. Exiting.\" 10 50\n  exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n  whiptail --msgbox \"Git email setup canceled or empty. Exiting.\" 10 50\n  exit 1\nfi\n\n# Display confirmation dialog\nif whiptail --yesno \"Please confirm the Git configuration:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60; then\n  # Set Git configuration if confirmed\n  git config --global user.name \"$git_username\"\n  git config --global user.email \"$git_email\"\n  whiptail --msgbox \"Git has been successfully configured:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\nelse\n  whiptail --msgbox \"Git configuration canceled. No changes were made.\" 10 50\n  exit 1\nfi\n\n# -------------------------------------------------------------------------------------\n\n","recorded":"2025-01-08 16:15:46.506227928","filePath":"null","pinned":false},{"value":"# Install base-devel and required packages\necho \"Installing dependencies..\" \u0026\u0026 sleep 2\n\nsudo pacman -S --noconfirm --needed base-devel intel-ucode vim zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting bash-completion openssh wget curl btop fastfetch bat exa fd ripgrep fzf stow stylua tar tree time acpilight aria2 unrar unzip bluez bluez-utils brightnessctl xfsprogs ntfs-3g clang gcc clipmenu clipnotify inotify-tools psutils dunst e2fsprogs gvfs gvfs-afc gvfs-google gvfs-goa gvfs-gphoto2 gvfs-mtp gvfs-nfs gvfs-onedrive gvfs-smb efibootmgr zoxide gc git-lfs gnome-keyring polkit-gnome pass udiskie gstreamer jq xdotool screenkey xorg-xprop xorg-xinit xf86-video-intel lazygit lolcat sxiv shellcheck net-tools numlockx prettier progress zip rsync trash-cli tlp tlp-rdw neovim feh xorg-xinput xclip xcompmgr xorg-xrandr xorg-xsetroot xsel xwallpaper pandoc starship python-pywal glow xarchiver xfce4-clipman-plugin libguestfs bc xorg-xman man-db man-pages ncdu python-adblock dnsmasq python-pip nwg-look python-prctl vscode-css-languageserver ffmpegthumbnailer lua-language-server pass pinentry gnupg pass-otp zbar xorg-xlsclients xscreensaver os-prober qt5ct pamixer qt5-wayland qt6-wayland parallel shfmt tesseract html-xml-utils cava thunar thunar-archive-plugin thunar-media-tags-plugin thunar-volman thunar-vcs-plugin flameshot playerctl ncmpcpp mpd mpv mpc poppler poppler-glib adobe-source-code-pro-fonts noto-fonts noto-fonts-cjk noto-fonts-emoji ttf-hack ttf-jetbrains-mono ttf-ubuntu-font-family ttf-ubuntu-mono-nerd ttf-ubuntu-nerd ttf-opensans gnu-free-fonts libnewt baobab gnome-disk-utility gparted pavucontrol ranger yad timeshift go hugo hunspell hunspell-en_us imagemagick ueberzug luacheck yt-dlp mlocate nodejs npm translate-shell jdk-openjdk openjdk-doc openjdk-src blueman zenity rofi rofi-emoji rofi-calc newsboat\n\nparu -S --noconfirm --needed base-devel python-psutil preload git-remote-gcrypt ttf-ms-fonts qt6ct-kde ccrypt didyoumean-git arch-wiki-docs material-black-colors-theme apple_cursor kvantum-theme-materia kvantum --noconfirm\n\necho \"Dependencies installed... executing services \u0026 permissions...\" \u0026\u0026 sleep 1\n\nsudo updatedb\nsudo mandb\nsudo systemctl enable --now tlp\nsudo systemctl enable --now bluetooth.service\n\nsudo usermod -aG video \"$USER\"\n\necho \"For VM sharing details https://docs.getutm.app/guest-support/linux/\"\n\n# paru -S material-black-colors-theme apple_cursor kvantum-theme-materia kvantum --noconfirm\n\nclear","recorded":"2025-01-08 16:15:19.330226366","filePath":"null","pinned":false},{"value":"echo \"Checking and removing packages: dolphin, htop, and wofi...\"\n\n# Array of packages to check and remove\npackages=(\"dolphin\" \"htop\" \"wofi\")\n\nfor pkg in \"${packages[@]}\"; do\n  if pacman -Qi \"$pkg\" \u0026\u003e/dev/null; then\n    echo \"$pkg is installed. Removing...\"\n    sudo pacman -Rns --noconfirm \"$pkg\"\n    dialog --msgbox \"$pkg has been removed successfully.\" 10 50\n  else\n    echo \"$pkg is not installed.\"\n  fi\ndone\n\ndialog --msgbox \"Package check and removal process is complete.\" 10 50\n\nclear","recorded":"2025-01-08 16:13:28.023842709","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/crypts","recorded":"2025-01-08 16:10:58.840115647","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/.wakatime.cfg.cpt","recorded":"2025-01-08 16:10:40.200582649","filePath":"null","pinned":false},{"value":"## ML \u0026 DL \nhttps://www.youtube.com/channel/UCXUPKJO5MZQN11PqgIvyuvQ\nhttps://www.youtube.com/channel/UCfzlCWGWYyIQ0aLC5w48gBQ\n\n## GK\nhttps://www.youtube.com/channel/UCHnyfMqiRRG1u-2MsSQLbXA\n\n## Masters\nhttps://www.youtube.com/channel/UCtMsK12pzp5tO4NX1H8E8HQ\n\n## Linux\nhttps://www.youtube.com/channel/UCVls1GmFKf6WlTraIb_IaJg\nhttps://www.youtube.com/channel/UCngn7SVujlvskHRvRKc1cTw\nhttps://www.youtube.com/channel/UCg6gPGh8HU2U01vaFCAsvmQ\n\n## Entertainment \nhttps://www.youtube.com/channel/UCR1I8lG-fhpVuS7s20iTSgA\n\n##Options\nhttps://www.youtube.com/channel/UCqyrm14zcbZw6pdQeHXPF8w\n","recorded":"2025-01-08 16:09:20.213914974","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/ytfzf","recorded":"2025-01-08 16:09:10.124633130","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/BTOP_karna/themes\n/home/karna/dotfiles/BTOP_karna/btop.conf\n/home/karna/dotfiles/BTOP_karna/btop.log","recorded":"2025-01-08 16:05:55.198089945","filePath":"null","pinned":false},{"value":"assets\n","recorded":"2025-01-08 16:05:22.999959998","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/assets/.stow-local-ignore","recorded":"2025-01-08 16:05:18.454504591","filePath":"null","pinned":false},{"value":"\\.screenlayout\n","recorded":"2025-01-08 16:04:46.992214661","filePath":"null","pinned":false},{"value":"-config ~/.config/hypr/rofi/config.rasi","recorded":"2025-01-08 16:02:35.876761323","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/hypr/rofi","recorded":"2025-01-08 16:02:17.403114396","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/rofi","recorded":"2025-01-08 15:57:30.366489090","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland/.config/rofi/.config/rofi/bin\n/home/karna/dotfiles/Hyprland/.config/rofi/.config/rofi/themes\n/home/karna/dotfiles/Hyprland/.config/rofi/.config/rofi/config.rasi\n/home/karna/dotfiles/Hyprland/.config/rofi/.config/rofi/powermenu.rasi\n/home/karna/dotfiles/Hyprland/.config/rofi/.config/rofi/powermenu.sh\n/home/karna/dotfiles/Hyprland/.config/rofi/.config/rofi/theme.rasi\n/home/karna/dotfiles/Hyprland/.config/rofi/.config/rofi/wifi-bluetooth-menu.rasi","recorded":"2025-01-08 15:57:20.398111490","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/rofi","recorded":"2025-01-08 15:56:40.501271914","filePath":"null","pinned":false},{"value":"map gk cd /mnt/Karna/\n","recorded":"2025-01-08 15:55:20.016578657","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/ranger","recorded":"2025-01-08 15:54:43.360808508","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/newsboat","recorded":"2025-01-08 15:52:18.792306729","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/myemojis","recorded":"2025-01-08 15:51:28.923764465","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/mpv","recorded":"2025-01-08 15:50:24.483008576","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/ncmpcpp","recorded":"2025-01-08 15:49:36.527373466","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/mpd/.mpd","recorded":"2025-01-08 15:48:44.874731234","filePath":"null","pinned":false},{"value":"    \"action\" : \"sh ~/.dwm/scripts/uptime shutdown \u0026\u0026 systemctl poweroff\",\n","recorded":"2025-01-08 15:45:23.595972174","filePath":"null","pinned":false},{"value":"bind = $mainMod ALT, F, exec, ferdium \u0026\n","recorded":"2025-01-08 15:42:03.225369912","filePath":"null","pinned":false},{"value":"bind = $mainMod SHIFT, W, exec, qutebrowser\n","recorded":"2025-01-08 15:42:00.858396441","filePath":"null","pinned":false},{"value":"bind = $mainMod, O, exec, obsidian\n","recorded":"2025-01-08 15:41:57.731284222","filePath":"null","pinned":false},{"value":"device {\n    name = razer-razer-deathadder-essential-1\n    sensitivity = -0.8\n}\n\ndevice {\n    name = razer-razer-deathadder-essential\n    sensitivity = -0.8\n}\n\ndevice {\n    name = razer-razer-deathadder-essential-keyboard-1\n    sensitivity = -0.8\n}","recorded":"2025-01-08 15:41:45.819639817","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/Hyprland","recorded":"2025-01-08 15:38:59.534533223","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/gtk-3","recorded":"2025-01-08 15:37:40.442696293","filePath":"null","pinned":false},{"value":"# Migrate GPG Keys from One Workstation to Another #\n\nReplace **[your key]** with your key ID\n\nTo obtain your key ID\n```bash\ngpg --list-secret-keys --keyid-format LONG\n```\n\nWhich returns something like\n```bash\n/home/angela/.gnupg/pubring.kbx\n-------------------------------\nsec   rsa4096/[your key] 2018-03-30 [SC]\n      ABCDEFGHIJKLMNOPQRSTUVWXYZ\nuid                 [ unknown] angela (KEY NAME) \u003cuser@domain\u003e\nssb   rsa4096/ABCDEFGHIJKL 2018-03-30 [E]\n\n```\n\nAfter the key size `rsa4096/` is your key ID.\n\n***\n\nExport the key in preparation to move it\n```bash\ngpg --export -a [your key] \u003e gpg-pub.asc\n```\n\nPrepare the secret key for migration (if password protected, you'll be prompted to enter it)\n```bash\ngpg --export-secret-keys -a [your key] \u003e gpg-sc.asc\n```\n\nFind them\n```bash\nls -l gpg*.asc\n```\n\nDrag the key pair from the current directory to your USB stick or however else you move them.\n\n\nOnce on the new machine, import them\n```bash\ngpg --import gpg-pub.asc\n```\n\nIf password protected, you'll be prompted to enter it\n```bash\ngpg --import gpg-sc.asc\n```\n\nIf you need to adjust the trust level\n```bash\ngpg --edit-key [your key]\n```\n","recorded":"2025-01-08 15:26:50.882568650","filePath":"null","pinned":false},{"value":"gpg-key-migration","recorded":"2025-01-08 15:26:00.603128916","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/DWMScripts/.dwm/bin/gpg-key-migration/gpg-key-migration.md","recorded":"2025-01-08 15:25:12.916607317","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/BTOP/.config/btop/themes\n/home/karna/dotfiles/BTOP/.config/btop/btop.conf\n/home/karna/dotfiles/BTOP/.config/btop/btop.log","recorded":"2025-01-08 15:23:17.393818368","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/alacritty/.stow-local-ignore","recorded":"2025-01-08 15:22:05.650590299","filePath":"null","pinned":false},{"value":"\n\n# \u003e\u003e\u003e conda initialize \u003e\u003e\u003e\n# !! Contents within this block are managed by 'conda init' !!\n__conda_setup=\"$('/home/karna/miniconda3/bin/conda' 'shell.zsh' 'hook' 2\u003e /dev/null)\"\nif [ $? -eq 0 ]; then\n    eval \"$__conda_setup\"\nelse\n    if [ -f \"/home/karna/miniconda3/etc/profile.d/conda.sh\" ]; then\n        . \"/home/karna/miniconda3/etc/profile.d/conda.sh\"\n    else\n        export PATH=\"/home/karna/miniconda3/bin:$PATH\"\n    fi\nfi\nunset __conda_setup\n# \u003c\u003c\u003c conda initialize \u003c\u003c\u003c\n\n\n# Generated for envman. Do not edit.\n[ -s \"$HOME/.config/envman/load.sh\" ] \u0026\u0026 source \"$HOME/.config/envman/load.sh\"","recorded":"2025-01-08 15:20:41.327737178","filePath":"null","pinned":false},{"value":"[[ $commands[kubectl] ]] \u0026\u0026 source \u003c(kubectl completion zsh)\n","recorded":"2025-01-08 15:20:37.310311381","filePath":"null","pinned":false},{"value":"function rmfzf() {\n    local target\n    target=$(\n        (find . -maxdepth 1 -type f 2\u003e/dev/null; \\\n        find . -maxdepth 1 -type d 2\u003e/dev/null) \\\n        | fzf --preview 'ls -al {}' --tac\n    ) \u0026\u0026 trash \"$target\" \u0026\u0026 zle clear-screen  \n}\n\nzle -N rmfzf\nbindkey '^X^A' rmfzf","recorded":"2025-01-08 15:20:34.469381496","filePath":"null","pinned":false},{"value":"function fd() {\n    local dir\n    dir=$(\n        (zoxide query -l; find / -maxdepth 8 -type d -not -path \"/proc/*\" -not -path \"/sys/*\" -not -path \"/run/*\" 2\u003e/dev/null) \\\n        | fzf --preview 'ls -al {}' --tac\n    ) \u0026\u0026 cd \"$dir\" \u0026\u0026 zle clear-screen\n}\n\n\nzle -N fd\nbindkey '^O' fd ","recorded":"2025-01-08 15:20:30.071238665","filePath":"null","pinned":false},{"value":"}\n","recorded":"2025-01-08 15:20:22.086313722","filePath":"null","pinned":false},{"value":"    curl cht.sh/$1\n","recorded":"2025-01-08 15:20:21.728707734","filePath":"null","pinned":false},{"value":"function cheat() {\n","recorded":"2025-01-08 15:20:21.365197621","filePath":"null","pinned":false},{"value":"alias blog=\"cd /mnt/Karna/Git/My-Blog/\"\n","recorded":"2025-01-08 15:20:17.994509937","filePath":"null","pinned":false},{"value":"alias dsa=\"cd /mnt/Karna/Git/Project-K/DSA/\"\n","recorded":"2025-01-08 15:20:17.606417629","filePath":"null","pinned":false},{"value":"alias nvimleetcode=\"cd /mnt/Karna/Git/Project-K/DSA/Leetcode/ \u0026\u0026 nvim leetcode.nvim\"\n","recorded":"2025-01-08 15:20:17.201477451","filePath":"null","pinned":false},{"value":"alias download=\"aria2c\"\n","recorded":"2025-01-08 15:20:13.233026692","filePath":"null","pinned":false},{"value":"alias anime2=\"anipy-cli\"\n","recorded":"2025-01-08 15:20:12.388125804","filePath":"null","pinned":false},{"value":"alias anime1=\"ani-cli\"\n","recorded":"2025-01-08 15:20:11.669089066","filePath":"null","pinned":false},{"value":"alias torrentdownload=\"webtorrent download\"\n","recorded":"2025-01-08 15:20:06.392950016","filePath":"null","pinned":false},{"value":"alias torrentwatch2=\"webtorrent --mpv\"\n","recorded":"2025-01-08 15:20:05.806198477","filePath":"null","pinned":false},{"value":"alias torrentwatch1=\"peerflix -k -a -q\"\n","recorded":"2025-01-08 15:20:04.999480125","filePath":"null","pinned":false},{"value":"alias mangaread=\"curl -sSL mangal.metafates.one/run | sh\"\n","recorded":"2025-01-08 15:20:04.333420731","filePath":"null","pinned":false},{"value":"alias karna='cd /mnt/Karna'\n","recorded":"2025-01-08 15:19:59.204370915","filePath":"null","pinned":false},{"value":"# DWM \nalias makedwm=\"cd ~/.config/dwm \u0026\u0026 rm config.h --f \u0026\u0026 sudo make clean install\"\nalias makeslstatus=\"cd ~/.config/slstatus/ \u0026\u0026 rm config.h --f \u0026\u0026 make \u0026\u0026 sudo make install\"\nalias dwmcon=\"nvim ~/.config/dwm/config.def.h\"\nalias slstatuscon=\"nvim ~/.config/slstatus/config.def.h\"\nalias dotfiles=\"cd $HOME/dotfiles/\"\nalias n=\"nvim\"","recorded":"2025-01-08 15:19:51.966395102","filePath":"null","pinned":false},{"value":"alias zathura=\"$HOME/.local/bin/zathura\"\n","recorded":"2025-01-08 15:18:34.511219753","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Zathura-Pywal-master.zip","recorded":"2025-01-08 15:17:23.950054916","filePath":"null","pinned":false},{"value":"export PATH=\"$HOME/.cargo/bin:$PATH\"\n","recorded":"2025-01-08 15:16:42.903066347","filePath":"null","pinned":false},{"value":"export PATH=\"$HOME/.config/emacs/bin:$PATH\"\n","recorded":"2025-01-08 15:16:42.501118740","filePath":"null","pinned":false},{"value":"export PATH=\"$HOME/dotfiles/DWMScripts/.dwm/bin/:$PATH\"\n","recorded":"2025-01-08 15:16:40.041823094","filePath":"null","pinned":false},{"value":"\nfunction ctime() {\n    g++ -std=c++17 $1\".cpp\" -o $1\n    time ./$1\n}\n\nfunction mosscc() {\n    perl -i moss.pl -l cc $1 $2\n}\n\nfunction mosspy() {\n    perl -i moss.pl -l python $1 $2\n}\n\nfunction Restart() {\n  sh ~/.dwm/scripts/uptime reboot\n  systemctl reboot\n}\n\nfunction Shutdown() {\n  sh ~/.dwm/scripts/uptime shutdown\n  systemctl poweroff\n}","recorded":"2025-01-08 15:16:28.437303750","filePath":"null","pinned":false},{"value":"ZSH_THEME=\"archcraft-dwm\"\n","recorded":"2025-01-08 15:15:22.612320546","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/zsh/.zshrc","recorded":"2025-01-08 15:14:22.049196707","filePath":"null","pinned":false},{"value":"function ctime() {\n    g++ -std=c++17 $1\".cpp\" -o $1\n    time ./$1\n}\n\nfunction mosscc() {\n    perl -i moss.pl -l cc $1 $2\n}\n\nfunction mosspy() {\n    perl -i moss.pl -l python $1 $2\n}\n\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] \u0026\u0026 \\. \"$NVM_DIR/nvm.sh\"                   # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] \u0026\u0026 \\. \"$NVM_DIR/bash_completion\" # This loads nvm bash_completion\n\ncdnvm() {\n    command cd \"$@\"\n    nvm_path=$(nvm_find_up .nvmrc | tr -d '\\n')\n\n    # If there are no .nvmrc file, use the default nvm version\n    if [[ ! $nvm_path = *[^[:space:]]* ]]; then\n\n        declare default_version\n        default_version=$(nvm version default)\n\n        # If there is no default version, set it to `node`\n        # This will use the latest version on your machine\n        if [[ $default_version == \"N/A\" ]]; then\n            nvm alias default node\n            default_version=$(nvm version default)\n        fi\n\n        # If the current version is not the default version, set it to use the default version\n        if [[ $(nvm current) != \"$default_version\" ]]; then\n            nvm use default\n        fi\n\n    elif [[ -s $nvm_path/.nvmrc \u0026\u0026 -r $nvm_path/.nvmrc ]]; then\n        declare nvm_version\n        nvm_version=$(\u003c\"$nvm_path\"/.nvmrc)\n\n        declare locally_resolved_nvm_version\n        # `nvm ls` will check all locally-available versions\n        # If there are multiple matching versions, take the latest one\n        # Remove the `-\u003e` and `*` characters and spaces\n        # `locally_resolved_nvm_version` will be `N/A` if no local versions are found\n        locally_resolved_nvm_version=$(nvm ls --no-colors \"$nvm_version\" | tail -1 | tr -d '\\-\u003e*' | tr -d '[:space:]')\n\n        # If it is not already installed, install it\n        # `nvm install` will implicitly use the newly-installed version\n        if [[ \"$locally_resolved_nvm_version\" == \"N/A\" ]]; then\n            nvm install \"$nvm_version\"\n        elif [[ $(nvm current) != \"$locally_resolved_nvm_version\" ]]; then\n            nvm use \"$nvm_version\"\n        fi\n    fi\n}\n\n# \u003e\u003e\u003e conda initialize \u003e\u003e\u003e\n# !! Contents within this block are managed by 'conda init' !!\n__conda_setup=\"$('/home/karna/miniconda3/bin/conda' 'shell.bash' 'hook' 2\u003e /dev/null)\"\nif [ $? -eq 0 ]; then\n    eval \"$__conda_setup\"\nelse\n    if [ -f \"/home/karna/miniconda3/etc/profile.d/conda.sh\" ]; then\n        . \"/home/karna/miniconda3/etc/profile.d/conda.sh\"\n    else\n        export PATH=\"/home/karna/miniconda3/bin:$PATH\"\n    fi\nfi\nunset __conda_setup\n# \u003c\u003c\u003c conda initialize \u003c\u003c\u003c\n\n\n# Generated for envman. Do not edit.\n[ -s \"$HOME/.config/envman/load.sh\" ] \u0026\u0026 source \"$HOME/.config/envman/load.sh\"","recorded":"2025-01-08 15:14:06.006011266","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/bashrc/.bashrc","recorded":"2025-01-08 15:08:45.784416491","filePath":"null","pinned":false},{"value":"# Clone and install Paru if not installed\necho \"This script requires an AUR helper to install the dependencies. Installing paru...\" \u0026\nsleep 2\nif ! command -v paru \u0026\u003e/dev/null; then\n  echo \"Installing Paru, an AUR helper...\"\n  cd Downloads\n  git clone https://aur.archlinux.org/paru.git\n  cd paru\n  makepkg -si\n  cd ..\n  echo \"Paru installed\"\n  rm -rf paru\n  cd ~/dotfiles\nfi\nclear","recorded":"2025-01-08 14:58:29.929767243","filePath":"null","pinned":false},{"value":"#!/bin/env bash\nset -e\n\n# Introduction \u0026 Warning\necho \"Welcome to my Arch Setup!\" \u0026\u0026 sleep 2\necho \"Some parts of the script require sudo, so if you're planning on leaving the desktop while the installation script does its thing, better drop it already!.\" \u0026\u0026 sleep 4\n\n# Creating all required home directories if not present\nmkdir ~/Downloads ~/Documents ~/Music ~/Pictures ~/Videos ~/Templates\n\necho \"Setting up pacman.conf...\"\n\n# Use sed to find the #UseSyslog line and append the settings under it\nsudo sed -i '/#UseSyslog/a\\\nILoveCandy\\nParallelDownloads=10\\nColor' /etc/pacman.conf\n\n# System update\necho \"Performing a full system update...\"\nsudo pacman --noconfirm -Syu\nclear\necho \"System update done\" \u0026\u0026 sleep 2\nclear\n\n# Install Git if not present\necho \"Installing git...\" \u0026\u0026 sleep 1\nsudo pacman -S --noconfirm --needed git\nclear","recorded":"2025-01-08 14:51:00.336304968","filePath":"null","pinned":false},{"value":"echo \"Configuration added under #UseSyslog.\"\n","recorded":"2025-01-08 14:50:51.499293131","filePath":"null","pinned":false},{"value":"\"\n","recorded":"2025-01-08 14:50:48.123955288","filePath":"null","pinned":false},{"value":"#!/bin/env bash\nset -e\n\nif ! grep -q -E 'ILoveCandy|ParallelDownloads=10|Color' /etc/pacman.conf; then\n  sudo sed -i '/#UseSyslog/a\\\nILoveCandy\\nParallelDownloads=10\\nColor' /etc/pacman.conf\nfi\n\n","recorded":"2025-01-08 14:50:05.552637022","filePath":"null","pinned":false},{"value":"#!/bin/env bash\nset -e","recorded":"2025-01-08 14:49:08.594010525","filePath":"null","pinned":false},{"value":"if ! grep -q -E 'ILoveCandy|ParallelDownloads=10|Color' /etc/pacman.conf; then\n  sudo sed -i '/#UseSyslog/a\\\nILoveCandy\\nParallelDownloads=10\\nColor' /etc/pacman.conf\nfi\n","recorded":"2025-01-08 14:48:59.930906017","filePath":"null","pinned":false},{"value":"# Use sed to find the #UseSyslog line and append the settings under it\nsudo sed -i '/#UseSyslog/a\\\nILoveCandy\\nParallelDownloads=10\\nColor' /etc/pacman.conf","recorded":"2025-01-08 14:48:32.324170338","filePath":"null","pinned":false},{"value":"/home/karna/.gtkrc-2.0","recorded":"2025-01-08 14:46:02.118771330","filePath":"null","pinned":false},{"value":"Remini App","recorded":"2025-01-07 21:47:55.983850835","filePath":"null","pinned":false},{"value":"/mnt/Karna/Git/chaganti-reddy.github.io/content/authors/admin/avatar_main.jpg","recorded":"2025-01-07 21:37:15.742761254","filePath":"null","pinned":false},{"value":"cat ~/.cache/wal/sequences\n","recorded":"2025-01-07 15:15:26.988143411","filePath":"null","pinned":false},{"value":"  wal -b 282738 -i ~/Wallpaper/Aesthetic2.png \u003e/dev/null 2\u003e\u00261\n","recorded":"2025-01-07 15:14:11.733788360","filePath":"null","pinned":false},{"value":"\n# -------------------------------------------------------------------------------------\n\necho \"Setting up Qtile...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install Qtile?\" \\\n  --yesno \"Would you like to install Qtile (Python based Window Manager)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Qtile installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Qtile installation will begin now.\" 10 50\n\n  paru -Syu qtile feh picom-git alacritty --noconfirm --needed\n\n  cd ~/dotfiles\n\n  stow qtile picom qtile_themes qtile_wallpaper cava alacritty\n\n  echo \"Pre-generating pywal colors...\"\n  echo \"Might take some time, hang on tight!\"\n  wal -b 282738 -i ~/Wallpaper/Aesthetic2.png \u003e/dev/null 2\u003e\u00261\n  echo \"Theme 1 ../done\"\n  wal -b 282738 -i ~/Wallpaper/120_-_KnFPX73.jpg \u003e/dev/null 2\u003e\u00261\n  echo \"Theme 2 ../done\"\n  wal -i ~/Wallpaper/claudio-testa-FrlCwXwbwkk-unsplash.jpg \u003e/dev/null 2\u003e\u00261\n  echo \"Theme 3 ../done\"\n  wal -b 232A2E -i ~/Wallpaper/fog_forest_2.png \u003e/dev/null 2\u003e\u00261\n  echo \"Theme 4 ../done\"\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"Qtile has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear","recorded":"2025-01-07 15:12:09.339487636","filePath":"null","pinned":false},{"value":"fc-cache -f","recorded":"2025-01-07 14:38:38.566716896","filePath":"null","pinned":false},{"value":"  wal -b 232A2E -i ~/Wallpaper/fog_forest_2.png \u003e/dev/null 2\u003e\u00261\n","recorded":"2025-01-07 14:33:27.408520401","filePath":"null","pinned":false},{"value":"  wal -i ~/Wallpaper/claudio-testa-FrlCwXwbwkk-unsplash.jpg \u003e/dev/null 2\u003e\u00261\n","recorded":"2025-01-07 14:33:22.028080864","filePath":"null","pinned":false},{"value":"  wal -b 282738 -i ~/Wallpaper/120_-_KnFPX73.jpg \u003e/dev/null 2\u003e\u00261\n","recorded":"2025-01-07 14:33:16.843871056","filePath":"null","pinned":false},{"value":"  paru -Syu qtile feh picom-git alacritty --noconfirm --needed\n","recorded":"2025-01-07 14:32:42.188315298","filePath":"null","pinned":false},{"value":"paru -Syu qtile pywal-git feh picom-git alacritty --noconfirm --needed\n","recorded":"2025-01-07 14:29:16.726797687","filePath":"null","pinned":false},{"value":"echo \"Pre-generating pywal colors...\"\n  echo \"Might take some time, hang on tight!\"\n  wal -b 282738 -i ~/Wallpaper/Aesthetic2.png \u003e/dev/null 2\u003e\u00261\n  echo \"Theme 1 ../done\"\n  wal -b 282738 -i ~/Wallpaper/120_-_KnFPX73.jpg \u003e/dev/null 2\u003e\u00261\n  echo \"Theme 2 ../done\"\n  wal -i ~/Wallpaper/claudio-testa-FrlCwXwbwkk-unsplash.jpg \u003e/dev/null 2\u003e\u00261\n  echo \"Theme 3 ../done\"\n  wal -b 232A2E -i ~/Wallpaper/fog_forest_2.png \u003e/dev/null 2\u003e\u00261\n  echo \"Theme 4 ../done\"","recorded":"2025-01-07 14:28:53.659053365","filePath":"null","pinned":false},{"value":"qtile_themes qtile_wallpaper","recorded":"2025-01-07 14:26:58.338422572","filePath":"null","pinned":false},{"value":"echo \"Pre-generating pywal colors...\"\necho \"Might take some time, hang on tight!\"\nwal -b 282738 -i ~/Wallpaper/Aesthetic2.png \u003e /dev/null 2\u003e\u00261\necho \"Theme 1 ../done\"\nwal -b 282738 -i ~/Wallpaper/120_-_KnFPX73.jpg \u003e /dev/null 2\u003e\u00261\necho \"Theme 2 ../done\"\nwal -i ~/Wallpaper/claudio-testa-FrlCwXwbwkk-unsplash.jpg \u003e /dev/null 2\u003e\u00261\necho \"Theme 3 ../done\"\nwal -b 232A2E -i ~/Wallpaper/fog_forest_2.png \u003e /dev/null 2\u003e\u00261 \necho \"Theme 4 ../done\"","recorded":"2025-01-07 14:25:58.275120885","filePath":"null","pinned":false},{"value":"xf86-video-intel","recorded":"2025-01-07 14:25:21.923589250","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Cozytile-main/Wallpaper","recorded":"2025-01-07 14:23:52.196297226","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Cozytile-main/Themes","recorded":"2025-01-07 14:23:42.186168117","filePath":"null","pinned":false},{"value":"\\.config\n","recorded":"2025-01-07 14:22:20.500653568","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Cozytile-main/.config/picom/picom.conf","recorded":"2025-01-07 14:22:08.434829069","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Cozytile-main/.config/nvim/lua/themes","recorded":"2025-01-07 14:20:15.321690854","filePath":"null","pinned":false},{"value":"https://www.usief.org.in/fulbright-nehru-fellowships.aspx","recorded":"2025-01-07 14:15:02.981567837","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Cozytile-main/.config/alacritty/alacritty.toml\n/home/karna/Downloads/Cozytile-main/.config/alacritty/colors.toml\n/home/karna/Downloads/Cozytile-main/.config/alacritty/fonts.toml","recorded":"2025-01-07 14:13:18.875735172","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Cozytile-main/.config/qtile","recorded":"2025-01-07 14:11:45.336374300","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/rofi/.config/rofi/bak/bin\n/home/karna/dotfiles/rofi/.config/rofi/bak/themes\n/home/karna/dotfiles/rofi/.config/rofi/bak/config.rasi\n/home/karna/dotfiles/rofi/.config/rofi/bak/powermenu.rasi\n/home/karna/dotfiles/rofi/.config/rofi/bak/powermenu.sh\n/home/karna/dotfiles/rofi/.config/rofi/bak/theme.rasi\n/home/karna/dotfiles/rofi/.config/rofi/bak/wifi-bluetooth-menu.rasi","recorded":"2025-01-07 14:10:31.305270278","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Cozytile-main/.config/rofi/images\n/home/karna/Downloads/Cozytile-main/.config/rofi/scripts\n/home/karna/Downloads/Cozytile-main/.config/rofi/settings\n/home/karna/Downloads/Cozytile-main/.config/rofi/theme_scripts","recorded":"2025-01-07 14:09:35.483124367","filePath":"null","pinned":false},{"value":"# On-demand rehash\nzshcache_time=\"$(date +%s%N)\"\n\nautoload -Uz add-zsh-hook\n\nrehash_precmd() {\n  if [[ -a /var/cache/zsh/pacman ]]; then\n    local paccache_time=\"$(date -r /var/cache/zsh/pacman +%s%N)\"\n    if (( zshcache_time \u003c paccache_time )); then\n      rehash\n      zshcache_time=\"$paccache_time\"\n    fi\n  fi\n}\n\nadd-zsh-hook -Uz precmd rehash_precmd","recorded":"2025-01-07 13:58:21.436661454","filePath":"null","pinned":false},{"value":"export STARSHIP_LOG=\"error\"\n","recorded":"2025-01-07 13:56:44.668536695","filePath":"null","pinned":false},{"value":"/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-Bold.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-BoldItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-ExtraBold.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-ExtraBoldItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-ExtraLight.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-ExtraLightItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-Italic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-Light.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-LightItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-Medium.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-MediumItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-Bold.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-BoldItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-ExtraBold.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-ExtraBoldItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-ExtraLight.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-ExtraLightItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-Italic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-Light.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-LightItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-Medium.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-MediumItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-Regular.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-SemiBold.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-SemiBoldItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-Thin.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFontMono-ThinItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-Regular.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-SemiBold.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-SemiBoldItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-Thin.ttf\n/mnt/Karna/Git/my-fonts/jet/JetBrainsMonoNerdFont-ThinItalic.ttf\n/mnt/Karna/Git/my-fonts/jet/OFL.txt","recorded":"2025-01-07 13:49:08.484710623","filePath":"null","pinned":false},{"value":"/mnt/Karna/Git/my-fonts/Brains/JetBrainsMono-1.0.3/ttf/JetBrainsMono-Bold.ttf\n/mnt/Karna/Git/my-fonts/Brains/JetBrainsMono-1.0.3/ttf/JetBrainsMono-Bold-Italic.ttf\n/mnt/Karna/Git/my-fonts/Brains/JetBrainsMono-1.0.3/ttf/JetBrainsMono-ExtraBold.ttf\n/mnt/Karna/Git/my-fonts/Brains/JetBrainsMono-1.0.3/ttf/JetBrainsMono-ExtraBold-Italic.ttf\n/mnt/Karna/Git/my-fonts/Brains/JetBrainsMono-1.0.3/ttf/JetBrainsMono-Italic.ttf\n/mnt/Karna/Git/my-fonts/Brains/JetBrainsMono-1.0.3/ttf/JetBrainsMono-Medium.ttf\n/mnt/Karna/Git/my-fonts/Brains/JetBrainsMono-1.0.3/ttf/JetBrainsMono-Medium-Italic.ttf\n/mnt/Karna/Git/my-fonts/Brains/JetBrainsMono-1.0.3/ttf/JetBrainsMono-Regular.ttf","recorded":"2025-01-07 13:48:46.375339976","filePath":"null","pinned":false},{"value":"/home/karna/.local/share/fonts/my-fonts/awesome\n/home/karna/.local/share/fonts/my-fonts/Brains\n/home/karna/.local/share/fonts/my-fonts/jet\n/home/karna/.local/share/fonts/my-fonts/Anonymice Nerd Font Complete.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-Bold.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-BoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-ExtraLight.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-ExtraLightItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-Italic.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-Light.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-LightItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-Medium.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-MediumItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-SemiBold.ttf\n/home/karna/.local/share/fonts/my-fonts/BaiJamjuree-SemiBoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Bold.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Bold Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete ExtraLight.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete ExtraLight Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Light.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Light Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Bold.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Bold Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono ExtraLight.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono ExtraLight Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Light.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Light Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Regular.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono SemiBold.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono SemiBold Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono SemiLight.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono SemiLight Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible Bold.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible Bold Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible ExtraLight.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible ExtraLight Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible Light.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible Light Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible Regular.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible SemiBold.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible SemiBold Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible SemiLight.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Mono Windows Compatible SemiLight Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Regular.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete SemiBold.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete SemiBold Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete SemiLight.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete SemiLight Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible Bold.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible Bold Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible ExtraLight.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible ExtraLight Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible Light.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible Light Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible Regular.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible SemiBold.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible SemiBold Italic.otf\n/home/karna/.local/share/fonts/my-fonts/Caskaydia Cove Nerd Font Complete Windows Compatible SemiLight.otf\n/home/karna/.local/share/fonts/my-fonts/Consolas.ttf\n/home/karna/.local/share/fonts/my-fonts/DejaVu Sans Mono Nerd Font Complete Mono.ttf\n/home/karna/.local/share/fonts/my-fonts/DejaVu Sans Mono Nerd Font Complete Mono Windows Compatible.ttf\n/home/karna/.local/share/fonts/my-fonts/DejaVu Sans Mono Nerd Font Complete Windows Compatible.ttf\n/home/karna/.local/share/fonts/my-fonts/DejaVu Sans Mono Oblique Nerd Font Complete.ttf\n/home/karna/.local/share/fonts/my-fonts/DejaVu Sans Mono Oblique Nerd Font Complete Mono.ttf\n/home/karna/.local/share/fonts/my-fonts/DejaVu Sans Mono Oblique Nerd Font Complete Mono Windows Compatible.ttf\n/home/karna/.local/share/fonts/my-fonts/DejaVu Sans Mono Oblique Nerd Font Complete Windows Compatible.ttf\n/home/karna/.local/share/fonts/my-fonts/Droid Sans Mono Nerd Font Complete.otf\n/home/karna/.local/share/fonts/my-fonts/Droid Sans Mono Nerd Font Complete Mono.otf\n/home/karna/.local/share/fonts/my-fonts/Droid Sans Mono Nerd Font Complete Mono Windows Compatible.otf\n/home/karna/.local/share/fonts/my-fonts/Droid Sans Mono Nerd Font Complete Windows Compatible.otf\n/home/karna/.local/share/fonts/my-fonts/feather.ttf\n/home/karna/.local/share/fonts/my-fonts/FiraCode-Bold.ttf\n/home/karna/.local/share/fonts/my-fonts/FiraCode-Light.ttf\n/home/karna/.local/share/fonts/my-fonts/FiraCode-Medium.ttf\n/home/karna/.local/share/fonts/my-fonts/FiraCode-Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/FiraCode-Retina.ttf\n/home/karna/.local/share/fonts/my-fonts/FiraCode-SemiBold.ttf\n/home/karna/.local/share/fonts/my-fonts/Fixedsys.ttf\n/home/karna/.local/share/fonts/my-fonts/FontsFree-Net-SFProDisplay-Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/Icomoon-Feather.ttf\n/home/karna/.local/share/fonts/my-fonts/iosevka-nerd-font.ttf\n/home/karna/.local/share/fonts/my-fonts/Iosevka Term Nerd Font Complete.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Bold.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Bold.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-BoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-BoldItalic.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-ExtraBold.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-ExtraBold.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-ExtraBoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-ExtraBoldItalic.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-ExtraLight.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-ExtraLight.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-ExtraLightItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-ExtraLightItalic.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Italic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Italic.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Italic[wght].ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Light.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Light.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-LightItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-LightItalic.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Medium.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Medium.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-MediumItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-MediumItalic.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-Bold.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-BoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-ExtraBold.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-ExtraBoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-ExtraLight.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-ExtraLightItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-Italic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-Light.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-LightItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-Medium.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-MediumItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrains Mono NL Regular Nerd Font Complete.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-SemiBold.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-SemiBoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-Thin.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMonoNL-ThinItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Regular.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrains Mono Regular Nerd Font Complete.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-SemiBold.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-SemiBold.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-SemiBoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-SemiBoldItalic.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Thin.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-Thin.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-ThinItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono-ThinItalic.woff2\n/home/karna/.local/share/fonts/my-fonts/JetBrainsMono[wght].ttf\n/home/karna/.local/share/fonts/my-fonts/jpn_boot.ttf\n/home/karna/.local/share/fonts/my-fonts/kor_boot.ttf\n/home/karna/.local/share/fonts/my-fonts/LEMONMILK-Light.otf\n/home/karna/.local/share/fonts/my-fonts/LEMONMILK-Medium.otf\n/home/karna/.local/share/fonts/my-fonts/LEMONMILK-Regular.otf\n/home/karna/.local/share/fonts/my-fonts/LibreBaskerville-Bold.ttf\n/home/karna/.local/share/fonts/my-fonts/LibreBaskerville-Italic.ttf\n/home/karna/.local/share/fonts/my-fonts/LibreBaskerville-Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/Literation Mono Nerd Font Complete Mono.ttf\n/home/karna/.local/share/fonts/my-fonts/MaterialIcons.ttf\n/home/karna/.local/share/fonts/my-fonts/MaterialIcons.woff\n/home/karna/.local/share/fonts/my-fonts/MaterialIcons-Outlined.ttf\n/home/karna/.local/share/fonts/my-fonts/MaterialIcons-Round.ttf\n/home/karna/.local/share/fonts/my-fonts/MaterialIcons-Sharp.ttf\n/home/karna/.local/share/fonts/my-fonts/MaterialIcons-TwoTone.ttf\n/home/karna/.local/share/fonts/my-fonts/MesloLGS NF Bold.ttf\n/home/karna/.local/share/fonts/my-fonts/MesloLGS NF Bold Italic.ttf\n/home/karna/.local/share/fonts/my-fonts/MesloLGS NF Italic.ttf\n/home/karna/.local/share/fonts/my-fonts/MesloLGS NF Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/Minecraft.ttf\n/home/karna/.local/share/fonts/my-fonts/Minecrafter.Alt.ttf\n/home/karna/.local/share/fonts/my-fonts/Minecrafter.Reg.ttf\n/home/karna/.local/share/fonts/my-fonts/Minecraftia-Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/Minercraftory.ttf\n/home/karna/.local/share/fonts/my-fonts/Monaco.ttf\n/home/karna/.local/share/fonts/my-fonts/msjhn_boot.ttf\n/home/karna/.local/share/fonts/my-fonts/NotoColorEmoji.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-Black.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-BlackItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-Bold.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-BoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-Italic.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-Light.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-LightItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-Medium.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-MediumItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-Bold.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-BoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-ExtraLight.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-ExtraLightItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-Italic.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-Light.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-LightItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-Medium.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-MediumItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-SemiBold.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-SemiBoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-Thin.ttf\n/home/karna/.local/share/fonts/my-fonts/RobotoMono-ThinItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-Thin.ttf\n/home/karna/.local/share/fonts/my-fonts/Roboto-ThinItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/runescape_uf.ttf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoDisplay-Black.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoDisplay-Bold.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoDisplay-Heavy.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoDisplay-Light.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoDisplay-Medium.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoDisplay-Regular.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoDisplay-Semibold.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoDisplay-Thin.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoDisplay-Ultralight.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-Bold.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-BoldItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-Heavy.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-HeavyItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-Light.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-LightItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-Medium.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-MediumItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-Regular.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-RegularItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-Semibold.otf\n/home/karna/.local/share/fonts/my-fonts/SanFranciscoText-SemiboldItalic.otf\n/home/karna/.local/share/fonts/my-fonts/segmono_boot.ttf\n/home/karna/.local/share/fonts/my-fonts/segoen_slboot.ttf\n/home/karna/.local/share/fonts/my-fonts/segoe_slboot.ttf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro.ttf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-Black.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-BlackItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-Bold.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-BoldItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-Heavy.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-HeavyItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-Light.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-LightItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-Medium.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-MediumItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-Regular.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-RegularItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-Semibold.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-SemiboldItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-Thin.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-ThinItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-Ultralight.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Display-UltralightItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Italic.ttf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Rounded-Black.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Rounded-Bold.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Rounded-Heavy.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Rounded-Light.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Rounded-Medium.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Rounded-Regular.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Rounded-Semibold.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Rounded-Thin.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Rounded-Ultralight.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-Black.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-BlackItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-Bold.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-BoldItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-Heavy.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-HeavyItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-Light.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-LightItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-Medium.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-MediumItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-Regular.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-RegularItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-Semibold.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-SemiboldItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-Thin.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-ThinItalic.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-Ultralight.otf\n/home/karna/.local/share/fonts/my-fonts/SF-Pro-Text-UltralightItalic.otf\n/home/karna/.local/share/fonts/my-fonts/Ubuntu-Bold.ttf\n/home/karna/.local/share/fonts/my-fonts/Ubuntu-BoldItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/Ubuntu-Italic.ttf\n/home/karna/.local/share/fonts/my-fonts/Ubuntu-Light.ttf\n/home/karna/.local/share/fonts/my-fonts/Ubuntu-LightItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/Ubuntu-Medium.ttf\n/home/karna/.local/share/fonts/my-fonts/Ubuntu-MediumItalic.ttf\n/home/karna/.local/share/fonts/my-fonts/Ubuntu-Regular.ttf\n/home/karna/.local/share/fonts/my-fonts/verdana.ttf\n/home/karna/.local/share/fonts/my-fonts/Verdana Bold.ttf","recorded":"2025-01-07 13:40:06.315426931","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Cozytile-main/fonts/awesome\n/home/karna/Downloads/Cozytile-main/fonts/Brains\n/home/karna/Downloads/Cozytile-main/fonts/jet\n/home/karna/Downloads/Cozytile-main/fonts/Icomoon-Feather.ttf","recorded":"2025-01-07 13:33:44.851415220","filePath":"null","pinned":false},{"value":"echo \"Setting up Fonts...\"\n\u0026\u0026 sleep 1\n\nmkdir -p ~/.local/share/fonts\ncd ~/.local/share/fonts\n\ngit clone https://github.com/Chaganti-Reddy/my-fonts.git\n\ncd my-fonts\n\nrm -rf .git/\n\ncd ~/dotfiles/\n\necho \"Fonts have been installed...\"","recorded":"2025-01-07 12:41:17.602416291","filePath":"null","pinned":false},{"value":"  sudo pacman -S alacritty\n","recorded":"2025-01-07 12:38:44.753477036","filePath":"null","pinned":false},{"value":"paru -Syu base-devel qtile python-psutil pywal-git feh picom-git dunst zsh starship playerctl brightnessctl alacritty pfetch thunar rofi ranger cava pulseaudio alsa-utils neovim vim git sddm --noconfirm --needed\n","recorded":"2025-01-07 12:38:41.465439305","filePath":"null","pinned":false},{"value":"  sudo cp ~/dotfiles/Extras/Extras/usr/share/xsessions/dwm.desktop /usr/share/xsessions\n","recorded":"2025-01-07 12:38:20.383304162","filePath":"null","pinned":false},{"value":"  sudo mkdir /usr/share/xsessions/\n","recorded":"2025-01-07 12:38:19.962353096","filePath":"null","pinned":false},{"value":"  cd ~/dotfiles/Extras/Extras/waldl-master/ \u0026\u0026 sudo make install \u0026\u0026 cd ~/dotfiles\n","recorded":"2025-01-07 12:38:19.265831475","filePath":"null","pinned":false},{"value":"  cd ~/.config/dmenu \u0026\u0026 sudo make install \u0026\u0026 cd\n","recorded":"2025-01-07 12:38:18.954392606","filePath":"null","pinned":false},{"value":"  cd ~/.config/st \u0026\u0026 sudo make install \u0026\u0026 cd\n","recorded":"2025-01-07 12:38:18.645177249","filePath":"null","pinned":false},{"value":"  cd ~/.config/slstatus \u0026\u0026 sudo make clean install \u0026\u0026 cd\n","recorded":"2025-01-07 12:38:18.315142650","filePath":"null","pinned":false},{"value":"  cd ~/.config/dwm \u0026\u0026 sudo make clean install \u0026\u0026 cd\n","recorded":"2025-01-07 12:38:18.003228388","filePath":"null","pinned":false},{"value":"  stow ~/dotfiles/suckless/\n","recorded":"2025-01-07 12:38:17.376579957","filePath":"null","pinned":false},{"value":"https://cryptpdf.streamlit.app/","recorded":"2025-01-07 12:31:18.628980666","filePath":"null","pinned":false},{"value":"/mnt/Karna/Git/PDF Password Remover/app.py\n/mnt/Karna/Git/PDF Password Remover/requirements.txt","recorded":"2025-01-07 12:23:51.440910706","filePath":"null","pinned":false},{"value":"git@github.com:Chaganti-Reddy/CryptPDF.git","recorded":"2025-01-07 12:23:29.593407791","filePath":"null","pinned":false},{"value":"sudo pacman -S qemu-full qemu-img libvirt virt-install virt-manager virt-viewer spice-vdagent edk2-ovmf dnsmasq swtpm guestfs-tools libosinfo tuned\n","recorded":"2025-01-07 12:18:04.485296009","filePath":"null","pinned":false},{"value":"import json\nimport requests\nimport streamlit as st\nfrom streamlit_lottie import st_lottie\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\n# Lottie animation code\ndef load_lottie_url(url: str):\n    \"\"\"Fetches Lottie animation from URL.\"\"\"\n    r = requests.get(url)\n    if r.status_code != 200:\n        return None\n    return r.json()\n\n# Fetch Lottie animation\nlottie_url = \"https://assets2.lottiefiles.com/packages/lf20_mDnmhAgZkb.json\"\nlottie_json = load_lottie_url(lottie_url)\n\n# Streamlit App Configuration\nst.set_page_config(page_title=\"CryptPDF\", layout=\"centered\")\n\n# Add Gradient Background CSS\nst.markdown(\n    \"\"\"\n    \u003cstyle\u003e\n    /* Remove footer */\n    footer {visibility: hidden;}\n\n    /* Gradient background animation */\n    body {\n        background: linear-gradient(-45deg, #ff9a9e, #fad0c4, #fbc2eb, #a18cd1);\n        background-size: 400% 400%;\n        animation: gradient 10s ease infinite;\n    }\n    @keyframes gradient {\n        0% { background-position: 0% 50%; }\n        50% { background-position: 100% 50%; }\n        100% { background-position: 0% 50%; }\n    }\n\n    /* Center content */\n    .stApp {\n        background: transparent;\n    }\n    \u003c/style\u003e\n    \"\"\",\n    unsafe_allow_html=True,\n)\n\n# App Title\nst.title(\"🔐 CryptPDF - Gradient Edition\")\n\n# Display Lottie animation\nif lottie_json:\n    st_lottie(lottie_json, speed=1, width=600, height=400, key=\"cryptpdf-lottie\")\n\nst.markdown(\"\"\"\nUpload a PDF file, and **CryptPDF** will automatically detect if it's encrypted or not. \nYou can then either remove the password or add a new password.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload a PDF\", type=[\"pdf\"])\n\ndef check_encryption_status(uploaded_file):\n    \"\"\"Check if the PDF file is encrypted.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        return reader.is_encrypted\n    except Exception as e:\n        return str(e)\n\ndef remove_pdf_password(uploaded_file, password):\n    \"\"\"Remove the password from a PDF file.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\ndef add_pdf_password(uploaded_file, password):\n    \"\"\"Encrypt a PDF file with a password.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        writer = PdfWriter()\n        \n        for page in reader.pages:\n            writer.add_page(page)\n        \n        writer.encrypt(password)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\nif uploaded_file:\n    with st.spinner(\"Checking file...\"):\n        encryption_status = check_encryption_status(uploaded_file)\n        \n    if isinstance(encryption_status, str):\n        st.error(f\"Error: {encryption_status}\")\n    else:\n        if encryption_status:\n            st.info(\"This file is encrypted. Decrypt it to proceed.\")\n            action = \"Remove Password (Decrypt)\"\n        else:\n            st.info(\"This file is not encrypted. Encrypt it to add protection.\")\n            action = \"Add Password (Encrypt)\"\n        \n        password = st.text_input(\n            f\"Enter Password to {'Decrypt' if encryption_status else 'Encrypt'} the PDF\",\n            type=\"password\"\n        )\n\n        if st.button(f\"Process: {action}\"):\n            with st.spinner(\"Processing...\"):\n                if encryption_status:  # Decrypt\n                    result = remove_pdf_password(uploaded_file, password)\n                else:  # Encrypt\n                    result = add_pdf_password(uploaded_file, password)\n                \n                if isinstance(result, BytesIO):\n                    st.success(f\"{action} successful!\")\n                    st.download_button(\n                        label=f\"Download {'Decrypted' if encryption_status else 'Encrypted'} PDF\",\n                        data=result,\n                        file_name=\"processed.pdf\",\n                        mime=\"application/pdf\"\n                    )\n                else:\n                    st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF file to begin.\")\n","recorded":"2025-01-07 12:18:04.463235446","filePath":"null","pinned":false},{"value":"import json\nimport requests\nimport streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\n# Streamlit App Configuration\nst.set_page_config(page_title=\"CryptPDF\", layout=\"centered\")\n\n# Add Snowflake Animation CSS\nst.markdown(\n    \"\"\"\n    \u003cstyle\u003e\n    /* Remove footer */\n    footer {visibility: hidden;}\n\n    /* Snowflake background animation */\n    body {\n        margin: 0;\n        height: 100%;\n        background: #1a1a1a;\n        overflow: hidden;\n    }\n\n    .snowflakes {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        pointer-events: none;\n    }\n\n    .snowflake {\n        position: absolute;\n        color: #ffffff;\n        font-size: 1rem;\n        opacity: 0.8;\n        user-select: none;\n        animation: fall linear infinite;\n    }\n\n    @keyframes fall {\n        0% {\n            top: -10%;\n            transform: translateX(0);\n        }\n        100% {\n            top: 100%;\n            transform: translateX(calc(100vw - 100%));\n        }\n    }\n\n    \u003c/style\u003e\n\n    \u003cscript\u003e\n    // JavaScript to generate snowflakes\n    const snowflakesContainer = document.createElement(\"div\");\n    snowflakesContainer.classList.add(\"snowflakes\");\n    document.body.appendChild(snowflakesContainer);\n\n    // Function to generate a snowflake\n    function createSnowflake() {\n        const snowflake = document.createElement(\"div\");\n        snowflake.classList.add(\"snowflake\");\n        snowflake.innerText = \"❄️\"; // Snowflake character\n        snowflake.style.left = `${Math.random() * 100}vw`;\n        snowflake.style.animationDuration = `${Math.random() * 5 + 5}s`; // Snowfall duration\n        snowflake.style.fontSize = `${Math.random() * 1.5 + 0.5}rem`;\n        snowflakesContainer.appendChild(snowflake);\n\n        // Remove snowflake after it finishes falling\n        setTimeout(() =\u003e {\n            snowflake.remove();\n        }, 10000); // Matches the max animation duration\n    }\n\n    // Generate snowflakes at intervals\n    setInterval(createSnowflake, 100);\n    \u003c/script\u003e\n    \"\"\",\n    unsafe_allow_html=True,\n)\n\n# App Title\nst.title(\"❄️ CryptPDF - Snowflake Edition\")\n\nst.markdown(\"\"\"\nUpload a PDF file, and **CryptPDF** will automatically detect if it's encrypted or not. \nYou can then either remove the password or add a new password.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload a PDF\", type=[\"pdf\"])\n\ndef check_encryption_status(uploaded_file):\n    \"\"\"Check if the PDF file is encrypted.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        return reader.is_encrypted\n    except Exception as e:\n        return str(e)\n\ndef remove_pdf_password(uploaded_file, password):\n    \"\"\"Remove the password from a PDF file.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\ndef add_pdf_password(uploaded_file, password):\n    \"\"\"Encrypt a PDF file with a password.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        writer = PdfWriter()\n        \n        for page in reader.pages:\n            writer.add_page(page)\n        \n        writer.encrypt(password)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\nif uploaded_file:\n    with st.spinner(\"Checking file...\"):\n        encryption_status = check_encryption_status(uploaded_file)\n        \n    if isinstance(encryption_status, str):\n        st.error(f\"Error: {encryption_status}\")\n    else:\n        if encryption_status:\n            st.info(\"This file is encrypted. Decrypt it to proceed.\")\n            action = \"Remove Password (Decrypt)\"\n        else:\n            st.info(\"This file is not encrypted. Encrypt it to add protection.\")\n            action = \"Add Password (Encrypt)\"\n        \n        password = st.text_input(\n            f\"Enter Password to {'Decrypt' if encryption_status else 'Encrypt'} the PDF\",\n            type=\"password\"\n        )\n\n        if st.button(f\"Process: {action}\"):\n            with st.spinner(\"Processing...\"):\n                if encryption_status:  # Decrypt\n                    result = remove_pdf_password(uploaded_file, password)\n                else:  # Encrypt\n                    result = add_pdf_password(uploaded_file, password)\n                \n                if isinstance(result, BytesIO):\n                    st.success(f\"{action} successful!\")\n                    st.download_button(\n                        label=f\"Download {'Decrypted' if encryption_status else 'Encrypted'} PDF\",\n                        data=result,\n                        file_name=\"processed.pdf\",\n                        mime=\"application/pdf\"\n                    )\n                else:\n                    st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF file to begin.\")\n","recorded":"2025-01-07 12:18:01.859577003","filePath":"null","pinned":false},{"value":"import streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\ndef check_encryption_status(uploaded_file):\n    \"\"\"Check if the PDF file is encrypted.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        return reader.is_encrypted\n    except Exception as e:\n        return str(e)\n\ndef remove_pdf_password(uploaded_file, password):\n    \"\"\"Remove the password from a PDF file.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\ndef add_pdf_password(uploaded_file, password):\n    \"\"\"Encrypt a PDF file with a password.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        writer = PdfWriter()\n        \n        for page in reader.pages:\n            writer.add_page(page)\n        \n        writer.encrypt(password)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\n# Streamlit App Configuration\nst.set_page_config(page_title=\"CryptPDF\", layout=\"centered\")\n\n# Inject Hacker-style Animation\nst.markdown(\n    \"\"\"\n    \u003cstyle\u003e\n    /* Remove footer */\n    footer {visibility: hidden;}\n\n    /* Hacker-style matrix background */\n    body {\n        margin: 0;\n        overflow: hidden;\n    }\n    canvas#matrix {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        z-index: -1;\n        background: black;\n    }\n    \u003c/style\u003e\n    \u003cscript\u003e\n    const canvas = document.createElement('canvas');\n    canvas.id = 'matrix';\n    document.body.appendChild(canvas);\n\n    const ctx = canvas.getContext('2d');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    const cols = Math.floor(canvas.width / 20) + 1;\n    const ypos = Array(cols).fill(0);\n\n    function matrixRain() {\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        ctx.fillStyle = '#0F0';\n        ctx.font = '15pt monospace';\n\n        ypos.forEach((y, ind) =\u003e {\n            const text = String.fromCharCode(65 + Math.random() * 58);\n            const x = ind * 20;\n            ctx.fillText(text, x, y);\n\n            if (y \u003e canvas.height + Math.random() * 10000) ypos[ind] = 0;\n            else ypos[ind] = y + 20;\n        });\n    }\n\n    setInterval(matrixRain, 50);\n    \u003c/script\u003e\n    \"\"\",\n    unsafe_allow_html=True,\n)\n\n# App Title\nst.title(\"🖥️ CryptPDF - Hacker Edition\")\n\nst.markdown(\"\"\"\nUpload a PDF file, and **CryptPDF** will automatically detect if it's encrypted or not. \nYou can then either remove the password or add a new password.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload a PDF\", type=[\"pdf\"])\n\nif uploaded_file:\n    with st.spinner(\"Checking file...\"):\n        encryption_status = check_encryption_status(uploaded_file)\n        \n    if isinstance(encryption_status, str):\n        st.error(f\"Error: {encryption_status}\")\n    else:\n        if encryption_status:\n            st.info(\"This file is encrypted. Decrypt it to proceed.\")\n            action = \"Remove Password (Decrypt)\"\n        else:\n            st.info(\"This file is not encrypted. Encrypt it to add protection.\")\n            action = \"Add Password (Encrypt)\"\n        \n        password = st.text_input(\n            f\"Enter Password to {'Decrypt' if encryption_status else 'Encrypt'} the PDF\",\n            type=\"password\"\n        )\n\n        if st.button(f\"Process: {action}\"):\n            with st.spinner(\"Processing...\"):\n                if encryption_status:  # Decrypt\n                    result = remove_pdf_password(uploaded_file, password)\n                else:  # Encrypt\n                    result = add_pdf_password(uploaded_file, password)\n                \n                if isinstance(result, BytesIO):\n                    st.success(f\"{action} successful!\")\n                    st.download_button(\n                        label=f\"Download {'Decrypted' if encryption_status else 'Encrypted'} PDF\",\n                        data=result,\n                        file_name=\"processed.pdf\",\n                        mime=\"application/pdf\"\n                    )\n                else:\n                    st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF file to begin.\")\n","recorded":"2025-01-07 12:17:13.839516868","filePath":"null","pinned":false},{"value":"streamlit-lottie PyPDF2 requests","recorded":"2025-01-07 12:16:41.959076508","filePath":"null","pinned":false},{"value":"treamlit-lottie PyPDF2 requests\n","recorded":"2025-01-07 12:16:38.640319608","filePath":"null","pinned":false},{"value":"pip install streamlit streamlit-lottie PyPDF2 requests\n","recorded":"2025-01-07 12:16:27.607653775","filePath":"null","pinned":false},{"value":"import json \nimport requests \n\nimport streamlit as st \nfrom streamlit_lottie import st_lottie \n\nurl = requests.get( \n\t\"https://assets2.lottiefiles.com/packages/lf20_mDnmhAgZkb.json\") \n# Creating a blank dictionary to store JSON file, \n# as their structure is similar to Python Dictionary \nurl_json = dict() \n\nif url.status_code == 200: \n\turl_json = url.json() \nelse: \n\tprint(\"Error in the URL\") \n\n\nst.title(\"Adding Lottie Animation in Streamlit WebApp\") \n\nst_lottie(url_json) \n","recorded":"2025-01-07 12:14:09.319461358","filePath":"null","pinned":false},{"value":"import streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\ndef check_encryption_status(uploaded_file):\n    \"\"\"Check if the PDF file is encrypted.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        return reader.is_encrypted\n    except Exception as e:\n        return str(e)\n\ndef remove_pdf_password(uploaded_file, password):\n    \"\"\"Remove the password from a PDF file.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\ndef add_pdf_password(uploaded_file, password):\n    \"\"\"Encrypt a PDF file with a password.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        writer = PdfWriter()\n        \n        for page in reader.pages:\n            writer.add_page(page)\n        \n        writer.encrypt(password)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\n# Streamlit App Configuration\nst.set_page_config(page_title=\"CryptPDF\", layout=\"centered\")\n\n# Add Gradient Background CSS\nst.markdown(\n    \"\"\"\n    \u003cstyle\u003e\n    /* Remove footer */\n    footer {visibility: hidden;}\n\n    /* Gradient background animation */\n    body {\n        background: linear-gradient(-45deg, #ff9a9e, #fad0c4, #fbc2eb, #a18cd1);\n        background-size: 400% 400%;\n        animation: gradient 10s ease infinite;\n    }\n    @keyframes gradient {\n        0% { background-position: 0% 50%; }\n        50% { background-position: 100% 50%; }\n        100% { background-position: 0% 50%; }\n    }\n\n    /* Center content */\n    .stApp {\n        background: transparent;\n    }\n    \u003c/style\u003e\n    \"\"\",\n    unsafe_allow_html=True,\n)\n\n# App Title\nst.title(\"🔐 CryptPDF - Gradient Edition\")\n\nst.markdown(\"\"\"\nUpload a PDF file, and **CryptPDF** will automatically detect if it's encrypted or not. \nYou can then either remove the password or add a new password.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload a PDF\", type=[\"pdf\"])\n\nif uploaded_file:\n    with st.spinner(\"Checking file...\"):\n        encryption_status = check_encryption_status(uploaded_file)\n        \n    if isinstance(encryption_status, str):\n        st.error(f\"Error: {encryption_status}\")\n    else:\n        if encryption_status:\n            st.info(\"This file is encrypted. Decrypt it to proceed.\")\n            action = \"Remove Password (Decrypt)\"\n        else:\n            st.info(\"This file is not encrypted. Encrypt it to add protection.\")\n            action = \"Add Password (Encrypt)\"\n        \n        password = st.text_input(\n            f\"Enter Password to {'Decrypt' if encryption_status else 'Encrypt'} the PDF\",\n            type=\"password\"\n        )\n\n        if st.button(f\"Process: {action}\"):\n            with st.spinner(\"Processing...\"):\n                if encryption_status:  # Decrypt\n                    result = remove_pdf_password(uploaded_file, password)\n                else:  # Encrypt\n                    result = add_pdf_password(uploaded_file, password)\n                \n                if isinstance(result, BytesIO):\n                    st.success(f\"{action} successful!\")\n                    st.download_button(\n                        label=f\"Download {'Decrypted' if encryption_status else 'Encrypted'} PDF\",\n                        data=result,\n                        file_name=\"processed.pdf\",\n                        mime=\"application/pdf\"\n                    )\n                else:\n                    st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF file to begin.\")\n","recorded":"2025-01-07 12:12:52.522318374","filePath":"null","pinned":false},{"value":"import streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\ndef check_encryption_status(uploaded_file):\n    \"\"\"Check if the PDF file is encrypted.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        return reader.is_encrypted\n    except Exception as e:\n        return str(e)\n\ndef remove_pdf_password(uploaded_file, password):\n    \"\"\"Remove the password from a PDF file.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\ndef add_pdf_password(uploaded_file, password):\n    \"\"\"Encrypt a PDF file with a password.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        writer = PdfWriter()\n        \n        for page in reader.pages:\n            writer.add_page(page)\n        \n        writer.encrypt(password)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\n# Streamlit App Configuration\nst.set_page_config(page_title=\"CryptPDF\", layout=\"centered\")\nst.markdown(\n    \"\"\"\n    \u003cstyle\u003e\n    /* Remove footer */\n    footer {visibility: hidden;}\n\n    /* Hacker-style matrix background */\n    body {\n        background-color: black;\n        color: #00FF00;\n    }\n    canvas {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        z-index: -1;\n    }\n    \u003c/style\u003e\n\n    \u003cscript\u003e\n    const canvas = document.createElement('canvas');\n    document.body.appendChild(canvas);\n    const ctx = canvas.getContext('2d');\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    const cols = Math.floor(canvas.width / 20) + 1;\n    const ypos = Array(cols).fill(0);\n\n    function matrixRain() {\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        ctx.fillStyle = '#0F0';\n        ctx.font = '15pt monospace';\n\n        ypos.forEach((y, ind) =\u003e {\n            const text = String.fromCharCode(65 + Math.random() * 58);\n            const x = ind * 20;\n            ctx.fillText(text, x, y);\n\n            if (y \u003e canvas.height + Math.random() * 10000) ypos[ind] = 0;\n            else ypos[ind] = y + 20;\n        });\n    }\n\n    setInterval(matrixRain, 50);\n    \u003c/script\u003e\n    \"\"\",\n    unsafe_allow_html=True,\n)\n\n# App Title\nst.title(\"🖥️ CryptPDF - Hacker Edition\")\n\nst.markdown(\"\"\"\nUpload a PDF file, and **CryptPDF** will automatically detect if it's encrypted or not. \nYou can then either remove the password or add a new password.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload a PDF\", type=[\"pdf\"])\n\nif uploaded_file:\n    with st.spinner(\"Checking file...\"):\n        encryption_status = check_encryption_status(uploaded_file)\n        \n    if isinstance(encryption_status, str):\n        st.error(f\"Error: {encryption_status}\")\n    else:\n        if encryption_status:\n            st.info(\"This file is encrypted. Decrypt it to proceed.\")\n            action = \"Remove Password (Decrypt)\"\n        else:\n            st.info(\"This file is not encrypted. Encrypt it to add protection.\")\n            action = \"Add Password (Encrypt)\"\n        \n        password = st.text_input(\n            f\"Enter Password to {'Decrypt' if encryption_status else 'Encrypt'} the PDF\",\n            type=\"password\"\n        )\n\n        if st.button(f\"Process: {action}\"):\n            with st.spinner(\"Processing...\"):\n                if encryption_status:  # Decrypt\n                    result = remove_pdf_password(uploaded_file, password)\n                else:  # Encrypt\n                    result = add_pdf_password(uploaded_file, password)\n                \n                if isinstance(result, BytesIO):\n                    st.success(f\"{action} successful!\")\n                    st.download_button(\n                        label=f\"Download {'Decrypted' if encryption_status else 'Encrypted'} PDF\",\n                        data=result,\n                        file_name=\"processed.pdf\",\n                        mime=\"application/pdf\"\n                    )\n                else:\n                    st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF file to begin.\")\n","recorded":"2025-01-07 12:11:12.409828280","filePath":"null","pinned":false},{"value":"sudo pacman -S qemu-full qemu-img libvirt virt-install virt-manager virt-viewer spice-vdagent edk3-ovmf dnsmasq swtpm guestfs-tools libosinfo tuned\nimport streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\ndef check_encryption_status(uploaded_file):\n    \"\"\"Check if the PDF file is encrypted.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        return reader.is_encrypted\n    except Exception as e:\n        return str(e)\n\ndef remove_pdf_password(uploaded_file, password):\n    \"\"\"Remove the password from a PDF file.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\ndef add_pdf_password(uploaded_file, password):\n    \"\"\"Encrypt a PDF file with a password.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        writer = PdfWriter()\n        \n        for page in reader.pages:\n            writer.add_page(page)\n        \n        writer.encrypt(password)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\n# Streamlit App Configuration\nst.set_page_config(page_title=\"CryptPDF\", layout=\"centered\")\nst.markdown(\n    \"\"\"\n    \u003cstyle\u003e\n    /* Remove footer */\n    footer {visibility: hidden;}\n\n    /* Hacker-style matrix background */\n    body {\n        background-color: black;\n        color: #00FF00;\n    }\n    canvas {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        z-index: -1;\n    }\n    \u003c/style\u003e\n\n    \u003cscript\u003e\n    const canvas = document.createElement('canvas');\n    document.body.appendChild(canvas);\n    const ctx = canvas.getContext('2d');\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    const cols = Math.floor(canvas.width / 20) + 1;\n    const ypos = Array(cols).fill(0);\n\n    function matrixRain() {\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        ctx.fillStyle = '#0F0';\n        ctx.font = '15pt monospace';\n\n        ypos.forEach((y, ind) =\u003e {\n            const text = String.fromCharCode(65 + Math.random() * 58);\n            const x = ind * 20;\n            ctx.fillText(text, x, y);\n\n            if (y \u003e canvas.height + Math.random() * 10000) ypos[ind] = 0;\n            else ypos[ind] = y + 20;\n        });\n    }\n\n    setInterval(matrixRain, 50);\n    \u003c/script\u003e\n    \"\"\",\n    unsafe_allow_html=True,\n)\n\n# App Title\nst.title(\"🖥️ CryptPDF - Hacker Edition\")\n\nst.markdown(\"\"\"\nUpload a PDF file, and **CryptPDF** will automatically detect if it's encrypted or not. \nYou can then either remove the password or add a new password.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload a PDF\", type=[\"pdf\"])\n\nif uploaded_file:\n    with st.spinner(\"Checking file...\"):\n        encryption_status = check_encryption_status(uploaded_file)\n        \n    if isinstance(encryption_status, str):\n        st.error(f\"Error: {encryption_status}\")\n    else:\n        if encryption_status:\n            st.info(\"This file is encrypted. Decrypt it to proceed.\")\n            action = \"Remove Password (Decrypt)\"\n        else:\n            st.info(\"This file is not encrypted. Encrypt it to add protection.\")\n            action = \"Add Password (Encrypt)\"\n        \n        password = st.text_input(\n            f\"Enter Password to {'Decrypt' if encryption_status else 'Encrypt'} the PDF\",\n            type=\"password\"\n        )\n\n        if st.button(f\"Process: {action}\"):\n            with st.spinner(\"Processing...\"):\n                if encryption_status:  # Decrypt\n                    result = remove_pdf_password(uploaded_file, password)\n                else:  # Encrypt\n                    result = add_pdf_password(uploaded_file, password)\n                \n                if isinstance(result, BytesIO):\n                    st.success(f\"{action} successful!\")\n                    st.download_button(\n                        label=f\"Download {'Decrypted' if encryption_status else 'Encrypted'} PDF\",\n                        data=result,\n                        file_name=\"processed.pdf\",\n                        mime=\"application/pdf\"\n                    )\n                else:\n                    st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF file to begin.\")\n","recorded":"2025-01-07 12:08:01.078066419","filePath":"null","pinned":false},{"value":"import streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\ndef check_encryption_status(uploaded_file):\n    \"\"\"Check if the PDF file is encrypted.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        return reader.is_encrypted\n    except Exception as e:\n        return str(e)\n\ndef remove_pdf_password(uploaded_file, password):\n    \"\"\"Remove the password from a PDF file.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\ndef add_pdf_password(uploaded_file, password):\n    \"\"\"Encrypt a PDF file with a password.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        writer = PdfWriter()\n        \n        for page in reader.pages:\n            writer.add_page(page)\n        \n        writer.encrypt(password)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\n# Streamlit App Configuration\nst.set_page_config(page_title=\"CryptPDF\", layout=\"centered\")\nst.markdown(\n    \"\"\"\n    \u003cstyle\u003e\n    /* Remove footer */\n    footer {visibility: hidden;}\n\n    /* Background animation */\n    body {\n        background: linear-gradient(-45deg, #ff9a9e, #fad0c4, #fbc2eb, #a18cd1);\n        background-size: 400% 400%;\n        animation: gradient 15s ease infinite;\n    }\n    @keyframes gradient {\n        0% { background-position: 0% 50%; }\n        50% { background-position: 100% 50%; }\n        100% { background-position: 0% 50%; }\n    }\n    \u003c/style\u003e\n    \"\"\",\n    unsafe_allow_html=True,\n)\n\n# App Title\nst.title(\"🔐 CryptPDF\")\n\nst.markdown(\"\"\"\nUpload a PDF file, and **CryptPDF** will automatically detect if it's encrypted or not. \nYou can then either remove the password or add a new password.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload a PDF\", type=[\"pdf\"])\n\nif uploaded_file:\n    with st.spinner(\"Checking file...\"):\n        encryption_status = check_encryption_status(uploaded_file)\n        \n    if isinstance(encryption_status, str):\n        st.error(f\"Error: {encryption_status}\")\n    else:\n        if encryption_status:\n            st.info(\"This file is encrypted. Decrypt it to proceed.\")\n            action = \"Remove Password (Decrypt)\"\n        else:\n            st.info(\"This file is not encrypted. Encrypt it to add protection.\")\n            action = \"Add Password (Encrypt)\"\n        \n        password = st.text_input(\n            f\"Enter Password to {'Decrypt' if encryption_status else 'Encrypt'} the PDF\",\n            type=\"password\"\n        )\n\n        if st.button(f\"Process: {action}\"):\n            with st.spinner(\"Processing...\"):\n                if encryption_status:  # Decrypt\n                    result = remove_pdf_password(uploaded_file, password)\n                else:  # Encrypt\n                    result = add_pdf_password(uploaded_file, password)\n                \n                if isinstance(result, BytesIO):\n                    st.success(f\"{action} successful!\")\n                    st.download_button(\n                        label=f\"Download {'Decrypted' if encryption_status else 'Encrypted'} PDF\",\n                        data=result,\n                        file_name=\"processed.pdf\",\n                        mime=\"application/pdf\"\n                    )\n                else:\n                    st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF file to begin.\")\n","recorded":"2025-01-07 12:07:50.247184053","filePath":"null","pinned":false},{"value":"import streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\ndef check_encryption_status(uploaded_file):\n    \"\"\"Check if the PDF file is encrypted.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        return reader.is_encrypted\n    except Exception as e:\n        return str(e)\n\ndef remove_pdf_password(uploaded_file, password):\n    \"\"\"Remove the password from a PDF file.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\ndef add_pdf_password(uploaded_file, password):\n    \"\"\"Encrypt a PDF file with a password.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        writer = PdfWriter()\n        \n        for page in reader.pages:\n            writer.add_page(page)\n        \n        writer.encrypt(password)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\n# Streamlit App\nst.set_page_config(page_title=\"CryptPDF\", layout=\"centered\")\nst.title(\"🔐 CryptPDF\")\n\nst.markdown(\"\"\"\nUpload a PDF file, and the app will automatically detect if it's encrypted or not. \nBased on the detection, you can either remove the password or add a password.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload a PDF\", type=[\"pdf\"])\n\nif uploaded_file:\n    with st.spinner(\"Checking file...\"):\n        encryption_status = check_encryption_status(uploaded_file)\n        \n    if isinstance(encryption_status, str):\n        st.error(f\"Error: {encryption_status}\")\n    else:\n        if encryption_status:\n            st.info(\"This file is encrypted. Decrypt it to proceed.\")\n            action = \"Remove Password (Decrypt)\"\n        else:\n            st.info(\"This file is not encrypted. Encrypt it to add protection.\")\n            action = \"Add Password (Encrypt)\"\n        \n        password = st.text_input(\n            f\"Enter Password to {'Decrypt' if encryption_status else 'Encrypt'} the PDF\",\n            type=\"password\"\n        )\n\n        if st.button(f\"Process: {action}\"):\n            with st.spinner(\"Processing...\"):\n                if encryption_status:  # Decrypt\n                    result = remove_pdf_password(uploaded_file, password)\n                else:  # Encrypt\n                    result = add_pdf_password(uploaded_file, password)\n                \n                if isinstance(result, BytesIO):\n                    st.success(f\"{action} successful!\")\n                    st.download_button(\n                        label=f\"Download {'Decrypted' if encryption_status else 'Encrypted'} PDF\",\n                        data=result,\n                        file_name=\"processed.pdf\",\n                        mime=\"application/pdf\"\n                    )\n                else:\n                    st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF file to begin.\")\n\nst.markdown(\"---\")\n","recorded":"2025-01-07 12:06:31.031652540","filePath":"null","pinned":false},{"value":"st.markdown(\"Made with ❤️ using Streamlit.\")\n","recorded":"2025-01-07 12:04:39.277834241","filePath":"null","pinned":false},{"value":"import streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\ndef remove_pdf_password(uploaded_file, password):\n    \"\"\"Remove the password from a PDF file.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\ndef add_pdf_password(uploaded_file, password):\n    \"\"\"Encrypt a PDF file with a password.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        writer = PdfWriter()\n        \n        for page in reader.pages:\n            writer.add_page(page)\n        \n        writer.encrypt(password)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\n# Streamlit App\nst.set_page_config(page_title=\"PDF Encrypt/Decrypt\", layout=\"centered\")\nst.title(\"🔐 PDF Encrypt and Decrypt\")\n\nst.markdown(\"\"\"\nUpload a PDF file to either encrypt (add password) or decrypt (remove password). This tool does not store your files.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload a PDF\", type=[\"pdf\"])\n\nif uploaded_file:\n    # Choose Action\n    action = st.radio(\n        \"Select an Action:\",\n        (\"Remove Password (Decrypt)\", \"Add Password (Encrypt)\")\n    )\n    \n    password = st.text_input(\"Enter Password\", type=\"password\")\n\n    if action == \"Add Password (Encrypt)\" and not password:\n        st.warning(\"Please provide a password to encrypt the file.\")\n\n    if action == \"Remove Password (Decrypt)\" and not password:\n        st.warning(\"Please provide the password to decrypt the file.\")\n    \n    if st.button(\"Process\"):\n        with st.spinner(\"Processing...\"):\n            if action == \"Remove Password (Decrypt)\":\n                result = remove_pdf_password(uploaded_file, password)\n            else:  # Add Password (Encrypt)\n                result = add_pdf_password(uploaded_file, password)\n            \n            if isinstance(result, BytesIO):\n                st.success(f\"{action} successful!\")\n                st.download_button(\n                    label=f\"Download {'Decrypted' if action == 'Remove Password (Decrypt)' else 'Encrypted'} PDF\",\n                    data=result,\n                    file_name=\"processed.pdf\",\n                    mime=\"application/pdf\"\n                )\n            else:\n                st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF file to begin.\")\n\nst.markdown(\"---\")\nst.markdown(\"Made with ❤️ using Streamlit.\")\n","recorded":"2025-01-07 12:01:53.584061894","filePath":"null","pinned":false},{"value":"import streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\ndef check_encryption_status(uploaded_file):\n    \"\"\"Check if the PDF file is encrypted.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        return reader.is_encrypted\n    except Exception as e:\n        return str(e)\n\ndef remove_pdf_password(uploaded_file, password):\n    \"\"\"Remove the password from a PDF file.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\ndef add_pdf_password(uploaded_file, password):\n    \"\"\"Encrypt a PDF file with a password.\"\"\"\n    try:\n        reader = PdfReader(uploaded_file)\n        writer = PdfWriter()\n        \n        for page in reader.pages:\n            writer.add_page(page)\n        \n        writer.encrypt(password)\n        \n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\n# Streamlit App\nst.set_page_config(page_title=\"PDF Encrypt/Decrypt\", layout=\"centered\")\nst.title(\"🔐 PDF Encrypt and Decrypt\")\n\nst.markdown(\"\"\"\nUpload a PDF file, and the app will automatically detect if it's encrypted or not. \nBased on the detection, you can either remove the password or add a password.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload a PDF\", type=[\"pdf\"])\n\nif uploaded_file:\n    with st.spinner(\"Checking file...\"):\n        encryption_status = check_encryption_status(uploaded_file)\n        \n    if isinstance(encryption_status, str):\n        st.error(f\"Error: {encryption_status}\")\n    else:\n        if encryption_status:\n            st.info(\"This file is encrypted. Decrypt it to proceed.\")\n            action = \"Remove Password (Decrypt)\"\n        else:\n            st.info(\"This file is not encrypted. Encrypt it to add protection.\")\n            action = \"Add Password (Encrypt)\"\n        \n        password = st.text_input(\n            f\"Enter Password to {'Decrypt' if encryption_status else 'Encrypt'} the PDF\",\n            type=\"password\"\n        )\n\n        if st.button(f\"Process: {action}\"):\n            with st.spinner(\"Processing...\"):\n                if encryption_status:  # Decrypt\n                    result = remove_pdf_password(uploaded_file, password)\n                else:  # Encrypt\n                    result = add_pdf_password(uploaded_file, password)\n                \n                if isinstance(result, BytesIO):\n                    st.success(f\"{action} successful!\")\n                    st.download_button(\n                        label=f\"Download {'Decrypted' if encryption_status else 'Encrypted'} PDF\",\n                        data=result,\n                        file_name=\"processed.pdf\",\n                        mime=\"application/pdf\"\n                    )\n                else:\n                    st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF file to begin.\")\n\nst.markdown(\"---\")\nst.markdown(\"Made with ❤️ using Streamlit.\")\n","recorded":"2025-01-07 12:01:48.064706649","filePath":"null","pinned":false},{"value":"import streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\ndef remove_pdf_password(uploaded_file, password):\n    try:\n        # Read the encrypted PDF\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        # Create a writer to save the unprotected PDF\n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        # Save the unprotected PDF to a BytesIO stream\n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\n# Streamlit App\nst.set_page_config(page_title=\"PDF Password Remover\", layout=\"centered\")\nst.title(\"🔒 PDF Password Remover\")\n\nst.markdown(\"\"\"\nUpload an encrypted PDF, provide its password, and download the unlocked version. This tool does not store your files.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload Encrypted PDF\", type=[\"pdf\"])\npassword = st.text_input(\"Enter Password\", type=\"password\")\n\nif uploaded_file and password:\n    if st.button(\"Remove Password\"):\n        with st.spinner(\"Processing...\"):\n            result = remove_pdf_password(uploaded_file, password)\n            if isinstance(result, BytesIO):\n                st.success(\"Password removed successfully!\")\n                st.download_button(\n                    label=\"Download Unlocked PDF\",\n                    data=result,\n                    file_name=\"unlocked.pdf\",\n                    mime=\"application/pdf\"\n                )\n            else:\n                st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF and enter the password to proceed.\")\n\nst.markdown(\"---\")\n# st.markdown(\"Made with ❤️ using Streamlit.\")\n","recorded":"2025-01-07 11:59:57.265874622","filePath":"null","pinned":false},{"value":"from PyPDF2 import PdfFileReader,PdfFileWriter\n### open the current pdf\nfile_pdf=PdfFileReader('file.pdf')\n### Object for pdf writer\nout_pdf=PdfFileWriter()\n\nfor i in range(file_pdf.numPages):\n    page_details=file_pdf.getPage(i)\n    ### Add to the output page\n    out_pdf.addPage(page_details)\n\npassword=\"password\"\n\nout_pdf.encrypt(password)\n\nwith open(\"encryptedtickets.pdf\",\"wb\") as filename:\n    out_pdf.write(filename)","recorded":"2025-01-07 11:58:57.982670163","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/PDF Password Remover","recorded":"2025-01-07 11:58:08.424937945","filePath":"null","pinned":false},{"value":"pycryptodome","recorded":"2025-01-07 11:55:28.534193563","filePath":"null","pinned":false},{"value":"streamlit PyPDF2","recorded":"2025-01-07 11:54:58.436268660","filePath":"null","pinned":false},{"value":"import streamlit as st\nfrom PyPDF2 import PdfReader, PdfWriter\nfrom io import BytesIO\n\ndef remove_pdf_password(uploaded_file, password):\n    try:\n        # Read the encrypted PDF\n        reader = PdfReader(uploaded_file)\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Incorrect password.\")\n        \n        # Create a writer to save the unprotected PDF\n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        # Save the unprotected PDF to a BytesIO stream\n        output_stream = BytesIO()\n        writer.write(output_stream)\n        output_stream.seek(0)\n        return output_stream\n    except Exception as e:\n        return str(e)\n\n# Streamlit App\nst.set_page_config(page_title=\"PDF Password Remover\", layout=\"centered\")\nst.title(\"🔒 PDF Password Remover\")\n\nst.markdown(\"\"\"\nUpload an encrypted PDF, provide its password, and download the unlocked version. This tool does not store your files.\n\"\"\")\n\nuploaded_file = st.file_uploader(\"Upload Encrypted PDF\", type=[\"pdf\"])\npassword = st.text_input(\"Enter Password\", type=\"password\")\n\nif uploaded_file and password:\n    if st.button(\"Remove Password\"):\n        with st.spinner(\"Processing...\"):\n            result = remove_pdf_password(uploaded_file, password)\n            if isinstance(result, BytesIO):\n                st.success(\"Password removed successfully!\")\n                st.download_button(\n                    label=\"Download Unlocked PDF\",\n                    data=result,\n                    file_name=\"unlocked.pdf\",\n                    mime=\"application/pdf\"\n                )\n            else:\n                st.error(f\"Error: {result}\")\nelse:\n    st.info(\"Please upload a PDF and enter the password to proceed.\")\n\nst.markdown(\"---\")\nst.markdown(\"Made with ❤️ using Streamlit.\")\n","recorded":"2025-01-07 11:54:44.428194819","filePath":"null","pinned":false},{"value":"pip install pycryptodome","recorded":"2025-01-07 11:52:37.764238521","filePath":"null","pinned":false},{"value":"pip install --upgrade PyPDF2\n","recorded":"2025-01-07 11:52:22.245537637","filePath":"null","pinned":false},{"value":"python -m pip show pycryptodome\n","recorded":"2025-01-07 11:52:13.178523084","filePath":"null","pinned":false},{"value":"(base) \u003e\u003e\u003e    Downloads  python 1.py\nAn error occurred: PyCryptodome is required for AES algorithm","recorded":"2025-01-07 11:50:06.922648254","filePath":"null","pinned":false},{"value":"68,427","recorded":"2025-01-07 11:21:28.505640565","filePath":"null","pinned":false},{"value":"from PyPDF2 import PdfReader, PdfWriter\n\ndef remove_pdf_password(input_file, output_file, password):\n    try:\n        # Read the encrypted PDF\n        reader = PdfReader(input_file)\n        \n        # Check if the file is encrypted\n        if reader.is_encrypted:\n            if not reader.decrypt(password):\n                raise ValueError(\"Failed to decrypt the PDF. Incorrect password.\")\n        \n        # Create a writer to save the unprotected PDF\n        writer = PdfWriter()\n        for page in reader.pages:\n            writer.add_page(page)\n        \n        # Write the decrypted content to a new file\n        with open(output_file, \"wb\") as out_file:\n            writer.write(out_file)\n        \n        print(f\"Password removed successfully. File saved as '{output_file}'.\")\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n\n# Example usage\nif __name__ == \"__main__\":\n    input_pdf = \"protected.pdf\"  # Path to the encrypted PDF\n    output_pdf = \"unprotected.pdf\"  # Path to the output PDF\n    pdf_password = \"your_password\"  # The password for the PDF\n\n    remove_pdf_password(input_pdf, output_pdf, pdf_password)\n","recorded":"2025-01-07 11:16:13.019444985","filePath":"null","pinned":false},{"value":"pip install PyPDF2\n","recorded":"2025-01-07 11:16:03.310344145","filePath":"null","pinned":false},{"value":"venkataramireddychaganti41@gmail.com","recorded":"2025-01-07 10:21:46.006391571","filePath":"null","pinned":false},{"value":"sudo usermod -aG libvirt \"$USER\"\nsudo virsh net-start default\n\n","recorded":"2025-01-06 18:54:04.029802155","filePath":"null","pinned":false},{"value":"sudo systemctl enable --now libvirtd.service\n","recorded":"2025-01-06 18:53:50.652213315","filePath":"null","pinned":false},{"value":"virt-manager spice-vdagent ","recorded":"2025-01-06 18:53:39.294140998","filePath":"null","pinned":false},{"value":"  rm Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n","recorded":"2025-01-06 18:53:11.385347366","filePath":"null","pinned":false},{"value":"  # Remove the installer after installation\n","recorded":"2025-01-06 18:53:11.033764750","filePath":"null","pinned":false},{"value":"  bash Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n","recorded":"2025-01-06 18:53:10.374817458","filePath":"null","pinned":false},{"value":"  # Run the installer\n","recorded":"2025-01-06 18:53:10.010376002","filePath":"null","pinned":false},{"value":"  wget https://repo.anaconda.com/miniconda/Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n","recorded":"2025-01-06 18:53:09.300034035","filePath":"null","pinned":false},{"value":"  # Download Miniconda installer\n","recorded":"2025-01-06 18:53:08.968888802","filePath":"null","pinned":false},{"value":"echo \"Setting up Miniconda...\"\n\n# Ask the user if they want to install Miniconda\ndialog --title \"Install Miniconda?\" \\\n  --yesno \"Would you like to install Miniconda? (Recommended for Python and Data Science)\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Miniconda installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Miniconda installation will begin now.\" 10 50\n\n  # Download Miniconda installer\n  wget https://repo.anaconda.com/miniconda/Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Run the installer\n  bash Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Remove the installer after installation\n  rm Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  dialog --msgbox \"Miniconda installation completed.\" 10 50\nfi\n\nclear","recorded":"2025-01-06 18:52:01.244569683","filePath":"null","pinned":false},{"value":"Unable to complete install: 'internal error: QEMU unexpectedly closed the monitor (vm='archlinux'): 2025-01-06T13:18:53.376577Z qemu-system-x86_64: -device {\"driver\":\"virtio-vga-gl\",\"id\":\"video0\",\"max_outputs\":1,\"bus\":\"pcie.0\",\"addr\":\"0x1\"}: The display backend does not have OpenGL support enabled\nIt can be enabled with '-display BACKEND,gl=on' where BACKEND is the name of the display backend to use.'\n\nTraceback (most recent call last):\n  File \"/usr/share/virt-manager/virtManager/asyncjob.py\", line 71, in cb_wrapper\n    callback(asyncjob, *args, **kwargs)\n    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/share/virt-manager/virtManager/createvm.py\", line 2008, in _do_async_install\n    installer.start_install(guest, meter=meter)\n    ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/share/virt-manager/virtinst/install/installer.py\", line 726, in start_install\n    domain = self._create_guest(\n            guest, meter, initial_xml, final_xml,\n            doboot, transient)\n  File \"/usr/share/virt-manager/virtinst/install/installer.py\", line 667, in _create_guest\n    domain = self.conn.createXML(initial_xml or final_xml, 0)\n  File \"/usr/lib/python3.13/site-packages/libvirt.py\", line 4545, in createXML\n    raise libvirtError('virDomainCreateXML() failed')\nlibvirt.libvirtError: internal error: QEMU unexpectedly closed the monitor (vm='archlinux'): 2025-01-06T13:18:53.376577Z qemu-system-x86_64: -device {\"driver\":\"virtio-vga-gl\",\"id\":\"video0\",\"max_outputs\":1,\"bus\":\"pcie.0\",\"addr\":\"0x1\"}: The display backend does not have OpenGL support enabled\nIt can be enabled with '-display BACKEND,gl=on' where BACKEND is the name of the display backend to use.\n","recorded":"2025-01-06 18:49:09.785408470","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/archlinux-2025.01.01-x86_64.iso","recorded":"2025-01-06 18:13:05.660501922","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/GST_STATEMENT_ASSESMENT_YEAR_24_25.pdf","recorded":"2025-01-06 18:12:18.956334444","filePath":"null","pinned":false},{"value":"https://archlinux.org/releng/releases/2025.01.01/torrent/","recorded":"2025-01-06 17:59:40.959270786","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up SDDM (Simple Desktop Display Manager)...\"\n\n# Install SDDM\necho \"Installing SDDM...\"\n\nsudo pacman -S --noconfirm sddm qt6-5compat qt6-declarative qt6-svg\n\necho \"Enabling SDDM to start at boot...\"\nsudo systemctl enable sddm.service --now\n\nsudo cp ~/dotfiles/Extras/Extras/usr/share/sddm/themes/simple-sddm/ /usr/share/sddm/themes\n\nsudo cp etc/sddm.conf /etc/sddm.conf\n\ncd ~/dotfiles/\n\n# Show confirmation message\ndialog --msgbox \"SDDM has been installed and enabled to start at boot.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:48:09.768796522","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up SDDM (Simple Desktop Display Manager)...\"\n\n# Install SDDM\necho \"Installing SDDM...\"\n\nsudo pacman -S --noconfirm sddm qt6-5compat qt6-declarative qt6-svg\n\necho \"Enabling SDDM to start at boot...\"\nsudo systemctl enable sddm.service --now\n\nsudo cp ~/dotfiles/Extras/Extras/usr/share/sddm/themes/simple-sddm/ /usr/share/sddm/themes\n\nsudo cp etc/sddm.conf /etc/sddm.conf\n\n# Show confirmation message\ndialog --msgbox \"SDDM has been installed and enabled to start at boot.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:47:51.973976993","filePath":"null","pinned":false},{"value":"# Enable SDDM to start at boot\n","recorded":"2025-01-06 17:47:30.858755979","filePath":"null","pinned":false},{"value":"sudo pacman -S --noconfirm sddm\n","recorded":"2025-01-06 17:47:27.877237339","filePath":"null","pinned":false},{"value":"sddm qt6-5compat qt6-declarative qt6-svg","recorded":"2025-01-06 17:47:15.300308545","filePath":"null","pinned":false},{"value":"sudo cp etc/sddm.conf /etc/sddm.conf\n","recorded":"2025-01-06 17:47:01.708325293","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up pacman.conf...\"\n\n# Use sed to find the #UseSyslog line and append the settings under it\nsudo sed -i '/#UseSyslog/a\\\nILoveCandy\\nParallelDownloads=10\\nColor' /etc/pacman.conf\n\necho \"Configuration added under #UseSyslog.\"\n","recorded":"2025-01-06 17:46:48.658538245","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up SDDM (Simple Desktop Display Manager)...\"\n\n# Ask user to install SDDM\ninstall_sddm=$(dialog --title \"Install SDDM\" \\\n  --yesno \"Do you want to install SDDM (Simple Desktop Display Manager)?\" 10 50)\n\n# Check user's choice\nif [ $? -eq 0 ]; then\n  echo \"Installing SDDM...\"\n  sudo pacman -S --noconfirm sddm\n\n  # Ask user if they want to enable SDDM at boot\n  enable_sddm=$(dialog --title \"Enable SDDM\" \\\n    --yesno \"Do you want to enable SDDM to start at boot?\" 10 50)\n\n  # Enable SDDM if user wants\n  if [ $? -eq 0 ]; then\n    echo \"Enabling SDDM to start at boot...\"\n    sudo systemctl enable sddm.service --now\n    dialog --msgbox \"SDDM has been installed and enabled to start at boot.\" 10 50\n  else\n    dialog --msgbox \"SDDM has been installed but not enabled to start at boot.\" 10 50\n  fi\nelse\n  dialog --msgbox \"SDDM installation canceled. Exiting.\" 10 50\n  exit 1\nfi\n\nclear\n","recorded":"2025-01-06 17:46:48.649793915","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up SDDM (Simple Desktop Display Manager)...\"\n\n# Install SDDM\necho \"Installing SDDM...\"\nsudo pacman -S --noconfirm sddm\n\n# Enable SDDM to start at boot\necho \"Enabling SDDM to start at boot...\"\nsudo systemctl enable sddm.service --now\n\n# Show confirmation message\ndialog --msgbox \"SDDM has been installed and enabled to start at boot.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:46:46.585077759","filePath":"null","pinned":false},{"value":"echo \"Installing main packages and application that I personally use the most...\" \u0026\u0026 sleep 1\n\n# Function to display the browser selection menu\ninstall_browser() {\n  # Display the checkbox menu\n  choices=$(whiptail --title \"Browser Selection\" \\\n    --checklist \"Select the browsers you want to install:\" 15 50 6 \\\n    \"   Zen-Browser   \" \"\" OFF \\\n    \"     Firefox     \" \"\" OFF \\\n    \"    Chromium     \" \"\" OFF \\\n    \"     Vivaldi     \" \"\" OFF \\\n    \"   qutebrowser   \" \"\" OFF \\\n    \"     Brave       \" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\n  # Check if the user pressed Cancel\n  if [ $? -ne 0 ]; then\n    echo \"No selection made. Exiting.\"\n    exit 1\n  fi\n\n  # Process the selected options\n  for choice in $choices; do\n    case $choice in\n    \"\\\"   Zen-Browser   \\\"\")\n      echo \"Installing Zen-Browser...\"\n      paru -S --noconfirm --needed zen-broswer-bin\n      # Video Download Helper\n      curl -sSLf https://github.com/aclap-dev/vdhcoapp/releases/latest/download/install.sh | bash\n      ;;\n    \"\\\"     Firefox     \\\"\")\n      echo \"Installing Firefox...\"\n      sudo pacman -S --noconfirm firefox\n      ;;\n    \"\\\"    Chromium     \\\"\")\n      echo \"Installing Chromium...\"\n      sudo pacman -S --noconfirm chromium\n      ;;\n    \"\\\"     Vivaldi     \\\"\")\n      echo \"Installing Vivaldi...\"\n      paru -S --noconfirm vivaldi\n      ;;\n    \"\\\"   qutebrowser   \\\"\")\n      echo \"Installing qutebrowser...\"\n      sudo pacman -S --noconfirm qutebrowser\n      ;;\n    \"\\\"     Brave       \\\"\")\n      echo \"Installing Brave...\"\n      paru -S --noconfirm brave-bin\n      ;;\n    *)\n      echo \"Invalid choice: $choice\"\n      ;;\n    esac\n  done\n}\n\n# Call the browser installation function\ninstall_browser\n\ndialog --msgbox \"Selected browsers have been installed.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:44:50.249348397","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Installing main packages and applications that I personally use the most...\" \u0026\u0026 sleep 1\n\n# Function to display the browser selection menu using dialog\ninstall_browser() {\n  # Display the checklist menu\n  choices=$(dialog --title \"Browser Selection\" \\\n    --checklist \"Select the browsers you want to install:\" 15 50 6 \\\n    \"Zen-Browser\" \"\" OFF \\\n    \"Firefox\" \"\" OFF \\\n    \"Chromium\" \"\" OFF \\\n    \"Vivaldi\" \"\" OFF \\\n    \"qutebrowser\" \"\" OFF \\\n    \"Brave\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\n  # Check if the user pressed Cancel\n  if [ $? -ne 0 ]; then\n    echo \"No selection made. Exiting.\"\n    exit 1\n  fi\n\n  # Process the selected options\n  for choice in $choices; do\n    case $choice in\n    \"Zen-Browser\")\n      echo \"Installing Zen-Browser...\"\n      paru -S --noconfirm --needed zen-browser-bin\n      # Video Download Helper\n      curl -sSLf https://github.com/aclap-dev/vdhcoapp/releases/latest/download/install.sh | bash\n      ;;\n    \"Firefox\")\n      echo \"Installing Firefox...\"\n      sudo pacman -S --noconfirm firefox\n      ;;\n    \"Chromium\")\n      echo \"Installing Chromium...\"\n      sudo pacman -S --noconfirm chromium\n      ;;\n    \"Vivaldi\")\n      echo \"Installing Vivaldi...\"\n      paru -S --noconfirm vivaldi\n      ;;\n    \"qutebrowser\")\n      echo \"Installing qutebrowser...\"\n      sudo pacman -S --noconfirm qutebrowser\n      ;;\n    \"Brave\")\n      echo \"Installing Brave...\"\n      paru -S --noconfirm brave-bin\n      ;;\n    *)\n      echo \"Invalid choice: $choice\"\n      ;;\n    esac\n  done\n}\n\n# Call the browser installation function\ninstall_browser\n\ndialog --msgbox \"Selected browsers have been installed.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:44:40.980684946","filePath":"null","pinned":false},{"value":"# sudo sed -i '/^\\[options\\]/a '\"$lines_to_append\" /etc/pacman.conf\n","recorded":"2025-01-06 17:43:55.087795692","filePath":"null","pinned":false},{"value":"# lines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n","recorded":"2025-01-06 17:43:54.848357191","filePath":"null","pinned":false},{"value":"# Setting up pacman.conf\n","recorded":"2025-01-06 17:43:54.570168460","filePath":"null","pinned":false},{"value":"echo \"Setting up pacman.conf...\"\n\n# Define the lines to append\nlines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n\n# Check if the [options] section exists\nif grep -q '^\\[options\\]' /etc/pacman.conf; then\n  # Use sed to find the #UseSyslog line and append the settings under it\n  sudo sed -i '/#UseSyslog/a\\\nILoveCandy\\nParallelDownloads=10\\nColor' /etc/pacman.conf\n  echo \"Configuration added under #UseSyslog.\"\nelse\n  echo \"[options] section not found. Skipping...\"\nfi","recorded":"2025-01-06 17:43:34.270384585","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up pacman.conf...\"\n\n# Define the lines to append\nlines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n\n# Check if the [options] section exists\nif grep -q '^\\[options\\]' /etc/pacman.conf; then\n  # Use sed to find the #UseSyslog line and append the settings under it\n  sudo sed -i '/#UseSyslog/a\\\nILoveCandy\\nParallelDownloads=10\\nColor' /etc/pacman.conf\n  echo \"Configuration added under #UseSyslog.\"\nelse\n  echo \"[options] section not found. Skipping...\"\nfi\n","recorded":"2025-01-06 17:43:34.260842813","filePath":"null","pinned":false},{"value":"# Setting up pacman.conf\n# lines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n# sudo sed -i '/^\\[options\\]/a '\"$lines_to_append\" /etc/pacman.conf","recorded":"2025-01-06 17:42:58.003664259","filePath":"null","pinned":false},{"value":"#GRUB_THEME=\"\"","recorded":"2025-01-06 17:42:30.291879868","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up pacman.conf...\"\n\n# Define the lines to append\nlines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n\n# Check if the [options] section exists\nif grep -q '^\\[options\\]' /etc/pacman.conf; then\n  # Check if the lines already exist to avoid duplicates\n  for line in $lines_to_append; do\n    if ! grep -q \"$line\" /etc/pacman.conf; then\n      echo -e \"$line\" | sudo tee -a /etc/pacman.conf \u003e /dev/null\n      echo \"Added: $line\"\n    else\n      echo \"Already present: $line\"\n    fi\n  done\nelse\n  echo \"[options] section not found. Skipping...\"\nfi\n","recorded":"2025-01-06 17:42:30.283396932","filePath":"null","pinned":false},{"value":"#UseSyslog","recorded":"2025-01-06 17:42:08.365909021","filePath":"null","pinned":false},{"value":"ILoveCandy\nParallelDownloads=10\nColor","recorded":"2025-01-06 17:41:27.980899597","filePath":"null","pinned":false},{"value":"!/bin/bash\n\necho \"Setting up pacman.conf...\"\n\n# Define the lines to append\nlines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n\n# Check if the [options] section exists\nif grep -q '^\\[options\\]' /etc/pacman.conf; then\n  # Append lines to the [options] section\n  echo -e \"$lines_to_append\" | sudo tee -a /etc/pacman.conf \u003e /dev/null\n  echo \"Configuration added successfully.\"\nelse\n  echo \"[options] section not found. Skipping...\"\nfi\n","recorded":"2025-01-06 17:41:09.764557617","filePath":"null","pinned":false},{"value":"[options]\n# The following paths are commented out with their default values listed.\n# If you wish to use different paths, uncomment and update the paths.\n#RootDir     = /\n#DBPath      = /var/lib/pacman/\n#CacheDir    = /var/cache/pacman/pkg/\n#LogFile     = /var/log/pacman.log\n#GPGDir      = /etc/pacman.d/gnupg/\n#HookDir     = /etc/pacman.d/hooks/\nHoldPkg     = pacman glibc\n#XferCommand = /usr/bin/curl -L -C - -f -o %o %u\n#XferCommand = /usr/bin/wget --passive-ftp -c -O %o %u\n#CleanMethod = KeepInstalled\nArchitecture = auto\n\n# Pacman won't upgrade packages listed in IgnorePkg and members of IgnoreGroup\n#IgnorePkg   =\n#IgnoreGroup =\n\n#NoUpgrade   =\n#NoExtract   =\n\n# Misc options\n#UseSyslog\nColor\nILoveCandy\n#NoProgressBar\nCheckSpace\n#VerbosePkgLists\nParallelDownloads = 10\nDownloadUser = alpm\n#DisableSandbox","recorded":"2025-01-06 17:40:23.923798021","filePath":"null","pinned":false},{"value":"#","recorded":"2025-01-06 17:39:36.793151292","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up GRUB theme...\"\n\n# Ask if the user wants to set up a GRUB theme\ndialog --title \"Install GRUB theme?\" \\\n  --yesno \"Would you like to install a GRUB theme?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"GRUB theme setup skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"GRUB theme setup will begin now.\" 10 50\nfi\n\n# sudo cp ~/dotfiles/Extras/Extras/boot/grub/themes/SekiroShadow/ /boot/grub/themes/\n\n# Enable the GRUB theme\necho \"Setting GRUB theme...\"\nsudo sed -i 's/#GRUB_THEME=\"\"/GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"/g' /etc/default/grub\n\n# Regenerate GRUB config\necho \"Regenerating GRUB configuration...\"\n# sudo grub-mkconfig -o /boot/grub/grub.cfg\n\ndialog --msgbox \"GRUB theme setup is complete and GRUB config has been updated.\" 10 50\nclear\n","recorded":"2025-01-06 17:39:05.421482893","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up pacman.conf...\"\n\n# Define the lines to append\nlines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n\n# Check if the [options] section exists\nif grep -q '^\\[options\\]' /etc/pacman.conf; then\n  # Append lines to the [options] section\n  echo -e \"$lines_to_append\" | sudo tee -a /etc/pacman.conf \u003e /dev/null\n  echo \"Configuration added successfully.\"\nelse\n  echo \"[options] section not found. Skipping...\"\nfi\n","recorded":"2025-01-06 17:39:02.517760859","filePath":"null","pinned":false},{"value":"Aa2005233711@@","recorded":"2025-01-06 17:38:27.541853132","filePath":"null","pinned":false},{"value":"This my installation script now you remove bugs, modify and optimize \n\nand also use dialog instead of whiptail wherever is required","recorded":"2025-01-06 17:35:58.024679590","filePath":"null","pinned":false},{"value":"KYH9KFWA5K:FS5f","recorded":"2025-01-06 17:34:26.746221125","filePath":"null","pinned":false},{"value":"#!/bin/env bash\nset -e\n\n# Introduction \u0026 Warning\necho \"Welcome to my Arch Setup!\" \u0026\u0026 sleep 2\necho \"Some parts of the script require sudo, so if you're planning on leaving the desktop while the installation script does its thing, better drop it already!.\" \u0026\u0026 sleep 4\n\n# Creating all required home directories if not present\nmkdir ~/Downloads ~/Documents ~/Music ~/Pictures ~/Videos ~/Templates\n\n# Setting up pacman.conf\n# lines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n# sudo sed -i '/^\\[options\\]/a '\"$lines_to_append\" /etc/pacman.conf\n\n# System update\necho \"Performing a full system update...\"\nsudo pacman --noconfirm -Syu\nclear\necho \"System update done\" \u0026\u0026 sleep 2\nclear\n\n# Install Git if not present\necho \"Installing git...\" \u0026\u0026 sleep 1\nsudo pacman -S --noconfirm --needed git\nclear\n\n# Clone and install Paru if not installed\necho \"This script requires an AUR helper to install the dependencies. Installing paru...\" \u0026\nsleep 2\nif ! command -v paru \u0026\u003e/dev/null; then\n  echo \"Installing Paru, an AUR helper...\"\n  cd Downloads\n  git clone https://aur.archlinux.org/paru.git\n  cd paru\n  makepkg -si\n  cd ..\n  echo \"Paru installed\"\n  rm -rf paru\n  cd ~/dotfiles\nfi\nclear\n\n# Install base-devel and required packages\necho \"Installing dependencies..\" \u0026\u0026 sleep 2\n\nsudo pacman -S --noconfirm --needed base-devel intel-ucode vim zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting bash-completion openssh wget curl btop fastfetch bat exa fd ripgrep fzf stow stylua tar tree time acpilight aria2 unrar unzip bluez bluez-utils brightnessctl xfsprogs ntfs-3g clang gcc clipmenu clipnotify inotify-tools psutils dunst e2fsprogs gvfs gvfs-afc gvfs-google gvfs-goa gvfs-gphoto2 gvfs-mtp gvfs-nfs gvfs-onedrive gvfs-smb efibootmgr zoxide gc git-lfs gnome-keyring polkit-gnome pass udiskie gstreamer jq xdotool screenkey xorg-xprop lazygit lolcat sxiv shellcheck net-tools numlockx prettier progress zip rsync trash-cli tlp tlp-rdw neovim feh xorg-xinput xclip xcompmgr xorg-xrandr xorg-xsetroot xsel xwallpaper pandoc starship python-pywal glow xarchiver xfce4-clipman-plugin qemu-full libguestfs bc xorg-xman man-db man-pages ncdu python-adblock dnsmasq python-pip nwg-look python-prctl vscode-css-languageserver ffmpegthumbnailer virt-manager spice-vdagent lua-language-server pass pinentry gnupg pass-otp zbar xorg-xlsclients xscreensaver os-prober qt5ct pamixer qt5-wayland qt6-wayland parallel shfmt tesseract html-xml-utils sddm qt6-5compat qt6-declarative qt6-svg cava thunar thunar-archive-plugin thunar-media-tags-plugin thunar-volman thunar-vcs-plugin flameshot alacritty playerctl ncmpcpp mpd mpv mpc poppler poppler-glib adobe-source-code-pro-fonts noto-fonts noto-fonts-cjk noto-fonts-emoji ttf-hack ttf-jetbrains-mono ttf-ubuntu-font-family ttf-ubuntu-mono-nerd ttf-ubuntu-nerd ttf-opensans gnu-free-fonts libnewt baobab gnome-disk-utility gparted pavucontrol ranger yad timeshift go hugo hunspell hunspell-en_us imagemagick ueberzug luacheck yt-dlp mlocate nodejs npm translate-shell jdk-openjdk openjdk-doc openjdk-src blueman zenity rofi rofi-emoji rofi-calc newsboat\n\nparu -S --noconfirm --needed base-devel python-psutil preload git-remote-gcrypt pywal-git picom ttf-ms-fonts qt6ct-kde ccrypt didyoumean-git arch-wiki-docs material-black-colors-theme apple_cursor kvantum-theme-materia kvantum --noconfirm\n\necho \"Dependencies installed... executing services \u0026 permissions...\" \u0026\u0026 sleep 1\n\nsudo updatedb\nsudo mandb\nsudo systemctl enable --now tlp\nsudo systemctl enable --now bluetooth.service\nsudo systemctl enable --now libvirtd.service\n\nsudo usermod -aG video $USER\nsudo usermod -aG libvirt $USER\nsudo virsh net-start default\n\necho \"For VM sharing details https://docs.getutm.app/guest-support/linux/\"\n\n\n# paru -S material-black-colors-theme apple_cursor kvantum-theme-materia kvantum --noconfirm\n\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Setting up Git configuration...\"\n\n# Ask user whether to proceed with Git setup\nif ! whiptail --title \"Git Configuration Setup\" --yesno \"Do you want to proceed with setting up Git configuration?\" 10 60; then\n  echo \"Git setup canceled. Exiting.\"\n  exit 1\nfi\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n  whiptail --msgbox \"Git username setup canceled or empty. Exiting.\" 10 50\n  exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n  whiptail --msgbox \"Git email setup canceled or empty. Exiting.\" 10 50\n  exit 1\nfi\n\n# Display confirmation dialog\nif whiptail --yesno \"Please confirm the Git configuration:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60; then\n  # Set Git configuration if confirmed\n  git config --global user.name \"$git_username\"\n  git config --global user.email \"$git_email\"\n  whiptail --msgbox \"Git has been successfully configured:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\nelse\n  whiptail --msgbox \"Git configuration canceled. No changes were made.\" 10 50\n  exit 1\nfi\n\n# -------------------------------------------------------------------------------------\n\necho \"Installing main packages and application that I personally use the most...\" \u0026\u0026 sleep 1\n\n# Function to display the browser selection menu\ninstall_browser() {\n  # Display the checkbox menu\n  choices=$(whiptail --title \"Browser Selection\" \\\n    --checklist \"Select the browsers you want to install:\" 15 50 6 \\\n    \"   Zen-Browser   \" \"\" OFF \\\n    \"     Firefox     \" \"\" OFF \\\n    \"    Chromium     \" \"\" OFF \\\n    \"     Vivaldi     \" \"\" OFF \\\n    \"   qutebrowser   \" \"\" OFF \\\n    \"     Brave       \" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\n  # Check if the user pressed Cancel\n  if [ $? -ne 0 ]; then\n    echo \"No selection made. Exiting.\"\n    exit 1\n  fi\n\n  # Process the selected options\n  for choice in $choices; do\n    case $choice in\n    \"\\\"   Zen-Browser   \\\"\")\n      echo \"Installing Zen-Browser...\"\n      paru -S --noconfirm --needed zen-broswer-bin\n      # Video Download Helper\n      curl -sSLf https://github.com/aclap-dev/vdhcoapp/releases/latest/download/install.sh | bash\n      ;;\n    \"\\\"     Firefox     \\\"\")\n      echo \"Installing Firefox...\"\n      sudo pacman -S --noconfirm firefox\n      ;;\n    \"\\\"    Chromium     \\\"\")\n      echo \"Installing Chromium...\"\n      sudo pacman -S --noconfirm chromium\n      ;;\n    \"\\\"     Vivaldi     \\\"\")\n      echo \"Installing Vivaldi...\"\n      paru -S --noconfirm vivaldi\n      ;;\n    \"\\\"   qutebrowser   \\\"\")\n      echo \"Installing qutebrowser...\"\n      sudo pacman -S --noconfirm qutebrowser\n      ;;\n    \"\\\"     Brave       \\\"\")\n      echo \"Installing Brave...\"\n      paru -S --noconfirm brave-bin\n      ;;\n    *)\n      echo \"Invalid choice: $choice\"\n      ;;\n    esac\n  done\n}\n\n# Call the browser installation function\ninstall_browser\n\ndialog --msgbox \"Selected browsers have been installed.\" 10 50\n\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up Miniconda...\"\n\n# Ask the user if they want to install Miniconda\ndialog --title \"Install Miniconda?\" \\\n  --yesno \"Would you like to install Miniconda? (Recommended for Python and Data Science)\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Miniconda installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Miniconda installation will begin now.\" 10 50\n\n  # Download Miniconda installer\n  wget https://repo.anaconda.com/miniconda/Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Run the installer\n  bash Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Remove the installer after installation\n  rm Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  dialog --msgbox \"Miniconda installation completed.\" 10 50\nfi\n\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up torrent and remote working applications...\"\n\n# Display checklist for torrent and remote working applications\napps=$(whiptail --title \"Select Applications to Install\" \\\n  --checklist \"Choose the applications you want to install:\" 20 60 8 \\\n  \"torrent-cli\" \"\" OFF \\\n  \"qBittorrent\" \"\" OFF \\\n  \"Transmission\" \"\" OFF \\\n  \"Remmina\" \"\" OFF \\\n  \"VNC\" \"\" OFF \\\n  \"TeamViewer\" \"\" OFF \\\n  \"AnyDesk\" \"\" OFF \\\n  \"xrdp\" \"\" OFF \\\n  \"openvpn\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 /] || [ -z \"$apps\" ]; then\n  whiptail --msgbox \"No applications selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected applications and install them\nfor app in $apps; do\n  case $app in\n  \"torrent-cli\")\n    echo \"Installing torrent-cli...\"\n    paru -S --noconfirm --needed webtorrent-cli webtorrent-mpv-hook peerflix\n    ;;\n  \"qBittorrent\")\n    echo \"Installing qBittorrent...\"\n    sudo pacman -S --noconfirm qbittorrent\n    ;;\n  \"Transmission\")\n    echo \"Installing Transmission...\"\n    sudo pacman -S --noconfirm transmission-qt\n    ;;\n  \"Remmina\")\n    echo \"Installing Remmina (Remote Desktop Client)...\"\n    sudo pacman -S --noconfirm remmina\n    ;;\n  \"VNC\")\n    echo \"Installing VNC Server...\"\n    sudo pacman -S --noconfirm tigervnc\n    ;;\n  \"TeamViewer\")\n    echo \"Installing TeamViewer...\"\n    sudo pacman -S --noconfirm teamviewer\n    ;;\n  \"AnyDesk\")\n    echo \"Installing AnyDesk...\"\n    sudo pacman -S --noconfirm anydesk\n    ;;\n  \"xrdp\")\n    echo \"Installing xrdp (Remote Desktop Protocol)...\"\n    sudo pacman -S --noconfirm xrdp\n    ;;\n  \"openvpn\")\n    echo \"Installing OpenVPN...\"\n    sudo pacman -S --noconfirm openvpn\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected torrents have been installed.\" 10 50\n\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up development tools, office tools, communication tools, and multimedia tools...\"\n\n# Display checklist with a single column (scrollable) for all tools using dialog\ntools_choices=$(dialog --title \"Select Tools to Install\" \\\n  --checklist \"Choose the tools you want to install:\" 20 60 18 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Telegram\" \"\" OFF \\\n  \"LibreOffice\" \"\" OFF \\\n  \"OnlyOffice\" \"\" OFF \\\n  \"Skype\" \"\" OFF \\\n  \"Slack\" \"\" OFF \\\n  \"Zoom\" \"\" OFF \\\n  \"Blender\" \"\" OFF \\\n  \"Octave\" \"\" OFF \\\n  \"OBS-Studio\" \"\" OFF \\\n  \"Inkscape\" \"\" OFF \\\n  \"GIMP\" \"\" OFF \\\n  \"VLC\" \"\" OFF \\\n  \"Audacity\" \"\" OFF \\\n  \"Krita\" \"\" OFF \\\n  \"Shotcut\" \"\" OFF \\\n  \"Steam\" \"\" OFF \\\n  \"Minecraft\" \"\" OFF \\\n  \"YouTUI\" \"TUI YT Music(Preferred)\" OFF \\\n  \"YTerMusic\" \"TUI YT Music\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $tools_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    paru -S kind-bin\n    curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Telegram\")\n    echo \"Installing Telegram...\"\n    paru -S --noconfirm telegram-desktop-bin\n    ;;\n  \"LibreOffice\")\n    echo \"Installing LibreOffice...\"\n    sudo pacman -S --noconfirm libreoffice-fresh\n    ;;\n  \"OnlyOffice\")\n    echo \"Installing OnlyOffice...\"\n    paru -S --noconfirm onlyoffice-bin\n    ;;\n  \"Skype\")\n    echo \"Installing Skype...\"\n    paru -S --noconfirm skypeforlinux-bin\n    ;;\n  \"Slack\")\n    echo \"Installing Slack...\"\n    paru -S --noconfirm slack-desktop\n    ;;\n  \"Zoom\")\n    echo \"Installing Zoom...\"\n    paru -S --noconfirm zoom\n    ;;\n  \"Blender\")\n    echo \"Installing Blender...\"\n    sudo pacman -S --noconfirm blender\n    ;;\n  \"Octave\")\n    echo \"Installing Octave...\"\n    sudo pacman -S --noconfirm octave\n    ;;\n  \"OBS-Studio\")\n    echo \"Installing OBS Studio...\"\n    sudo pacman -S --noconfirm obs-studio\n    ;;\n  \"Inkscape\")\n    echo \"Installing Inkscape...\"\n    sudo pacman -S --noconfirm inkscape\n    ;;\n  \"GIMP\")\n    echo \"Installing GIMP...\"\n    sudo pacman -S --noconfirm gimp\n    ;;\n  \"VLC\")\n    echo \"Installing VLC...\"\n    sudo pacman -S --noconfirm vlc\n    ;;\n  \"Audacity\")\n    echo \"Installing Audacity...\"\n    sudo pacman -S --noconfirm audacity\n    ;;\n  \"Krita\")\n    echo \"Installing Krita...\"\n    sudo pacman -S --noconfirm krita\n    ;;\n  \"Shotcut\")\n    echo \"Installing Shotcut...\"\n    sudo pacman -S --noconfirm shotcut\n    ;;\n  \"Steam\")\n    echo \"Installing Steam...\"\n    paru -S --noconfirm steam\n    ;;\n  \"Minecraft\")\n    echo \"Installing Minecraft...\"\n    paru -S --noconfirm minecraft-launcher\n    ;;\n  \"YouTUI\")\n    echo \"Installing YouTUI...\"\n    cargo install youtui\n    ;;\n  \"YTerMusic\")\n    echo \"Installing YTerMusic...\"\n    cargo install ytermusic\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected tools have been installed.\" 10 50\n\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up additional tools and packages...\"\n\n# Display checklist with a single column (scrollable) for additional tools using dialog\nextra_tools_choices=$(dialog --title \"Select Extra Tools to Install\" \\\n  --checklist \"Choose the extra tools and packages you want to install:\" 20 60 20 \\\n  \"Ani-Cli\" \"\" OFF \\\n  \"Ani-Cli-PY\" \"Python Version\" OFF \\\n  \"ytfzf\" \"\" OFF \\\n  \"Zathura\" \"\" OFF \\\n  \"Evince\" \"\" OFF \\\n  \"Okular\" \"\" OFF \\\n  \"Foxit-Reader\" \"\" OFF \\\n  \"Master-PDF-Editor\" \"\" OFF \\\n  \"MuPDF\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$extra_tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $extra_tools_choices; do\n  case $app in\n  \"Ani-Cli\")\n    echo \"Installing ani-cli...\"\n    paru -S --noconfirm --needed ani-cli-git\n    ;;\n  \"Ani-Cli-PY\")\n    echo \"Installing ani-cli python version...\"\n    pip install anipy-cli\n    ;;\n  \"ytfzf\")\n    echo \"Installing ytfzf...\"\n    paru -S --noconfirm --needed ytfzf-git\n    ;;\n  \"Zathura\")\n    echo \"Installing Zathura...\"\n    sudo pacman -S zathura zathura-pdf-mupdf zathura-djvu zathura-ps zathura-cb --noconfirm\n    ;;\n  \"Evince\")\n    echo \"Installing Evince...\"\n    sudo pacman -S --noconfirm evince\n    ;;\n  \"Okular\")\n    echo \"Installing Okular...\"\n    sudo pacman -S --noconfirm okular\n    ;;\n  \"Foxit-Reader\")\n    echo \"Installing Foxit Reader...\"\n    paru -S --noconfirm foxitreader\n    ;;\n  \"Master-PDF-Editor\")\n    echo \"Installing Master PDF Editor...\"\n    paru -S --noconfirm masterpdfeditor\n    ;;\n  \"MuPDF\")\n    echo \"Installing MuPDF...\"\n    sudo pacman -S --noconfirm mupdf\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected extra tools and packages have been installed.\" 10 50\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up MariaDB...\"\n\n# Ask the user if they want to install MariaDB\ndialog --title \"Install MariaDB?\" \\\n  --yesno \"Would you like to install MariaDB (a relational database management system)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"MariaDB installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"MariaDB installation will begin now.\" 10 50\n\n  sudo pacman -S mariadb --noconfirm\n  sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql\n  sudo systemctl enable --now mariadb\n  sudo mariadb-secure-installation\n\n  # Inform the user that MariaDB has been installed and configured\n  dialog --msgbox \"MariaDB has been installed and secured. You can now use it for your database needs.\" 10 50\nfi\n\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up Zsh...\"\n\n# Ask the user if they want to install Zsh\ndialog --title \"Install and Set Up Zsh?\" \\\n  --yesno \"Would you like to install Zsh and set it as your default shell?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Zsh installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Zsh installation will begin now.\" 10 50\n\n  # Install Zsh if not already installed\n  sudo pacman -S --noconfirm zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting\n\n  # Change the default shell to Zsh\n  chsh -s /bin/zsh\n\n  sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n\n  # Check if the installation was successful and prompt to restart the terminal\n  dialog --msgbox \"Zsh has been installed and set as your default shell. Please restart your terminal to apply the changes.\" 10 50\nfi\n\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Setting up Hyprland...\"\n\n# Ask the user if they want to install Hyprland\ndialog --title \"Install Hyprland?\" \\\n  --yesno \"Would you like to install Hyprland (a dynamic Wayland compositor)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Hyprland installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Hyprland installation will begin now.\" 10 50\nfi\n\nsudo pacman -S kitty system-config-printer hyprpicker hyprlock chafa hypridle waybar wl-clipboard speech-dispatcher hyprpaper brightnessctl cmake meson cpio grim slurp wtype wf-recorder swaync\n\nparu -S wlrobs-hg hyprland-git xdg-desktop-portal-hyprland-git clipse-bin hyde-cli-git wlogout hyprshot-git hyprland-qtutils\n\nsudo cp ~/dotfiles/Extras/Extras/nvim.desktop /usr/share/applications/\n\n# Set up Hyprland configuration\necho \"Configuring Hyprland...\"\n\n# Create the configuration file if it doesn't exist\nif [ ! -f \"$HOME/.config/hypr/hyprland.conf\" ]; then\n  cd ~/dotfiles\n  stow Hyprland\n  dialog --msgbox \"Hyprland configuration has been set up.\" 10 50\nelse\n  dialog --msgbox \"Hyprland configuration file already exists.\" 10 50\nfi\n\n# Inform the user that installation is complete\ndialog --msgbox \"Hyprland has been installed and configured. Please restart your system to start using Hyprland.\" 10 50\n\nclear\n\n# -------------------------------------------------------------------------------------\n\necho \"Setting up dwm...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install dwm?\" \\\n  --yesno \"Would you like to install dwm (Dynamic Window Manager)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"dwm installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"dwm installation will begin now.\" 10 50\n\n  stow ~/dotfiles/suckless/\n\n  cd ~/.config/dwm \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/slstatus \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/st \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/.config/dmenu \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/dotfiles/Extras/Extras/waldl-master/ \u0026\u0026 sudo make install \u0026\u0026 cd ~/dotfiles\n\n  sudo mkdir /usr/share/xsessions/\n  sudo cp ~/dotfiles/Extras/Extras/usr/share/xsessions/dwm.desktop /usr/share/xsessions\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"dwm has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Setting up Ollama...\"\n\n# Ask the user if they want to install Ollama\ndialog --title \"Install Ollama?\" \\\n  --yesno \"Would you like to install Ollama (a tool to run large language models locally)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Ollama installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Ollama installation will begin now.\" 10 50\nfi\n\n# Check if Ollama is available through the AUR or if manual installation is needed\n# You can install Ollama from their official site or via AUR\n# We will use AUR (Arch User Repository) to install it using an AUR helper like paru.\n\n# Install Ollama using paru (or an AUR helper of your choice)\nif ! command -v ollama \u0026\u003e/dev/null; then\n  echo \"Ollama not found, installing Ollama from AUR...\"\n\n  # Install Ollama from the AUR using paru (if not already installed)\n  paru -S --noconfirm ollama\n\n  ollama serve\n  ollama pull mistral\n  ollama pull gemma:7b\n\n  # Inform the user that Ollama has been installed\n  dialog --msgbox \"Ollama has been installed. You can now use it to run local large language models.\" 10 50\nelse\n  dialog --msgbox \"Ollama is already installed on your system.\" 10 50\nfi\n\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Installing PIP Packages...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install my PIP packages?\" \\\n  --yesno \"Would you like to install my PIP Packages?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"PIP packages installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"PIP packages installation will begin now.\" 10 50\n\n  bash\n\n  pip install pynvim numpy pandas matplotlib seaborn scikit-learn jupyterlab ipykernel ipywidgets tensorflow python-prctl inotify-simple psutil opencv-python keras mov-cli-youtube mov-cli mov-cli-test otaku-watcher film-central daemon jupyterlab_wakatime\n\n  pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu # pytorch cpu version\n\n  zsh\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"PIP Packages has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Setting up GRUB theme...\"\n\n# Ask if the user wants to set up a GRUB theme\ndialog --title \"Install GRUB theme?\" \\\n  --yesno \"Would you like to install a GRUB theme?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"GRUB theme setup skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"GRUB theme setup will begin now.\" 10 50\nfi\n\nsudo cp ~/dotfiles/Extras/Extras/boot/grub/themes/SekiroShadow/ /boot/grub/themes/\n\n# Enable the GRUB theme\necho \"Setting GRUB theme...\"\necho 'GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"' | sudo tee -a /etc/default/grub\n\necho \"Enabling os-prober in GRUB configuration...\"\necho 'GRUB_DISABLE_OS_PROBER=\"false\"' | sudo tee -a /etc/default/grub\n\n# Regenerate GRUB config\necho \"Regenerating GRUB configuration...\"\nsudo grub-mkconfig -o /boot/grub/grub.cfg\n\ndialog --msgbox \"GRUB theme setup is complete and GRUB config has been updated.\" 10 50\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Setting Extra Packages for System...\" \u0026\u0026 sleep 1\n\nsudo npm i -g bash-language-server\n\ncd ~/dotfiles/\n\nrm ~/.bashrc ~/.zshrc\n\nstow anipy-cli bashrc BTOP cava dunst face fastfetch DWMScripts flameshot gtk-3 Kvantum latexmkrc libreoffice mpd mpv ncmpcpp newsboat nvim NWG octave pandoc pavucontrol picom Profile qt6ct qutebrowser ranger redyt rofi screenlayout screensaver starship XFCEPic xsettingsd zathura zsh\n\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Setting up Fonts...\" \u0026\u0026 sleep 1\n\nmkdir -p ~/.local/share/fonts\ncd ~/.local/share/fonts\n\ngit clone https://github.com/Chaganti-Reddy/my-fonts.git\n\ncd my-fonts\n\nrm -rf .git/\n\ncd ~/dotfiles/\n\necho \"Fonts have been installed, moving some root files...\"\n\ncd ~/dotfiles/Extras/Extras/\n\nsudo cp etc/nanorc /etc/nanorc\nsudo cp etc/bash.bashrc /etc/bash.bashrc\nsudo cp etc/DIR_COLORS /etc/DIR_COLORS\nsudo cp etc/environment /etc/environment\nsudo cp etc/mpd.conf /etc/mpd.conf\nsudo cp etc/sddm.conf /etc/sddm.conf\n\ncp archcraft-dwm.zsh-theme ~/.oh-my-zsh/themes/archcraft-dwm.zsh-theme\n\n# Setup kaggle JSON and wakatime files using ccrypt\n\n\n# --------------------------------------------------------------------------------------\n\necho \"All done! Please reboot your system.\"\n","recorded":"2025-01-06 17:30:43.952942737","filePath":"null","pinned":false},{"value":"# # 8. Install GTK theme and QT theme\n","recorded":"2025-01-06 17:29:27.451168009","filePath":"null","pinned":false},{"value":"# paru -S material-black-colors-theme apple_cursor kvantum-theme-materia kvantum --noconfirm\n","recorded":"2025-01-06 17:29:02.137544191","filePath":"null","pinned":false},{"value":"# 13. Move Respective files to root directory\n","recorded":"2025-01-06 17:28:24.819185766","filePath":"null","pinned":false},{"value":"# sudo mkdir /usr/share/xsessions/\n","recorded":"2025-01-06 17:28:24.219115342","filePath":"null","pinned":false},{"value":"# sudo cp ~/dotfiles/Extras/Extras/usr/share/xsessions/dwm.desktop /usr/share/xsessions\n","recorded":"2025-01-06 17:28:23.893296684","filePath":"null","pinned":false},{"value":"sudo cp ~/dotfiles/Extras/Extras/usr/share/xsessions/dwm.desktop /usr/share/xsessions","recorded":"2025-01-06 17:28:15.307146871","filePath":"null","pinned":false},{"value":"sudo mkdir /usr/share/xsessions/\n","recorded":"2025-01-06 17:28:07.966081270","filePath":"null","pinned":false},{"value":"# # sudo cp -r ~/dotfiles/Extras/Extras/boot/grub/themes/mocha /boot/grub/themes/\n","recorded":"2025-01-06 17:27:49.953606557","filePath":"null","pinned":false},{"value":"# sudo cp -r ~/dotfiles/Extras/Extras/boot/grub/themes/tartarus/ /boot/grub/themes/\n","recorded":"2025-01-06 17:27:48.532628962","filePath":"null","pinned":false},{"value":"# Now edit the grub config file\n","recorded":"2025-01-06 17:27:47.026333077","filePath":"null","pinned":false},{"value":"# Remove the quiet option from the GRUB_CMDLINE_LINUX_DEFAULT line if you want to check all the log \n","recorded":"2025-01-06 17:27:46.507667878","filePath":"null","pinned":false},{"value":"echo 'GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"' | sudo tee -a /etc/default/grub\n","recorded":"2025-01-06 17:26:41.112464454","filePath":"null","pinned":false},{"value":"sudo sed -i 's/#GRUB_THEME=\"\"/GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"/g' /etc/default/grub\n","recorded":"2025-01-06 17:26:39.604186101","filePath":"null","pinned":false},{"value":"echo 'GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"' | sudo tee -a /etc/default/grub","recorded":"2025-01-06 17:26:33.612124091","filePath":"null","pinned":false},{"value":"sudo sed -i 's/#GRUB_DISABLE_OS_PROBER=\"true\"/GRUB_DISABLE_OS_PROBER=\"false\"/' /etc/default/grub\n","recorded":"2025-01-06 17:26:29.020247517","filePath":"null","pinned":false},{"value":"echo 'GRUB_DISABLE_OS_PROBER=\"false\"' | sudo tee -a /etc/default/grub","recorded":"2025-01-06 17:26:24.253857778","filePath":"null","pinned":false},{"value":"sudo sed -i 's#^#GRUB_THEME=\"\"/#GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"#' /etc/default/grub\n","recorded":"2025-01-06 17:25:46.990396067","filePath":"null","pinned":false},{"value":"sudo sed -i 's/#GRUB_THEME=\"\"/GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"/g' /etc/default/grub\n\nsed: -e expression #1, char 31: unknown option to `s'","recorded":"2025-01-06 17:25:31.599130227","filePath":"null","pinned":false},{"value":"sudo sed -i 's#^#GRUB_THEME=\"\"#GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"#' /etc/default/grub\n","recorded":"2025-01-06 17:23:20.154875193","filePath":"null","pinned":false},{"value":" sudo sed -i 's/#GRUB_THEME=\"\"/GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"/g' /etc/default/grub\n\nsed: -e expression #1, char 31: unknown option to `s'","recorded":"2025-01-06 17:23:10.254203997","filePath":"null","pinned":false},{"value":"echo \"Enabling os-prober in GRUB configuration...\"\nsudo sed -i 's/#GRUB_DISABLE_OS_PROBER=\"true\"/GRUB_DISABLE_OS_PROBER=\"false\"/' /etc/default/grub\n","recorded":"2025-01-06 17:21:46.814262553","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up GRUB theme...\"\n\n# Ask if the user wants to set up a GRUB theme\ndialog --title \"Install GRUB theme?\" \\\n  --yesno \"Would you like to install a GRUB theme?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"GRUB theme setup skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"GRUB theme setup will begin now.\" 10 50\nfi\n\nsudo cp ~/dotfiles/Extras/Extras/boot/grub/themes/SekiroShadow/ /boot/grub/themes/\n\n# Enable the GRUB theme\necho \"Setting GRUB theme...\"\nsudo sed -i 's/#GRUB_THEME=\"\"/GRUB_THEME=\"/boot/grub/themes/SekiroShadow/theme.txt\"/g' /etc/default/grub\n\n# Regenerate GRUB config\necho \"Regenerating GRUB configuration...\"\nsudo grub-mkconfig -o /boot/grub/grub.cfg\n\ndialog --msgbox \"GRUB theme setup is complete and GRUB config has been updated.\" 10 50\nclear\n","recorded":"2025-01-06 17:20:35.067036153","filePath":"null","pinned":false},{"value":"\n# Check if the GRUB theme was installed correctly\nif [ $? -eq 0 ]; then\n  echo \"GRUB theme installed successfully.\"\nelse\n  echo \"Failed to install GRUB theme.\"\n  exit 1\nfi","recorded":"2025-01-06 17:20:04.779100107","filePath":"null","pinned":false},{"value":"sudo pacman -S --noconfirm grub-theme-arch\n","recorded":"2025-01-06 17:19:36.807083544","filePath":"null","pinned":false},{"value":"# Install GRUB theme (Arch Linux default theme or any custom theme)\n","recorded":"2025-01-06 17:19:36.422727034","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Hyprland...\"\n\n# Ask the user if they want to install Hyprland\ndialog --title \"Install Hyprland?\" \\\n  --yesno \"Would you like to install Hyprland (a dynamic Wayland compositor)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Hyprland installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Hyprland installation will begin now.\" 10 50\nfi\n\nsudo pacman -S kitty system-config-printer hyprpicker hyprlock chafa hypridle waybar wl-clipboard speech-dispatcher hyprpaper brightnessctl cmake meson cpio grim slurp wtype wf-recorder swaync\n\nparu -S wlrobs-hg hyprland-git xdg-desktop-portal-hyprland-git clipse-bin hyde-cli-git wlogout hyprshot-git hyprland-qtutils\n\nsudo cp ~/dotfiles/Extras/Extras/nvim.desktop /usr/share/applications/\n\n# Set up Hyprland configuration\necho \"Configuring Hyprland...\"\n\n# Create the configuration file if it doesn't exist\nif [ ! -f \"$HOME/.config/hypr/hyprland.conf\" ]; then\n  mkdir -p \"$HOME/.config/hypr\"\n  cp /etc/xdg/hyprland/hyprland.conf \"$HOME/.config/hypr/hyprland.conf\"\n  dialog --msgbox \"Hyprland configuration file copied to $HOME/.config/hypr/hyprland.conf\" 10 50\nelse\n  dialog --msgbox \"Hyprland configuration file already exists.\" 10 50\nfi\n\n# Inform the user that installation is complete\ndialog --msgbox \"Hyprland has been installed and configured. Please restart your system to start using Hyprland.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:19:31.002282630","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Hyprland...\"\n\n# Ask the user if they want to install Hyprland\ndialog --title \"Install Hyprland?\" \\\n  --yesno \"Would you like to install Hyprland (a dynamic Wayland compositor)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Hyprland installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Hyprland installation will begin now.\" 10 50\nfi\n\n# sudo pacman -S kitty system-config-printer hyprpicker hyprlock chafa hypridle waybar wl-clipboard speech-dispatcher hyprpaper brightnessctl cmake meson cpio grim slurp wtype wf-recorder swaync\n#\n# paru -S wlrobs-hg hyprland-git xdg-desktop-portal-hyprland-git clipse-bin hyde-cli-git wlogout hyprshot-git hyprland-qtutils\n#\n# sudo cp ~/dotfiles/Extras/Extras/nvim.desktop /usr/share/applications/\n\n# Set up Hyprland configuration\necho \"Configuring Hyprland...\"\n\n# Create the configuration file if it doesn't exist\n# if [ ! -f \"$HOME/.config/hypr/hyprland.conf\" ]; then\n#   mkdir -p \"$HOME/.config/hypr\"\n#   cp /etc/xdg/hyprland/hyprland.conf \"$HOME/.config/hypr/hyprland.conf\"\n#   dialog --msgbox \"Hyprland configuration file copied to $HOME/.config/hypr/hyprland.conf\" 10 50\n# else\n#   dialog --msgbox \"Hyprland configuration file already exists.\" 10 50\n# fi\n\n# Inform the user that installation is complete\ndialog --msgbox \"Hyprland has been installed and configured. Please restart your system to start using Hyprland.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:19:30.989427963","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up GRUB theme...\"\n\n# Ask if the user wants to set up a GRUB theme\ndialog --title \"Install GRUB theme?\" \\\n  --yesno \"Would you like to install a GRUB theme?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"GRUB theme setup skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"GRUB theme setup will begin now.\" 10 50\nfi\n\n# Install GRUB theme (Arch Linux default theme or any custom theme)\nsudo pacman -S --noconfirm grub-theme-arch\n\n# Check if the GRUB theme was installed correctly\nif [ $? -eq 0 ]; then\n  echo \"GRUB theme installed successfully.\"\nelse\n  echo \"Failed to install GRUB theme.\"\n  exit 1\nfi\n\n# Enable the GRUB theme\necho \"Setting GRUB theme...\"\nsudo sed -i 's/#GRUB_THEME=\"\"/GRUB_THEME=\"/usr/share/grub/themes/arch/grub.cfg\"/g' /etc/default/grub\n\n# Regenerate GRUB config\necho \"Regenerating GRUB configuration...\"\nsudo grub-mkconfig -o /boot/grub/grub.cfg\n\ndialog --msgbox \"GRUB theme setup is complete and GRUB config has been updated.\" 10 50\nclear\n","recorded":"2025-01-06 17:19:28.734970818","filePath":"null","pinned":false},{"value":"# sudo cp ~/dotfiles/Extras/Extras/etc/bash.bashrc /etc/\n","recorded":"2025-01-06 17:19:10.852903494","filePath":"null","pinned":false},{"value":"# sudo cp ~/dotfiles/Extras/Extras/etc/DIR_COLORS /etc/\n","recorded":"2025-01-06 17:19:10.428454735","filePath":"null","pinned":false},{"value":"# sudo cp ~/dotfiles/Extras/Extras/etc/mpd.conf /etc/\n","recorded":"2025-01-06 17:19:10.077897058","filePath":"null","pinned":false},{"value":"# mkdir ~/.icons \u0026\u0026 cp -r ~/dotfiles/Extras/Extras/.icons/Capitaine/ ~/.icons/\n","recorded":"2025-01-06 17:18:59.726546150","filePath":"null","pinned":false},{"value":"# cp ~/dotfiles/Extras/Extras/alanpeabody.zsh-theme ~/.oh-my-zsh/themes/\n","recorded":"2025-01-06 17:18:59.079698360","filePath":"null","pinned":false},{"value":"archcraft-dwm.zsh-theme","recorded":"2025-01-06 17:17:57.310578957","filePath":"null","pinned":false},{"value":"# # sudo cp -r ~/dotfiles/Extras/Extras/etc/lightdm/ /etc/\n","recorded":"2025-01-06 17:17:42.050971800","filePath":"null","pinned":false},{"value":"# sudo cp ~/dotfiles/Extras/Extras/etc/environment /etc/\n","recorded":"2025-01-06 17:17:41.305886804","filePath":"null","pinned":false},{"value":"# sudo cp ~/dotfiles/Extras/Extras/etc/nanorc /etc/\n","recorded":"2025-01-06 17:16:20.914049192","filePath":"null","pinned":false},{"value":"# 16. Install Fonts\n","recorded":"2025-01-06 17:14:54.420211021","filePath":"null","pinned":false},{"value":"# mv my-fonts ~/.local/share/fonts/\n","recorded":"2025-01-06 17:14:53.925791517","filePath":"null","pinned":false},{"value":"# 17. Install/stow dotfiles\n","recorded":"2025-01-06 17:14:51.017754470","filePath":"null","pinned":false},{"value":"# First check for conflicts\n","recorded":"2025-01-06 17:14:50.466473278","filePath":"null","pinned":false},{"value":"#rm -rf ~/.config/doom\n","recorded":"2025-01-06 17:14:50.047770844","filePath":"null","pinned":false},{"value":"# rm -rf ~/.config/gtk-3.0\n","recorded":"2025-01-06 17:14:49.557438206","filePath":"null","pinned":false},{"value":"# rm ~/.bashrc\n","recorded":"2025-01-06 17:14:48.018636396","filePath":"null","pinned":false},{"value":"# rm ~/.zshrc\n","recorded":"2025-01-06 17:14:47.107595298","filePath":"null","pinned":false},{"value":"# cd ~/dotfiles\n","recorded":"2025-01-06 17:14:46.648364252","filePath":"null","pinned":false},{"value":"# stow */\n","recorded":"2025-01-06 17:14:43.697138516","filePath":"null","pinned":false},{"value":"# Install python packages\n","recorded":"2025-01-06 17:14:42.489517744","filePath":"null","pinned":false},{"value":"# --------------------------------------------------------------------------------------\n\necho \"Installing PIP Packages...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install my PIP packages?\" \\\n  --yesno \"Would you like to install my PIP Packages?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"PIP packages installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"PIP packages installation will begin now.\" 10 50\n\n  pip install pynvim numpy pandas matplotlib seaborn scikit-learn jupyterlab ipykernel ipywidgets tensorflow python-prctl inotify-simple psutil opencv-python keras mov-cli-youtube mov-cli mov-cli-test otaku-watcher film-central daemon jupyterlab_wakatime\n\n  pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu # pytorch cpu version\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"PIP Packages has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear","recorded":"2025-01-06 17:13:29.752174142","filePath":"null","pinned":false},{"value":"pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu # pytorch cpu version\n","recorded":"2025-01-06 17:12:58.608262823","filePath":"null","pinned":false},{"value":"pip install \n","recorded":"2025-01-06 17:12:57.667134050","filePath":"null","pinned":false},{"value":"jupyterlab_wakatime\n","recorded":"2025-01-06 17:12:51.932250407","filePath":"null","pinned":false},{"value":"j","recorded":"2025-01-06 17:12:47.222041840","filePath":"null","pinned":false},{"value":"# pip install pynvim numpy pandas matplotlib seaborn scikit-learn jupyterlab ipykernel ipywidgets tensorflow python-prctl inotify-simple psutil opencv-python keras mov-cli-youtube mov-cli mov-cli-test otaku-watcher film-central daemon\n# pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu # pytorch cpu version\n# pip install jupyterlab_wakatime","recorded":"2025-01-06 17:12:37.671301349","filePath":"null","pinned":false},{"value":"echo \"Setting up dwm...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install dwm?\" \\\n  --yesno \"Would you like to install dwm (Dynamic Window Manager)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"dwm installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"dwm installation will begin now.\" 10 50\n\n  stow ~/dotfiles/suckless/\n\n  cd ~/.config/dwm \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/slstatus \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/st \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/.config/dmenu \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/dotfiles/Extras/Extras/waldl-master/ \u0026\u0026 sudo make install \u0026\u0026 cd ~/dotfiles\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"dwm has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear","recorded":"2025-01-06 17:11:28.468942260","filePath":"null","pinned":false},{"value":"echo \"Done with setup \u0026 to install pip packages you need to restart terminal \"\n","recorded":"2025-01-06 17:09:36.453883378","filePath":"null","pinned":false},{"value":"# --------------------------------------------------------------------------------------\n","recorded":"2025-01-06 17:07:20.540121554","filePath":"null","pinned":false},{"value":"echo \"Setting up Ollama...\"\n\n# Ask the user if they want to install Ollama\ndialog --title \"Install Ollama?\" \\\n  --yesno \"Would you like to install Ollama (a tool to run large language models locally)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Ollama installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Ollama installation will begin now.\" 10 50\nfi\n\n# Check if Ollama is available through the AUR or if manual installation is needed\n# You can install Ollama from their official site or via AUR\n# We will use AUR (Arch User Repository) to install it using an AUR helper like paru.\n\n# Install Ollama using paru (or an AUR helper of your choice)\nif ! command -v ollama \u0026\u003e/dev/null; then\n  echo \"Ollama not found, installing Ollama from AUR...\"\n\n  # Install Ollama from the AUR using paru (if not already installed)\n  paru -S --noconfirm ollama\n\n  ollama serve\n  ollama pull mistral\n  ollama pull gemma:7b\n\n  # Inform the user that Ollama has been installed\n  dialog --msgbox \"Ollama has been installed. You can now use it to run local large language models.\" 10 50\nelse\n  dialog --msgbox \"Ollama is already installed on your system.\" 10 50\nfi\n\nclear","recorded":"2025-01-06 17:06:46.802318299","filePath":"null","pinned":false},{"value":"  dialog --msgbox \"Hyprland configuration file copied to $HOME/.config/hypr/hyprland.conf\" 10 50\n","recorded":"2025-01-06 17:06:35.279299262","filePath":"null","pinned":false},{"value":"mkdir -p \"$HOME/.config/hypr\"\n  cp /etc/xdg/hyprland/hyprland.conf \"$HOME/.config/hypr/hyprland.conf\"","recorded":"2025-01-06 17:06:14.695304736","filePath":"null","pinned":false},{"value":"echo \"Setting Extra Packages for System...\" \u0026\u0026 sleep 1\n\nsudo npm i -g bash-language-server\n\ncd ~/dotfiles/\n\nrm ~/.bashrc ~/.zshrc\n\nstow anipy-cli bashrc BTOP cava dunst face fastfetch DWMScripts flameshot gtk-3 Kvantum latexmkrc libreoffice mpd mpv ncmpcpp newsboat nvim NWG octave pandoc pavucontrol picom Profile qt6ct qutebrowser ranger redyt rofi screenlayout screensaver starship XFCEPic xsettingsd zathura zsh\n\n","recorded":"2025-01-06 17:04:30.084136379","filePath":"null","pinned":false},{"value":"\necho \"Setting Extra Packages for System...\" \u0026\u0026 sleep 1\n\nsudo npm i -g bash-language-server\n\ncd ~/dotfiles/\n\nrm ~/.bashrc ~/.zshrc\n\nstow anipy-cli bashrc BTOP cava dunst face fastfetch DWMScripts flameshot gtk-3 Kvantum latexmkrc libreoffice mpd mpv ncmpcpp newsboat nvim NWG octave pandoc pavucontrol picom Profile qt6ct qutebrowser ranger redyt rofi screenlayout screensaver starship XFCEPic xsettingsd zathura zsh","recorded":"2025-01-06 17:04:25.423239010","filePath":"null","pinned":false},{"value":"### HYPRLAND\n","recorded":"2025-01-06 17:03:33.895686784","filePath":"null","pinned":false},{"value":"# Open in neovim from Thunar \n","recorded":"2025-01-06 17:03:33.549477222","filePath":"null","pinned":false},{"value":"# \n","recorded":"2025-01-06 17:03:32.695900024","filePath":"null","pinned":false},{"value":"sudo cp ~/dotfiles/Extras/Extras/nvim.desktop /usr/share/applications/\n","recorded":"2025-01-06 17:03:23.413011676","filePath":"null","pinned":false},{"value":"## #\n","recorded":"2025-01-06 17:03:12.008295521","filePath":"null","pinned":false},{"value":"paru -S wlrobs-hg hyprland-git xdg-desktop-portal-hyprland-git clipse-bin hyde-cli-git wlogout hyprshot-git hyprland-qtutils\n","recorded":"2025-01-06 17:02:58.015890531","filePath":"null","pinned":false},{"value":" sudo pacman -S kitty system-config-printer hyprpicker hyprlock chafa hypridle waybar wl-clipboard speech-dispatcher hyprpaper brightnessctl cmake meson cpio grim slurp wtype wf-recorder swaync\n","recorded":"2025-01-06 17:02:49.650331001","filePath":"null","pinned":false},{"value":"# Install Hyprland from the official repositories or AUR\necho \"Installing Hyprland...\"\nsudo pacman -S --noconfirm hyprland\n\n# Install dependencies and useful tools for Hyprland\necho \"Installing necessary dependencies for Hyprland...\"\nsudo pacman -S --noconfirm swaybg swaylock-effects waybar wayland-utils wofi rofi\n\n# Install a default font for Wayland (like FiraCode)\necho \"Installing font for Wayland...\"\nsudo pacman -S --noconfirm ttf-fira-code\n\n# Install a basic terminal emulator (Alacritty) for Hyprland\necho \"Installing terminal emulator (Alacritty)...\"\nsudo pacman -S --noconfirm alacritty\n\n# Install a basic text editor (like Neovim)\necho \"Installing text editor (Neovim)...\"\nsudo pacman -S --noconfirm neovim\n\n# Install tools for compositor management\necho \"Installing compositor utilities...\"\nsudo pacman -S --noconfirm hyprpaper\n\n# Install a file manager (e.g., thunar) for ease of file management\necho \"Installing file manager (Thunar)...\"\nsudo pacman -S --noconfirm thunar\n\n# Install a simple web browser (e.g., Firefox)\necho \"Installing web browser (Firefox)...\"\nsudo pacman -S --noconfirm firefox","recorded":"2025-01-06 17:02:26.684808916","filePath":"null","pinned":false},{"value":"# Install Hyprland from the official repositories or AUR\necho \"Installing Hyprland...\"\nsudo pacman -S --noconfirm hyprland\n\n# Install dependencies and useful tools for Hyprland\necho \"Installing necessary dependencies for Hyprland...\"\nsudo pacman -S --noconfirm swaybg swaylock-effects waybar wayland-utils wofi rofi\n\n# Install a default font for Wayland (like FiraCode)\necho \"Installing font for Wayland...\"\nsudo pacman -S --noconfirm ttf-fira-code\n\n# Install a basic terminal emulator (Alacritty) for Hyprland\necho \"Installing terminal emulator (Alacritty)...\"\nsudo pacman -S --noconfirm alacritty\n\n# Install a basic text editor (like Neovim)\necho \"Installing text editor (Neovim)...\"\nsudo pacman -S --noconfirm neovim\n\n# Install tools for compositor management\necho \"Installing compositor utilities...\"\nsudo pacman -S --noconfirm hyprpaper\n\n# Install a file manager (e.g., thunar) for ease of file management\necho \"Installing file manager (Thunar)...\"\nsudo pacman -S --noconfirm thunar\n\n# Install a simple web browser (e.g., Firefox)\necho \"Installing web browser (Firefox)...\"\nsudo pacman -S --noconfirm firefox\n\n# Set up Hyprland configuration\necho \"Configuring Hyprland...\"\n\n# Create the configuration file if it doesn't exist\nif [ ! -f \"$HOME/.config/hypr/hyprland.conf\" ]; then\n  mkdir -p \"$HOME/.config/hypr\"\n  cp /etc/xdg/hyprland/hyprland.conf \"$HOME/.config/hypr/hyprland.conf\"\n  dialog --msgbox \"Hyprland configuration file copied to $HOME/.config/hypr/hyprland.conf\" 10 50\n","recorded":"2025-01-06 17:02:06.268173814","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up dwm...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install dwm?\" \\\n  --yesno \"Would you like to install dwm (Dynamic Window Manager)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"dwm installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"dwm installation will begin now.\" 10 50\n\n  stow ~/dotfiles/suckless/\n\n  cd ~/.config/dwm \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/slstatus \u0026\u0026 sudo make clean install \u0026\u0026 cd\n  cd ~/.config/st \u0026\u0026 sudo make install \u0026\u0026 cd\n  cd ~/.config/dmenu \u0026\u0026 sudo make install \u0026\u0026 cd\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"dwm has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear\n","recorded":"2025-01-06 17:01:51.681903481","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Hyprland...\"\n\n# Ask the user if they want to install Hyprland\ndialog --title \"Install Hyprland?\" \\\n  --yesno \"Would you like to install Hyprland (a dynamic Wayland compositor)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Hyprland installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Hyprland installation will begin now.\" 10 50\nfi\n\n# Install Hyprland from the official repositories or AUR\necho \"Installing Hyprland...\"\nsudo pacman -S --noconfirm hyprland\n\n# Install dependencies and useful tools for Hyprland\necho \"Installing necessary dependencies for Hyprland...\"\nsudo pacman -S --noconfirm swaybg swaylock-effects waybar wayland-utils wofi rofi\n\n# Install a default font for Wayland (like FiraCode)\necho \"Installing font for Wayland...\"\nsudo pacman -S --noconfirm ttf-fira-code\n\n# Install a basic terminal emulator (Alacritty) for Hyprland\necho \"Installing terminal emulator (Alacritty)...\"\nsudo pacman -S --noconfirm alacritty\n\n# Install a basic text editor (like Neovim)\necho \"Installing text editor (Neovim)...\"\nsudo pacman -S --noconfirm neovim\n\n# Install tools for compositor management\necho \"Installing compositor utilities...\"\nsudo pacman -S --noconfirm hyprpaper\n\n# Install a file manager (e.g., thunar) for ease of file management\necho \"Installing file manager (Thunar)...\"\nsudo pacman -S --noconfirm thunar\n\n# Install a simple web browser (e.g., Firefox)\necho \"Installing web browser (Firefox)...\"\nsudo pacman -S --noconfirm firefox\n\n# Set up Hyprland configuration\necho \"Configuring Hyprland...\"\n\n# Create the configuration file if it doesn't exist\nif [ ! -f \"$HOME/.config/hypr/hyprland.conf\" ]; then\n  mkdir -p \"$HOME/.config/hypr\"\n  cp /etc/xdg/hyprland/hyprland.conf \"$HOME/.config/hypr/hyprland.conf\"\n  dialog --msgbox \"Hyprland configuration file copied to $HOME/.config/hypr/hyprland.conf\" 10 50\nelse\n  dialog --msgbox \"Hyprland configuration file already exists.\" 10 50\nfi\n\n# Inform the user that installation is complete\ndialog --msgbox \"Hyprland has been installed and configured. Please restart your system to start using Hyprland.\" 10 50\n\nclear\n","recorded":"2025-01-06 17:01:49.871181178","filePath":"null","pinned":false},{"value":"# sh ~/dotfiles/Extras/Extras/ollama.sh\n","recorded":"2025-01-06 17:01:05.732182352","filePath":"null","pinned":false},{"value":"# # 12. Install ollama from Extras folder of dotfiles\n","recorded":"2025-01-06 17:01:05.173156013","filePath":"null","pinned":false},{"value":"# ollama serve\n# ollama pull mistral\n# ollama pull gemma:7b\n\n","recorded":"2025-01-06 17:00:47.162886431","filePath":"null","pinned":false},{"value":"# ollama serve\n# ollama pull mistral\n# ollama pull gemma:7b","recorded":"2025-01-06 17:00:43.502207463","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Ollama...\"\n\n# Ask the user if they want to install Ollama\ndialog --title \"Install Ollama?\" \\\n  --yesno \"Would you like to install Ollama (a tool to run large language models locally)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Ollama installation skipped. Proceeding with the setup.\" 10 50\n  exit 0\nelse\n  dialog --msgbox \"Ollama installation will begin now.\" 10 50\nfi\n\n# Check if Ollama is available through the AUR or if manual installation is needed\n# You can install Ollama from their official site or via AUR\n# We will use AUR (Arch User Repository) to install it using an AUR helper like paru.\n\n# Install Ollama using paru (or an AUR helper of your choice)\nif ! command -v ollama \u0026\u003e /dev/null; then\n  echo \"Ollama not found, installing Ollama from AUR...\"\n\n  # Install Ollama from the AUR using paru (if not already installed)\n  paru -S --noconfirm ollama\n\n  # Inform the user that Ollama has been installed\n  dialog --msgbox \"Ollama has been installed. You can now use it to run local large language models.\" 10 50\nelse\n  dialog --msgbox \"Ollama is already installed on your system.\" 10 50\nfi\n\nclear\n","recorded":"2025-01-06 17:00:15.895355861","filePath":"null","pinned":false},{"value":"# 11. Insatll waldl fddrom Extras folder of dotfiles\n","recorded":"2025-01-06 16:58:55.968126308","filePath":"null","pinned":false},{"value":"cd  ~/dotfiles/Extras/Extras/waldl-master/ \u0026\u0026 sudo make install \u0026\u0026 cd ~/dotfiles\n","recorded":"2025-01-06 16:57:43.711755312","filePath":"null","pinned":false},{"value":"# 8. Mariadb setup\n","recorded":"2025-01-06 16:57:18.834522134","filePath":"null","pinned":false},{"value":"  # Install MariaDB if not already installed\n  sudo pacman -S --noconfirm mariadb\n\n  # Start and enable the MariaDB service\n  sudo systemctl enable --now mariadb.service\n\n  # Secure the MariaDB installation\n  sudo mysql_secure_installation","recorded":"2025-01-06 16:57:09.446080396","filePath":"null","pinned":false},{"value":"# sudo pacman -S mariadb --noconfirm\n# sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql\n# sudo systemctl enable --now mariadb\n# sudo mariadb-secure-installation\n","recorded":"2025-01-06 16:57:01.341622149","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up MariaDB...\"\n\n# Ask the user if they want to install MariaDB\ndialog --title \"Install MariaDB?\" \\\n  --yesno \"Would you like to install MariaDB (a relational database management system)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"MariaDB installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"MariaDB installation will begin now.\" 10 50\n\n  # Install MariaDB if not already installed\n  sudo pacman -S --noconfirm mariadb\n\n  # Start and enable the MariaDB service\n  sudo systemctl enable --now mariadb.service\n\n  # Secure the MariaDB installation\n  sudo mysql_secure_installation\n\n  # Inform the user that MariaDB has been installed and configured\n  dialog --msgbox \"MariaDB has been installed and secured. You can now use it for your database needs.\" 10 50\nfi\n\nclear\n","recorded":"2025-01-06 16:56:40.450160657","filePath":"null","pinned":false},{"value":"stow ani-cli bashrc BTOP cava dunst DWMScripts face fastfetch flameshot \n","recorded":"2025-01-06 16:55:53.809950821","filePath":"null","pinned":false},{"value":"stow anipy-cli bashrc BTOP cava dunst face fastfetch DWMScripts flameshot gtk-3 Hyprland Kvantum latexmkrc libreoffice mpd mpv ncmpcpp newsboat nvim NWG octave pandoc pavucontrol picom Profile qt6ct qutebrowser ranger redyt rofi screenlayout screensaver starship suckless XFCEPic xsettingsd zathura zsh","recorded":"2025-01-06 16:55:48.789813701","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/archcraft-dwm.zsh-theme","recorded":"2025-01-06 16:50:50.701481314","filePath":"null","pinned":false},{"value":"# --------------------------------------------------------------------------------------\n\necho \"Installing Extra Packages for System...\" \u0026\u0026 sleep 1\n\nsudo npm i -g bash-language-server","recorded":"2025-01-06 16:46:07.787352882","filePath":"null","pinned":false},{"value":"zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting","recorded":"2025-01-06 16:45:57.610728326","filePath":"null","pinned":false},{"value":"echo \"Setting up additional tools and packages...\"\n\n# Display checklist with a single column (scrollable) for additional tools using dialog\nextra_tools_choices=$(dialog --title \"Select Extra Tools to Install\" \\\n  --checklist \"Choose the extra tools and packages you want to install:\" 20 60 20 \\\n  \"Ani-Cli\" \"\" OFF \\\n  \"Ani-Cli-PY\" \"Python Version\" OFF \\\n  \"ytfzf\" \"\" OFF \\\n  \"Zathura\" \"\" OFF \\\n  \"Evince\" \"\" OFF \\\n  \"Okular\" \"\" OFF \\\n  \"Foxit-Reader\" \"\" OFF \\\n  \"Master-PDF-Editor\" \"\" OFF \\\n  \"MuPDF\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$extra_tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $extra_tools_choices; do\n  case $app in\n  \"Ani-Cli\")\n    echo \"Installing ani-cli...\"\n    paru -S --noconfirm --needed ani-cli-git\n    ;;\n  \"Ani-Cli-PY\")\n    echo \"Installing ani-cli python version...\"\n    pip install anipy-cli\n    ;;\n  \"ytfzf\")\n    echo \"Installing ytfzf...\"\n    paru -S --noconfirm --needed ytfzf-git\n    ;;\n  \"Zathura\")\n    echo \"Installing Zathura...\"\n   sudo pacman -S zathura zathura-pdf-mupdf zathura-djvu zathura-ps zathura-cb --noconfirm \n    ;;\n  \"Evince\")\n    echo \"Installing Evince...\"\n    sudo pacman -S --noconfirm evince\n    ;;\n  \"Okular\")\n    echo \"Installing Okular...\"\n    sudo pacman -S --noconfirm okular\n    ;;\n  \"Foxit-Reader\")\n    echo \"Installing Foxit Reader...\"\n    paru -S --noconfirm foxitreader\n    ;;\n  \"Master-PDF-Editor\")\n    echo \"Installing Master PDF Editor...\"\n    paru -S --noconfirm masterpdfeditor\n    ;;","recorded":"2025-01-06 16:45:57.602002491","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up additional tools and packages...\"\n\n# Display checklist with a single column (scrollable) for additional tools using dialog\nextra_tools_choices=$(dialog --title \"Select Extra Tools to Install\" \\\n  --checklist \"Choose the extra tools and packages you want to install:\" 20 60 20 \\\n  \"Ani-Cli\" \"\" OFF \\\n  \"Ani-Cli-PY\" \"Python Version\" OFF \\\n  \"ytfzf\" \"\" OFF \\\n  \"Zathura\" \"\" OFF \\\n  \"Evince\" \"\" OFF \\\n  \"Okular\" \"\" OFF \\\n  \"Foxit-Reader\" \"\" OFF \\\n  \"Master-PDF-Editor\" \"\" OFF \\\n  \"MuPDF\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$extra_tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $extra_tools_choices; do\n  case $app in\n  \"Ani-Cli\")\n    echo \"Installing ani-cli...\"\n    paru -S --noconfirm --needed ani-cli-git\n    ;;\n  \"Ani-Cli-PY\")\n    echo \"Installing ani-cli python version...\"\n    pip install anipy-cli\n    ;;\n  \"ytfzf\")\n    echo \"Installing ytfzf...\"\n    paru -S --noconfirm --needed ytfzf-git\n    ;;\n  \"Zathura\")\n    echo \"Installing Zathura...\"\n   sudo pacman -S zathura zathura-pdf-mupdf zathura-djvu zathura-ps zathura-cb --noconfirm \n    ;;\n  \"Evince\")\n    echo \"Installing Evince...\"\n    sudo pacman -S --noconfirm evince\n    ;;\n  \"Okular\")\n    echo \"Installing Okular...\"\n    sudo pacman -S --noconfirm okular\n    ;;\n  \"Foxit-Reader\")\n    echo \"Installing Foxit Reader...\"\n    paru -S --noconfirm foxitreader\n    ;;\n  \"Master-PDF-Editor\")\n    echo \"Installing Master PDF Editor...\"\n    paru -S --noconfirm masterpdfeditor\n    ;;\n  \"MuPDF\")\n    echo \"Installing MuPDF...\"\n    sudo pacman -S --noconfirm mupdf\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected extra tools and packages have been installed.\" 10 50\nclear\n\n# --------------------------------------------------------------------------------------\n\necho \"Installing Extra Packages for System...\" \u0026\u0026 sleep 1\n\nsudo npm i -g bash-language-server\n","recorded":"2025-01-06 16:45:51.866023172","filePath":"null","pinned":false},{"value":"# 18. Install DWM\n","recorded":"2025-01-06 16:45:03.163818037","filePath":"null","pinned":false},{"value":"  # Install dwm if not already installed\n","recorded":"2025-01-06 16:44:35.334875703","filePath":"null","pinned":false},{"value":"  sudo pacman -S --noconfirm dwm\n","recorded":"2025-01-06 16:44:34.917730558","filePath":"null","pinned":false},{"value":"# cd ~/.config/dwm \u0026\u0026 sudo make clean install \u0026\u0026 cd\n# cd ~/.config/slstatus \u0026\u0026 sudo make clean install \u0026\u0026 cd\n# cd ~/.config/st \u0026\u0026 sudo make install \u0026\u0026 cd\n# cd ~/.config/dmenu \u0026\u0026 sudo make install \u0026\u0026 cd","recorded":"2025-01-06 16:44:29.814339214","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Zsh...\"\n\n# Ask the user if they want to install Zsh\ndialog --title \"Install and Set Up Zsh?\" \\\n  --yesno \"Would you like to install Zsh and set it as your default shell?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Zsh installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Zsh installation will begin now.\" 10 50\n\n  # Install Zsh if not already installed\n  sudo pacman -S --noconfirm zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting\n\n  # Change the default shell to Zsh\n  chsh -s /bin/zsh\n\n\n  sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n\n  # Check if the installation was successful and prompt to restart the terminal\n  dialog --msgbox \"Zsh has been installed and set as your default shell. Please restart your terminal to apply the changes.\" 10 50\nfi\n\nclear\n","recorded":"2025-01-06 16:44:13.941717461","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up dwm...\"\n\n# Ask the user if they want to install dwm\ndialog --title \"Install dwm?\" \\\n  --yesno \"Would you like to install dwm (Dynamic Window Manager)?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"dwm installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"dwm installation will begin now.\" 10 50\n\n  # Install dwm if not already installed\n  sudo pacman -S --noconfirm dwm\n\n  # Inform the user that dwm has been installed\n  dialog --msgbox \"dwm has been installed. Please configure your system as needed.\" 10 50\nfi\n\nclear\n","recorded":"2025-01-06 16:44:11.960058748","filePath":"null","pinned":false},{"value":"# chsh -s /bin/zsh\n","recorded":"2025-01-06 16:43:32.155892411","filePath":"null","pinned":false},{"value":"# # 15. Setup zsh shell as default\n","recorded":"2025-01-06 16:43:31.750074717","filePath":"null","pinned":false},{"value":"# # exit # exit from zsh\n","recorded":"2025-01-06 16:43:30.251890509","filePath":"null","pinned":false},{"value":"# 16. Install oh-my-zsh\n","recorded":"2025-01-06 16:43:29.791373133","filePath":"null","pinned":false},{"value":"sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"","recorded":"2025-01-06 16:42:33.855462512","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Zsh and Oh My Zsh...\"\n\n# Ask the user if they want to install Zsh and Oh My Zsh\ndialog --title \"Install and Set Up Zsh with Oh My Zsh?\" \\\n  --yesno \"Would you like to install Zsh, set it as your default shell, and install Oh My Zsh?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Zsh and Oh My Zsh installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Zsh and Oh My Zsh installation will begin now.\" 10 50\n\n  # Install Zsh if not already installed\n  sudo pacman -S --noconfirm zsh\n\n  # Change the default shell to Zsh\n  chsh -s $(which zsh)\n\n  # Install Oh My Zsh via curl (or wget)\n  sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n\n  # Check if the installation was successful and prompt to restart the terminal\n  dialog --msgbox \"Zsh and Oh My Zsh have been installed and set as your default shell. Please restart your terminal to apply the changes.\" 10 50\nfi\n\nclear\n","recorded":"2025-01-06 16:42:27.895125547","filePath":"null","pinned":false},{"value":"sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n","recorded":"2025-01-06 16:41:50.096670605","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Miniconda...\"\n\n# Ask the user if they want to install Miniconda\ndialog --title \"Install Miniconda?\" \\\n  --yesno \"Would you like to install Miniconda? (Recommended for Python and Data Science)\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Miniconda installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Miniconda installation will begin now.\" 10 50\n\n  # Download Miniconda installer\n  wget https://repo.anaconda.com/miniconda/Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Run the installer\n  bash Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Remove the installer after installation\n  rm Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  dialog --msgbox \"Miniconda installation completed.\" 10 50\nfi\n\nclear\n","recorded":"2025-01-06 16:40:48.468258780","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Zsh...\"\n\n# Ask the user if they want to install Zsh\ndialog --title \"Install and Set Up Zsh?\" \\\n  --yesno \"Would you like to install Zsh and set it as your default shell?\" 10 60\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Zsh installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Zsh installation will begin now.\" 10 50\n\n  # Install Zsh if not already installed\n  sudo pacman -S --noconfirm zsh\n\n  # Change the default shell to Zsh\n  chsh -s $(which zsh)\n\n  # Check if the installation was successful and prompt to restart the terminal\n  dialog --msgbox \"Zsh has been installed and set as your default shell. Please restart your terminal to apply the changes.\" 10 50\nfi\n\nclear\n","recorded":"2025-01-06 16:40:47.168791430","filePath":"null","pinned":false},{"value":"# 15. Install MINICONDA\n","recorded":"2025-01-06 16:31:40.634907400","filePath":"null","pinned":false},{"value":"# wget https://repo.anaconda.com/miniconda/Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n# sh Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n# rm Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n","recorded":"2025-01-06 16:31:36.288312313","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up additional tools and packages...\"\n\n# Display checklist with a single column (scrollable) for additional tools using dialog\nextra_tools_choices=$(dialog --title \"Select Extra Tools to Install\" \\\n  --checklist \"Choose the extra tools and packages you want to install:\" 20 60 20 \\\n  \"Ani-Cli\" \"\" OFF \\\n  \"Ani-Cli-PY\" \"Python Version\" OFF \\\n  \"ytfzf\" \"\" OFF \\\n  \"Zathura\" \"\" OFF \\\n  \"Evince\" \"\" OFF \\\n  \"Okular\" \"\" OFF \\\n  \"Foxit-Reader\" \"\" OFF \\\n  \"Master-PDF-Editor\" \"\" OFF \\\n  \"MuPDF\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$extra_tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $extra_tools_choices; do\n  case $app in\n  \"Ani-Cli\")\n    echo \"Installing ani-cli...\"\n    paru -S --noconfirm --needed ani-cli-git\n    ;;\n  \"Ani-Cli-PY\")\n    echo \"Installing ani-cli python version...\"\n    pip install anipy-cli\n    ;;\n  \"ytfzf\")\n    echo \"Installing ytfzf...\"\n    paru -S --noconfirm --needed ytfzf-git\n    ;;\n  \"Zathura\")\n    echo \"Installing Zathura...\"\n   sudo pacman -S zathura zathura-pdf-mupdf zathura-djvu zathura-ps zathura-cb --noconfirm \n    ;;\n  \"Evince\")\n    echo \"Installing Evince...\"\n    sudo pacman -S --noconfirm evince\n    ;;\n  \"Okular\")\n    echo \"Installing Okular...\"\n    sudo pacman -S --noconfirm okular\n    ;;\n  \"Foxit-Reader\")\n    echo \"Installing Foxit Reader...\"\n    paru -S --noconfirm foxitreader\n    ;;\n  \"Master-PDF-Editor\")\n    echo \"Installing Master PDF Editor...\"\n    paru -S --noconfirm masterpdfeditor\n    ;;\n","recorded":"2025-01-06 16:30:46.328909859","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Miniconda...\"\n\n# Ask the user if they want to install Miniconda\ninstall_miniconda=$(dialog --title \"Install Miniconda?\" \\\n  --yesno \"Would you like to install Miniconda? (Recommended for Python and Data Science)\" 10 60)\n\nexit_status=$?\nif [ $exit_status -ne 0 ]; then\n  dialog --msgbox \"Miniconda installation skipped. Proceeding with the setup.\" 10 50\nelse\n  dialog --msgbox \"Miniconda installation will begin now.\" 10 50\n\n  # Download Miniconda installer\n  wget https://repo.anaconda.com/miniconda/Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Run the installer\n  bash Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  # Remove the installer after installation\n  rm Miniconda3-py310_24.3.0-0-Linux-x86_64.sh\n\n  dialog --msgbox \"Miniconda installation completed.\" 10 50\nfi\n\nclear\n","recorded":"2025-01-06 16:30:46.321210249","filePath":"null","pinned":false},{"value":"In test line 6:\ninstall_miniconda=$(dialog --title \"Install Miniconda?\" \\\n^---------------^ SC2034 (warning): install_miniconda appears unused. Verify use (or export if used externally).\n","recorded":"2025-01-06 16:30:31.301195911","filePath":"null","pinned":false},{"value":"\"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n","recorded":"2025-01-06 16:28:04.818138708","filePath":"null","pinned":false},{"value":"  \"Miniconda\" \"\" OFF \\\n","recorded":"2025-01-06 16:27:59.612664076","filePath":"null","pinned":false},{"value":"# 14. Install Bash Language Server\n","recorded":"2025-01-06 16:23:46.788153428","filePath":"null","pinned":false},{"value":"sudo npm i -g bash-language-server\n","recorded":"2025-01-06 16:22:58.542571613","filePath":"null","pinned":false},{"value":"# 5. Install Zathura\n","recorded":"2025-01-06 16:21:08.416933490","filePath":"null","pinned":false},{"value":"    sudo pacman -S --noconfirm zathura\n","recorded":"2025-01-06 16:21:03.707378435","filePath":"null","pinned":false},{"value":"# sudo pacman -S zathura zathura-pdf-mupdf zathura-djvu zathura-ps zathura-cb --noconfirm \n","recorded":"2025-01-06 16:20:55.453682231","filePath":"null","pinned":false},{"value":"  \"ytfzf\" \"\" OFF \\\n","recorded":"2025-01-06 16:20:34.971530121","filePath":"null","pinned":false},{"value":"masterpdfeditor","recorded":"2025-01-06 16:20:04.639951718","filePath":"null","pinned":false},{"value":"# pip install anipy-cli\n","recorded":"2025-01-06 16:19:03.985522322","filePath":"null","pinned":false},{"value":"# 9. Install anipy-cli\n","recorded":"2025-01-06 16:19:03.672184317","filePath":"null","pinned":false},{"value":"    paru -S --noconfirm --needed ani-cli-py-git\n","recorded":"2025-01-06 16:18:46.877955742","filePath":"null","pinned":false},{"value":"# paru -S ani-cli-git ytfzf-git  --noconfirm\n","recorded":"2025-01-06 16:18:22.525563310","filePath":"null","pinned":false},{"value":"# 7. Install external packages\n","recorded":"2025-01-06 16:18:22.037686922","filePath":"null","pinned":false},{"value":"    paru -S --noconfirm --needed ani-cli\n","recorded":"2025-01-06 16:17:59.700707926","filePath":"null","pinned":false},{"value":"paru -S ani-cli-git","recorded":"2025-01-06 16:17:51.691504228","filePath":"null","pinned":false},{"value":"  \"Ani-Cli\" \"\" OFF \\\n","recorded":"2025-01-06 16:17:09.337413153","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools, office tools, communication tools, and multimedia tools...\"\n\n# Display checklist with a single column (scrollable) for all tools using dialog\ntools_choices=$(dialog --title \"Select Tools to Install\" \\\n  --checklist \"Choose the tools you want to install:\" 20 60 18 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Telegram\" \"\" OFF \\\n  \"LibreOffice\" \"\" OFF \\\n  \"OnlyOffice\" \"\" OFF \\\n  \"Skype\" \"\" OFF \\\n  \"Slack\" \"\" OFF \\\n  \"Zoom\" \"\" OFF \\\n  \"Blender\" \"\" OFF \\\n  \"Octave\" \"\" OFF \\\n  \"OBS-Studio\" \"\" OFF \\\n  \"Inkscape\" \"\" OFF \\\n  \"GIMP\" \"\" OFF \\\n  \"VLC\" \"\" OFF \\\n  \"Audacity\" \"\" OFF \\\n  \"Krita\" \"\" OFF \\\n  \"Shotcut\" \"\" OFF \\\n  \"Steam\" \"\" OFF \\\n  \"Minecraft\" \"\" OFF \\\n  \"YouTUI\" \"TUI YT Music(Preferred)\" OFF \\\n  \"YTerMusic\" \"TUI YT Music\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $tools_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    paru -S kind-bin\n    curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Telegram\")\n    echo \"Installing Telegram...\"\n    paru -S --noconfirm telegram-desktop-bin\n    ;;\n  \"LibreOffice\")\n    echo \"Installing LibreOffice...\"\n    sudo pacman -S --noconfirm libreoffice-fresh\n    ;;\n  \"OnlyOffice\")\n    echo \"Installing OnlyOffice...\"\n    paru -S --noconfirm onlyoffice-bin\n    ;;\n  \"Skype\")\n    echo \"Installing Skype...\"\n    paru -S --noconfirm skypeforlinux-bin\n    ;;\n  \"Slack\")\n    echo \"Installing Slack...\"\n    paru -S --noconfirm slack-desktop\n    ;;\n  \"Zoom\")\n    echo \"Installing Zoom...\"\n    paru -S --noconfirm zoom\n    ;;\n  \"Blender\")\n    echo \"Installing Blender...\"\n    sudo pacman -S --noconfirm blender\n    ;;\n  \"Octave\")\n    echo \"Installing Octave...\"\n    sudo pacman -S --noconfirm octave\n    ;;\n  \"OBS-Studio\")\n    echo \"Installing OBS Studio...\"\n    sudo pacman -S --noconfirm obs-studio\n    ;;\n  \"Inkscape\")\n    echo \"Installing Inkscape...\"\n    sudo pacman -S --noconfirm inkscape\n    ;;\n  \"GIMP\")\n    echo \"Installing GIMP...\"\n    sudo pacman -S --noconfirm gimp\n    ;;\n  \"VLC\")\n    echo \"Installing VLC...\"\n    sudo pacman -S --noconfirm vlc\n    ;;\n  \"Audacity\")\n    echo \"Installing Audacity...\"\n    sudo pacman -S --noconfirm audacity\n    ;;\n  \"Krita\")\n    echo \"Installing Krita...\"\n    sudo pacman -S --noconfirm krita\n    ;;\n  \"Shotcut\")\n    echo \"Installing Shotcut...\"\n    sudo pacman -S --noconfirm shotcut\n    ;;\n  \"Steam\")\n    echo \"Installing Steam...\"\n    paru -S --noconfirm steam\n    ;;\n  \"Minecraft\")\n    echo \"Installing Minecraft...\"\n    paru -S --noconfirm minecraft-launcher\n    ;;\n  \"YouTUI\")\n    echo \"Installing Minecraft...\"\n    cargo install youtui\n    ;;\n  \"YTerMusic\")\n    echo \"Installing Minecraft...\"\n    cargo install ytermusic\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected tools have been installed.\" 10 50\n\nclear\n","recorded":"2025-01-06 16:16:46.853879982","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools, office tools, communication tools, multimedia tools, and PDF tools...\"\n\n# Display checklist with a single column (scrollable) for all tools using dialog\ntools_choices=$(dialog --title \"Select Tools to Install\" \\\n  --checklist \"Choose the tools you want to install:\" 20 60 20 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Telegram\" \"\" OFF \\\n  \"LibreOffice\" \"\" OFF \\\n  \"OnlyOffice\" \"\" OFF \\\n  \"Skype\" \"\" OFF \\\n  \"Slack\" \"\" OFF \\\n  \"Zoom\" \"\" OFF \\\n  \"Blender\" \"\" OFF \\\n  \"Octave\" \"\" OFF \\\n  \"OBS-Studio\" \"\" OFF \\\n  \"Inkscape\" \"\" OFF \\\n  \"GIMP\" \"\" OFF \\\n  \"VLC\" \"\" OFF \\\n  \"Audacity\" \"\" OFF \\\n  \"Krita\" \"\" OFF \\\n  \"Shotcut\" \"\" OFF \\\n  \"Steam\" \"\" OFF \\\n  \"Minecraft\" \"\" OFF \\\n  \"Evince\" \"\" OFF \\\n  \"Okular\" \"\" OFF \\\n  \"Foxit-Reader\" \"\" OFF \\\n  \"Master-PDF-Editor\" \"\" OFF \\\n  \"MuPDF\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $tools_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Telegram\")\n    echo \"Installing Telegram...\"\n    paru -S --noconfirm telegram-desktop-bin\n    ;;\n  \"LibreOffice\")\n    echo \"Installing LibreOffice...\"\n    sudo pacman -S --noconfirm libreoffice-fresh\n    ;;\n  \"OnlyOffice\")\n    echo \"Installing OnlyOffice...\"\n    paru -S --noconfirm onlyoffice-bin\n    ;;\n  \"Skype\")\n    echo \"Installing Skype...\"\n    paru -S --noconfirm skypeforlinux\n    ;;\n  \"Slack\")\n    echo \"Installing Slack...\"\n    paru -S --noconfirm slack-desktop\n    ;;\n  \"Zoom\")\n    echo \"Installing Zoom...\"\n    paru -S --noconfirm zoom\n    ;;\n  \"Blender\")\n    echo \"Installing Blender...\"\n    sudo pacman -S --noconfirm blender\n    ;;\n  \"Octave\")\n    echo \"Installing Octave...\"\n    sudo pacman -S --noconfirm octave\n    ;;\n  \"OBS-Studio\")\n    echo \"Installing OBS Studio...\"\n    sudo pacman -S --noconfirm obs-studio\n    ;;\n  \"Inkscape\")\n    echo \"Installing Inkscape...\"\n    sudo pacman -S --noconfirm inkscape\n    ;;\n  \"GIMP\")\n    echo \"Installing GIMP...\"\n    sudo pacman -S --noconfirm gimp\n    ;;\n  \"VLC\")\n    echo \"Installing VLC...\"\n    sudo pacman -S --noconfirm vlc\n    ;;\n  \"Audacity\")\n    echo \"Installing Audacity...\"\n    sudo pacman -S --noconfirm audacity\n    ;;\n  \"Krita\")\n    echo \"Installing Krita...\"\n    sudo pacman -S --noconfirm krita\n    ;;\n  \"Shotcut\")\n    echo \"Installing Shotcut...\"\n    sudo pacman -S --noconfirm shotcut\n    ;;\n  \"Steam\")\n    echo \"Installing Steam...\"\n    paru -S --noconfirm steam\n    ;;\n  \"Minecraft\")\n    echo \"Installing Minecraft...\"\n    paru -S --noconfirm minecraft-launcher\n    ;;\n  # PDF Tools\n  \"Evince\")\n    echo \"Installing Evince...\"\n    sudo pacman -S --noconfirm evince\n    ;;\n  \"Okular\")\n    echo \"Installing Okular...\"\n    sudo pacman -S --noconfirm okular\n    ;;\n  \"Foxit-Reader\")\n    echo \"Installing Foxit Reader...\"\n    paru -S --noconfirm foxitreader\n    ;;\n  \"Master-PDF-Editor\")\n    echo \"Installing Master PDF Editor...\"\n    paru -S --noconfirm master-pdf-editor\n    ;;\n  \"MuPDF\")\n    echo \"Installing MuPDF...\"\n    sudo pacman -S --noconfirm mupdf\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected tools have been installed.\" 10 50\nclear\n","recorded":"2025-01-06 16:16:46.845562496","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up additional tools and packages...\"\n\n# Display checklist with a single column (scrollable) for additional tools using dialog\nextra_tools_choices=$(dialog --title \"Select Extra Tools to Install\" \\\n  --checklist \"Choose the extra tools and packages you want to install:\" 20 60 20 \\\n  \"ani-cli\" \"\" OFF \\\n  \"ytfzf\" \"\" OFF \\\n  \"Evince\" \"\" OFF \\\n  \"Okular\" \"\" OFF \\\n  \"Foxit-Reader\" \"\" OFF \\\n  \"Master-PDF-Editor\" \"\" OFF \\\n  \"MuPDF\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$extra_tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $extra_tools_choices; do\n  case $app in\n  \"ani-cli\")\n    echo \"Installing ani-cli...\"\n    paru -S --noconfirm --needed ani-cli\n    ;;\n  \"ytfzf\")\n    echo \"Installing ytfzf...\"\n    paru -S --noconfirm --needed ytfzf\n    ;;\n  \"Evince\")\n    echo \"Installing Evince...\"\n    sudo pacman -S --noconfirm evince\n    ;;\n  \"Okular\")\n    echo \"Installing Okular...\"\n    sudo pacman -S --noconfirm okular\n    ;;\n  \"Foxit-Reader\")\n    echo \"Installing Foxit Reader...\"\n    paru -S --noconfirm foxitreader\n    ;;\n  \"Master-PDF-Editor\")\n    echo \"Installing Master PDF Editor...\"\n    paru -S --noconfirm master-pdf-editor\n    ;;\n  \"MuPDF\")\n    echo \"Installing MuPDF...\"\n    sudo pacman -S --noconfirm mupdf\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected extra tools and packages have been installed.\" 10 50\nclear\n","recorded":"2025-01-06 16:16:45.459092701","filePath":"null","pinned":false},{"value":"dialog --msgbox \"Selected tools have been installed.\" 10 50\n","recorded":"2025-01-06 16:15:05.943387800","filePath":"null","pinned":false},{"value":"dialog --msgbox \"Selected tools have been installed.\" 10 50\n\nclear","recorded":"2025-01-06 16:14:48.688592036","filePath":"null","pinned":false},{"value":"# YTERMUSIC - youtube music in terminal \n# installation -  cargo install ytermusic --git https://github.com/ccgauche/ytermusic \n# setup - https://github.com/ccgauche/ytermusic/blob/master/README.md\n# just copy the cookie value from / document in network tab on f12 in youtube music and just paste in ~/dotfiles/ytermusic/.config/ytermusic/headers.txt cookie value\n#\n# For alternative we can use youtui (Present using)\n\n# copy cookie value and paste in cookie.txt in ~/.config/youtui/","recorded":"2025-01-06 16:09:02.195574054","filePath":"null","pinned":false},{"value":"# cargo install youtui\n","recorded":"2025-01-06 16:08:40.844968188","filePath":"null","pinned":false},{"value":"    paru -S --noconfirm minecraft-launcher\n","recorded":"2025-01-06 16:08:34.719064881","filePath":"null","pinned":false},{"value":"\"Minecraft\")\n    echo \"Installing Minecraft...\"\n    paru -S --noconfirm minecraft-launcher\n    ;;","recorded":"2025-01-06 16:08:16.557825612","filePath":"null","pinned":false},{"value":"  \"VLC\" \"\" OFF \\\n","recorded":"2025-01-06 16:07:57.995766256","filePath":"null","pinned":false},{"value":"  \"Shotcut\" \"\" OFF \\\n","recorded":"2025-01-06 16:07:56.312193856","filePath":"null","pinned":false},{"value":"    sudo pacman -S --noconfirm vlc\n","recorded":"2025-01-06 16:07:45.264539037","filePath":"null","pinned":false},{"value":"    echo \"Installing VLC...\"\n","recorded":"2025-01-06 16:07:44.831935001","filePath":"null","pinned":false},{"value":"  \"VLC\")\n","recorded":"2025-01-06 16:07:44.472533584","filePath":"null","pinned":false},{"value":"https://github.com/ccgauche/ytermusic/blob/master/README.md","recorded":"2025-01-06 16:06:37.279429595","filePath":"null","pinned":false},{"value":"# sudo pacman -S wofi\n","recorded":"2025-01-06 16:05:48.827649972","filePath":"null","pinned":false},{"value":"# git clone https://github.com/dracula/wofi.git\n","recorded":"2025-01-06 16:05:47.943797382","filePath":"null","pinned":false},{"value":"# sudo pacman -S thunar thunar-archive-plugin thunar-media-tags-plugin thunar-volman thunar-vcs-plugin\n","recorded":"2025-01-06 16:05:46.003722660","filePath":"null","pinned":false},{"value":"# 24. Install blueman if needed for bluetooth manager\n","recorded":"2025-01-06 16:05:34.641323178","filePath":"null","pinned":false},{"value":"# sudo pacman -S octave --noconfirm\n","recorded":"2025-01-06 16:05:33.960690494","filePath":"null","pinned":false},{"value":"# 23. Install Octave for Numerical Computing\n","recorded":"2025-01-06 16:05:33.543576939","filePath":"null","pinned":false},{"value":"# sudo pacman -S inkscape --noconfirm\n","recorded":"2025-01-06 16:05:33.202687668","filePath":"null","pinned":false},{"value":"# 22. Install Inkscape for Vector Graphics\n","recorded":"2025-01-06 16:05:32.722252080","filePath":"null","pinned":false},{"value":"# sudo pacman -S gimp --noconfirm\n","recorded":"2025-01-06 16:05:32.412985284","filePath":"null","pinned":false},{"value":"# 21. Install GIMP for Image Editing\n","recorded":"2025-01-06 16:05:32.068724139","filePath":"null","pinned":false},{"value":"# sudo pacman -S obs-studio --noconfirm\n","recorded":"2025-01-06 16:05:31.712293323","filePath":"null","pinned":false},{"value":"# 20. Install OBS Studio for Screen Recording\n","recorded":"2025-01-06 16:05:31.317316951","filePath":"null","pinned":false},{"value":"# sudo pacman -S blender --noconfirm\n","recorded":"2025-01-06 16:05:30.914978944","filePath":"null","pinned":false},{"value":"# 19. Install Blender for Video Editing\n","recorded":"2025-01-06 16:05:29.861259693","filePath":"null","pinned":false},{"value":"# sudo pacman -S  libreoffice-fresh\n","recorded":"2025-01-06 16:04:45.159658699","filePath":"null","pinned":false},{"value":"# 4. Install GUI packages\n","recorded":"2025-01-06 16:04:44.824757956","filePath":"null","pinned":false},{"value":"  \"Minecraft\" \"\" OFF \\\n","recorded":"2025-01-06 16:03:12.620350604","filePath":"null","pinned":false},{"value":"# #\n","recorded":"2025-01-06 16:02:16.117272397","filePath":"null","pinned":false},{"value":"# Kubernetes installing locally using kind \n","recorded":"2025-01-06 16:02:15.719975805","filePath":"null","pinned":false},{"value":"   curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"","recorded":"2025-01-06 16:01:52.834221093","filePath":"null","pinned":false},{"value":"    sudo pacman -S --noconfirm kubernetes\n","recorded":"2025-01-06 16:01:47.137860520","filePath":"null","pinned":false},{"value":"paru -S kind-bin\n","recorded":"2025-01-06 16:01:39.866158372","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools using dialog\ndev_choices=$(dialog --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Telegram\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n\"Telegram\")\n    echo \"Installing Discord...\"\n    paru -S --noconfirm telegram-desktop-bin\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected development tools and packages have been installed.\" 10 50\nclear\n","recorded":"2025-01-06 16:01:26.885263968","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools, office tools, and communication tools...\"\n\n# Display checklist with a single column (scrollable) for development tools using dialog\ntools_choices=$(dialog --title \"Select Tools to Install\" \\\n  --checklist \"Choose the tools you want to install:\" 20 60 15 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Telegram\" \"\" OFF \\\n  \"LibreOffice\" \"\" OFF \\\n  \"OnlyOffice\" \"\" OFF \\\n  \"Skype\" \"\" OFF \\\n  \"Slack\" \"\" OFF \\\n  \"Zoom\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $tools_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Telegram\")\n    echo \"Installing Telegram...\"\n    paru -S --noconfirm telegram-desktop-bin\n    ;;\n  \"LibreOffice\")\n    echo \"Installing LibreOffice...\"\n    sudo pacman -S --noconfirm libreoffice-fresh\n    ;;\n  \"OnlyOffice\")\n    echo \"Installing OnlyOffice...\"\n    paru -S --noconfirm onlyoffice-bin\n    ;;\n  \"Skype\")\n    echo \"Installing Skype...\"\n    paru -S --noconfirm skypeforlinux\n    ;;\n  \"Slack\")\n    echo \"Installing Slack...\"\n    paru -S --noconfirm slack-desktop\n    ;;\n  \"Zoom\")\n    echo \"Installing Zoom...\"\n    paru -S --noconfirm zoom\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected tools have been installed.\" 10 50\nclear\n","recorded":"2025-01-06 16:01:26.875099522","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools, office tools, communication tools, and multimedia tools...\"\n\n# Display checklist with a single column (scrollable) for all tools using dialog\ntools_choices=$(dialog --title \"Select Tools to Install\" \\\n  --checklist \"Choose the tools you want to install:\" 20 60 18 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Telegram\" \"\" OFF \\\n  \"LibreOffice\" \"\" OFF \\\n  \"OnlyOffice\" \"\" OFF \\\n  \"Skype\" \"\" OFF \\\n  \"Slack\" \"\" OFF \\\n  \"Zoom\" \"\" OFF \\\n  \"Blender\" \"\" OFF \\\n  \"Octave\" \"\" OFF \\\n  \"OBS-Studio\" \"\" OFF \\\n  \"Inkscape\" \"\" OFF \\\n  \"GIMP\" \"\" OFF \\\n  \"VLC\" \"\" OFF \\\n  \"Audacity\" \"\" OFF \\\n  \"Krita\" \"\" OFF \\\n  \"Shotcut\" \"\" OFF \\\n  \"Steam\" \"\" OFF \\\n  \"Minecraft\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$tools_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $tools_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Telegram\")\n    echo \"Installing Telegram...\"\n    paru -S --noconfirm telegram-desktop-bin\n    ;;\n  \"LibreOffice\")\n    echo \"Installing LibreOffice...\"\n    sudo pacman -S --noconfirm libreoffice-fresh\n    ;;\n  \"OnlyOffice\")\n    echo \"Installing OnlyOffice...\"\n    paru -S --noconfirm onlyoffice-bin\n    ;;\n  \"Skype\")\n    echo \"Installing Skype...\"\n    paru -S --noconfirm skypeforlinux\n    ;;\n  \"Slack\")\n    echo \"Installing Slack...\"\n    paru -S --noconfirm slack-desktop\n    ;;\n  \"Zoom\")\n    echo \"Installing Zoom...\"\n    paru -S --noconfirm zoom\n    ;;\n  \"Blender\")\n    echo \"Installing Blender...\"\n    sudo pacman -S --noconfirm blender\n    ;;\n  \"Octave\")\n    echo \"Installing Octave...\"\n    sudo pacman -S --noconfirm octave\n    ;;\n  \"OBS-Studio\")\n    echo \"Installing OBS Studio...\"\n    sudo pacman -S --noconfirm obs-studio\n    ;;\n  \"Inkscape\")\n    echo \"Installing Inkscape...\"\n    sudo pacman -S --noconfirm inkscape\n    ;;\n  \"GIMP\")\n    echo \"Installing GIMP...\"\n    sudo pacman -S --noconfirm gimp\n    ;;\n  \"VLC\")\n    echo \"Installing VLC...\"\n    sudo pacman -S --noconfirm vlc\n    ;;\n  \"Audacity\")\n    echo \"Installing Audacity...\"\n    sudo pacman -S --noconfirm audacity\n    ;;\n  \"Krita\")\n    echo \"Installing Krita...\"\n    sudo pacman -S --noconfirm krita\n    ;;\n  \"Shotcut\")\n    echo \"Installing Shotcut...\"\n    sudo pacman -S --noconfirm shotcut\n    ;;\n  \"Steam\")\n    echo \"Installing Steam...\"\n    paru -S --noconfirm steam\n    ;;\n  \"Minecraft\")\n    echo \"Installing Minecraft...\"\n    paru -S --noconfirm minecraft-launcher\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected tools have been installed.\" 10 50\nclear\n","recorded":"2025-01-06 16:01:24.251941878","filePath":"null","pinned":false},{"value":"\"","recorded":"2025-01-06 15:58:49.502891238","filePath":"null","pinned":false},{"value":"# paru -S telegram-desktop-bin discord --noconfirm\n","recorded":"2025-01-06 15:57:22.311314957","filePath":"null","pinned":false},{"value":"# 3. Install AUR packages\n","recorded":"2025-01-06 15:57:21.860616367","filePath":"null","pinned":false},{"value":"paru -S telegram-desktop-bin","recorded":"2025-01-06 15:57:05.606037788","filePath":"null","pinned":false},{"value":"\"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;","recorded":"2025-01-06 15:56:48.756062270","filePath":"null","pinned":false},{"value":"  \"Discord\" \"\" OFF \\\n","recorded":"2025-01-06 15:56:40.510799108","filePath":"null","pinned":false},{"value":"  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;","recorded":"2025-01-06 15:55:56.244836492","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:55:20.566110173","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools using dialog\ndev_choices=$(dialog --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# We need to split the output by newline, but also preserve spaces in app names\nIFS=$'\\n' read -r -d '' -a dev_choices_array \u003c\u003c\u003c \"$dev_choices\"\n\n# Process selected tools and install them\nfor app in \"${dev_choices_array[@]}\"; do\n  case \"$app\" in\n  \"Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\n","recorded":"2025-01-06 15:55:20.555809129","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools using dialog\ndev_choices=$(dialog --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:55:17.566846111","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual-Studio-Code\" \"\" OFF \\\n  \"GitHub-Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker-Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"Latex\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n  case $app in\n  \"Visual-Studio-Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub-Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker-Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"Latex\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50","recorded":"2025-01-06 15:54:49.167986815","filePath":"null","pinned":false},{"value":"Invalid choice: \"Visual Studio Code\"","recorded":"2025-01-06 15:53:19.500078705","filePath":"null","pinned":false},{"value":"dialog --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:52:56.186472405","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual Studio Code\" \"\" OFF \\\n  \"GitHub Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# We need to split the output by newline, but also preserve spaces in app names\nIFS=$'\\n' read -r -d '' -a dev_choices_array \u003c\u003c\u003c \"$dev_choices\"\n\n# Process selected tools and install them\nfor app in \"${dev_choices_array[@]}\"; do\n  case \"$app\" in\n  \"Visual Studio Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:52:28.721260815","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools using dialog\ndev_choices=$(dialog --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual Studio Code\" \"\" OFF \\\n  \"GitHub Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  dialog --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# We need to split the output by newline, but also preserve spaces in app names\nIFS=$'\\n' read -r -d '' -a dev_choices_array \u003c\u003c\u003c \"$dev_choices\"\n\n# Process selected tools and install them\nfor app in \"${dev_choices_array[@]}\"; do\n  case \"$app\" in\n  \"Visual Studio Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\ndialog --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:52:11.134395355","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual Studio Code\" \"\" OFF \\\n  \"GitHub Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Split the string into an array based on the newline character.\nIFS=$'\\n' read -rd '' -a dev_choices_array \u003c\u003c\u003c \"$dev_choices\"\n\n# Process selected tools and install them\nfor app in \"${dev_choices_array[@]}\"; do\n  case \"$app\" in\n  \"Visual Studio Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    # sudo pacman -S --noconfirm kubernetes\n    sudo pacman -Syyu\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:51:51.414441927","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual Studio Code\" \"\" OFF \\\n  \"GitHub Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Convert the string to an array by replacing spaces with newlines for correct parsing\ndev_choices=$(echo \"$dev_choices\" | tr ' ' '\\n')\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n  case \"$app\" in\n  \"Visual Studio Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -Syyu\n    # sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n","recorded":"2025-01-06 15:49:58.099549462","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual Studio Code\" \"\" OFF \\\n  \"GitHub Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Split the string into an array based on the newline character.\nIFS=$'\\n' read -rd '' -a dev_choices_array \u003c\u003c\u003c \"$dev_choices\"\n\n# Process selected tools and install them\nfor app in \"${dev_choices_array[@]}\"; do\n  case \"$app\" in\n  \"Visual Studio Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:49:54.540832908","filePath":"null","pinned":false},{"value":"Setting up development tools and packages...\nInvalid choice: \"Kubernetes\"","recorded":"2025-01-06 15:49:28.328598922","filePath":"null","pinned":false},{"value":"whiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:48:54.583293446","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual Studio Code\" \"\" OFF \\\n  \"GitHub Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# We need to replace spaces with underscores and process the choices properly\nIFS=$'\\n' read -rd '' -a dev_choices_array \u003c\u003c\u003c \"$dev_choices\"\n\n# Process selected tools and install them\nfor app in \"${dev_choices_array[@]}\"; do\n  case \"$app\" in\n  \"Visual Studio Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:48:31.934469254","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual Studio Code\" \"\" OFF \\\n  \"GitHub Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Convert the string to an array by replacing spaces with newlines for correct parsing\ndev_choices=$(echo \"$dev_choices\" | tr ' ' '\\n')\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n  case \"$app\" in\n  \"Visual Studio Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:48:29.603823336","filePath":"null","pinned":false},{"value":"Setting up development tools and packages...\nInvalid choice: \"Visual Studio Code\"","recorded":"2025-01-06 15:45:49.414120922","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up torrent and remote working applications...\"\n\n# Display checklist for torrent and remote working applications\napps=$(whiptail --title \"Select Applications to Install\" \\\n    --checklist \"Choose the applications you want to install:\"  20 60 8 \\\n    \"torrent-cli\" \"\" OFF \\\n    \"qBittorrent\" \"\" OFF \\\n    \"Transmission\" \"\" OFF \\\n    \"Remmina\" \"\" OFF \\\n    \"VNC\" \"\" OFF \\\n    \"TeamViewer\" \"\" OFF \\\n    \"AnyDesk\" \"\" OFF \\\n    \"xrdp\" \"\" OFF \\\n    \"openvpn\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 /] || [ -z \"$apps\" ]; then\n    whiptail --msgbox \"No applications selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected applications and install them\nfor app in $apps; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            paru -S --noconfirm --needed webtorrent-cli webtorrent-mpv-hook peerflix\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Remmina\")\n            echo \"Installing Remmina (Remote Desktop Client)...\"\n            sudo pacman -S --noconfirm remmina\n            ;;\n        \"VNC\")\n            echo \"Installing VNC Server...\"\n            sudo pacman -S --noconfirm tigervnc\n            ;;\n        \"TeamViewer\")\n            echo \"Installing TeamViewer...\"\n            sudo pacman -S --noconfirm teamviewer\n            ;;\n        \"AnyDesk\")\n            echo \"Installing AnyDesk...\"\n            sudo pacman -S --noconfirm anydesk\n            ;;\n        \"xrdp\")\n            echo \"Installing xrdp (Remote Desktop Protocol)...\"\n            sudo pacman -S --noconfirm xrdp\n            ;;\n        \"openvpn\")\n            echo \"Installing OpenVPN...\"\n            sudo pacman -S --noconfirm openvpn\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected applications have been installed.\" 10 50\n\n\n","recorded":"2025-01-06 15:45:37.398968428","filePath":"null","pinned":false},{"value":"\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual Studio Code\" \"\" OFF \\\n  \"GitHub Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Convert the space-separated selections into a single item for each tool\n# In this case, we replace spaces with underscores for matching in the case statement\ndev_choices=$(echo $dev_choices | tr ' ' '\\n')\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n  case $app in\n  \"Visual Studio Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50","recorded":"2025-01-06 15:43:03.716147954","filePath":"null","pinned":false},{"value":"echo \"Setting up torrent and remote working applications...\"\n\n# Display checklist for torrent and remote working applications\napps=$(whiptail --title \"$(center_text \"Select Applications to Install\" 60)\" \\\n    --checklist \"$(center_text \"Choose the applications you want to install:\" 60)\" 20 60 8 \\\n    \"torrent-cli\" \"\" OFF \\\n    \"qBittorrent\" \"\" OFF \\\n    \"Transmission\" \"\" OFF \\\n    \"Remmina\" \"\" OFF \\\n    \"VNC\" \"\" OFF \\\n    \"TeamViewer\" \"\" OFF \\\n    \"AnyDesk\" \"\" OFF \\\n    \"xrdp\" \"\" OFF \\\n    \"openvpn\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 /] || [ -z \"$apps\" ]; then\n    whiptail --msgbox \"$(center_text \"No applications selected or setup canceled. Exiting.\" 60)\" 10 50\n    exit 1\nfi\n\n# Process selected applications and install them\nfor app in $apps; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            paru -S --noconfirm --needed webtorrent-cli webtorrent-mpv-hook peerflix\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Remmina\")\n            echo \"Installing Remmina (Remote Desktop Client)...\"\n            sudo pacman -S --noconfirm remmina\n            ;;\n        \"VNC\")\n            echo \"Installing VNC Server...\"\n            sudo pacman -S --noconfirm tigervnc\n            ;;\n        \"TeamViewer\")\n            echo \"Installing TeamViewer...\"\n            sudo pacman -S --noconfirm teamviewer\n            ;;\n        \"AnyDesk\")\n            echo \"Installing AnyDesk...\"\n            sudo pacman -S --noconfirm anydesk\n            ;;\n        \"xrdp\")\n            echo \"Installing xrdp (Remote Desktop Protocol)...\"\n            sudo pacman -S --noconfirm xrdp\n            ;;\n        \"openvpn\")\n            echo \"Installing OpenVPN...\"\n            sudo pacman -S --noconfirm openvpn\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"$(center_text \"Selected applications have been installed.\" 60)\" 10 50\n\n","recorded":"2025-01-06 15:42:52.890564360","filePath":"null","pinned":false},{"value":"Setting up development tools and packages...\nInvalid choice: \"Visual\nInvalid choice: Studio\nInvalid choice: Code\"","recorded":"2025-01-06 15:42:38.610431611","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual Studio Code\" \"\" OFF \\\n  \"GitHub Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n  case $app in\n  \"Visual Studio Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:42:30.947227238","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n  --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n  \"Visual Studio Code\" \"\" OFF \\\n  \"GitHub Desktop\" \"\" OFF \\\n  \"Docker\" \"\" OFF \\\n  \"Docker Desktop\" \"\" OFF \\\n  \"Kubernetes\" \"\" OFF \\\n  \"LaTeX\" \"\" OFF \\\n  \"Miniconda\" \"\" OFF \\\n  \"Discord\" \"\" OFF \\\n  \"Git\" \"\" OFF \\\n  \"Node.js\" \"\" OFF \\\n  \"Python\" \"\" OFF \\\n  \"Go\" \"\" OFF \\\n  \"Rust\" \"\" OFF \\\n  \"GitKraken\" \"\" OFF \\\n  3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n  whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n  exit 1\nfi\n\n# Convert the space-separated selections into a single item for each tool\n# In this case, we replace spaces with underscores for matching in the case statement\ndev_choices=$(echo $dev_choices | tr ' ' '\\n')\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n  case $app in\n  \"Visual Studio Code\")\n    echo \"Installing Visual Studio Code...\"\n    paru -S --noconfirm --needed visual-studio-code-bin\n    ;;\n  \"GitHub Desktop\")\n    echo \"Installing GitHub Desktop...\"\n    paru -S --noconfirm --needed github-desktop-bin\n    ;;\n  \"Docker\")\n    echo \"Installing Docker...\"\n    sudo pacman -S --noconfirm docker docker-compose\n    sudo systemctl enable --now docker.service\n    sudo usermod -aG docker $USER\n    ;;\n  \"Docker Desktop\")\n    echo \"Installing Docker Desktop...\"\n    paru -S --noconfirm docker-desktop\n    ;;\n  \"Kubernetes\")\n    echo \"Installing Kubernetes...\"\n    sudo pacman -S --noconfirm kubernetes\n    ;;\n  \"LaTeX\")\n    echo \"Installing LaTeX (texlive)...\"\n    sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak\n    ;;\n  \"Miniconda\")\n    echo \"Installing Miniconda...\"\n    sudo pacman -S --noconfirm miniconda\n    ;;\n  \"Discord\")\n    echo \"Installing Discord...\"\n    sudo pacman -S --noconfirm discord\n    ;;\n  \"Git\")\n    echo \"Installing Git...\"\n    sudo pacman -S --noconfirm git\n    ;;\n  \"Node.js\")\n    echo \"Installing Node.js...\"\n    sudo pacman -S --noconfirm nodejs\n    ;;\n  \"Python\")\n    echo \"Installing Python...\"\n    sudo pacman -S --noconfirm python\n    ;;\n  \"Go\")\n    echo \"Installing Go...\"\n    sudo pacman -S --noconfirm go\n    ;;\n  \"Rust\")\n    echo \"Installing Rust...\"\n    sudo pacman -S --noconfirm rust\n    ;;\n  \"GitKraken\")\n    echo \"Installing GitKraken...\"\n    sudo pacman -S --noconfirm gitkraken\n    ;;\n  *)\n    echo \"Invalid choice: $app\"\n    ;;\n  esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:42:28.239348834","filePath":"null","pinned":false},{"value":"Setting up development tools and packages...\nInvalid choice: \"Visual-Studio-Code\"","recorded":"2025-01-06 15:41:24.234931915","filePath":"null","pinned":false},{"value":"# 10. Permissions\n","recorded":"2025-01-06 15:39:56.595665903","filePath":"null","pinned":false},{"value":"# sudo usermod -aG docker $USER\n","recorded":"2025-01-06 15:39:48.251081834","filePath":"null","pinned":false},{"value":"# sudo systemctl enable --now docker.service\n","recorded":"2025-01-06 15:39:35.126990243","filePath":"null","pinned":false},{"value":"# yay  # Optional\n","recorded":"2025-01-06 15:39:29.869509544","filePath":"null","pinned":false},{"value":"sudo pacman -S texlive-bin texlive-meta texlive-latex texlive-basic texlive-binextra perl-yaml-tiny perl-file-homedir perl-unicode-linebreak","recorded":"2025-01-06 15:39:17.376088773","filePath":"null","pinned":false},{"value":"-S docker-desktop","recorded":"2025-01-06 15:38:46.542167593","filePath":"null","pinned":false},{"value":"docker docker-compose","recorded":"2025-01-06 15:38:31.694211615","filePath":"null","pinned":false},{"value":"github-desktop-bin visual-studio-code-bin ","recorded":"2025-01-06 15:38:23.883552146","filePath":"null","pinned":false},{"value":"            sudo pacman -S --noconfirm github-desktop\n","recorded":"2025-01-06 15:37:47.385964889","filePath":"null","pinned":false},{"value":"paru -S github-desktop-bin","recorded":"2025-01-06 15:37:41.469428055","filePath":"null","pinned":false},{"value":"\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Development Setup\" --yesno \"Do you want to proceed with installing development tools and packages?\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi","recorded":"2025-01-06 15:37:22.925945377","filePath":"null","pinned":false},{"value":"    \"GitKraken\" \"GitKraken\" OFF \\\n","recorded":"2025-01-06 15:37:04.599171494","filePath":"null","pinned":false},{"value":"    \"Rust\" \"Rust\" OFF \\\n","recorded":"2025-01-06 15:37:04.219239495","filePath":"null","pinned":false},{"value":"    \"Go\" \"Go\" OFF \\\n","recorded":"2025-01-06 15:37:03.891064194","filePath":"null","pinned":false},{"value":"    \"Python\" \"Python\" OFF \\\n","recorded":"2025-01-06 15:37:03.592026740","filePath":"null","pinned":false},{"value":"    \"Node.js\" \"Node.js\" OFF \\\n","recorded":"2025-01-06 15:37:03.322620322","filePath":"null","pinned":false},{"value":"    \"Git\" \"\" OFF \\\n","recorded":"2025-01-06 15:37:03.029388317","filePath":"null","pinned":false},{"value":"Kubernetes","recorded":"2025-01-06 15:36:46.277737619","filePath":"null","pinned":false},{"value":"Docker Desktop","recorded":"2025-01-06 15:36:43.251079851","filePath":"null","pinned":false},{"value":"GitHub Desktop","recorded":"2025-01-06 15:36:30.615925233","filePath":"null","pinned":false},{"value":"Visual Studio Code","recorded":"2025-01-06 15:36:24.471156940","filePath":"null","pinned":false},{"value":" \"Visual Studio Code\" ","recorded":"2025-01-06 15:35:42.493498157","filePath":"null","pinned":false},{"value":"dev_apps=(\n    \"Visual Studio Code\"\n    \"GitHub Desktop\" \n    \"Docker\"\n    \"Docker Desktop\"\n    \"Kubernetes\"\n    \"Latex\"\n    \"Miniconda\"\n    \"Discord\"\n)","recorded":"2025-01-06 15:35:12.955980400","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Development Setup\" --yesno \"Do you want to proceed with installing development tools and packages?\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Define a list of development tools and packages (single column)\ndev_apps=(\n    \"Visual Studio Code\" \"Visual Studio Code\"\n    \"GitHub Desktop\" \"GitHub Desktop\"\n    \"Docker\" \"Docker\"\n    \"Docker Desktop\" \"Docker Desktop\"\n    \"Kubernetes\" \"Kubernetes\"\n    \"Latex\" \"LaTeX\"\n    \"Miniconda\" \"Miniconda\"\n    \"Discord\" \"Discord\"\n    \"Git\" \"Git\"\n    \"Node.js\" \"Node.js\"\n    \"Python\" \"Python\"\n    \"Go\" \"Go\"\n    \"Rust\" \"Rust\"\n    \"GitKraken\" \"GitKraken\"\n)\n\n# Display checklist with a single column (scrollable)\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n    --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n    \"${dev_apps[@]}\" \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n    whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n    case $app in\n        \"Visual Studio Code\")\n            echo \"Installing Visual Studio Code...\"\n            sudo pacman -S --noconfirm visual-studio-code-bin\n            ;;\n        \"GitHub Desktop\")\n            echo \"Installing GitHub Desktop...\"\n            sudo pacman -S --noconfirm github-desktop\n            ;;\n        \"Docker\")\n            echo \"Installing Docker...\"\n            sudo pacman -S --noconfirm docker\n            ;;\n        \"Docker Desktop\")\n            echo \"Installing Docker Desktop...\"\n            sudo pacman -S --noconfirm docker-desktop-bin\n            ;;\n        \"Kubernetes\")\n            echo \"Installing Kubernetes...\"\n            sudo pacman -S --noconfirm kubernetes\n            ;;\n        \"Latex\")\n            echo \"Installing LaTeX (texlive)...\"\n            sudo pacman -S --noconfirm texlive-most\n            ;;\n        \"Miniconda\")\n            echo \"Installing Miniconda...\"\n            sudo pacman -S --noconfirm miniconda\n            ;;\n        \"Discord\")\n            echo \"Installing Discord...\"\n            sudo pacman -S --noconfirm discord\n            ;;\n        \"Git\")\n            echo \"Installing Git...\"\n            sudo pacman -S --noconfirm git\n            ;;\n        \"Node.js\")\n            echo \"Installing Node.js...\"\n            sudo pacman -S --noconfirm nodejs\n            ;;\n        \"Python\")\n            echo \"Installing Python...\"\n            sudo pacman -S --noconfirm python\n            ;;\n        \"Go\")\n            echo \"Installing Go...\"\n            sudo pacman -S --noconfirm go\n            ;;\n        \"Rust\")\n            echo \"Installing Rust...\"\n            sudo pacman -S --noconfirm rust\n            ;;\n        \"GitKraken\")\n            echo \"Installing GitKraken...\"\n            sudo pacman -S --noconfirm gitkraken\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:35:12.942983509","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Development Setup\" --yesno \"Do you want to proceed with installing development tools and packages?\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Display checklist with a single column (scrollable) for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n    --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n    \"Visual Studio Code\" \"Visual Studio Code\" OFF \\\n    \"GitHub Desktop\" \"GitHub Desktop\" OFF \\\n    \"Docker\" \"Docker\" OFF \\\n    \"Docker Desktop\" \"Docker Desktop\" OFF \\\n    \"Kubernetes\" \"Kubernetes\" OFF \\\n    \"Latex\" \"LaTeX\" OFF \\\n    \"Miniconda\" \"Miniconda\" OFF \\\n    \"Discord\" \"Discord\" OFF \\\n    \"Git\" \"Git\" OFF \\\n    \"Node.js\" \"Node.js\" OFF \\\n    \"Python\" \"Python\" OFF \\\n    \"Go\" \"Go\" OFF \\\n    \"Rust\" \"Rust\" OFF \\\n    \"GitKraken\" \"GitKraken\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n    whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n    case $app in\n        \"Visual Studio Code\")\n            echo \"Installing Visual Studio Code...\"\n            sudo pacman -S --noconfirm visual-studio-code-bin\n            ;;\n        \"GitHub Desktop\")\n            echo \"Installing GitHub Desktop...\"\n            sudo pacman -S --noconfirm github-desktop\n            ;;\n        \"Docker\")\n            echo \"Installing Docker...\"\n            sudo pacman -S --noconfirm docker\n            ;;\n        \"Docker Desktop\")\n            echo \"Installing Docker Desktop...\"\n            sudo pacman -S --noconfirm docker-desktop-bin\n            ;;\n        \"Kubernetes\")\n            echo \"Installing Kubernetes...\"\n            sudo pacman -S --noconfirm kubernetes\n            ;;\n        \"Latex\")\n            echo \"Installing LaTeX (texlive)...\"\n            sudo pacman -S --noconfirm texlive-most\n            ;;\n        \"Miniconda\")\n            echo \"Installing Miniconda...\"\n            sudo pacman -S --noconfirm miniconda\n            ;;\n        \"Discord\")\n            echo \"Installing Discord...\"\n            sudo pacman -S --noconfirm discord\n            ;;\n        \"Git\")\n            echo \"Installing Git...\"\n            sudo pacman -S --noconfirm git\n            ;;\n        \"Node.js\")\n            echo \"Installing Node.js...\"\n            sudo pacman -S --noconfirm nodejs\n            ;;\n        \"Python\")\n            echo \"Installing Python...\"\n            sudo pacman -S --noconfirm python\n            ;;\n        \"Go\")\n            echo \"Installing Go...\"\n            sudo pacman -S --noconfirm go\n            ;;\n        \"Rust\")\n            echo \"Installing Rust...\"\n            sudo pacman -S --noconfirm rust\n            ;;\n        \"GitKraken\")\n            echo \"Installing GitKraken...\"\n            sudo pacman -S --noconfirm gitkraken\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:35:10.471355385","filePath":"null","pinned":false},{"value":"dev_apps","recorded":"2025-01-06 15:34:51.227402134","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Development Setup\" --yesno \"Do you want to proceed with installing development tools and packages?\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Define a list of development tools and packages\ndev_apps=(\n    \"Visual Studio Code\"\n    \"GitHub Desktop\"\n    \"Docker\"\n    \"Docker Desktop\"\n    \"Kubernetes\"\n    \"Latex\"\n    \"Miniconda\"\n    \"Discord\"\n    \"Git\"\n    \"Node.js\"\n    \"Python\"\n    \"Go\"\n    \"Rust\"\n    \"GitKraken\"\n)\n\n# Display checklist with a single column (scrollable)\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n    --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n    \"${dev_apps[@]}\" \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n    whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n    case $app in\n        \"Visual Studio Code\")\n            echo \"Installing Visual Studio Code...\"\n            sudo pacman -S --noconfirm visual-studio-code-bin\n            ;;\n        \"GitHub Desktop\")\n            echo \"Installing GitHub Desktop...\"\n            sudo pacman -S --noconfirm github-desktop\n            ;;\n        \"Docker\")\n            echo \"Installing Docker...\"\n            sudo pacman -S --noconfirm docker\n            ;;\n        \"Docker Desktop\")\n            echo \"Installing Docker Desktop...\"\n            sudo pacman -S --noconfirm docker-desktop-bin\n            ;;\n        \"Kubernetes\")\n            echo \"Installing Kubernetes...\"\n            sudo pacman -S --noconfirm kubernetes\n            ;;\n        \"Latex\")\n            echo \"Installing LaTeX (texlive)...\"\n            sudo pacman -S --noconfirm texlive-most\n            ;;\n        \"Miniconda\")\n            echo \"Installing Miniconda...\"\n            sudo pacman -S --noconfirm miniconda\n            ;;\n        \"Discord\")\n            echo \"Installing Discord...\"\n            sudo pacman -S --noconfirm discord\n            ;;\n        \"Git\")\n            echo \"Installing Git...\"\n            sudo pacman -S --noconfirm git\n            ;;\n        \"Node.js\")\n            echo \"Installing Node.js...\"\n            sudo pacman -S --noconfirm nodejs\n            ;;\n        \"Python\")\n            echo \"Installing Python...\"\n            sudo pacman -S --noconfirm python\n            ;;\n        \"Go\")\n            echo \"Installing Go...\"\n            sudo pacman -S --noconfirm go\n            ;;\n        \"Rust\")\n            echo \"Installing Rust...\"\n            sudo pacman -S --noconfirm rust\n            ;;\n        \"GitKraken\")\n            echo \"Installing GitKraken...\"\n            sudo pacman -S --noconfirm gitkraken\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:34:34.143428749","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Development Setup\" --yesno \"Do you want to proceed with installing development tools and packages?\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Define a list of development tools and packages\ndev_apps=(\n    \"Visual Studio Code\"\n    \"GitHub Desktop\" \n    \"Docker\"\n    \"Docker Desktop\"\n    \"Kubernetes\"\n    \"Latex\"\n    \"Miniconda\"\n    \"Discord\"\n)\n\n# Display checklist with a single column (scrollable)\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n    --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n    \"${dev_apps[@]}\" \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n    whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n    case $app in\n        \"vscode\")\n            echo \"Installing Visual Studio Code...\"\n            sudo pacman -S --noconfirm visual-studio-code-bin\n            ;;\n        \"GitHub Desktop\")\n            echo \"Installing GitHub Desktop...\"\n            sudo pacman -S --noconfirm github-desktop\n            ;;\n        \"docker\")\n            echo \"Installing Docker...\"\n            sudo pacman -S --noconfirm docker\n            ;;\n        \"docker-desktop\")\n            echo \"Installing Docker Desktop...\"\n            sudo pacman -S --noconfirm docker-desktop-bin\n            ;;\n        \"kubernetes\")\n            echo \"Installing Kubernetes...\"\n            sudo pacman -S --noconfirm kubernetes\n            ;;\n        \"kubectl\")\n            echo \"Installing kubectl...\"\n            sudo pacman -S --noconfirm kubectl\n            ;;\n        \"latex\")\n            echo \"Installing LaTeX (texlive)...\"\n            sudo pacman -S --noconfirm texlive-most\n            ;;\n        \"miniconda\")\n            echo \"Installing Miniconda...\"\n            sudo pacman -S --noconfirm miniconda\n            ;;\n        \"discord\")\n            echo \"Installing Discord...\"\n            sudo pacman -S --noconfirm discord\n            ;;\n        \"git\")\n            echo \"Installing Git...\"\n            sudo pacman -S --noconfirm git\n            ;;\n        \"nodejs\")\n            echo \"Installing Node.js...\"\n            sudo pacman -S --noconfirm nodejs\n            ;;\n        \"python\")\n            echo \"Installing Python...\"\n            sudo pacman -S --noconfirm python\n            ;;\n        \"go\")\n            echo \"Installing Go...\"\n            sudo pacman -S --noconfirm go\n            ;;\n        \"rust\")\n            echo \"Installing Rust...\"\n            sudo pacman -S --noconfirm rust\n            ;;\n        \"gitkraken\")\n            echo \"Installing GitKraken...\"\n            sudo pacman -S --noconfirm gitkraken\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:33:40.255132744","filePath":"null","pinned":false},{"value":"    \"gitkraken\" \"GitKraken\"\n","recorded":"2025-01-06 15:32:35.382597723","filePath":"null","pinned":false},{"value":"    \"rust\" \"Rust\"\n","recorded":"2025-01-06 15:32:34.995598941","filePath":"null","pinned":false},{"value":"    \"go\" \"Go\"\n","recorded":"2025-01-06 15:32:34.597459234","filePath":"null","pinned":false},{"value":"    \"python\" \"Python\"\n","recorded":"2025-01-06 15:32:34.203320873","filePath":"null","pinned":false},{"value":"    \"nodejs\" \"Node.js\"\n","recorded":"2025-01-06 15:32:33.563053137","filePath":"null","pinned":false},{"value":"    t\" \"Git\"\n","recorded":"2025-01-06 15:32:33.144015207","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up torrent and remote working applications...\"\n\n# Display checklist for torrent and remote working applications\napps=$(whiptail --title \"$(center_text \"Select Applications to Install\" 60)\" \\\n    --checklist \"$(center_text \"Choose the applications you want to install:\" 60)\" 20 60 8 \\\n    \"torrent-cli\" \"\" OFF \\\n    \"qBittorrent\" \"\" OFF \\\n    \"Transmission\" \"\" OFF \\\n    \"Remmina\" \"\" OFF \\\n    \"VNC\" \"\" OFF \\\n    \"TeamViewer\" \"\" OFF \\\n    \"AnyDesk\" \"\" OFF \\\n    \"xrdp\" \"\" OFF \\\n    \"openvpn\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 /] || [ -z \"$apps\" ]; then\n    whiptail --msgbox \"$(center_text \"No applications selected or setup canceled. Exiting.\" 60)\" 10 50\n    exit 1\nfi\n\n# Process selected applications and install them\nfor app in $apps; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            paru -S --noconfirm --needed webtorrent-cli webtorrent-mpv-hook peerflix\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Remmina\")\n            echo \"Installing Remmina (Remote Desktop Client)...\"\n            sudo pacman -S --noconfirm remmina\n            ;;\n        \"VNC\")\n            echo \"Installing VNC Server...\"\n            sudo pacman -S --noconfirm tigervnc\n            ;;\n        \"TeamViewer\")\n            echo \"Installing TeamViewer...\"\n            sudo pacman -S --noconfirm teamviewer\n            ;;\n        \"AnyDesk\")\n            echo \"Installing AnyDesk...\"\n            sudo pacman -S --noconfirm anydesk\n            ;;\n        \"xrdp\")\n            echo \"Installing xrdp (Remote Desktop Protocol)...\"\n            sudo pacman -S --noconfirm xrdp\n            ;;\n        \"openvpn\")\n            echo \"Installing OpenVPN...\"\n            sudo pacman -S --noconfirm openvpn\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"$(center_text \"Selected applications have been installed.\" 60)\" 10 50\n","recorded":"2025-01-06 15:30:36.158063944","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Development Setup\" --yesno \"Do you want to proceed with installing development tools and packages?\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Define a list of development tools and packages\ndev_apps=(\n    \"vscode\" \"Visual Studio Code\"\n    \"GitHub Desktop\" \"GitHub Desktop\"\n    \"docker\" \"Docker\"\n    \"docker-desktop\" \"Docker Desktop\"\n    \"kubernetes\" \"Kubernetes\"\n    \"kubectl\" \"kubectl\"\n    \"latex\" \"TeX Live\"\n    \"miniconda\" \"Miniconda\"\n    \"discord\" \"Discord\"\n    \"git\" \"Git\"\n    \"nodejs\" \"Node.js\"\n    \"python\" \"Python\"\n    \"go\" \"Go\"\n    \"rust\" \"Rust\"\n    \"gitkraken\" \"GitKraken\"\n)\n\n# Display checklist with a single column (scrollable)\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n    --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n    \"${dev_apps[@]}\" \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n    whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n    case $app in\n        \"vscode\")\n            echo \"Installing Visual Studio Code...\"\n            sudo pacman -S --noconfirm visual-studio-code-bin\n            ;;\n        \"GitHub Desktop\")\n            echo \"Installing GitHub Desktop...\"\n            sudo pacman -S --noconfirm github-desktop\n            ;;\n        \"docker\")\n            echo \"Installing Docker...\"\n            sudo pacman -S --noconfirm docker\n            ;;\n        \"docker-desktop\")\n            echo \"Installing Docker Desktop...\"\n            sudo pacman -S --noconfirm docker-desktop-bin\n            ;;\n        \"kubernetes\")\n            echo \"Installing Kubernetes...\"\n            sudo pacman -S --noconfirm kubernetes\n            ;;\n        \"kubectl\")\n            echo \"Installing kubectl...\"\n            sudo pacman -S --noconfirm kubectl\n            ;;\n        \"latex\")\n            echo \"Installing LaTeX (texlive)...\"\n            sudo pacman -S --noconfirm texlive-most\n            ;;\n        \"miniconda\")\n            echo \"Installing Miniconda...\"\n            sudo pacman -S --noconfirm miniconda\n            ;;\n        \"discord\")\n            echo \"Installing Discord...\"\n            sudo pacman -S --noconfirm discord\n            ;;\n        \"git\")\n            echo \"Installing Git...\"\n            sudo pacman -S --noconfirm git\n            ;;\n        \"nodejs\")\n            echo \"Installing Node.js...\"\n            sudo pacman -S --noconfirm nodejs\n            ;;\n        \"python\")\n            echo \"Installing Python...\"\n            sudo pacman -S --noconfirm python\n            ;;\n        \"go\")\n            echo \"Installing Go...\"\n            sudo pacman -S --noconfirm go\n            ;;\n        \"rust\")\n            echo \"Installing Rust...\"\n            sudo pacman -S --noconfirm rust\n            ;;\n        \"gitkraken\")\n            echo \"Installing GitKraken...\"\n            sudo pacman -S --noconfirm gitkraken\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:30:36.148850066","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Function to install packages\ninstall_package() {\n    if pacman -Qs \"$1\" \u003e /dev/null ; then\n        whiptail --msgbox \"$1 is already installed.\" 8 78\n    else\n        whiptail --msgbox \"Installing $1...\" 8 78\n        sudo pacman -S --noconfirm \"$1\"\n    fi\n}\n\n# Whiptail dialog\nwhiptail --title \"Package Installer\" --msgbox \"Welcome to the package installation script!\" 8 78\n\n# List of packages to install\npackages=(\n    \"vscode\"\n    \"github-desktop\"\n    \"docker\"\n    \"docker-desktop\"\n    \"kubernetes\"\n    \"libreoffice-fresh\"  # Office package\n    \"discord\"\n    \"texlive-most\"  # LaTeX package\n    \"miniconda\"\n)\n\n# Install packages\nfor package in \"${packages[@]}\"; do\n    install_package \"$package\"\ndone\n\nwhiptail --msgbox \"All selected packages have been installed!\" 8 78\n","recorded":"2025-01-06 15:30:33.282543614","filePath":"null","pinned":false},{"value":"now its time for development packages\n\nadd some from your side\n\nsome of the applications from my side\n\nvscode, github desktop, docker, docker-desktop, kubernetes, some office packages, discord, latex, miniconda","recorded":"2025-01-06 15:30:03.661516343","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Development Setup\" --yesno \"Do you want to proceed with installing development tools and packages?\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Define a list of development tools and packages\ndev_apps=(\n    \"vscode\" \"GitHub Desktop\"\n    \"docker\" \"docker-desktop\"\n    \"kubernetes\" \"kubectl\"\n    \"latex\" \"texlive-most\"\n    \"miniconda\" \"conda\"\n    \"discord\" \"discord\"\n    \"git\" \"git\"\n    \"nodejs\" \"nodejs\"\n    \"python\" \"python\"\n    \"go\" \"go\"\n    \"rust\" \"rustup\"\n    \"gitkraken\" \"gitkraken\"\n)\n\n# Display checklist with scrolling\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n    --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n    \"${dev_apps[@]}\" \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n    whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n    case $app in\n        \"vscode\")\n            echo \"Installing Visual Studio Code...\"\n            sudo pacman -S --noconfirm visual-studio-code-bin\n            ;;\n        \"GitHub Desktop\")\n            echo \"Installing GitHub Desktop...\"\n            sudo pacman -S --noconfirm github-desktop\n            ;;\n        \"docker\")\n            echo \"Installing Docker...\"\n            sudo pacman -S --noconfirm docker\n            ;;\n        \"docker-desktop\")\n            echo \"Installing Docker Desktop...\"\n            sudo pacman -S --noconfirm docker-desktop-bin\n            ;;\n        \"kubernetes\")\n            echo \"Installing Kubernetes...\"\n            sudo pacman -S --noconfirm kubernetes\n            ;;\n        \"kubectl\")\n            echo \"Installing kubectl...\"\n            sudo pacman -S --noconfirm kubectl\n            ;;\n        \"latex\")\n            echo \"Installing LaTeX (texlive)...\"\n            sudo pacman -S --noconfirm texlive-most\n            ;;\n        \"miniconda\")\n            echo \"Installing Miniconda...\"\n            sudo pacman -S --noconfirm miniconda\n            ;;\n        \"discord\")\n            echo \"Installing Discord...\"\n            sudo pacman -S --noconfirm discord\n            ;;\n        \"git\")\n            echo \"Installing Git...\"\n            sudo pacman -S --noconfirm git\n            ;;\n        \"nodejs\")\n            echo \"Installing Node.js...\"\n            sudo pacman -S --noconfirm nodejs\n            ;;\n        \"python\")\n            echo \"Installing Python...\"\n            sudo pacman -S --noconfirm python\n            ;;\n        \"go\")\n            echo \"Installing Go...\"\n            sudo pacman -S --noconfirm go\n            ;;\n        \"rust\")\n            echo \"Installing Rust...\"\n            sudo pacman -S --noconfirm rust\n            ;;\n        \"gitkraken\")\n            echo \"Installing GitKraken...\"\n            sudo pacman -S --noconfirm gitkraken\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n\n","recorded":"2025-01-06 15:27:50.676050164","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Define a list of development tools and packages\ndev_apps=(\n    \"vscode\" \"GitHub Desktop\"\n    \"docker\" \"docker-desktop\"\n    \"kubernetes\" \"kubectl\"\n    \"latex\" \"texlive-most\"\n    \"miniconda\" \"conda\"\n    \"discord\" \"discord\"\n    \"git\" \"git\"\n    \"nodejs\" \"nodejs\"\n    \"python\" \"python\"\n    \"go\" \"go\"\n    \"rust\" \"rustup\"\n    \"gitkraken\" \"gitkraken\"\n)\n\n# Display checklist with two columns for development tools\ndev_choices=$(whiptail --title \"Select Development Tools to Install \\\n    --checklist \"$(\"Choose the development tools and packages you want to install:\" 60)\" 20 60 8 \\\n    \"${dev_apps[@]}\" \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n    whiptail --msgbox \"$(\"No tools selected or setup canceled. Exiting.\" 60)\" 10 50\n    exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n    case $app in\n        \"vscode\")\n            echo \"Installing Visual Studio Code...\"\n            sudo pacman -S --noconfirm visual-studio-code-bin\n            ;;\n        \"GitHub Desktop\")\n            echo \"Installing GitHub Desktop...\"\n            sudo pacman -S --noconfirm github-desktop\n            ;;\n        \"docker\")\n            echo \"Installing Docker...\"\n            sudo pacman -S --noconfirm docker\n            ;;\n        \"docker-desktop\")\n            echo \"Installing Docker Desktop...\"\n            sudo pacman -S --noconfirm docker-desktop-bin\n            ;;\n        \"kubernetes\")\n            echo \"Installing Kubernetes...\"\n            sudo pacman -S --noconfirm kubernetes\n            ;;\n        \"kubectl\")\n            echo \"Installing kubectl...\"\n            sudo pacman -S --noconfirm kubectl\n            ;;\n        \"latex\")\n            echo \"Installing LaTeX (texlive)...\"\n            sudo pacman -S --noconfirm texlive-most\n            ;;\n        \"miniconda\")\n            echo \"Installing Miniconda...\"\n            sudo pacman -S --noconfirm miniconda\n            ;;\n        \"discord\")\n            echo \"Installing Discord...\"\n            sudo pacman -S --noconfirm discord\n            ;;\n        \"git\")\n            echo \"Installing Git...\"\n            sudo pacman -S --noconfirm git\n            ;;\n        \"nodejs\")\n            echo \"Installing Node.js...\"\n            sudo pacman -S --noconfirm nodejs\n            ;;\n        \"python\")\n            echo \"Installing Python...\"\n            sudo pacman -S --noconfirm python\n            ;;\n        \"go\")\n            echo \"Installing Go...\"\n            sudo pacman -S --noconfirm go\n            ;;\n        \"rust\")\n            echo \"Installing Rust...\"\n            sudo pacman -S --noconfirm rust\n            ;;\n        \"gitkraken\")\n            echo \"Installing GitKraken...\"\n            sudo pacman -S --noconfirm gitkraken\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"$(center_text \"Selected development tools and packages have been installed.\" 60)\" 10 50\n\n","recorded":"2025-01-06 15:26:56.390857714","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up development tools and packages...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Development Setup\" --yesno \"Do you want to proceed with installing development tools and packages?\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Define a list of development tools and packages\ndev_apps=(\n    \"vscode\" \"GitHub Desktop\"\n    \"docker\" \"docker-desktop\"\n    \"kubernetes\" \"kubectl\"\n    \"latex\" \"texlive-most\"\n    \"miniconda\" \"conda\"\n    \"discord\" \"discord\"\n    \"git\" \"git\"\n    \"nodejs\" \"nodejs\"\n    \"python\" \"python\"\n    \"go\" \"go\"\n    \"rust\" \"rustup\"\n    \"gitkraken\" \"gitkraken\"\n)\n\n# Display checklist with scrolling\ndev_choices=$(whiptail --title \"Select Development Tools to Install\" \\\n    --checklist \"Choose the development tools and packages you want to install:\" 20 60 12 \\\n    \"${dev_apps[@]}\" \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n    whiptail --msgbox \"No tools selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n    case $app in\n        \"vscode\")\n            echo \"Installing Visual Studio Code...\"\n            sudo pacman -S --noconfirm visual-studio-code-bin\n            ;;\n        \"GitHub Desktop\")\n            echo \"Installing GitHub Desktop...\"\n            sudo pacman -S --noconfirm github-desktop\n            ;;\n        \"docker\")\n            echo \"Installing Docker...\"\n            sudo pacman -S --noconfirm docker\n            ;;\n        \"docker-desktop\")\n            echo \"Installing Docker Desktop...\"\n            sudo pacman -S --noconfirm docker-desktop-bin\n            ;;\n        \"kubernetes\")\n            echo \"Installing Kubernetes...\"\n            sudo pacman -S --noconfirm kubernetes\n            ;;\n        \"kubectl\")\n            echo \"Installing kubectl...\"\n            sudo pacman -S --noconfirm kubectl\n            ;;\n        \"latex\")\n            echo \"Installing LaTeX (texlive)...\"\n            sudo pacman -S --noconfirm texlive-most\n            ;;\n        \"miniconda\")\n            echo \"Installing Miniconda...\"\n            sudo pacman -S --noconfirm miniconda\n            ;;\n        \"discord\")\n            echo \"Installing Discord...\"\n            sudo pacman -S --noconfirm discord\n            ;;\n        \"git\")\n            echo \"Installing Git...\"\n            sudo pacman -S --noconfirm git\n            ;;\n        \"nodejs\")\n            echo \"Installing Node.js...\"\n            sudo pacman -S --noconfirm nodejs\n            ;;\n        \"python\")\n            echo \"Installing Python...\"\n            sudo pacman -S --noconfirm python\n            ;;\n        \"go\")\n            echo \"Installing Go...\"\n            sudo pacman -S --noconfirm go\n            ;;\n        \"rust\")\n            echo \"Installing Rust...\"\n            sudo pacman -S --noconfirm rust\n            ;;\n        \"gitkraken\")\n            echo \"Installing GitKraken...\"\n            sudo pacman -S --noconfirm gitkraken\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected development tools and packages have been installed.\" 10 50\n","recorded":"2025-01-06 15:26:53.813174524","filePath":"null","pinned":false},{"value":"\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Development Setup\" --yesno \"$(center_text \"Do you want to proceed with installing development tools and packages?\" 60)\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi","recorded":"2025-01-06 15:25:05.362000693","filePath":"null","pinned":false},{"value":"# Function to center text in a box\ncenter_text() {\n    local text=\"$1\"\n    local width=\"$2\"\n    local padding=$(( (width - ${#text}) / 2 ))\n    printf \"%*s%s%*s\\n\" $padding \"\" \"$text\" $padding \"\"\n}","recorded":"2025-01-06 15:25:02.350932459","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Function to center text in a box\ncenter_text() {\n    local text=\"$1\"\n    local width=\"$2\"\n    local padding=$(( (width - ${#text}) / 2 ))\n    printf \"%*s%s%*s\\n\" $padding \"\" \"$text\" $padding \"\"\n}\n\necho \"Setting up development tools and packages...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Development Setup\" --yesno \"$(center_text \"Do you want to proceed with installing development tools and packages?\" 60)\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Define a list of development tools and packages\ndev_apps=(\n    \"vscode\" \"GitHub Desktop\"\n    \"docker\" \"docker-desktop\"\n    \"kubernetes\" \"kubectl\"\n    \"latex\" \"texlive-most\"\n    \"miniconda\" \"conda\"\n    \"discord\" \"discord\"\n    \"git\" \"git\"\n    \"nodejs\" \"nodejs\"\n    \"python\" \"python\"\n    \"go\" \"go\"\n    \"rust\" \"rustup\"\n    \"gitkraken\" \"gitkraken\"\n)\n\n# Display checklist with two columns for development tools\ndev_choices=$(whiptail --title \"$(center_text \"Select Development Tools to Install\" 60)\" \\\n    --checklist \"$(center_text \"Choose the development tools and packages you want to install:\" 60)\" 20 60 8 \\\n    \"${dev_apps[@]}\" \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$dev_choices\" ]; then\n    whiptail --msgbox \"$(center_text \"No tools selected or setup canceled. Exiting.\" 60)\" 10 50\n    exit 1\nfi\n\n# Process selected tools and install them\nfor app in $dev_choices; do\n    case $app in\n        \"vscode\")\n            echo \"Installing Visual Studio Code...\"\n            sudo pacman -S --noconfirm visual-studio-code-bin\n            ;;\n        \"GitHub Desktop\")\n            echo \"Installing GitHub Desktop...\"\n            sudo pacman -S --noconfirm github-desktop\n            ;;\n        \"docker\")\n            echo \"Installing Docker...\"\n            sudo pacman -S --noconfirm docker\n            ;;\n        \"docker-desktop\")\n            echo \"Installing Docker Desktop...\"\n            sudo pacman -S --noconfirm docker-desktop-bin\n            ;;\n        \"kubernetes\")\n            echo \"Installing Kubernetes...\"\n            sudo pacman -S --noconfirm kubernetes\n            ;;\n        \"kubectl\")\n            echo \"Installing kubectl...\"\n            sudo pacman -S --noconfirm kubectl\n            ;;\n        \"latex\")\n            echo \"Installing LaTeX (texlive)...\"\n            sudo pacman -S --noconfirm texlive-most\n            ;;\n        \"miniconda\")\n            echo \"Installing Miniconda...\"\n            sudo pacman -S --noconfirm miniconda\n            ;;\n        \"discord\")\n            echo \"Installing Discord...\"\n            sudo pacman -S --noconfirm discord\n            ;;\n        \"git\")\n            echo \"Installing Git...\"\n            sudo pacman -S --noconfirm git\n            ;;\n        \"nodejs\")\n            echo \"Installing Node.js...\"\n            sudo pacman -S --noconfirm nodejs\n            ;;\n        \"python\")\n            echo \"Installing Python...\"\n            sudo pacman -S --noconfirm python\n            ;;\n        \"go\")\n            echo \"Installing Go...\"\n            sudo pacman -S --noconfirm go\n            ;;\n        \"rust\")\n            echo \"Installing Rust...\"\n            sudo pacman -S --noconfirm rust\n            ;;\n        \"gitkraken\")\n            echo \"Installing GitKraken...\"\n            sudo pacman -S --noconfirm gitkraken\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"$(center_text \"Selected development tools and packages have been installed.\" 60)\" 10 50\n","recorded":"2025-01-06 15:24:54.325992827","filePath":"null","pinned":false},{"value":"sudo pacman -S --noconfirm --needed base-devel intel-ucode vim zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting bash-completion openssh wget curl btop fastfetch bat exa fd ripgrep fzf stow stylua tar tree time acpilight aria2 unrar unzip bluez bluez-utils brightnessctl xfsprogs ntfs-3g clang gcc clipmenu clipnotify inotify-tools psutils dunst e2fsprogs gvfs gvfs-afc gvfs-google gvfs-goa gvfs-gphoto2 gvfs-mtp gvfs-nfs gvfs-onedrive gvfs-smb efibootmgr zoxide gc git-lfs gnome-keyring polkit-gnome pass udiskie gstreamer jq xdotool screenkey xorg-xprop lazygit lolcat sxiv shellcheck net-tools numlockx prettier progress zip rsync trash-cli tlp tlp-rdw neovim feh xorg-xinput xclip xcompmgr xorg-xrandr xorg-xsetroot xsel xwallpaper pandoc starship python-pywal glow xarchiver xfce4-clipman-plugin qemu-full libguestfs bc xorg-xman man-db man-pages ncdu python-adblock dnsmasq python-pip nwg-look python-prctl vscode-css-languageserver ffmpegthumbnailer virt-manager spice-vdagent lua-language-server pass pinentry gnupg pass-otp zbar xorg-xlsclients xscreensaver os-prober qt5ct pamixer qt5-wayland qt6-wayland parallel shfmt tesseract html-xml-utils sddm qt6-5compat qt6-declarative qt6-svg cava thunar thunar-archive-plugin thunar-media-tags-plugin thunar-volman thunar-vcs-plugin flameshot alacritty playerctl ncmpcpp mpd mpv mpc poppler poppler-glib adobe-source-code-pro-fonts noto-fonts noto-fonts-cjk noto-fonts-emoji ttf-hack ttf-jetbrains-mono ttf-ubuntu-font-family ttf-ubuntu-mono-nerd ttf-ubuntu-nerd ttf-opensans gnu-free-fonts libnewt baobab gnome-disk-utility gparted pavucontrol ranger yad timeshift go hugo hunspell hunspell-en_us imagemagick ueberzug luacheck yt-dlp mlocate nodejs npm translate-shell jdk-openjdk openjdk-doc openjdk-src blueman zenity rofi rofi-emoji rofi-calc newsboat","recorded":"2025-01-06 15:02:00.429003669","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/Account Statement_unlocked.pdf","recorded":"2025-01-06 14:58:09.226815799","filePath":"null","pinned":false},{"value":"# After that run ---- M-x nerd-icons-install-fonts\n","recorded":"2025-01-06 14:54:10.525988884","filePath":"null","pinned":false},{"value":"# sudo pacman -S emacs --noconfirm \u0026\u0026 git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs \u0026\u0026 ~/.config/emacs/bin/doom install # Later run doom sync\n","recorded":"2025-01-06 14:54:07.261418673","filePath":"null","pinned":false},{"value":"# 10. Install Doom Emacs\n","recorded":"2025-01-06 14:54:06.815036567","filePath":"null","pinned":false},{"value":"# yay -S elementary-icon-theme --noconfirm # Previously used icons\n","recorded":"2025-01-06 14:51:22.317041955","filePath":"null","pinned":false},{"value":"😅","recorded":"2025-01-06 14:50:51.887749625","filePath":"null","pinned":false},{"value":"# also install pywal zathura in ~/dotfiles/Extras/Extras/Zathura-Pywal-master/\n","recorded":"2025-01-06 14:49:34.588349705","filePath":"null","pinned":false},{"value":"echo \"Installing main packages and application that I personally use the most...\" \u0026\u0026 sleep 2\n\n# Broswer \necho \"choose a browser to install...\"\n","recorded":"2025-01-06 14:46:17.191073534","filePath":"null","pinned":false},{"value":"echo \"Setting up torrent applications...\"\n\n# Display checklist for torrent applications\ntorrent_apps=$(whiptail --title \"Select Torrent Applications to Install\" \\\n    --checklist \"Choose the torrent applications you want to install:\" 15 60 8 \\\n    \"torrent-cli\" \"\" OFF \\\n    \"qBittorrent\" \"\" OFF \\\n    \"Transmission\" \"\" OFF \\\n    \"Deluge\" \"\" OFF \\\n    \"FrostWire\" \"\" OFF \\\n    \"Fierce\" \"\" OFF \\\n    \"PicoTorrent\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$torrent_apps\" ]; then\n    whiptail --msgbox \"No torrent applications selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected torrent applications and install them\nfor app in $torrent_apps; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            sudo pacman -S --noconfirm torrent-cli\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Deluge\")\n            echo \"Installing Deluge...\"\n            sudo pacman -S --noconfirm deluge\n            ;;\n        \"FrostWire\")\n            echo \"Installing FrostWire...\"\n            sudo pacman -S --noconfirm frostwire\n            ;;\n        \"Fierce\")\n            echo \"Installing Fierce...\"\n            sudo pacman -S --noconfirm fierce\n            ;;\n        \"PicoTorrent\")\n            echo \"Installing PicoTorrent...\"\n            sudo pacman -S --noconfirm picotorrent\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected torrent applications have been installed.\" 10 50","recorded":"2025-01-06 14:46:17.180280007","filePath":"null","pinned":false},{"value":"https://kubernetes.io/docs/tasks/tools/#kubectl","recorded":"2025-01-06 14:45:29.650551562","filePath":"null","pinned":false},{"value":"https://karna-blog.netlify.app/posts/docker-login-cli/","recorded":"2025-01-06 14:45:01.397952751","filePath":"null","pinned":false},{"value":"https://netbanking.hdfcbank.com/netbanking/","recorded":"2025-01-06 14:40:53.459638385","filePath":"null","pinned":false},{"value":"# paru -S --needed \"gcc\" \"binutils\" \"dotnet-runtime\" \"dotnet-sdk\" \"aspnet-runtime\" \"mono\" \"jdk-openjdk\" \"dart\" \"kotlin\" \"elixir\" \"npm\" \"nodejs\" \"typescript\" \"make\" \"go\" \"nasm\" \"r\" \"nuitka\" \"python\" \"ruby\" \"perl\" \"lua\" \"pyinstaller\" \"swift-language\" \"flutter-bin\" \"gcc-fortran\" \"fortran-fpm-bin\"\n","recorded":"2025-01-06 14:35:28.713282023","filePath":"null","pinned":false},{"value":"# Compiler.nvim for neovim compilation --\u003e Choose what you need \n","recorded":"2025-01-06 14:35:28.388100254","filePath":"null","pinned":false},{"value":"3. If you are using a dual-boot system, then make sure that the boot order is set to the linux system.\n","recorded":"2025-01-06 14:34:36.672979271","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/my-fonts","recorded":"2025-01-06 14:33:54.641008601","filePath":"null","pinned":false},{"value":"# sudo pacman -S qt6-5compat qt6-declarative qt6-svg sddm \n","recorded":"2025-01-06 14:32:47.991905669","filePath":"null","pinned":false},{"value":"#### SDDM \n","recorded":"2025-01-06 14:32:47.590502993","filePath":"null","pinned":false},{"value":"qt6-5compat qt6-declarative qt6-svg ","recorded":"2025-01-06 14:32:38.708130307","filePath":"null","pinned":false},{"value":"# curl -sSLf https://github.com/aclap-dev/vdhcoapp/releases/latest/download/install.sh | bash\n","recorded":"2025-01-06 14:32:04.938395825","filePath":"null","pinned":false},{"value":"# Video Download Helper \n","recorded":"2025-01-06 14:32:04.557184807","filePath":"null","pinned":false},{"value":"# Video Download Helper \n# curl -sSLf https://github.com/aclap-dev/vdhcoapp/releases/latest/download/install.sh | bash","recorded":"2025-01-06 14:31:49.411305806","filePath":"null","pinned":false},{"value":"# mv stockfish ~/\n","recorded":"2025-01-06 14:29:39.165266755","filePath":"null","pinned":false},{"value":"# rm stockfish-ubuntu-x86-64-avx2.tar\n","recorded":"2025-01-06 14:29:38.739859846","filePath":"null","pinned":false},{"value":"# tar -xvf stockfish-ubuntu-x86-64-avx2.tar\n","recorded":"2025-01-06 14:29:38.315366965","filePath":"null","pinned":false},{"value":"# wget https://github.com/official-stockfish/Stockfish/releases/latest/download/stockfish-ubuntu-x86-64-avx2.tar\n","recorded":"2025-01-06 14:29:37.869019420","filePath":"null","pinned":false},{"value":"# 19. Install Stockfish\n","recorded":"2025-01-06 14:29:37.357234514","filePath":"null","pinned":false},{"value":"git@github.com:Chaganti-Reddy/my-fonts.git","recorded":"2025-01-06 14:28:00.062947360","filePath":"null","pinned":false},{"value":"# sudo pacman -S discord --noconfirm\n","recorded":"2025-01-06 14:26:56.892010251","filePath":"null","pinned":false},{"value":"# sudo pacman -S blueman --noconfirm\n","recorded":"2025-01-06 14:26:56.461680724","filePath":"null","pinned":false},{"value":"# yay -S networkmanager-dmenu-git\n","recorded":"2025-01-06 14:26:17.981861694","filePath":"null","pinned":false},{"value":"# 18. Use dmenu for network manager (Optional)\n","recorded":"2025-01-06 14:26:17.362271696","filePath":"null","pinned":false},{"value":"# paru -S python-pywalfox --noconfirm\n","recorded":"2025-01-06 14:26:16.668213099","filePath":"null","pinned":false},{"value":"# paru -S zen-browser-bin --noconfirm\n","recorded":"2025-01-06 14:26:11.204431122","filePath":"null","pinned":false},{"value":"# 17. Install floorp instead of firefox\n","recorded":"2025-01-06 14:26:10.226659283","filePath":"null","pinned":false},{"value":"# brave://extensions/ ---\u003e Install Comp Companion, uBlock Origin, GFG to Github, Google Translate, LeetHub, User-Agent switcher\n","recorded":"2025-01-06 14:25:28.498118184","filePath":"null","pinned":false},{"value":"# 13. Install brave Extensions\n","recorded":"2025-01-06 14:25:27.937816902","filePath":"null","pinned":false},{"value":"            sudo pacman -S --noconfirm torrent-cli\n","recorded":"2025-01-06 14:20:36.965879849","filePath":"null","pinned":false},{"value":"# sudo pacman -S thunar thunar-archive-plugin thunar-volman thunar-media-tags-plugin --noconfirm\n","recorded":"2025-01-06 14:19:56.363640200","filePath":"null","pinned":false},{"value":"# 8. Install Thunar\n","recorded":"2025-01-06 14:19:55.883826829","filePath":"null","pinned":false},{"value":"# paru -S teamviewer --noconfirm\n","recorded":"2025-01-06 14:19:43.436969404","filePath":"null","pinned":false},{"value":"# 4. Install Teamviewer\n","recorded":"2025-01-06 14:19:42.979486981","filePath":"null","pinned":false},{"value":"# sudo pacman -S qbittorrent --noconfirm\n","recorded":"2025-01-06 14:19:36.060704625","filePath":"null","pinned":false},{"value":"# 2. Install qbit torrent\n","recorded":"2025-01-06 14:19:35.514139842","filePath":"null","pinned":false},{"value":"# 12. Alternatives \u0026 Optionals:\n","recorded":"2025-01-06 14:19:34.979890580","filePath":"null","pinned":false},{"value":"# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Torrent and Remote Working Setup\" --yesno \"$(center_text \"Do you want to proceed with installing torrent and remote working applications?\" 60)\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n","recorded":"2025-01-06 14:19:14.438919155","filePath":"null","pinned":false},{"value":"# Function to center text in a box\ncenter_text() {\n    local text=\"$1\"\n    local width=\"$2\"\n    local padding=$(( (width - ${#text}) / 2 ))\n    printf \"%*s%s%*s\\n\" $padding \"\" \"$text\" $padding \"\"\n}\n\n","recorded":"2025-01-06 14:19:11.960259196","filePath":"null","pinned":false},{"value":"bind = $mainMod, E, exec, rofi -modi emoji -show emoji \n","recorded":"2025-01-06 14:18:42.695338154","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up torrent and remote working applications...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Torrent and Remote Working Setup\" --yesno \"$(center_text \"Do you want to proceed with installing torrent and remote working applications?\" 60)\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Display checklist for torrent and remote working applications\napps=$(whiptail --title \"$(center_text \"Select Applications to Install\" 60)\" \\\n    --checklist \"$(center_text \"Choose the applications you want to install:\" 60)\" 20 60 8 \\\n    \"torrent-cli\" \"\" OFF \\\n    \"qBittorrent\" \"\" OFF \\\n    \"Transmission\" \"\" OFF \\\n    \"Remmina\" \"\" OFF \\\n    \"VNC\" \"\" OFF \\\n    \"TeamViewer\" \"\" OFF \\\n    \"AnyDesk\" \"\" OFF \\\n    \"xrdp\" \"\" OFF \\\n    \"openvpn\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$apps\" ]; then\n    whiptail --msgbox \"$(center_text \"No applications selected or setup canceled. Exiting.\" 60)\" 10 50\n    exit 1\nfi\n\n# Process selected applications and install them\nfor app in $apps; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            sudo pacman -S --noconfirm torrent-cli\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Remmina\")\n            echo \"Installing Remmina (Remote Desktop Client)...\"\n            sudo pacman -S --noconfirm remmina\n            ;;\n        \"VNC\")\n            echo \"Installing VNC Server...\"\n            sudo pacman -S --noconfirm tigervnc\n            ;;\n        \"TeamViewer\")\n            echo \"Installing TeamViewer...\"\n            sudo pacman -S --noconfirm teamviewer\n            ;;\n        \"AnyDesk\")\n            echo \"Installing AnyDesk...\"\n            sudo pacman -S --noconfirm anydesk\n            ;;\n        \"xrdp\")\n            echo \"Installing xrdp (Remote Desktop Protocol)...\"\n            sudo pacman -S --noconfirm xrdp\n            ;;\n        \"openvpn\")\n            echo \"Installing OpenVPN...\"\n            sudo pacman -S --noconfirm openvpn\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"$(center_text \"Selected applications have been installed.\" 60)\" 10 50\n","recorded":"2025-01-06 14:18:42.688117367","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Function to center text in a box\ncenter_text() {\n    local text=\"$1\"\n    local width=\"$2\"\n    local padding=$(( (width - ${#text}) / 2 ))\n    printf \"%*s%s%*s\\n\" $padding \"\" \"$text\" $padding \"\"\n}\n\necho \"Setting up torrent and remote working applications...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Torrent and Remote Working Setup\" --yesno \"$(center_text \"Do you want to proceed with installing torrent and remote working applications?\" 60)\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Define a list of applications in two columns\napps=(\n    \"torrent-cli\" \"qBittorrent\"\n    \"Transmission\" \"Remmina\"\n    \"VNC\" \"TeamViewer\"\n    \"AnyDesk\" \"xrdp\"\n    \"openvpn\"\n)\n\n# Display checklist with two columns by splitting the options\napp_choices=$(whiptail --title \"$(center_text \"Select Applications to Install\" 60)\" \\\n    --checklist \"$(center_text \"Choose the applications you want to install:\" 60)\" 20 60 8 \\\n    \"${apps[@]}\" \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$app_choices\" ]; then\n    whiptail --msgbox \"$(center_text \"No applications selected or setup canceled. Exiting.\" 60)\" 10 50\n    exit 1\nfi\n\n# Process selected applications and install them\nfor app in $app_choices; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            sudo pacman -S --noconfirm torrent-cli\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Remmina\")\n            echo \"Installing Remmina (Remote Desktop Client)...\"\n            sudo pacman -S --noconfirm remmina\n            ;;\n        \"VNC\")\n            echo \"Installing VNC Server...\"\n            sudo pacman -S --noconfirm tigervnc\n            ;;\n        \"TeamViewer\")\n            echo \"Installing TeamViewer...\"\n            sudo pacman -S --noconfirm teamviewer\n            ;;\n        \"AnyDesk\")\n            echo \"Installing AnyDesk...\"\n            sudo pacman -S --noconfirm anydesk\n            ;;\n        \"xrdp\")\n            echo \"Installing xrdp (Remote Desktop Protocol)...\"\n            sudo pacman -S --noconfirm xrdp\n            ;;\n        \"openvpn\")\n            echo \"Installing OpenVPN...\"\n            sudo pacman -S --noconfirm openvpn\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"$(center_text \"Selected applications have been installed.\" 60)\" 10 50\n","recorded":"2025-01-06 14:18:40.865695960","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Function to center text in a box\ncenter_text() {\n    local text=\"$1\"\n    local width=\"$2\"\n    local padding=$(( (width - ${#text}) / 2 ))\n    printf \"%*s%s%*s\\n\" $padding \"\" \"$text\" $padding \"\"\n}\n\necho \"Setting up torrent applications...\"\n\n# Display checklist for torrent applications\ntorrent_apps=$(whiptail --title \"$(center_text \"Select Torrent Applications to Install\" 60)\" \\\n    --checklist \"$(center_text \"Choose the torrent applications you want to install:\" 60)\" 15 60 8 \\\n    \"torrent-cli\" \"\" OFF \\\n    \"qBittorrent\" \"\" OFF \\\n    \"Transmission\" \"\" OFF \\\n    \"Deluge\" \"\" OFF \\\n    \"FrostWire\" \"\" OFF \\\n    \"Fierce\" \"\" OFF \\\n    \"PicoTorrent\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$torrent_apps\" ]; then\n    whiptail --msgbox \"$(center_text \"No torrent applications selected or setup canceled. Exiting.\" 60)\" 10 50\n    exit 1\nfi\n\n# Process selected torrent applications and install them\nfor app in $torrent_apps; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            sudo pacman -S --noconfirm torrent-cli\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Deluge\")\n            echo \"Installing Deluge...\"\n            sudo pacman -S --noconfirm deluge\n            ;;\n        \"FrostWire\")\n            echo \"Installing FrostWire...\"\n            sudo pacman -S --noconfirm frostwire\n            ;;\n        \"Fierce\")\n            echo \"Installing Fierce...\"\n            sudo pacman -S --noconfirm fierce\n            ;;\n        \"PicoTorrent\")\n            echo \"Installing PicoTorrent...\"\n            sudo pacman -S --noconfirm picotorrent\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"$(center_text \"Selected torrent applications have been installed.\" 60)\" 10 50\n","recorded":"2025-01-06 14:17:50.346551153","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Function to center text in a box\ncenter_text() {\n    local text=\"$1\"\n    local width=\"$2\"\n    local padding=$(( (width - ${#text}) / 2 ))\n    printf \"%*s%s%*s\\n\" $padding \"\" \"$text\" $padding \"\"\n}\n\necho \"Setting up torrent and remote working applications...\"\n\n# Ask the user whether they want to proceed with setup\nif ! whiptail --title \"Torrent and Remote Working Setup\" --yesno \"$(center_text \"Do you want to proceed with installing torrent and remote working applications?\" 60)\" 10 60; then\n    echo \"Setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Display checklist for torrent and remote working applications\napps=$(whiptail --title \"$(center_text \"Select Applications to Install\" 60)\" \\\n    --checklist \"$(center_text \"Choose the applications you want to install:\" 60)\" 20 60 8 \\\n    \"torrent-cli\" \"\" OFF \\\n    \"qBittorrent\" \"\" OFF \\\n    \"Transmission\" \"\" OFF \\\n    \"Remmina\" \"\" OFF \\\n    \"VNC\" \"\" OFF \\\n    \"TeamViewer\" \"\" OFF \\\n    \"AnyDesk\" \"\" OFF \\\n    \"xrdp\" \"\" OFF \\\n    \"openvpn\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$apps\" ]; then\n    whiptail --msgbox \"$(center_text \"No applications selected or setup canceled. Exiting.\" 60)\" 10 50\n    exit 1\nfi\n\n# Process selected applications and install them\nfor app in $apps; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            sudo pacman -S --noconfirm torrent-cli\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Remmina\")\n            echo \"Installing Remmina (Remote Desktop Client)...\"\n            sudo pacman -S --noconfirm remmina\n            ;;\n        \"VNC\")\n            echo \"Installing VNC Server...\"\n            sudo pacman -S --noconfirm tigervnc\n            ;;\n        \"TeamViewer\")\n            echo \"Installing TeamViewer...\"\n            sudo pacman -S --noconfirm teamviewer\n            ;;\n        \"AnyDesk\")\n            echo \"Installing AnyDesk...\"\n            sudo pacman -S --noconfirm anydesk\n            ;;\n        \"xrdp\")\n            echo \"Installing xrdp (Remote Desktop Protocol)...\"\n            sudo pacman -S --noconfirm xrdp\n            ;;\n        \"openvpn\")\n            echo \"Installing OpenVPN...\"\n            sudo pacman -S --noconfirm openvpn\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"$(center_text \"Selected applications have been installed.\" 60)\" 10 50\n","recorded":"2025-01-06 14:17:47.868197895","filePath":"null","pinned":false},{"value":"# Ask the user whether they want to proceed with torrent setup\nif ! whiptail --title \"Torrent Application Setup\" --yesno \"Do you want to proceed with installing torrent applications?\" 10 60; then\n    echo \"Torrent application setup canceled. Exiting.\"\n    exit 1\nfi\n\n","recorded":"2025-01-06 14:15:37.505054576","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up torrent applications...\"\n\n# Ask the user whether they want to proceed with torrent setup\nif ! whiptail --title \"Torrent Application Setup\" --yesno \"Do you want to proceed with installing torrent applications?\" 10 60; then\n    echo \"Torrent application setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Display checklist for torrent applications\ntorrent_apps=$(whiptail --title \"Select Torrent Applications to Install\" \\\n    --checklist \"Choose the torrent applications you want to install:\" 15 60 8 \\\n    \"torrent-cli\" \"\" OFF \\\n    \"qBittorrent\" \"\" OFF \\\n    \"Transmission\" \"\" OFF \\\n    \"Deluge\" \"\" OFF \\\n    \"FrostWire\" \"\" OFF \\\n    \"Fierce\" \"\" OFF \\\n    \"PicoTorrent\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$torrent_apps\" ]; then\n    whiptail --msgbox \"No torrent applications selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected torrent applications and install them\nfor app in $torrent_apps; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            sudo pacman -S --noconfirm torrent-cli\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Deluge\")\n            echo \"Installing Deluge...\"\n            sudo pacman -S --noconfirm deluge\n            ;;\n        \"FrostWire\")\n            echo \"Installing FrostWire...\"\n            sudo pacman -S --noconfirm frostwire\n            ;;\n        \"Fierce\")\n            echo \"Installing Fierce...\"\n            sudo pacman -S --noconfirm fierce\n            ;;\n        \"PicoTorrent\")\n            echo \"Installing PicoTorrent...\"\n            sudo pacman -S --noconfirm picotorrent\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected torrent applications have been installed.\" 10 50\n","recorded":"2025-01-06 14:15:29.543065717","filePath":"null","pinned":false},{"value":"# Ask the user whether they want to proceed with torrent setup\nif ! whiptail --title \"Torrent Application Setup\" --yesno \"$(center_text \"Do you want to proceed with installing torrent applications?\" 60)\" 10 60; then\n    echo \"Torrent application setup canceled. Exiting.\"\n    exit 1\nfi\n\n","recorded":"2025-01-06 14:14:17.488842916","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up torrent applications...\"\n\n# Display checklist for torrent applications\ntorrent_apps=$(whiptail --title \"Select Torrent Applications to Install\" \\\n    --checklist \"Choose the torrent applications you want to install:\" 15 60 8 \\\n    \"torrent-cli\" \"\" OFF \\\n    \"qBittorrent\" \"\" OFF \\\n    \"Transmission\" \"\" OFF \\\n    \"Deluge\" \"\" OFF \\\n    \"FrostWire\" \"\" OFF \\\n    \"Fierce\" \"\" OFF \\\n    \"PicoTorrent\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$torrent_apps\" ]; then\n    whiptail --msgbox \"No torrent applications selected or setup canceled. Exiting.\" 10 50\n    exit 1\nfi\n\n# Process selected torrent applications and install them\nfor app in $torrent_apps; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            sudo pacman -S --noconfirm torrent-cli\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Deluge\")\n            echo \"Installing Deluge...\"\n            sudo pacman -S --noconfirm deluge\n            ;;\n        \"FrostWire\")\n            echo \"Installing FrostWire...\"\n            sudo pacman -S --noconfirm frostwire\n            ;;\n        \"Fierce\")\n            echo \"Installing Fierce...\"\n            sudo pacman -S --noconfirm fierce\n            ;;\n        \"PicoTorrent\")\n            echo \"Installing PicoTorrent...\"\n            sudo pacman -S --noconfirm picotorrent\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"Selected torrent applications have been installed.\" 10 50\n","recorded":"2025-01-06 14:14:12.426210646","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Function to center text in a box\ncenter_text() {\n    local text=\"$1\"\n    local width=\"$2\"\n    local padding=$(( (width - ${#text}) / 2 ))\n    printf \"%*s%s%*s\\n\" $padding \"\" \"$text\" $padding \"\"\n}\n\necho \"Setting up torrent applications...\"\n\n# Ask the user whether they want to proceed with torrent setup\nif ! whiptail --title \"Torrent Application Setup\" --yesno \"$(center_text \"Do you want to proceed with installing torrent applications?\" 60)\" 10 60; then\n    echo \"Torrent application setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Display checklist for torrent applications\ntorrent_apps=$(whiptail --title \"$(center_text \"Select Torrent Applications to Install\" 60)\" \\\n    --checklist \"$(center_text \"Choose the torrent applications you want to install:\" 60)\" 15 60 8 \\\n    \"torrent-cli\" \"\" OFF \\\n    \"qBittorrent\" \"\" OFF \\\n    \"Transmission\" \"\" OFF \\\n    \"Deluge\" \"\" OFF \\\n    \"FrostWire\" \"\" OFF \\\n    \"Fierce\" \"\" OFF \\\n    \"PicoTorrent\" \"\" OFF \\\n    3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$torrent_apps\" ]; then\n    whiptail --msgbox \"$(center_text \"No torrent applications selected or setup canceled. Exiting.\" 60)\" 10 50\n    exit 1\nfi\n\n# Process selected torrent applications and install them\nfor app in $torrent_apps; do\n    case $app in\n        \"torrent-cli\")\n            echo \"Installing torrent-cli...\"\n            sudo pacman -S --noconfirm torrent-cli\n            ;;\n        \"qBittorrent\")\n            echo \"Installing qBittorrent...\"\n            sudo pacman -S --noconfirm qbittorrent\n            ;;\n        \"Transmission\")\n            echo \"Installing Transmission...\"\n            sudo pacman -S --noconfirm transmission-qt\n            ;;\n        \"Deluge\")\n            echo \"Installing Deluge...\"\n            sudo pacman -S --noconfirm deluge\n            ;;\n        \"FrostWire\")\n            echo \"Installing FrostWire...\"\n            sudo pacman -S --noconfirm frostwire\n            ;;\n        \"Fierce\")\n            echo \"Installing Fierce...\"\n            sudo pacman -S --noconfirm fierce\n            ;;\n        \"PicoTorrent\")\n            echo \"Installing PicoTorrent...\"\n            sudo pacman -S --noconfirm picotorrent\n            ;;\n        *)\n            echo \"Invalid choice: $app\"\n            ;;\n    esac\ndone\n\nwhiptail --msgbox \"$(center_text \"Selected torrent applications have been installed.\" 60)\" 10 50\n","recorded":"2025-01-06 14:14:09.863901792","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Git configuration...\"\n\n# Ask user whether to proceed with Git setup\nif ! whiptail --title \"Git Configuration Setup\" --yesno \"Do you want to proceed with setting up Git configuration?\" 10 60; then\n    echo \"Git setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n    whiptail --msgbox \"Git username setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n    whiptail --msgbox \"Git email setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Display confirmation dialog\nif whiptail --yesno \"Please confirm the Git configuration:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60; then\n    # Set Git configuration if confirmed\n    # git config --global user.name \"$git_username\"\n    # git config --global user.email \"$git_email\"\n    whiptail --msgbox \"Git has been successfully configured:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\nelse\n    whiptail --msgbox \"Git configuration canceled. No changes were made.\" 10 50\n    exit 1\nfi\n","recorded":"2025-01-06 14:13:30.177816270","filePath":"null","pinned":false},{"value":"#sudo pacman -S jdk-openjdk openjdk-doc openjdk-src --noconfirm\n","recorded":"2025-01-06 14:12:21.102529612","filePath":"null","pinned":false},{"value":"# 1. Install Java\n","recorded":"2025-01-06 14:12:20.568728628","filePath":"null","pinned":false},{"value":"jdk-openjdk openjdk-doc openjdk-src","recorded":"2025-01-06 14:12:11.139613813","filePath":"null","pinned":false},{"value":"#git config --global user.email \"chagantivenkataramireddy4@gmail.com\"\n","recorded":"2025-01-06 14:11:14.024735116","filePath":"null","pinned":false},{"value":"#git config --global user.name \"Chaganti-Reddy\"\n","recorded":"2025-01-06 14:11:13.434777549","filePath":"null","pinned":false},{"value":"# 11. Setup git\n","recorded":"2025-01-06 14:11:12.935113962","filePath":"null","pinned":false},{"value":"echo \"Setting up Git configuration...\"\n\n# Ask user whether to proceed with Git setup\nif ! whiptail --title \"Git Configuration Setup\" --yesno \"Do you want to proceed with setting up Git configuration?\" 10 60; then\n    echo \"Git setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n    whiptail --msgbox \"Git username setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n    whiptail --msgbox \"Git email setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Display confirmation dialog\nif whiptail --yesno \"Please confirm the Git configuration:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60; then\n    # Set Git configuration if confirmed\n    git config --global user.name \"$git_username\"\n    git config --global user.email \"$git_email\"\n    whiptail --msgbox \"Git has been successfully configured:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\nelse\n    whiptail --msgbox \"Git configuration canceled. No changes were made.\" 10 50\n    exit 1\nfi","recorded":"2025-01-06 14:10:34.915619477","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Git configuration...\"\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n    whiptail --msgbox \"Git username setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n    whiptail --msgbox \"Git email setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Display confirmation dialog\nif whiptail --yesno \"Please confirm the Git configuration:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60; then\n    # Set Git configuration if confirmed\n    # git config --global user.name \"$git_username\"\n    # git config --global user.email \"$git_email\"\n    whiptail --msgbox \"Git has been successfully configured:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\nelse\n    whiptail --msgbox \"Git configuration canceled. No changes were made.\" 10 50\n    exit 1\nfi\n","recorded":"2025-01-06 14:10:01.086798306","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Git configuration...\"\n\n# Ask user whether to proceed with Git setup\nif ! whiptail --title \"Git Configuration Setup\" --yesno \"Do you want to proceed with setting up Git configuration?\" 10 60; then\n    echo \"Git setup canceled. Exiting.\"\n    exit 1\nfi\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n    whiptail --msgbox \"Git username setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n    whiptail --msgbox \"Git email setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Display confirmation dialog\nif whiptail --yesno \"Please confirm the Git configuration:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60; then\n    # Set Git configuration if confirmed\n    git config --global user.name \"$git_username\"\n    git config --global user.email \"$git_email\"\n    whiptail --msgbox \"Git has been successfully configured:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\nelse\n    whiptail --msgbox \"Git configuration canceled. No changes were made.\" 10 50\n    exit 1\nfi\n","recorded":"2025-01-06 14:09:57.642965669","filePath":"null","pinned":false},{"value":"echo \"Setting up Git configuration...\"","recorded":"2025-01-06 14:09:34.292211287","filePath":"null","pinned":false},{"value":"echo \"Setting up Git configuration...\"\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n    whiptail --msgbox \"Git username setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n    whiptail --msgbox \"Git email setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Display confirmation dialog\nif whiptail --yesno \"Please confirm the Git configuration:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60; then\n    # Set Git configuration if confirmed\n    git config --global user.name \"$git_username\"\n    git config --global user.email \"$git_email\"\n    whiptail --msgbox \"Git has been successfully configured:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\nelse\n    whiptail --msgbox \"Git configuration canceled. No changes were made.\" 10 50\n    exit 1\nfi","recorded":"2025-01-06 14:09:05.056327792","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Git configuration...\"\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n    echo \"Git username setup canceled or empty. Exiting.\"\n    exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n    echo \"Git email setup canceled or empty. Exiting.\"\n    exit 1\nfi\n\n# Set Git configuration\n# git config --global user.name \"$git_username\"\n# git config --global user.email \"$git_email\"\n\n# Show confirmation using whiptail\nwhiptail --msgbox \"Git has been configured with the following details:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\n","recorded":"2025-01-06 14:08:23.420501556","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Git configuration...\"\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n    whiptail --msgbox \"Git username setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n    whiptail --msgbox \"Git email setup canceled or empty. Exiting.\" 10 50\n    exit 1\nfi\n\n# Display confirmation dialog\nif whiptail --yesno \"Please confirm the Git configuration:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60; then\n    # Set Git configuration if confirmed\n    git config --global user.name \"$git_username\"\n    git config --global user.email \"$git_email\"\n    whiptail --msgbox \"Git has been successfully configured:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\nelse\n    whiptail --msgbox \"Git configuration canceled. No changes were made.\" 10 50\n    exit 1\nfi\n","recorded":"2025-01-06 14:08:20.848084258","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Installing main packages and applications that I personally use the most...\"\nsleep 1\n\n# Function to display the browser selection menu\ninstall_browser() {\n    # Display the checkbox menu\n    choices=$(whiptail --title \"Browser Selection\" \\\n        --checklist \"Select the browsers you want to install:\" 15 50 6 \\\n        \"   Zen-Browser   \" \"\" OFF \\\n        \"     Firefox     \" \"\" OFF \\\n        \"    Chromium     \" \"\" OFF \\\n        \"     Vivaldi     \" \"\" OFF \\\n        \"   qutebrowser   \" \"\" OFF \\\n        \"     Brave       \" \"\" OFF \\\n        3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n    \n    # Check if the user pressed Cancel\n    if [ $? -ne 0 ]; then\n        echo \"No selection made. Exiting.\"\n        exit 1\n    fi\n\n    # Process the selected options\n    for choice in $choices; do\n        case $choice in\n            \"\\\"   Zen-Browser   \\\"\")\n                echo \"Installing Zen-Browser...\"\n                # Replace with Zen-Browser installation commands\n                ;;\n            \"\\\"     Firefox     \\\"\")\n                echo \"Installing Firefox...\"\n                sudo apt-get install -y firefox\n                ;;\n            \"\\\"    Chromium     \\\"\")\n                echo \"Installing Chromium...\"\n                sudo apt-get install -y chromium-browser\n                ;;\n            \"\\\"     Vivaldi     \\\"\")\n                echo \"Installing Vivaldi...\"\n                wget -qO- https://repo.vivaldi.com/archive/linux_signing_key.pub | sudo apt-key add -\n                echo \"deb [arch=amd64] https://repo.vivaldi.com/archive/deb/ stable main\" | sudo tee /etc/apt/sources.list.d/vivaldi.list\n                sudo apt update\n                sudo apt install -y vivaldi-stable\n                ;;\n            \"\\\"   qutebrowser   \\\"\")\n                echo \"Installing qutebrowser...\"\n                sudo apt-get install -y qutebrowser\n                ;;\n            \"\\\"     Brave       \\\"\")\n                echo \"Installing Brave...\"\n                sudo apt install -y apt-transport-https curl\n                curl -fsSL https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo gpg --dearmor -o /usr/share/keyrings/brave-browser-archive-keyring.gpg\n                echo \"deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main\" | sudo tee /etc/apt/sources.list.d/brave-browser-release.list\n                sudo apt update\n                sudo apt install -y brave-browser\n                ;;\n            *)\n                echo \"Invalid choice: $choice\"\n                ;;\n        esac\n    done\n}\n\n# Call the browser installation function\ninstall_browser\n","recorded":"2025-01-06 14:07:17.080538772","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Setting up Git configuration...\"\n\n# Prompt for Git username using whiptail\ngit_username=$(whiptail --inputbox \"Enter your Git username:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_username\" ]; then\n    echo \"Git username setup canceled or empty. Exiting.\"\n    exit 1\nfi\n\n# Prompt for Git email using whiptail\ngit_email=$(whiptail --inputbox \"Enter your Git email:\" 10 60 3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\nexit_status=$?\nif [ $exit_status -ne 0 ] || [ -z \"$git_email\" ]; then\n    echo \"Git email setup canceled or empty. Exiting.\"\n    exit 1\nfi\n\n# Set Git configuration\ngit config --global user.name \"$git_username\"\ngit config --global user.email \"$git_email\"\n\n# Show confirmation using whiptail\nwhiptail --msgbox \"Git has been configured with the following details:\\n\\nUsername: $git_username\\nEmail: $git_email\" 12 60\n","recorded":"2025-01-06 14:06:55.927067008","filePath":"null","pinned":false},{"value":"# 11. Setup git\n#git config --global user.name \"Chaganti-Reddy\"\n#git config --global user.email \"chagantivenkataramireddy4@gmail.com\"\n","recorded":"2025-01-06 14:05:02.626147405","filePath":"null","pinned":false},{"value":"# For VM sharing https://docs.getutm.app/guest-support/linux/\n","recorded":"2025-01-06 14:04:38.881564801","filePath":"null","pinned":false},{"value":"# sudo usermod -aG video $USER\n# sudo usermod -aG libvirt $USER\n# sudo virsh net-start default\n# For VM sharing https://docs.getutm.app/guest-support/linux/","recorded":"2025-01-06 14:04:15.470018610","filePath":"null","pinned":false},{"value":"# 9. Enable services\n# sudo updatedb\n# sudo mandb\n# sudo systemctl enable --now tlp\n# sudo systemctl enable --now bluetooth.service\n# sudo systemctl enable lightdm.service\n# sudo systemctl enable --now libvirtd","recorded":"2025-01-06 14:02:31.582938389","filePath":"null","pinned":false},{"value":"# sudo systemctl enable lightdm.service\n","recorded":"2025-01-06 14:02:02.777036724","filePath":"null","pinned":false},{"value":"# sudo updatedb\n# sudo mandb\n# sudo systemctl enable --now tlp\n# sudo systemctl enable --now bluetooth.service\n# sudo systemctl enable lightdm.service\n# sudo systemctl enable --now libvirtd\n# sudo systemctl enable --now docker.service","recorded":"2025-01-06 14:01:25.398156798","filePath":"null","pinned":false},{"value":"baobab gnome-disk-utility ","recorded":"2025-01-06 13:56:17.772134196","filePath":"null","pinned":false},{"value":"ccrypt didyoumean-git","recorded":"2025-01-06 13:56:03.196362839","filePath":"null","pinned":false},{"value":"git-remote-gcrypt","recorded":"2025-01-06 13:55:42.863801586","filePath":"null","pinned":false},{"value":"# rm -rf paru\n","recorded":"2025-01-06 13:46:52.594258958","filePath":"null","pinned":false},{"value":"# cd ..\n","recorded":"2025-01-06 13:46:52.219588413","filePath":"null","pinned":false},{"value":"# makepkg -si\n","recorded":"2025-01-06 13:46:51.930776492","filePath":"null","pinned":false},{"value":"# cd paru\n","recorded":"2025-01-06 13:46:51.657385732","filePath":"null","pinned":false},{"value":"# git clone https://aur.archlinux.org/paru.git\n","recorded":"2025-01-06 13:46:51.379759784","filePath":"null","pinned":false},{"value":"# 2. Install yay\n","recorded":"2025-01-06 13:46:51.122896486","filePath":"null","pinned":false},{"value":" \n","recorded":"2025-01-06 13:46:50.548034986","filePath":"null","pinned":false},{"value":"# lines_to_append=\"ILoveCandy\\nParallelDownloads=10\\nColor\"\n# sudo sed -i '/^\\[options\\]/a '\"$lines_to_append\" /etc/pacman.conf\n ","recorded":"2025-01-06 13:46:28.658502332","filePath":"null","pinned":false},{"value":"# sudo pacman -Syu archlinux-keyring --noconfirm\n","recorded":"2025-01-06 13:46:05.672772999","filePath":"null","pinned":false},{"value":"# Update the system\n","recorded":"2025-01-06 13:46:05.218989052","filePath":"null","pinned":false},{"value":"# mkdir Downloads Documents Music Videos Pictures Desktop Git\n","recorded":"2025-01-06 13:46:04.821596335","filePath":"null","pinned":false},{"value":"# Reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation /v RealTimeIsUniversal /t REG_QWORD /d 1\n","recorded":"2025-01-06 13:45:49.313844721","filePath":"null","pinned":false},{"value":"# Dual boot windows time changing problem solution --\u003e Go to cmd with admiin permissions and run the following \n","recorded":"2025-01-06 13:45:48.936267274","filePath":"null","pinned":false},{"value":"\n\nIf you are dual-booting with windows then there might be problems with time in windows. To resolve that open cmd as admin in windows\n\n    For 32 Bit System rum Reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1\n    For 64 Bit System run Reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation /v RealTimeIsUniversal /t REG_QWORD /d 1\n\n","recorded":"2025-01-06 13:44:42.351042128","filePath":"null","pinned":false},{"value":"# Dual boot windows time changing problem solution --\u003e Go to cmd with admiin permissions and run the following \n# Reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation /v RealTimeIsUniversal /t REG_QWORD /d 1","recorded":"2025-01-06 13:43:59.471741873","filePath":"null","pinned":false},{"value":"# Using XFCE4-CLIPMAN for clipboard manager\n","recorded":"2025-01-06 13:42:56.350444243","filePath":"null","pinned":false},{"value":"# 1.  Install essential packages\n","recorded":"2025-01-06 13:42:55.271723953","filePath":"null","pinned":false},{"value":"# sudo pacman -S base-devel intel-ucode git vim zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting bash-completion openssh wget curl btop fastfetch bat exa fd ripgrep fzf stow stylua tar tree time acpilight aria2 unrar unzip bluez bluez-utils brightnessctl xfsprogs ntfs-3g clang gcc clipmenu clipnotify inotify-tools psutils dunst e2fsprogs gvfs gvfs-afc gvfs-google gvfs-goa gvfs-gphoto2 gvfs-mtp gvfs-nfs gvfs-onedrive gvfs-smb efibootmgr zoxide gc git-lfs gnome-keyring polkit-gnome pass udiskie gstreamer jq xdotool screenkey xorg-xprop lazygit lolcat sxiv shellcheck net-tools numlockx prettier progress zip rsync trash-cli tlp tlp-rdw neovim xorg-xinput xclip xcompmgr xorg-xrandr xorg-xsetroot xsel xwallpaper pandoc starship python-pywal glow xarchiver xfce4-clipman-plugin qemu-full libguestfs xorg-xman man-db man-pages ncdu python-adblock dnsmasq python-pip nwg-look python-prctl vscode-css-languageserver ffmpegthumbnailer virt-manager spice-vdagent lua-language-server pass pinentry gnupg pass-otp zbar xorg-xlsclients xscreensaver os-prober qt5ct pamixer qt5-wayland qt6-wayland parallel shfmt tesseract html-xml-utils --noconfirm\n","recorded":"2025-01-06 13:42:53.364779856","filePath":"null","pinned":false},{"value":"libnewt","recorded":"2025-01-06 13:42:29.042478673","filePath":"null","pinned":false},{"value":"      sudo apt install -y brave-browser\n","recorded":"2025-01-06 13:42:16.122316682","filePath":"null","pinned":false},{"value":"      sudo apt update\n","recorded":"2025-01-06 13:42:15.686526748","filePath":"null","pinned":false},{"value":"      echo \"deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main\" | sudo tee /etc/apt/sources.list.d/brave-browser-release.list\n","recorded":"2025-01-06 13:42:15.041349157","filePath":"null","pinned":false},{"value":"      curl -fsSL https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo gpg --dearmor -o /usr/share/keyrings/brave-browser-archive-keyring.gpg\n","recorded":"2025-01-06 13:42:14.538851733","filePath":"null","pinned":false},{"value":"      sudo apt install -y apt-transport-https curl\n","recorded":"2025-01-06 13:42:14.074349733","filePath":"null","pinned":false},{"value":"-S --noconfirm brave-bin","recorded":"2025-01-06 13:42:06.167774989","filePath":"null","pinned":false},{"value":"      sudo apt-get install -y qutebrowser\n","recorded":"2025-01-06 13:42:00.711789893","filePath":"null","pinned":false},{"value":"sudo pacman -S --noconfirm qutebrowser","recorded":"2025-01-06 13:41:55.345293739","filePath":"null","pinned":false},{"value":"      sudo apt install -y vivaldi-stable\n","recorded":"2025-01-06 13:41:50.765888735","filePath":"null","pinned":false},{"value":"      echo \"deb [arch=amd64] https://repo.vivaldi.com/archive/deb/ stable main\" | sudo tee /etc/apt/sources.list.d/vivaldi.list\n","recorded":"2025-01-06 13:41:49.339547408","filePath":"null","pinned":false},{"value":"      wget -qO- https://repo.vivaldi.com/archive/linux_signing_key.pub | sudo apt-key add -\n","recorded":"2025-01-06 13:41:48.925644589","filePath":"null","pinned":false},{"value":"-S --noconfirm vivaldi","recorded":"2025-01-06 13:41:41.414271182","filePath":"null","pinned":false},{"value":"                sudo apt-get install -y chromium-browser\n","recorded":"2025-01-06 13:41:28.517225486","filePath":"null","pinned":false},{"value":"sudo pacman -S --noconfirm chromium","recorded":"2025-01-06 13:41:19.612482263","filePath":"null","pinned":false},{"value":"                sudo pacman -S firefox\n","recorded":"2025-01-06 13:41:14.855466084","filePath":"null","pinned":false},{"value":"sudo pacman -S --noconfirm firefox","recorded":"2025-01-06 13:41:06.204529900","filePath":"null","pinned":false},{"value":"                sudo apt-get install -y firefox\n","recorded":"2025-01-06 13:40:51.461024181","filePath":"null","pinned":false},{"value":"                # Replace with Zen-Browser installation commands\n","recorded":"2025-01-06 13:40:04.382939145","filePath":"null","pinned":false},{"value":"sleep 2\n","recorded":"2025-01-06 13:39:56.208359002","filePath":"null","pinned":false},{"value":"echo \"Installing main packages and applications that I personally use the most...\"\n","recorded":"2025-01-06 13:39:55.784638468","filePath":"null","pinned":false},{"value":"echo \"choose a browser to install...\"\n","recorded":"2025-01-06 13:39:48.384826536","filePath":"null","pinned":false},{"value":"# Broswer \n","recorded":"2025-01-06 13:39:48.047547567","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Installing main packages and applications that I personally use the most...\"\nsleep 2\n\n# Function to display the browser selection menu\ninstall_browser() {\n    # Display the checkbox menu\n    choices=$(whiptail --title \"Browser Selection\" \\\n        --checklist \"Select the browsers you want to install:\" 15 50 6 \\\n        \"   Zen-Browser   \" \"\" OFF \\\n        \"     Firefox     \" \"\" OFF \\\n        \"    Chromium     \" \"\" OFF \\\n        \"     Vivaldi     \" \"\" OFF \\\n        \"   qutebrowser   \" \"\" OFF \\\n        \"     Brave       \" \"\" OFF \\\n        3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n    \n    # Check if the user pressed Cancel\n    if [ $? -ne 0 ]; then\n        echo \"No selection made. Exiting.\"\n        exit 1\n    fi\n\n    # Process the selected options\n    for choice in $choices; do\n        case $choice in\n            \"\\\"   Zen-Browser   \\\"\")\n                echo \"Installing Zen-Browser...\"\n                # Replace with Zen-Browser installation commands\n                ;;\n            \"\\\"     Firefox     \\\"\")\n                echo \"Installing Firefox...\"\n                sudo apt-get install -y firefox\n                ;;\n            \"\\\"    Chromium     \\\"\")\n                echo \"Installing Chromium...\"\n                sudo apt-get install -y chromium-browser\n                ;;\n            \"\\\"     Vivaldi     \\\"\")\n                echo \"Installing Vivaldi...\"\n                wget -qO- https://repo.vivaldi.com/archive/linux_signing_key.pub | sudo apt-key add -\n                echo \"deb [arch=amd64] https://repo.vivaldi.com/archive/deb/ stable main\" | sudo tee /etc/apt/sources.list.d/vivaldi.list\n                sudo apt update\n                sudo apt install -y vivaldi-stable\n                ;;\n            \"\\\"   qutebrowser   \\\"\")\n                echo \"Installing qutebrowser...\"\n                sudo apt-get install -y qutebrowser\n                ;;\n            \"\\\"     Brave       \\\"\")\n                echo \"Installing Brave...\"\n                sudo apt install -y apt-transport-https curl\n                curl -fsSL https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo gpg --dearmor -o /usr/share/keyrings/brave-browser-archive-keyring.gpg\n                echo \"deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main\" | sudo tee /etc/apt/sources.list.d/brave-browser-release.list\n                sudo apt update\n                sudo apt install -y brave-browser\n                ;;\n            *)\n                echo \"Invalid choice: $choice\"\n                ;;\n        esac\n    done\n}\n\n# Call the browser installation function\ninstall_browser\n","recorded":"2025-01-06 13:39:41.733941612","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Installing main packages and applications that I personally use the most...\"\nsleep 1\n\n# Function to display the browser selection menu\ninstall_browser() {\n    # Display the checkbox menu\n    choices=$(whiptail --title \"Browser Selection\" \\\n        --checklist \"Select the browsers you want to install:\" 15 50 6 \\\n        \"Zen-Browser\" \"\" OFF \\\n        \"Firefox\" \"\" OFF \\\n        \"Chromium\" \"\" OFF \\\n        \"Vivaldi\" \"\" OFF \\\n        \"qutebrowser\" \"\" OFF \\\n        \"Brave\" \"\" OFF \\\n        3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n    \n    # Check if the user pressed Cancel\n    if [ $? -ne 0 ]; then\n        echo \"No selection made. Exiting.\"\n        exit 1\n    fi\n\n    # Process the selected options\n    for choice in $choices; do\n        case $choice in\n            \"\\\"Zen-Browser\\\"\")\n                echo \"Installing Zen-Browser...\"\n                # Replace with Zen-Browser installation commands\n                ;;\n            \"\\\"Firefox\\\"\")\n                echo \"Installing Firefox...\"\n                sudo apt-get install -y firefox\n                ;;\n            \"\\\"Chromium\\\"\")\n                echo \"Installing Chromium...\"\n                sudo apt-get install -y chromium-browser\n                ;;\n            \"\\\"Vivaldi\\\"\")\n                echo \"Installing Vivaldi...\"\n                wget -qO- https://repo.vivaldi.com/archive/linux_signing_key.pub | sudo apt-key add -\n                echo \"deb [arch=amd64] https://repo.vivaldi.com/archive/deb/ stable main\" | sudo tee /etc/apt/sources.list.d/vivaldi.list\n                sudo apt update\n                sudo apt install -y vivaldi-stable\n                ;;\n            \"\\\"qutebrowser\\\"\")\n                echo \"Installing qutebrowser...\"\n                sudo apt-get install -y qutebrowser\n                ;;\n            \"\\\"Brave\\\"\")\n                echo \"Installing Brave...\"\n                sudo apt install -y apt-transport-https curl\n                curl -fsSL https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo gpg --dearmor -o /usr/share/keyrings/brave-browser-archive-keyring.gpg\n                echo \"deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main\" | sudo tee /etc/apt/sources.list.d/brave-browser-release.list\n                sudo apt update\n                sudo apt install -y brave-browser\n                ;;\n            *)\n                echo \"Invalid choice: $choice\"\n                ;;\n        esac\n    done\n}\n\n# Call the browser installation function\ninstall_browser\n","recorded":"2025-01-06 13:39:27.865026288","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Installing main packages and applications that I personally use the most...\"\nsleep 2\n\n# Function to display the browser selection menu\ninstall_browser() {\n    # Display the checkbox menu\n    choices=$(whiptail --title \"Browser Selection\" \\\n        --checklist \"Select the browsers you want to install:\" 15 50 3 \\\n        \"Zen-Browser\" \"Lightweight and fast browser\" OFF \\\n        \"Firefox\" \"Popular open-source browser\" OFF \\\n        \"Chromium\" \"Open-source base for Google Chrome\" OFF \\\n        3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n    \n    # Check if the user pressed Cancel\n    if [ $? -ne 0 ]; then\n        echo \"No selection made. Exiting.\"\n        exit 1\n    fi\n\n    # Process the selected options\n    for choice in $choices; do\n        case $choice in\n            \"\\\"Zen-Browser\\\"\")\n                echo \"Installing Zen-Browser...\"\n                # Replace with Zen-Browser installation commands\n                ;;\n            \"\\\"Firefox\\\"\")\n                echo \"Installing Firefox...\"\n                sudo apt-get install -y firefox\n                ;;\n            \"\\\"Chromium\\\"\")\n                echo \"Installing Chromium...\"\n                sudo apt-get install -y chromium-browser\n                ;;\n            *)\n                echo \"Invalid choice: $choice\"\n                ;;\n        esac\n    done\n}\n\n# Call the browser installation function\ninstall_browser\n","recorded":"2025-01-06 13:38:42.857046507","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\necho \"Installing main packages and applications that I personally use the most...\"\nsleep 2\n\n# Function to display the browser selection menu\ninstall_browser() {\n    # Display the checkbox menu\n    choices=$(whiptail --title \"Browser Selection\" \\\n        --checklist \"Select the browsers you want to install:\" 15 50 6 \\\n        \"Zen-Browser\" \"\" OFF \\\n        \"Firefox\" \"\" OFF \\\n        \"Chromium\" \"\" OFF \\\n        \"Vivaldi\" \"\" OFF \\\n        \"qutebrowser\" \"\" OFF \\\n        \"Brave\" \"\" OFF \\\n        3\u003e\u00261 1\u003e\u00262 2\u003e\u00263)\n    \n    # Check if the user pressed Cancel\n    if [ $? -ne 0 ]; then\n        echo \"No selection made. Exiting.\"\n        exit 1\n    fi\n\n    # Process the selected options\n    for choice in $choices; do\n        case $choice in\n            \"\\\"Zen-Browser\\\"\")\n                echo \"Installing Zen-Browser...\"\n                # Replace with Zen-Browser installation commands\n                ;;\n            \"\\\"Firefox\\\"\")\n                echo \"Installing Firefox...\"\n                sudo apt-get install -y firefox\n                ;;\n            \"\\\"Chromium\\\"\")\n                echo \"Installing Chromium...\"\n                sudo apt-get install -y chromium-browser\n                ;;\n            \"\\\"Vivaldi\\\"\")\n                echo \"Installing Vivaldi...\"\n                wget -qO- https://repo.vivaldi.com/archive/linux_signing_key.pub | sudo apt-key add -\n                echo \"deb [arch=amd64] https://repo.vivaldi.com/archive/deb/ stable main\" | sudo tee /etc/apt/sources.list.d/vivaldi.list\n                sudo apt update\n                sudo apt install -y vivaldi-stable\n                ;;\n            \"\\\"qutebrowser\\\"\")\n                echo \"Installing qutebrowser...\"\n                sudo apt-get install -y qutebrowser\n                ;;\n            \"\\\"Brave\\\"\")\n                echo \"Installing Brave...\"\n                sudo apt install -y apt-transport-https curl\n                curl -fsSL https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo gpg --dearmor -o /usr/share/keyrings/brave-browser-archive-keyring.gpg\n                echo \"deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main\" | sudo tee /etc/apt/sources.list.d/brave-browser-release.list\n                sudo apt update\n                sudo apt install -y brave-browser\n                ;;\n            *)\n                echo \"Invalid choice: $choice\"\n                ;;\n        esac\n    done\n}\n\n# Call the browser installation function\ninstall_browser\n","recorded":"2025-01-06 13:38:38.998425100","filePath":"null","pinned":false},{"value":"sudo pacman -S libnewt","recorded":"2025-01-06 13:35:48.434162650","filePath":"null","pinned":false},{"value":"whiptail","recorded":"2025-01-06 13:34:04.763623151","filePath":"null","pinned":false},{"value":"echo \"4. Chromium\"\n","recorded":"2025-01-06 13:31:17.756116276","filePath":"null","pinned":false},{"value":"echo \"3. Vivaldi\"\n","recorded":"2025-01-06 13:31:17.494111810","filePath":"null","pinned":false},{"value":"echo \"2. Brave\"\n","recorded":"2025-01-06 13:31:17.216854176","filePath":"null","pinned":false},{"value":"echo \"1. Firefox\"\n","recorded":"2025-01-06 13:31:16.951544764","filePath":"null","pinned":false},{"value":"clear\n","recorded":"2025-01-06 13:29:47.622505919","filePath":"null","pinned":false},{"value":"# 6. Install fonts\n","recorded":"2025-01-06 13:29:10.346219793","filePath":"null","pinned":false},{"value":"# sudo pacman -S adobe-source-code-pro-fonts noto-fonts noto-fonts-cjk noto-fonts-emoji ttf-hack ttf-jetbrains-mono ttf-ubuntu-font-family ttf-ubuntu-mono-nerd ttf-ubuntu-nerd ttf-opensans gnu-free-fonts --noconfirm \u0026\u0026 paru -S ttf-ms-fonts qt6ct-kde --noconfirm\n","recorded":"2025-01-06 13:29:08.824081003","filePath":"null","pinned":false},{"value":"# sudo pacman -Rns kate\n","recorded":"2025-01-06 13:28:18.141365834","filePath":"null","pinned":false},{"value":"# yay -S ferdium-bin --noconfirm\n","recorded":"2025-01-06 13:28:17.459021017","filePath":"null","pinned":false},{"value":"# sudo pacman -S mpv mpc mpd ncmpcpp mplayer poppler poppler-glib --noconfirm \u0026\u0026 \n","recorded":"2025-01-06 13:28:16.861873979","filePath":"null","pinned":false},{"value":"# 5. Install multimedia packages\n","recorded":"2025-01-06 13:28:16.338497899","filePath":"null","pinned":false},{"value":" mpv mpc mpd ncmpcpp mplayer poppler poppler-glib","recorded":"2025-01-06 13:27:58.900627580","filePath":"null","pinned":false},{"value":" ","recorded":"2025-01-06 13:24:09.405851846","filePath":"null","pinned":false},{"value":"# sudo pacman -S base-devel intel-ucode git vim zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting bash-completion openssh wget curl btop fastfetch bat exa fd ripgrep fzf stow stylua tar tree time acpilight aria2 unrar unzip bluez bluez-utils brightnessctl xfsprogs ntfs-3g clang gcc clipmenu clipnotify inotify-tools psutils dunst e2fsprogs gvfs gvfs-afc gvfs-google gvfs-goa gvfs-gphoto2 gvfs-mtp gvfs-nfs gvfs-onedrive gvfs-smb efibootmgr zoxide gc git-lfs gnome-keyring polkit-gnome pass udiskie gstreamer jq xdotool screenkey xorg-xprop lazygit lolcat sxiv shellcheck net-tools numlockx prettier progress zip rsync trash-cli tlp tlp-rdw neovim xorg-xinput xclip xcompmgr xorg-xrandr xorg-xsetroot xsel xwallpaper pandoc starship python-pywal glow xarchiver xfce4-clipman-plugin qemu-full libguestfs xorg-xman man-db man-pages ncdu python-adblock dnsmasq python-pip nwg-look python-prctl vscode-css-languageserver ffmpegthumbnailer virt-manager spice-vdagent lua-language-server pass pinentry gnupg pass-otp zbar xorg-xlsclients xscreensaver os-prober qt5ct pamixer qt5-wayland qt6-wayland parallel shfmt tesseract html-xml-utils --noconfirm","recorded":"2025-01-06 13:20:07.349481172","filePath":"null","pinned":false},{"value":"# Install base-devel and required packages\necho \"Installing dependencies..\" \u0026\u0026 sleep 2\nparu -S --noconfirm --needed base-devel qtile python-psutil pywal-git picom dunst zsh starship mpd ncmpcpp playerctl brightnessctl alacritty pfetch htop flameshot thunar roficlip rofi ranger cava neovim vim feh sddm\nclear","recorded":"2025-01-06 13:18:43.170753857","filePath":"null","pinned":false},{"value":"s","recorded":"2025-01-06 13:17:42.185465440","filePath":"null","pinned":false},{"value":"    mkdir -p ~/.srcs\n","recorded":"2025-01-06 13:17:15.103882243","filePath":"null","pinned":false},{"value":"    sudo ln -s /usr/lib/libalpm.so.15.0.0 /usr/lib/libalpm.so.14\n","recorded":"2025-01-06 13:16:10.167570056","filePath":"null","pinned":false},{"value":"    (cd ~/.srcs/paru-bin \u0026\u0026 makepkg -si --noconfirm)\n","recorded":"2025-01-06 13:16:09.780957640","filePath":"null","pinned":false},{"value":"# Clone and install Paru if not installed\necho \"This script requires an AUR helper to install the dependencies. Installing paru...\" \u0026 sleep 2\nif ! command -v paru \u0026\u003e /dev/null; then\n    echo \"Installing Paru, an AUR helper...\"\n    mkdir -p ~/.srcs\n    git clone https://aur.archlinux.org/paru-bin.git ~/.srcs/paru-bin\n    (cd ~/.srcs/paru-bin \u0026\u0026 makepkg -si --noconfirm)\n    sudo ln -s /usr/lib/libalpm.so.15.0.0 /usr/lib/libalpm.so.14\nfi\nclear","recorded":"2025-01-06 13:15:40.622902601","filePath":"null","pinned":false},{"value":"# System update \necho \"Performing a full system update...\"\nsudo pacman --noconfirm -Syu\nclear\necho \"System update done\" \u0026\u0026 sleep 2\nclear\n\n# Install Git if not present \necho \"Installing git...\" \u0026\u0026 sleep 1\nsudo pacman -S --noconfirm --needed git\nclear","recorded":"2025-01-06 13:15:25.955499537","filePath":"null","pinned":false},{"value":"# Introduction \u0026 Warning\necho \"Welcome to the Cozytile Setup!\" \u0026\u0026 sleep 2\necho \"Some parts of the script require sudo, so if you're planning on leaving the desktop while the installation script does its thing, better drop it already!.\" \u0026\u0026 sleep 4\n","recorded":"2025-01-06 13:14:57.915675694","filePath":"null","pinned":false},{"value":"🫡","recorded":"2025-01-06 12:41:36.637302370","filePath":"null","pinned":false},{"value":"😁","recorded":"2025-01-06 12:39:09.387105055","filePath":"null","pinned":false},{"value":"bind = ALT, W, exec, rofi -modi window -show window\n","recorded":"2025-01-05 15:39:13.927916098","filePath":"null","pinned":false},{"value":"sidebar-mode: true;\n","recorded":"2025-01-05 15:37:30.166771240","filePath":"null","pinned":false},{"value":"kb-primary-copy: \"Control+Shift+c\";\n","recorded":"2025-01-05 15:37:05.284238183","filePath":"null","pinned":false},{"value":"😀","recorded":"2025-01-05 15:35:50.985403886","filePath":"null","pinned":false},{"value":"😃","recorded":"2025-01-05 15:34:06.112819847","filePath":"null","pinned":false},{"value":"kb-primary-paste: \"Control+V,Shift+Insert\";","recorded":"2025-01-05 15:33:24.784197747","filePath":"null","pinned":false},{"value":"matching: \"fuzzy\";","recorded":"2025-01-05 15:29:12.484015686","filePath":"null","pinned":false},{"value":"combi-modi: \"drun,run,ssh\";","recorded":"2025-01-05 15:29:06.286446056","filePath":"null","pinned":false},{"value":"sidebar-mode: true;","recorded":"2025-01-05 15:27:58.390323839","filePath":"null","pinned":false},{"value":"rofi -show emoji -no-config -dump-xresources\n","recorded":"2025-01-05 15:24:10.106310594","filePath":"null","pinned":false},{"value":"bind = $mainMod, E, exec, rofi -modi emoji -show emoji -kb-custom-1 Ctrl+c\n","recorded":"2025-01-05 15:23:11.083318247","filePath":"null","pinned":false},{"value":"/home/karna/dotfiles/youtui-current/.config/youtui/cookie.txt","recorded":"2025-01-05 15:20:52.152963484","filePath":"null","pinned":false},{"value":"cargo install youtui","recorded":"2025-01-05 15:19:14.086937705","filePath":"null","pinned":false},{"value":"youtui setup-oauth","recorded":"2025-01-04 18:45:40.924317569","filePath":"null","pinned":false},{"value":"VISITOR_INFO1_LIVE=iE04tztzhuo; VISITOR_PRIVACY_METADATA=CgJJThIEGgAgLw%3D%3D; PREF=f6=40000080\u0026f7=100\u0026tz=Asia.Kolkata\u0026f5=30000\u0026repeat=NONE; SID=g.a000rwh71fYnWxJuaOM2icgfVE_F36J4FJYPVOQWNB7GTwE3W54LCjBNFEEpnYEKCgISZdZLfQACgYKAXoSARQSFQHGX2MitTUQYmcCTX15Z3AK2-mHPRoVAUF8yKov-9xqBEwscXk161qcDg5a0076; __Secure-1PSIDTS=sidts-CjAB7wV3sR2fxyAV1dVULTToHWbDC5lDv8VCLqMcFBvmBTPPPmtKaGeKwsxaoH8kclkQAA; __Secure-3PSIDTS=sidts-CjAB7wV3sR2fxyAV1dVULTToHWbDC5lDv8VCLqMcFBvmBTPPPmtKaGeKwsxaoH8kclkQAA; __Secure-1PSID=g.a000rwh71fYnWxJuaOM2icgfVE_F36J4FJYPVOQWNB7GTwE3W54LJLwxvTsfNG9v4vyZspIjOgACgYKAUkSARQSFQHGX2Mi6gqz-mAAeU5dbrw-Y2wMwBoVAUF8yKr0EftNu38XZaK1MwXrfiyd0076; __Secure-3PSID=g.a000rwh71fYnWxJuaOM2icgfVE_F36J4FJYPVOQWNB7GTwE3W54LTFI5s81Uhw3T52L8k0kGDwACgYKAScSARQSFQHGX2MiD2vEFA7Ucxr_LYQTFptH4xoVAUF8yKr-dq9MNyqXmA7wCkdoV91S0076; HSID=AXD4SnU6OynDpKo5m; SSID=AnXJbpv_xdeRqgJp5; APISID=39-oKwAEYQa80R2Y/Ayc7j7wE2YlugVUaF; SAPISID=Tkj1MfKPyp7HtmOW/AfitJ7pHUH0XOJm4h; __Secure-1PAPISID=Tkj1MfKPyp7HtmOW/AfitJ7pHUH0XOJm4h; __Secure-3PAPISID=Tkj1MfKPyp7HtmOW/AfitJ7pHUH0XOJm4h; SIDCC=AKEyXzX1DqG9ep-xez-jF5Tp8pwF4LKA0KjoOzDMEcev9LfVy_i6WNNTXKnVLNUhzh42RikTBg; __Secure-1PSIDCC=AKEyXzVrAxxccFw3GYqdiUy2EJjWFjMwJZzR4VYm5gbVkFBGnMomj_CfUl3Y50SnyUpyiw1iZiU; __Secure-3PSIDCC=AKEyXzXQ_Z22feqPZBPpB75HnUyQPFzaMIcJsZSbam-vDfRKIaoKhNQ6cDJhvcyIiMq15AKumVQ; LOGIN_INFO=AFmmF2swRQIhAKDJ9uPrSMlUMdM_zp65VWagGDKaGArC_BCBFVIeu2YyAiAK-6_qZaepf80Ybc9cV-OCMsm22ew11JUDTfCHBcBtcQ:QUQ3MjNmejk1YWdULWRoRDRMckVvRkxKWTFNTkNFS2J3YUxfSUFiamd5YVM2Y2xyamh4QzlFRWg5WjAyM2hkX0s1ajlyMFlVSjFlYWR2cmtTS0JTdWRmcEt3eW9GVTItc0hBZXRqZkhROWpsY1JLemhPVHk4Q0FDN1EtQTJKeEtaWWdZN2lBYUMzTzh4aHUyTVZ4VGltdEtYajZkX19wdU1B; __Secure-ROLLOUT_TOKEN=CPjiwZXCur7QtwEQ67bv6rOuigMYzOKV-u7bigM%3D; YSC=F7ysok2Xisw; wide=1","recorded":"2025-01-04 16:44:20.862969452","filePath":"null","pinned":false},{"value":"Cookie: VISITOR_INFO1_LIVE=iE04tztzhuo; VISITOR_PRIVACY_METADATA=CgJJThIEGgAgLw%3D%3D; PREF=f6=40000080\u0026f7=100\u0026tz=Asia.Kolkata\u0026f5=30000\u0026repeat=NONE; SID=g.a000rwh71fYnWxJuaOM2icgfVE_F36J4FJYPVOQWNB7GTwE3W54LCjBNFEEpnYEKCgISZdZLfQACgYKAXoSARQSFQHGX2MitTUQYmcCTX15Z3AK2-mHPRoVAUF8yKov-9xqBEwscXk161qcDg5a0076; __Secure-1PSIDTS=sidts-CjAB7wV3sR2fxyAV1dVULTToHWbDC5lDv8VCLqMcFBvmBTPPPmtKaGeKwsxaoH8kclkQAA; __Secure-3PSIDTS=sidts-CjAB7wV3sR2fxyAV1dVULTToHWbDC5lDv8VCLqMcFBvmBTPPPmtKaGeKwsxaoH8kclkQAA; __Secure-1PSID=g.a000rwh71fYnWxJuaOM2icgfVE_F36J4FJYPVOQWNB7GTwE3W54LJLwxvTsfNG9v4vyZspIjOgACgYKAUkSARQSFQHGX2Mi6gqz-mAAeU5dbrw-Y2wMwBoVAUF8yKr0EftNu38XZaK1MwXrfiyd0076; __Secure-3PSID=g.a000rwh71fYnWxJuaOM2icgfVE_F36J4FJYPVOQWNB7GTwE3W54LTFI5s81Uhw3T52L8k0kGDwACgYKAScSARQSFQHGX2MiD2vEFA7Ucxr_LYQTFptH4xoVAUF8yKr-dq9MNyqXmA7wCkdoV91S0076; HSID=AXD4SnU6OynDpKo5m; SSID=AnXJbpv_xdeRqgJp5; APISID=39-oKwAEYQa80R2Y/Ayc7j7wE2YlugVUaF; SAPISID=Tkj1MfKPyp7HtmOW/AfitJ7pHUH0XOJm4h; __Secure-1PAPISID=Tkj1MfKPyp7HtmOW/AfitJ7pHUH0XOJm4h; __Secure-3PAPISID=Tkj1MfKPyp7HtmOW/AfitJ7pHUH0XOJm4h; SIDCC=AKEyXzUTeGJvRuJYG9aNvIWRRM5xIlsioOU5ruvZqJsqmdsfK4NajBg7YfJgR9XsGSVhGVargQ; __Secure-1PSIDCC=AKEyXzVIoYQF6HYC5U0zx3VB7dzJEQlJUXbTHCWR2FMDtF_FVIRuJdCLBWv0D54UCqpaW4sov7Y; __Secure-3PSIDCC=AKEyXzUNJN2KvdOcLqGjrqCQvo1V28kj4q6u17G_OUOFji1hE2IYiYxUo3dcE81kk2XLP7k0fWU; LOGIN_INFO=AFmmF2swRQIhAKDJ9uPrSMlUMdM_zp65VWagGDKaGArC_BCBFVIeu2YyAiAK-6_qZaepf80Ybc9cV-OCMsm22ew11JUDTfCHBcBtcQ:QUQ3MjNmejk1YWdULWRoRDRMckVvRkxKWTFNTkNFS2J3YUxfSUFiamd5YVM2Y2xyamh4QzlFRWg5WjAyM2hkX0s1ajlyMFlVSjFlYWR2cmtTS0JTdWRmcEt3eW9GVTItc0hBZXRqZkhROWpsY1JLemhPVHk4Q0FDN1EtQTJKeEtaWWdZN2lBYUMzTzh4aHUyTVZ4VGltdEtYajZkX19wdU1B; __Secure-ROLLOUT_TOKEN=CPjiwZXCur7QtwEQ67bv6rOuigMYzOKV-u7bigM%3D; YSC=F7ysok2Xisw; wide=1\n","recorded":"2025-01-04 16:29:30.108357113","filePath":"null","pinned":false},{"value":"/home/karna/.config/ytermusic/config.applied.toml\n/home/karna/.config/ytermusic/config.toml","recorded":"2025-01-04 16:29:17.442867469","filePath":"null","pinned":false},{"value":"windowrulev2 = float, class:(clipse)\nwindowrulev2 = size 622 652, class:(clipse)\n\n","recorded":"2025-01-04 16:13:46.161788596","filePath":"null","pinned":false},{"value":"bind = SUPER, V, exec, kitty --class clipse -e clipse  \n","recorded":"2025-01-04 16:12:57.130917365","filePath":"null","pinned":false},{"value":" cargo install ytermusic --git https://github.com/ccgauche/ytermusic","recorded":"2025-01-04 16:10:14.747788143","filePath":"null","pinned":false},{"value":"VISITOR_INFO1_LIVE=iE04tztzhuo; VISITOR_PRIVACY_METADATA=CgJJThIEGgAgLw%3D%3D; PREF=f6=40000080\u0026f7=100\u0026tz=Asia.Kolkata\u0026f5=30000\u0026repeat=NONE; SID=g.a000rwh71fYnWxJuaOM2icgfVE_F36J4FJYPVOQWNB7GTwE3W54LCjBNFEEpnYEKCgISZdZLfQACgYKAXoSARQSFQHGX2MitTUQYmcCTX15Z3AK2-mHPRoVAUF8yKov-9xqBEwscXk161qcDg5a0076; __Secure-1PSIDTS=sidts-CjAB7wV3sR2fxyAV1dVULTToHWbDC5lDv8VCLqMcFBvmBTPPPmtKaGeKwsxaoH8kclkQAA; __Secure-3PSIDTS=sidts-CjAB7wV3sR2fxyAV1dVULTToHWbDC5lDv8VCLqMcFBvmBTPPPmtKaGeKwsxaoH8kclkQAA; __Secure-1PSID=g.a000rwh71fYnWxJuaOM2icgfVE_F36J4FJYPVOQWNB7GTwE3W54LJLwxvTsfNG9v4vyZspIjOgACgYKAUkSARQSFQHGX2Mi6gqz-mAAeU5dbrw-Y2wMwBoVAUF8yKr0EftNu38XZaK1MwXrfiyd0076; __Secure-3PSID=g.a000rwh71fYnWxJuaOM2icgfVE_F36J4FJYPVOQWNB7GTwE3W54LTFI5s81Uhw3T52L8k0kGDwACgYKAScSARQSFQHGX2MiD2vEFA7Ucxr_LYQTFptH4xoVAUF8yKr-dq9MNyqXmA7wCkdoV91S0076; HSID=AXD4SnU6OynDpKo5m; SSID=AnXJbpv_xdeRqgJp5; APISID=39-oKwAEYQa80R2Y/Ayc7j7wE2YlugVUaF; SAPISID=Tkj1MfKPyp7HtmOW/AfitJ7pHUH0XOJm4h; __Secure-1PAPISID=Tkj1MfKPyp7HtmOW/AfitJ7pHUH0XOJm4h; __Secure-3PAPISID=Tkj1MfKPyp7HtmOW/AfitJ7pHUH0XOJm4h; SIDCC=AKEyXzUTeGJvRuJYG9aNvIWRRM5xIlsioOU5ruvZqJsqmdsfK4NajBg7YfJgR9XsGSVhGVargQ; __Secure-1PSIDCC=AKEyXzVIoYQF6HYC5U0zx3VB7dzJEQlJUXbTHCWR2FMDtF_FVIRuJdCLBWv0D54UCqpaW4sov7Y; __Secure-3PSIDCC=AKEyXzUNJN2KvdOcLqGjrqCQvo1V28kj4q6u17G_OUOFji1hE2IYiYxUo3dcE81kk2XLP7k0fWU; LOGIN_INFO=AFmmF2swRQIhAKDJ9uPrSMlUMdM_zp65VWagGDKaGArC_BCBFVIeu2YyAiAK-6_qZaepf80Ybc9cV-OCMsm22ew11JUDTfCHBcBtcQ:QUQ3MjNmejk1YWdULWRoRDRMckVvRkxKWTFNTkNFS2J3YUxfSUFiamd5YVM2Y2xyamh4QzlFRWg5WjAyM2hkX0s1ajlyMFlVSjFlYWR2cmtTS0JTdWRmcEt3eW9GVTItc0hBZXRqZkhROWpsY1JLemhPVHk4Q0FDN1EtQTJKeEtaWWdZN2lBYUMzTzh4aHUyTVZ4VGltdEtYajZkX19wdU1B; __Secure-ROLLOUT_TOKEN=CPjiwZXCur7QtwEQ67bv6rOuigMYzOKV-u7bigM%3D; YSC=F7ysok2Xisw; wide=1","recorded":"2025-01-04 16:08:19.455981510","filePath":"null","pinned":false},{"value":" Cookie: \u003ccookie\u003e\n User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36","recorded":"2025-01-04 16:03:44.263114171","filePath":"null","pinned":false},{"value":"/home/karna/.cargo/bin","recorded":"2025-01-04 15:56:53.125346771","filePath":"null","pinned":false},{"value":"sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl\nsudo chmod a+rx /usr/local/bin/youtube-dl","recorded":"2025-01-04 15:35:03.060833902","filePath":"null","pinned":false},{"value":"git submodule init\nMPV_BUILD=mpv-build/ cargo build --all --release --features build_libmpv","recorded":"2025-01-04 15:29:45.546883696","filePath":"null","pinned":false},{"value":"git clone git@github.com:sudipghimire533/ytui-music","recorded":"2025-01-04 15:29:36.801949597","filePath":"null","pinned":false},{"value":"curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh","recorded":"2025-01-04 15:29:10.361871255","filePath":"null","pinned":false},{"value":"pip install ytmdl","recorded":"2025-01-04 15:04:00.366796904","filePath":"null","pinned":false},{"value":"  ani-cli \"$1\"\n","recorded":"2025-01-04 13:15:51.856616133","filePath":"null","pinned":false},{"value":"function anime(){\n","recorded":"2025-01-04 13:15:51.506362232","filePath":"null","pinned":false},{"value":"https://meet.google.com/ddg-hmwm-knd","recorded":"2025-01-03 19:08:43.190913225","filePath":"null","pinned":false},{"value":"https://prod.liveshare.vsengsaas.visualstudio.com/join?D35F45835DC086EA2B9175E4E9D0055613D9","recorded":"2025-01-03 16:59:05.463828339","filePath":"null","pinned":false},{"value":"https://prod.liveshare.vsengsaas.visualstudio.com/join?28C99D18E0A76E6CBB8F0DB2F9BE0128B363","recorded":"2025-01-03 16:30:01.668256996","filePath":"null","pinned":false},{"value":"Chaganti-Reddy/cjpr-report-latest","recorded":"2025-01-03 16:25:38.918253988","filePath":"null","pinned":false},{"value":"/mnt/Karna/cjpr-report-latest/albert-base-v2\n/mnt/Karna/cjpr-report-latest/albert-large-v2\n/mnt/Karna/cjpr-report-latest/bert-base-uncased\n/mnt/Karna/cjpr-report-latest/bert-large-uncased\n/mnt/Karna/cjpr-report-latest/deberta\n/mnt/Karna/cjpr-report-latest/distilbert-base-uncased\n/mnt/Karna/cjpr-report-latest/Graphical Abstract\n/mnt/Karna/cjpr-report-latest/roberta-base\n/mnt/Karna/cjpr-report-latest/roberta-large\n/mnt/Karna/cjpr-report-latest/xlnet-base-cased\n/mnt/Karna/cjpr-report-latest/xlnet-large-cased\n/mnt/Karna/cjpr-report-latest/.gitignore\n/mnt/Karna/cjpr-report-latest/ALBERT_Accuracy.pdf\n/mnt/Karna/cjpr-report-latest/ALBERT_Loss.pdf\n/mnt/Karna/cjpr-report-latest/Case_Distribution.pdf\n/mnt/Karna/cjpr-report-latest/CJPR_1.bib\n/mnt/Karna/cjpr-report-latest/CJPR_Main_NEW.aux\n/mnt/Karna/cjpr-report-latest/CJPR_Main_NEW.bbl\n/mnt/Karna/cjpr-report-latest/CJPR_Main_NEW.blg\n/mnt/Karna/cjpr-report-latest/CJPR_Main_NEW.fdb_latexmk\n/mnt/Karna/cjpr-report-latest/CJPR_Main_NEW.fls\n/mnt/Karna/cjpr-report-latest/CJPR_Main_NEW.log\n/mnt/Karna/cjpr-report-latest/CJPR_Main_NEW.out\n/mnt/Karna/cjpr-report-latest/CJPR_Main_NEW.pdf\n/mnt/Karna/cjpr-report-latest/CJPR_Main_NEW.spl\n/mnt/Karna/cjpr-report-latest/CJPR_Main_NEW.tex\n/mnt/Karna/cjpr-report-latest/DeBERTa_Accuracy.pdf\n/mnt/Karna/cjpr-report-latest/DeBERTa_Loss.pdf\n/mnt/Karna/cjpr-report-latest/Docker.pdf\n/mnt/Karna/cjpr-report-latest/elsarticle.cls\n/mnt/Karna/cjpr-report-latest/elsarticle-harv.bst\n/mnt/Karna/cjpr-report-latest/ESWA-D-24-12938.pdf\n/mnt/Karna/cjpr-report-latest/framework.png\n/mnt/Karna/cjpr-report-latest/HXBR.pdf\n/mnt/Karna/cjpr-report-latest/LICENSE\n/mnt/Karna/cjpr-report-latest/methodological.txt\n/mnt/Karna/cjpr-report-latest/numcompress.sty\n/mnt/Karna/cjpr-report-latest/README.md\n/mnt/Karna/cjpr-report-latest/RFCF.pdf\n/mnt/Karna/cjpr-report-latest/RFROC.pdf\n/mnt/Karna/cjpr-report-latest/R_GPU.pdf\n/mnt/Karna/cjpr-report-latest/RoBERTa_Architecture.pdf\n/mnt/Karna/cjpr-report-latest/rotating.sty\n/mnt/Karna/cjpr-report-latest/rough.aux\n/mnt/Karna/cjpr-report-latest/rough.fdb_latexmk\n/mnt/Karna/cjpr-report-latest/rough.fls\n/mnt/Karna/cjpr-report-latest/rough.log\n/mnt/Karna/cjpr-report-latest/rough.out\n/mnt/Karna/cjpr-report-latest/rough.pdf\n/mnt/Karna/cjpr-report-latest/rough.synctex.gz\n/mnt/Karna/cjpr-report-latest/rough.tex\n/mnt/Karna/cjpr-report-latest/R_TPU.pdf\n/mnt/Karna/cjpr-report-latest/Sigmoid_Function.pdf\n/mnt/Karna/cjpr-report-latest/XGCF.pdf\n/mnt/Karna/cjpr-report-latest/XGROC.pdf","recorded":"2025-01-03 16:22:53.195869311","filePath":"null","pinned":false},{"value":"git@github.com:Chaganti-Reddy/CJPR-Report.git","recorded":"2025-01-03 16:19:46.367775127","filePath":"null","pinned":false},{"value":"https://prod.liveshare.vsengsaas.visualstudio.com/join?1620984162EA72B0C77DFE1C98677EBB7128","recorded":"2025-01-03 16:16:32.235761814","filePath":"null","pinned":false},{"value":"@startuml\nskinparam backgroundColor #f9f9f9\nskinparam arrowColor #333333\nskinparam actorBorderColor #333333\nskinparam activityBorderColor #333333\nskinparam activityBackgroundColor #ffffff\nskinparam diamondBackgroundColor #f2f2f2\nskinparam diamondBorderColor #333333\nskinparam rectangleFontColor #333333\ntitle Court Judgment Prediction and Recommendation (CJPR) - Activity Diagram\n\nstart\n:Start;\n:Data Scraping and Imputation;\n:Feature Engineering;\nnote right\n  Tokenization, Lemmatization,\n  Stop Words Removal\nend note\n\n:Data Labeling using LLM Prompt;\n:Model Selection;\n\nfork\n    :Classical Models (GPU);\nfork again\n    :Transformer Models (GPU + TPU);\nend fork\n\n:Model Training;\n:Model Evaluation and Testing;\nnote left\n  Ablation Study\nend note\n:Generate Prediction Output;\n\nif (Prediction Accepted?) then (Yes)\n    :Provide Final Prediction and Recommendations;\n    :Suggest Relevant Historical Cases;\nelse (No)\n    :Modify Hyperparameters and Retrain;\nendif\n\nstop\n@enduml","recorded":"2025-01-03 16:04:31.146218159","filePath":"null","pinned":false},{"value":"note right\n  Tokenization, Lemmatization,\n  Stop Words Removal\nend note","recorded":"2025-01-03 15:56:44.747334203","filePath":"null","pinned":false},{"value":"@startuml\nskinparam backgroundColor #f9f9f9\nskinparam arrowColor #333333\nskinparam actorBorderColor #333333\nskinparam activityBorderColor #333333\nskinparam activityBackgroundColor #ffffff\nskinparam diamondBackgroundColor #f2f2f2\nskinparam diamondBorderColor #333333\nskinparam rectangleFontColor #333333\ntitle Court Judgment Prediction and Recommendation (CJPR) - Activity Diagram\n\nstart\n:Start;\n:Data Scraping and Imputation;\n:Feature Engineering;\nnote right\n  Tokenization, Lemmatization,\n  Stop Words Removal\nend note\n\n:Data Labeling using LLM Prompt;\n:Model Selection;\n\nfork\n    :Classical Models (GPU);\nfork again\n    :Transformer Models (GPU + TPU);\nend fork\n\n:Model Training;\n:Ablation Study;\n:Model Evaluation and Testing;\n:Generate Prediction Output;\n\nif (Prediction Accepted?) then (Yes)\n    :Provide Final Prediction and Recommendations;\n    :Suggest Relevant Historical Cases;\nelse (No)\n    :Modify Hyperparameters and Retrain;\nendif\n\nstop\n@enduml","recorded":"2025-01-03 15:55:53.398334000","filePath":"null","pinned":false},{"value":"@startuml\nskinparam backgroundColor #f9f9f9\nskinparam arrowColor #333333\nskinparam actorBorderColor #333333\nskinparam activityBorderColor #333333\nskinparam activityBackgroundColor #ffffff\nskinparam diamondBackgroundColor #f2f2f2\nskinparam diamondBorderColor #333333\nskinparam rectangleFontColor #333333\ntitle Court Judgment Prediction and Recommendation (CJPR) - Activity Diagram\n\nstart\n:Start;\n:Data Collection and Scraping;\n:Data Cleaning and Imputation;\n:Feature Engineering;\nnote right\n  Tokenization, Lemmatization,\n  Stop Words Removal\nend note\n\n:Data Labeling using LLM Prompt;\n:Model Selection;\n\nfork\n    :Classical Models (GPU);\nfork again\n    :Transformer Models (GPU + TPU);\nend fork\n\n:Model Training;\n:Ablation Study;\n:Model Evaluation and Testing;\n:Generate Prediction Output;\n\nif (Prediction Accepted?) then (Yes)\n    :Provide Final Prediction and Recommendations;\n    :Suggest Relevant Historical Cases;\nelse (No)\n    :Modify Hyperparameters and Retrain;\nendif\n\nstop\n@enduml","recorded":"2025-01-03 15:54:09.781182363","filePath":"null","pinned":false},{"value":"skinparam backgroundColor #f9f9f9\nskinparam arrowColor #333333\nskinparam actorBorderColor #333333\nskinparam activityBorderColor #333333\nskinparam activityBackgroundColor #ffffff\nskinparam diamondBackgroundColor #f2f2f2\nskinparam diamondBorderColor #333333\nskinparam rectangleFontColor #333333","recorded":"2025-01-03 15:52:05.658271711","filePath":"null","pinned":false},{"value":"@startuml\ntitle Court Judgment Prediction and Recommendation (CJPR) - Activity Diagram\n\nstart\n:Start;\n:Data Collection and Scraping;\n:Data Cleaning and Imputation;\n:Feature Engineering;\n:Data Preprocessing (Tokenization, Lemmatization, Stop Words Removal);\n\n:Data Labeling using LLM Prompt;\n:Model Selection;\n\nfork\n    :Classical Models (GPU);\nfork again\n    :Transformer Models (GPU + TPU);\nend fork\n\n:Model Training;\n:Ablation Study;\n:Model Evaluation and Testing;\n:Generate Prediction Output;\n\nif (Prediction Accepted?) then (Yes)\n    :Provide Final Prediction and Recommendations;\n    :Suggest Relevant Historical Cases;\nelse (No)\n    :Modify Hyperparameters and Retrain;\nendif\n\nstop\n@enduml","recorded":"2025-01-03 15:39:40.175335538","filePath":"null","pinned":false},{"value":"Dynamic Honeypot Network","recorded":"2025-01-03 13:43:14.619230502","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/.gitignore","recorded":"2025-01-03 13:24:18.724850350","filePath":"null","pinned":false},{"value":"/home/karna/Downloads/gitignore","recorded":"2025-01-03 13:23:41.341112811","filePath":"null","pinned":false},{"value":"Venkat Branch Created\n","recorded":"2025-01-03 12:26:43.691566431","filePath":"null","pinned":false},{"value":"/mnt/Shared/CJPR/CJPR-Report/albert-base-v2\n/mnt/Shared/CJPR/CJPR-Report/albert-large-v2\n/mnt/Shared/CJPR/CJPR-Report/bert-base-uncased\n/mnt/Shared/CJPR/CJPR-Report/bert-large-uncased\n/mnt/Shared/CJPR/CJPR-Report/deberta\n/mnt/Shared/CJPR/CJPR-Report/distilbert-base-uncased\n/mnt/Shared/CJPR/CJPR-Report/Graphical Abstract\n/mnt/Shared/CJPR/CJPR-Report/roberta-base\n/mnt/Shared/CJPR/CJPR-Report/roberta-large\n/mnt/Shared/CJPR/CJPR-Report/xlnet-base-cased\n/mnt/Shared/CJPR/CJPR-Report/xlnet-large-cased\n/mnt/Shared/CJPR/CJPR-Report/ALBERT_Accuracy.pdf\n/mnt/Shared/CJPR/CJPR-Report/ALBERT_Loss.pdf\n/mnt/Shared/CJPR/CJPR-Report/Case_Distribution.pdf\n/mnt/Shared/CJPR/CJPR-Report/CJPR_1.bib\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.aux\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.bbl\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.blg\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.fdb_latexmk\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.fls\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.log\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.out\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.pdf\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.spl\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.synctex.gz\n/mnt/Shared/CJPR/CJPR-Report/CJPR_Main_NEW.tex\n/mnt/Shared/CJPR/CJPR-Report/DeBERTa_Accuracy.pdf\n/mnt/Shared/CJPR/CJPR-Report/DeBERTa_Loss.pdf\n/mnt/Shared/CJPR/CJPR-Report/Docker.pdf\n/mnt/Shared/CJPR/CJPR-Report/elsarticle.cls\n/mnt/Shared/CJPR/CJPR-Report/elsarticle-harv.bst\n/mnt/Shared/CJPR/CJPR-Report/ESWA-D-24-12938.pdf\n/mnt/Shared/CJPR/CJPR-Report/HXBR.pdf\n/mnt/Shared/CJPR/CJPR-Report/LICENSE\n/mnt/Shared/CJPR/CJPR-Report/numcompress.sty\n/mnt/Shared/CJPR/CJPR-Report/README.md\n/mnt/Shared/CJPR/CJPR-Report/RFCF.pdf\n/mnt/Shared/CJPR/CJPR-Report/RFROC.pdf\n/mnt/Shared/CJPR/CJPR-Report/R_GPU.pdf\n/mnt/Shared/CJPR/CJPR-Report/RoBERTa_Architecture.pdf\n/mnt/Shared/CJPR/CJPR-Report/rotating.sty\n/mnt/Shared/CJPR/CJPR-Report/rough.aux\n/mnt/Shared/CJPR/CJPR-Report/rough.fdb_latexmk\n/mnt/Shared/CJPR/CJPR-Report/rough.fls\n/mnt/Shared/CJPR/CJPR-Report/rough.log\n/mnt/Shared/CJPR/CJPR-Report/rough.out\n/mnt/Shared/CJPR/CJPR-Report/rough.pdf\n/mnt/Shared/CJPR/CJPR-Report/rough.synctex.gz\n/mnt/Shared/CJPR/CJPR-Report/rough.tex\n/mnt/Shared/CJPR/CJPR-Report/R_TPU.pdf\n/mnt/Shared/CJPR/CJPR-Report/Sigmoid_Function.pdf\n/mnt/Shared/CJPR/CJPR-Report/XGCF.pdf\n/mnt/Shared/CJPR/CJPR-Report/XGROC.pdf","recorded":"2025-01-03 12:15:53.920677516","filePath":"null","pinned":false},{"value":"git@github.com:Chaganti-Reddy/cjpr-report-latest.git","recorded":"2025-01-03 12:00:14.170156957","filePath":"null","pinned":false},{"value":"https://github.com/Chaganti-Reddy/cjpr-report-latest/","recorded":"2025-01-03 11:58:18.588767749","filePath":"null","pinned":false},{"value":"https://meet.google.com/wdi-oecz-jes","recorded":"2025-01-03 11:42:17.893874946","filePath":"null","pinned":false},{"value":"https://meet.google.com/wdi-oecz-jes?pli=1","recorded":"2025-01-03 11:42:11.464570865","filePath":"null","pinned":false},{"value":"Day-06 of 40 Days of Kubernetes with blog","recorded":"2025-01-03 10:59:48.962260509","filePath":"null","pinned":false},{"value":"csrftoken=K86QQ5Tyzu8JMC5yTT8wvQxvDvTk32RQ2sgVCgOZpos7tqzLXHjQV0MReCqUgeP3; cf_clearance=IT.rzrM85wMD2CYfYMI08flMGWWVlWRjlcTEJxOhjnM-1734689244-1.2.1.1-LcvPMKm0Lf09OpLicA_RfDQxmPPZ94imYfQ6fOoQ5kLkmVjrIwL.F6ydHAswmNhHVYKGvbDDu1NIv09RtRHNDbbxFEM9ZdbJVgVesThNGfR5X3GSqAT6JG7m6ktgP6tZbQ0W0YLKdwYZs0UsNl1AOg4LLXf.ddM7q.gmJAMVlXk9aNwvpfsiv8S_hmDVHFpfU4MrkbOjjfkGxKruIJ3dUgTRIgY2IQ0d6zuk0OHO41551LnTFjkyb.i.SbYT5scS89XRIXbwkdnW00EjP0.3OUqjHAJBVPhicD97Q_XstuhYMHxUkvEl378t6rm_vajWCBND5qT.Ty_5bRRGiKO5QGcCI4SoPPJlJefvRDhGwVzeA5QRK9HJiffztiYvattA; LEETCODE_SESSION=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfYXV0aF91c2VyX2lkIjoiNTg1NzE1OCIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImFsbGF1dGguYWNjb3VudC5hdXRoX2JhY2tlbmRzLkF1dGhlbnRpY2F0aW9uQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6ImIyYjRmNDExMzY0Zjg3ZDQwYTQ2ZmI3NDlhYzlkODg5YjViODhkMzYzYmRhMTkzZTc2YzZiODMzNDE5NjAzZmEiLCJzZXNzaW9uX3V1aWQiOiJjYWFmM2MwNCIsImlkIjo1ODU3MTU4LCJlbWFpbCI6ImNoYWdhbnRpdmVua2F0YXJhbWlyZWRkeTFAZ21haWwuY29tIiwidXNlcm5hbWUiOiJjaGFnYW50aXZlbmthdGFyYW1pcmVkZHkxIiwidXNlcl9zbHVnIjoiY2hhZ2FudGl2ZW5rYXRhcmFtaXJlZGR5MSIsImF2YXRhciI6Imh0dHBzOi8vYXNzZXRzLmxlZXRjb2RlLmNvbS91c2Vycy9hdmF0YXJzL2F2YXRhcl8xNjU0MTY3NDY0LnBuZyIsInJlZnJlc2hlZF9hdCI6MTczNTgxOTI4MiwiaXAiOiIxNzUuMTAxLjY4LjU1IiwiaWRlbnRpdHkiOiI2Y2IzYTcxZmUxY2RkN2Y0OTEyMTkyM2E5Mzk4MDA2ZSIsImRldmljZV93aXRoX2lwIjpbImExNTYyYWQzODk2M2MxYmVhMWE5NDcxZjFhMTU4NTc0IiwiMTc1LjEwMS42OC41NSJdLCJfc2Vzc2lvbl9leHBpcnkiOjEyMDk2MDB9.MHC0CS7zzD0TeDPCEnE8Mt47IN2DATfdxotirYwVPLw; INGRESSCOOKIE=04ea8f59b8f8291a012bc1031c29569c|8e0876c7c1464cc0ac96bc2edceabd27; c_a_u=\"Y2hhZ2FudGl2ZW5rYXRhcmFtaXJlZGR5MQ==:1tKxin:vGyV6-eewYv5z8nBH7rZL_fJ9cJMUPPvbMhhmN_Cfng\"; messages=W1siX19qc29uX21lc3NhZ2UiLDAsMjUsIlN1Y2Nlc3NmdWxseSBzaWduZWQgaW4gYXMgQ2hhZ2FudGkgUmVkZHkuIl1d:1tOZun:PESXPYNYvimt-aVGeQGE6XLV080arL3EdqbaC20VfuU; _dd_s=rum=0\u0026expire=1735820190008; ip_check=(false, \"175.101.68.55\")","recorded":"2025-01-02 17:32:07.759700547","filePath":"null","pinned":false},{"value":"cf_clearance=IT.rzrM85wMD2CYfYMI08flMGWWVlWRjlcTEJxOhjnM-1734689244-1.2.1.1-LcvPMKm0Lf09OpLicA_RfDQxmPPZ94imYfQ6fOoQ5kLkmVjrIwL.F6ydHAswmNhHVYKGvbDDu1NIv09RtRHNDbbxFEM9ZdbJVgVesThNGfR5X3GSqAT6JG7m6ktgP6tZbQ0W0YLKdwYZs0UsNl1AOg4LLXf.ddM7q.gmJAMVlXk9aNwvpfsiv8S_hmDVHFpfU4MrkbOjjfkGxKruIJ3dUgTRIgY2IQ0d6zuk0OHO41551LnTFjkyb.i.SbYT5scS89XRIXbwkdnW00EjP0.3OUqjHAJBVPhicD97Q_XstuhYMHxUkvEl378t6rm_vajWCBND5qT.Ty_5bRRGiKO5QGcCI4SoPPJlJefvRDhGwVzeA5QRK9HJiffztiYvattA; LEETCODE_SESSION=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfYXV0aF91c2VyX2lkIjoiNTg1NzE1OCIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImFsbGF1dGguYWNjb3VudC5hdXRoX2JhY2tlbmRzLkF1dGhlbnRpY2F0aW9uQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6ImIyYjRmNDExMzY0Zjg3ZDQwYTQ2ZmI3NDlhYzlkODg5YjViODhkMzYzYmRhMTkzZTc2YzZiODMzNDE5NjAzZmEiLCJzZXNzaW9uX3V1aWQiOiJjYWFmM2MwNCIsImlkIjo1ODU3MTU4LCJlbWFpbCI6ImNoYWdhbnRpdmVua2F0YXJhbWlyZWRkeTFAZ21haWwuY29tIiwidXNlcm5hbWUiOiJjaGFnYW50aXZlbmthdGFyYW1pcmVkZHkxIiwidXNlcl9zbHVnIjoiY2hhZ2FudGl2ZW5rYXRhcmFtaXJlZGR5MSIsImF2YXRhciI6Imh0dHBzOi8vYXNzZXRzLmxlZXRjb2RlLmNvbS91c2Vycy9hdmF0YXJzL2F2YXRhcl8xNjU0MTY3NDY0LnBuZyIsInJlZnJlc2hlZF9hdCI6MTczNTgxOTI4MiwiaXAiOiIxNzUuMTAxLjY4LjU1IiwiaWRlbnRpdHkiOiI2Y2IzYTcxZmUxY2RkN2Y0OTEyMTkyM2E5Mzk4MDA2ZSIsImRldmljZV93aXRoX2lwIjpbImExNTYyYWQzODk2M2MxYmVhMWE5NDcxZjFhMTU4NTc0IiwiMTc1LjEwMS42OC41NSJdLCJfc2Vzc2lvbl9leHBpcnkiOjEyMDk2MDB9.MHC0CS7zzD0TeDPCEnE8Mt47IN2DATfdxotirYwVPLw; messages=W1siX19qc29uX21lc3NhZ2UiLDAsMjUsIlN1Y2Nlc3NmdWxseSBzaWduZWQgaW4gYXMgQ2hhZ2FudGkgUmVkZHkuIl1d:1tOZun:PESXPYNYvimt-aVGeQGE6XLV080arL3EdqbaC20VfuU","recorded":"2025-01-02 17:31:51.454491691","filePath":"null","pinned":false},{"value":"bind = $mainMod SHIFT, W, exec, zen-browser --private-window\n","recorded":"2025-01-02 17:25:19.898928873","filePath":"null","pinned":false},{"value":"kubectl config get-contexts","recorded":"2025-01-02 17:13:45.721904238","filePath":"null","pinned":false},{"value":"kubectl cluster-info --context kind-test-single\n\nNot sure what to do next? 😅  Check out https://kind.sigs.k8s.io/docs/user/quick-start/\n(base) \u003e\u003e\u003e    ~  kubectl cluster-info --context kind-test-single\nKubernetes control plane is running at https://127.0.0.1:34267\nCoreDNS is running at https://127.0.0.1:34267/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n(base) \u003e\u003e\u003e    ~  ","recorded":"2025-01-02 17:13:18.942472733","filePath":"null","pinned":false},{"value":"kubectl cluster-info --context kind-test-single","recorded":"2025-01-02 17:12:19.737611026","filePath":"null","pinned":false}]}